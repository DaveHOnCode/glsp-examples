/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/css-loader/dist/cjs.js!./css/diagram.css":
/*!***************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./css/diagram.css ***!
  \***************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/sourceMaps.js */ "./node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, "/********************************************************************************\n * Copyright (c) 2019-2021 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n.sprotty-graph {\n    background: rgb(179, 196, 202);\n}\n\n.sprotty-node {\n    fill: #cdc;\n    stroke: rgb(0, 0, 0);\n}\n\n.sprotty-edge {\n    stroke: black;\n}\n\n.sprotty-edge.arrow {\n    fill: black;\n}\n\n.sprotty-edge.selected {\n    stroke: #844;\n}\n\n.sprotty-edge.selected > .arrow {\n    fill: #844;\n    stroke: #844;\n}\n\n.sprotty-node:not(.selected) {\n    stroke: black;\n}\n\n.forkOrJoin > .sprotty-node {\n    fill: black;\n}\n\n.forkOrJoin > .sprotty-node.selected {\n    stroke: rgb(87, 87, 214);\n}\n\npolygon.sprotty-node {\n    stroke: black;\n}\n\n.sprotty-node.selected {\n    stroke: rgb(87, 87, 214);\n}\n", "",{"version":3,"sources":["webpack://./css/diagram.css"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;iFAciF;AACjF;IACI,8BAA8B;AAClC;;AAEA;IACI,UAAU;IACV,oBAAoB;AACxB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,UAAU;IACV,YAAY;AAChB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,wBAAwB;AAC5B","sourcesContent":["/********************************************************************************\n * Copyright (c) 2019-2021 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n.sprotty-graph {\n    background: rgb(179, 196, 202);\n}\n\n.sprotty-node {\n    fill: #cdc;\n    stroke: rgb(0, 0, 0);\n}\n\n.sprotty-edge {\n    stroke: black;\n}\n\n.sprotty-edge.arrow {\n    fill: black;\n}\n\n.sprotty-edge.selected {\n    stroke: #844;\n}\n\n.sprotty-edge.selected > .arrow {\n    fill: #844;\n    stroke: #844;\n}\n\n.sprotty-node:not(.selected) {\n    stroke: black;\n}\n\n.forkOrJoin > .sprotty-node {\n    fill: black;\n}\n\n.forkOrJoin > .sprotty-node.selected {\n    stroke: rgb(87, 87, 214);\n}\n\npolygon.sprotty-node {\n    stroke: black;\n}\n\n.sprotty-node.selected {\n    stroke: rgb(87, 87, 214);\n}\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/@eclipse-glsp-examples/workflow-glsp/css/diagram.css":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/@eclipse-glsp-examples/workflow-glsp/css/diagram.css ***!
  \*****************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../css-loader/dist/runtime/sourceMaps.js */ "./node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, "/********************************************************************************\n * Copyright (c) 2019-2022 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n.sprotty-graph {\n    font-size: 15pt;\n    border: none;\n    height: 100%;\n}\n\n.sprotty-text {\n    font-size: 12pt;\n    text-anchor: middle;\n}\n\n.sprotty-node {\n    stroke-width: 0;\n    font-weight: bold;\n}\n\n.sprotty-label {\n    stroke-width: 0;\n    fill: #000;\n    font-weight: inherit;\n    text-align: inherit;\n    font-size: 100%;\n}\n\n.sprotty-label.heading {\n    font-weight: normal;\n    font-size: 0.7em;\n    fill: #f0f3f8;\n}\n\n.icon path {\n    stroke-width: 0;\n    fill: #f0f3f8;\n}\n\n.icon .icon-background {\n    fill: transparent;\n}\n\n.task.automated > .sprotty-node {\n    fill: #5b9fa8;\n}\n\n.task.manual > .sprotty-node {\n    fill: #db8651;\n}\n\n.category > .sprotty-node {\n    fill: #5c87bd;\n}\n\n.category .category > .sprotty-node {\n    /** Add a border to nested categories, so we can distinguish them */\n    stroke: #38679a;\n    fill: #6f9ad0;\n    stroke-width: 1;\n}\n\n.sprotty-edge.weighted.low:not(.selected),\n.sprotty-edge.weighted.low:not(.selected) .arrow {\n    stroke: rgb(128, 90, 233);\n}\n\n.sprotty-edge.weighted.low:not(.selected) .arrow {\n    fill: rgb(128, 90, 233);\n}\n\n.sprotty-edge.weighted:not(.selected),\n.sprotty-edge.weighted:not(.selected) .arrow,\n.sprotty-edge.weighted.medium:not(.selected),\n.sprotty-edge.weighted.medium:not(.selected) .arrow {\n    stroke: rgb(98, 60, 193);\n}\n\n.sprotty-edge.weighted:not(.selected) .arrow,\n.sprotty-edge.weighted.medium:not(.selected) .arrow {\n    fill: rgb(98, 60, 193);\n}\n\n.sprotty-edge.weighted.high:not(.selected),\n.sprotty-edge.weighted.high:not(.selected) .arrow {\n    stroke: rgb(68, 30, 163);\n}\n\n.sprotty-edge.weighted.high:not(.selected) .arrow {\n    fill: rgb(68, 30, 163);\n}\n\n.sprotty-comp {\n    stroke: transparent;\n    fill: transparent;\n}\n\n.label-edit input {\n    margin-top: -3px;\n    margin-left: -3px;\n}\n", "",{"version":3,"sources":["webpack://./node_modules/@eclipse-glsp-examples/workflow-glsp/css/diagram.css"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;iFAciF;;AAEjF;IACI,eAAe;IACf,YAAY;IACZ,YAAY;AAChB;;AAEA;IACI,eAAe;IACf,mBAAmB;AACvB;;AAEA;IACI,eAAe;IACf,iBAAiB;AACrB;;AAEA;IACI,eAAe;IACf,UAAU;IACV,oBAAoB;IACpB,mBAAmB;IACnB,eAAe;AACnB;;AAEA;IACI,mBAAmB;IACnB,gBAAgB;IAChB,aAAa;AACjB;;AAEA;IACI,eAAe;IACf,aAAa;AACjB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,mEAAmE;IACnE,eAAe;IACf,aAAa;IACb,eAAe;AACnB;;AAEA;;IAEI,yBAAyB;AAC7B;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;;;;IAII,wBAAwB;AAC5B;;AAEA;;IAEI,sBAAsB;AAC1B;;AAEA;;IAEI,wBAAwB;AAC5B;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,mBAAmB;IACnB,iBAAiB;AACrB;;AAEA;IACI,gBAAgB;IAChB,iBAAiB;AACrB","sourcesContent":["/********************************************************************************\n * Copyright (c) 2019-2022 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n.sprotty-graph {\n    font-size: 15pt;\n    border: none;\n    height: 100%;\n}\n\n.sprotty-text {\n    font-size: 12pt;\n    text-anchor: middle;\n}\n\n.sprotty-node {\n    stroke-width: 0;\n    font-weight: bold;\n}\n\n.sprotty-label {\n    stroke-width: 0;\n    fill: #000;\n    font-weight: inherit;\n    text-align: inherit;\n    font-size: 100%;\n}\n\n.sprotty-label.heading {\n    font-weight: normal;\n    font-size: 0.7em;\n    fill: #f0f3f8;\n}\n\n.icon path {\n    stroke-width: 0;\n    fill: #f0f3f8;\n}\n\n.icon .icon-background {\n    fill: transparent;\n}\n\n.task.automated > .sprotty-node {\n    fill: #5b9fa8;\n}\n\n.task.manual > .sprotty-node {\n    fill: #db8651;\n}\n\n.category > .sprotty-node {\n    fill: #5c87bd;\n}\n\n.category .category > .sprotty-node {\n    /** Add a border to nested categories, so we can distinguish them */\n    stroke: #38679a;\n    fill: #6f9ad0;\n    stroke-width: 1;\n}\n\n.sprotty-edge.weighted.low:not(.selected),\n.sprotty-edge.weighted.low:not(.selected) .arrow {\n    stroke: rgb(128, 90, 233);\n}\n\n.sprotty-edge.weighted.low:not(.selected) .arrow {\n    fill: rgb(128, 90, 233);\n}\n\n.sprotty-edge.weighted:not(.selected),\n.sprotty-edge.weighted:not(.selected) .arrow,\n.sprotty-edge.weighted.medium:not(.selected),\n.sprotty-edge.weighted.medium:not(.selected) .arrow {\n    stroke: rgb(98, 60, 193);\n}\n\n.sprotty-edge.weighted:not(.selected) .arrow,\n.sprotty-edge.weighted.medium:not(.selected) .arrow {\n    fill: rgb(98, 60, 193);\n}\n\n.sprotty-edge.weighted.high:not(.selected),\n.sprotty-edge.weighted.high:not(.selected) .arrow {\n    stroke: rgb(68, 30, 163);\n}\n\n.sprotty-edge.weighted.high:not(.selected) .arrow {\n    fill: rgb(68, 30, 163);\n}\n\n.sprotty-comp {\n    stroke: transparent;\n    fill: transparent;\n}\n\n.label-edit input {\n    margin-top: -3px;\n    margin-left: -3px;\n}\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/@eclipse-glsp/client/css/command-palette.css":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/@eclipse-glsp/client/css/command-palette.css ***!
  \*********************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../css-loader/dist/runtime/sourceMaps.js */ "./node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, "/********************************************************************************\n * Copyright (c) 2019-2021 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n.command-palette {\n    transition: opacity 0.3s linear;\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n}\n\n.command-palette-suggestions {\n    background: white;\n    z-index: 1000;\n    overflow: auto;\n    box-sizing: border-box;\n    border: 1px solid rgba(60, 60, 60, 0.6);\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n}\n\n.command-palette-suggestions .icon {\n    padding-right: 0.3em;\n    display: flex;\n    align-self: center;\n}\n\n.command-palette-suggestions em {\n    font-weight: bold;\n    font-style: normal;\n}\n\n.command-palette-suggestions > div {\n    padding: 0 4px;\n    display: flex;\n}\n\n.command-palette-suggestions .group {\n    background: #eee;\n}\n\n.command-palette-suggestions > div:hover:not(.group),\n.command-palette-suggestions > div.selected {\n    cursor: pointer;\n}\n\n.command-palette-suggestions > div:hover:not(.group) {\n    background: #e0e0e0;\n}\n\n.command-palette-suggestions > div.selected {\n    background: #bbdefb;\n}\n", "",{"version":3,"sources":["webpack://./node_modules/@eclipse-glsp/client/css/command-palette.css"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;iFAciF;;AAEjF;IACI,+BAA+B;IAC/B,4EAA4E;AAChF;;AAEA;IACI,iBAAiB;IACjB,aAAa;IACb,cAAc;IACd,sBAAsB;IACtB,uCAAuC;IACvC,4EAA4E;AAChF;;AAEA;IACI,oBAAoB;IACpB,aAAa;IACb,kBAAkB;AACtB;;AAEA;IACI,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,cAAc;IACd,aAAa;AACjB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;;IAEI,eAAe;AACnB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;AACvB","sourcesContent":["/********************************************************************************\n * Copyright (c) 2019-2021 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n.command-palette {\n    transition: opacity 0.3s linear;\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n}\n\n.command-palette-suggestions {\n    background: white;\n    z-index: 1000;\n    overflow: auto;\n    box-sizing: border-box;\n    border: 1px solid rgba(60, 60, 60, 0.6);\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n}\n\n.command-palette-suggestions .icon {\n    padding-right: 0.3em;\n    display: flex;\n    align-self: center;\n}\n\n.command-palette-suggestions em {\n    font-weight: bold;\n    font-style: normal;\n}\n\n.command-palette-suggestions > div {\n    padding: 0 4px;\n    display: flex;\n}\n\n.command-palette-suggestions .group {\n    background: #eee;\n}\n\n.command-palette-suggestions > div:hover:not(.group),\n.command-palette-suggestions > div.selected {\n    cursor: pointer;\n}\n\n.command-palette-suggestions > div:hover:not(.group) {\n    background: #e0e0e0;\n}\n\n.command-palette-suggestions > div.selected {\n    background: #bbdefb;\n}\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/@eclipse-glsp/client/css/decoration.css":
/*!****************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/@eclipse-glsp/client/css/decoration.css ***!
  \****************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../css-loader/dist/runtime/sourceMaps.js */ "./node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, "/********************************************************************************\n * Copyright (c) 2020-2021 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n:root {\n    --glsp-error-foreground: red;\n    --glsp-warning-foreground: yellow;\n    --glsp-info-foreground: lightblue;\n    --glsp-issue-background: rgb(255 255 255 / 85%);\n}\n\n.sprotty-issue-background {\n    fill: var(--glsp-issue-background);\n    background-color: var(--glsp-issue-background);\n}\n\n.sprotty-issue.sprotty-error {\n    fill: var(--glsp-error-foreground);\n    background-color: var(--glsp-error-foreground);\n}\n\n.sprotty-issue.sprotty-warning {\n    fill: var(--glsp-warning-foreground);\n    background-color: var(--glsp-warning-foreground);\n}\n\n.sprotty-issue.sprotty-info {\n    fill: var(--glsp-info-foreground);\n    background-color: var(--glsp-info-foreground);\n}\n", "",{"version":3,"sources":["webpack://./node_modules/@eclipse-glsp/client/css/decoration.css"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;iFAciF;;AAEjF;IACI,4BAA4B;IAC5B,iCAAiC;IACjC,iCAAiC;IACjC,+CAA+C;AACnD;;AAEA;IACI,kCAAkC;IAClC,8CAA8C;AAClD;;AAEA;IACI,kCAAkC;IAClC,8CAA8C;AAClD;;AAEA;IACI,oCAAoC;IACpC,gDAAgD;AACpD;;AAEA;IACI,iCAAiC;IACjC,6CAA6C;AACjD","sourcesContent":["/********************************************************************************\n * Copyright (c) 2020-2021 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n:root {\n    --glsp-error-foreground: red;\n    --glsp-warning-foreground: yellow;\n    --glsp-info-foreground: lightblue;\n    --glsp-issue-background: rgb(255 255 255 / 85%);\n}\n\n.sprotty-issue-background {\n    fill: var(--glsp-issue-background);\n    background-color: var(--glsp-issue-background);\n}\n\n.sprotty-issue.sprotty-error {\n    fill: var(--glsp-error-foreground);\n    background-color: var(--glsp-error-foreground);\n}\n\n.sprotty-issue.sprotty-warning {\n    fill: var(--glsp-warning-foreground);\n    background-color: var(--glsp-warning-foreground);\n}\n\n.sprotty-issue.sprotty-info {\n    fill: var(--glsp-info-foreground);\n    background-color: var(--glsp-info-foreground);\n}\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/@eclipse-glsp/client/css/glsp-sprotty.css":
/*!******************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/@eclipse-glsp/client/css/glsp-sprotty.css ***!
  \******************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../css-loader/dist/runtime/sourceMaps.js */ "./node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, "/********************************************************************************\n * Copyright (c) 2019-2022 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n.sprotty {\n    padding: 0px;\n    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n\n.sprotty svg text::selection {\n    background: none;\n}\n\n.sprotty-hidden {\n    display: block;\n    position: absolute;\n    width: 0px;\n    height: 0px;\n}\n\n.sprotty-popup {\n    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\n    position: absolute;\n    background: white;\n    border-radius: 5px;\n    border: 1px solid;\n    max-width: 400px;\n    min-width: 100px;\n    z-index: 1;\n}\n\n.sprotty-popup > div {\n    margin: 10px;\n}\n\n.sprotty-popup-closed {\n    display: none;\n}\n\n.sprotty-resize-handle {\n    /* radius does not work in Firefox */\n    r: 5px;\n    fill: #1d80d1;\n    stroke: none;\n    z-index: 1000;\n}\n\n.sprotty-resize-handle.selected {\n    fill: #1d80d1;\n}\n\n.sprotty-resize-handle.active {\n    fill: #1d80d1;\n}\n\n.sprotty-edge {\n    fill: none;\n    stroke-width: 1.5px;\n}\n\n.sprotty-edge.selected {\n    stroke-width: 1.5px;\n}\n\n.sprotty-edge.mouseover:not(.selected) path {\n    stroke-width: 1.5px;\n}\n\n.sprotty-node:not(.selected) {\n    stroke-width: 0px;\n}\n\n.sprotty-node.mouseover:not(.selected),\n.sprotty-edge.mouseover:not(.selected) {\n    opacity: 60%;\n}\n\n.sprotty-node.selected,\n.sprotty-edge.selected {\n    stroke: #1d80d1;\n    stroke-width: 1.5px;\n    stroke-dashoffset: 5;\n    stroke-dasharray: 5, 5;\n    stroke-linecap: round;\n}\n\n.sprotty-edge.mouseover:not(.selected) .arrow,\n.sprotty-edge.selected .arrow {\n    stroke-dashoffset: none;\n    stroke-dasharray: none;\n}\n\n.sprotty .node-creation-mode {\n    cursor: copy;\n}\n\n.sprotty .overlap-forbidden-mode {\n    cursor: not-allowed;\n}\n\n.sprotty .default-mode {\n    cursor: default;\n}\n\n.sprotty .edge-modification-not-allowed-mode {\n    cursor: no-drop;\n}\n\n.sprotty .edge-creation-select-source-mode {\n    cursor: pointer;\n}\n\n.sprotty .edge-creation-select-target-mode,\n.sprotty .edge-reconnect-select-target-mode {\n    cursor: crosshair;\n}\n\n.sprotty .move-mode {\n    cursor: move;\n}\n\n.sprotty .resize-nesw-mode {\n    cursor: nesw-resize;\n}\n\n.sprotty .resize-nwse-mode {\n    cursor: nwse-resize;\n}\n\n.sprotty .element-deletion-mode {\n    cursor: pointer;\n}\n\n.sprotty .marquee-mode {\n    cursor: crosshair;\n}\n\n.sprotty-node.marquee {\n    fill: lightgray;\n    opacity: 0.2;\n}\n\n.sprotty-edge > .sprotty-routing-handle {\n    r: 5px;\n    fill: #1d80d1;\n    stroke: none;\n    z-index: 1000;\n}\n\n.sprotty-edge > .sprotty-routing-handle[data-kind='line'] {\n    opacity: 0.35;\n}\n\n.sprotty-edge > .sprotty-routing-handle.selected {\n    fill: #1d80d1;\n}\n\n.sprotty-edge > .sprotty-routing-handle.mouseover {\n    stroke: #1d80d1a1;\n    stroke-width: 1;\n}\n\n.sprotty-missing {\n    stroke-width: 1;\n    stroke: #f00;\n    fill: #f00;\n    font-size: 14pt;\n    text-anchor: middle;\n}\n\n.sprotty g .movement-not-allowed > .sprotty-node {\n    stroke: var(--glsp-error-foreground) !important;\n}\n\n.sprotty-resize-handle.movement-not-allowed {\n    stroke: var(--glsp-error-foreground) !important;\n    fill: var(--glsp-error-foreground) !important;\n}\n\n.sprotty .error > .sprotty-node {\n    filter: drop-shadow(0px 0px 2px var(--glsp-error-foreground)) !important;\n}\n\n.sprotty .warning > .sprotty-node {\n    filter: drop-shadow(0px 0px 2px var(--glsp-warning-foreground)) !important;\n}\n\n.sprotty .info > .sprotty-node {\n    filter: drop-shadow(0px 0px 2px var(--glsp-info-foreground)) !important;\n}\n\n.sprotty svg {\n    border-style: solid;\n    border-width: 1px;\n    border-color: #bbb;\n}\n\n.sprotty text {\n    stroke-width: 0;\n    stroke: #000;\n    fill: #000;\n    font-family: sans-serif;\n    font-size: 8pt;\n    text-anchor: middle;\n}\n\n.glsp-projection {\n    width: 40%;\n    opacity: 1;\n}\n\n.sprotty-projection-bar.vertical.bordered-projection-bar {\n    width: var(--theia-scrollbar-rail-width);\n}\n\n.sprotty-projection-bar.horizontal.bordered-projection-bar {\n    height: var(--theia-scrollbar-rail-width);\n}\n\n.projection-scroll-bar {\n    transition: opacity 0.8s linear;\n}\n\n.mouse-enter .projection-scroll-bar {\n    opacity: 0.3;\n    background: transparent;\n    background-color: #aaa;\n    z-index: 1;\n}\n\n.mouse-leave .projection-scroll-bar {\n    opacity: 0;\n    pointer-events: none;\n    background: transparent;\n    background-color: #aaa;\n    z-index: 1;\n}\n\n.bordered-projection-bar {\n    border-left: 1px solid rgba(212, 212, 212, 0.2);\n    border-top: 1px solid rgba(212, 212, 212, 0.2);\n    fill: transparent;\n    width: var(--theia-scrollbar-rail-width);\n}\n", "",{"version":3,"sources":["webpack://./node_modules/@eclipse-glsp/client/css/glsp-sprotty.css"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;iFAciF;;AAEjF;IACI,YAAY;IACZ,2DAA2D;AAC/D;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,cAAc;IACd,kBAAkB;IAClB,UAAU;IACV,WAAW;AACf;;AAEA;IACI,2DAA2D;IAC3D,kBAAkB;IAClB,iBAAiB;IACjB,kBAAkB;IAClB,iBAAiB;IACjB,gBAAgB;IAChB,gBAAgB;IAChB,UAAU;AACd;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,oCAAoC;IACpC,MAAM;IACN,aAAa;IACb,YAAY;IACZ,aAAa;AACjB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,UAAU;IACV,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;;IAEI,YAAY;AAChB;;AAEA;;IAEI,eAAe;IACf,mBAAmB;IACnB,oBAAoB;IACpB,sBAAsB;IACtB,qBAAqB;AACzB;;AAEA;;IAEI,uBAAuB;IACvB,sBAAsB;AAC1B;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,eAAe;AACnB;;AAEA;;IAEI,iBAAiB;AACrB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,eAAe;IACf,YAAY;AAChB;;AAEA;IACI,MAAM;IACN,aAAa;IACb,YAAY;IACZ,aAAa;AACjB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,iBAAiB;IACjB,eAAe;AACnB;;AAEA;IACI,eAAe;IACf,YAAY;IACZ,UAAU;IACV,eAAe;IACf,mBAAmB;AACvB;;AAEA;IACI,+CAA+C;AACnD;;AAEA;IACI,+CAA+C;IAC/C,6CAA6C;AACjD;;AAEA;IACI,wEAAwE;AAC5E;;AAEA;IACI,0EAA0E;AAC9E;;AAEA;IACI,uEAAuE;AAC3E;;AAEA;IACI,mBAAmB;IACnB,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,eAAe;IACf,YAAY;IACZ,UAAU;IACV,uBAAuB;IACvB,cAAc;IACd,mBAAmB;AACvB;;AAEA;IACI,UAAU;IACV,UAAU;AACd;;AAEA;IACI,wCAAwC;AAC5C;;AAEA;IACI,yCAAyC;AAC7C;;AAEA;IACI,+BAA+B;AACnC;;AAEA;IACI,YAAY;IACZ,uBAAuB;IACvB,sBAAsB;IACtB,UAAU;AACd;;AAEA;IACI,UAAU;IACV,oBAAoB;IACpB,uBAAuB;IACvB,sBAAsB;IACtB,UAAU;AACd;;AAEA;IACI,+CAA+C;IAC/C,8CAA8C;IAC9C,iBAAiB;IACjB,wCAAwC;AAC5C","sourcesContent":["/********************************************************************************\n * Copyright (c) 2019-2022 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n.sprotty {\n    padding: 0px;\n    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n\n.sprotty svg text::selection {\n    background: none;\n}\n\n.sprotty-hidden {\n    display: block;\n    position: absolute;\n    width: 0px;\n    height: 0px;\n}\n\n.sprotty-popup {\n    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\n    position: absolute;\n    background: white;\n    border-radius: 5px;\n    border: 1px solid;\n    max-width: 400px;\n    min-width: 100px;\n    z-index: 1;\n}\n\n.sprotty-popup > div {\n    margin: 10px;\n}\n\n.sprotty-popup-closed {\n    display: none;\n}\n\n.sprotty-resize-handle {\n    /* radius does not work in Firefox */\n    r: 5px;\n    fill: #1d80d1;\n    stroke: none;\n    z-index: 1000;\n}\n\n.sprotty-resize-handle.selected {\n    fill: #1d80d1;\n}\n\n.sprotty-resize-handle.active {\n    fill: #1d80d1;\n}\n\n.sprotty-edge {\n    fill: none;\n    stroke-width: 1.5px;\n}\n\n.sprotty-edge.selected {\n    stroke-width: 1.5px;\n}\n\n.sprotty-edge.mouseover:not(.selected) path {\n    stroke-width: 1.5px;\n}\n\n.sprotty-node:not(.selected) {\n    stroke-width: 0px;\n}\n\n.sprotty-node.mouseover:not(.selected),\n.sprotty-edge.mouseover:not(.selected) {\n    opacity: 60%;\n}\n\n.sprotty-node.selected,\n.sprotty-edge.selected {\n    stroke: #1d80d1;\n    stroke-width: 1.5px;\n    stroke-dashoffset: 5;\n    stroke-dasharray: 5, 5;\n    stroke-linecap: round;\n}\n\n.sprotty-edge.mouseover:not(.selected) .arrow,\n.sprotty-edge.selected .arrow {\n    stroke-dashoffset: none;\n    stroke-dasharray: none;\n}\n\n.sprotty .node-creation-mode {\n    cursor: copy;\n}\n\n.sprotty .overlap-forbidden-mode {\n    cursor: not-allowed;\n}\n\n.sprotty .default-mode {\n    cursor: default;\n}\n\n.sprotty .edge-modification-not-allowed-mode {\n    cursor: no-drop;\n}\n\n.sprotty .edge-creation-select-source-mode {\n    cursor: pointer;\n}\n\n.sprotty .edge-creation-select-target-mode,\n.sprotty .edge-reconnect-select-target-mode {\n    cursor: crosshair;\n}\n\n.sprotty .move-mode {\n    cursor: move;\n}\n\n.sprotty .resize-nesw-mode {\n    cursor: nesw-resize;\n}\n\n.sprotty .resize-nwse-mode {\n    cursor: nwse-resize;\n}\n\n.sprotty .element-deletion-mode {\n    cursor: pointer;\n}\n\n.sprotty .marquee-mode {\n    cursor: crosshair;\n}\n\n.sprotty-node.marquee {\n    fill: lightgray;\n    opacity: 0.2;\n}\n\n.sprotty-edge > .sprotty-routing-handle {\n    r: 5px;\n    fill: #1d80d1;\n    stroke: none;\n    z-index: 1000;\n}\n\n.sprotty-edge > .sprotty-routing-handle[data-kind='line'] {\n    opacity: 0.35;\n}\n\n.sprotty-edge > .sprotty-routing-handle.selected {\n    fill: #1d80d1;\n}\n\n.sprotty-edge > .sprotty-routing-handle.mouseover {\n    stroke: #1d80d1a1;\n    stroke-width: 1;\n}\n\n.sprotty-missing {\n    stroke-width: 1;\n    stroke: #f00;\n    fill: #f00;\n    font-size: 14pt;\n    text-anchor: middle;\n}\n\n.sprotty g .movement-not-allowed > .sprotty-node {\n    stroke: var(--glsp-error-foreground) !important;\n}\n\n.sprotty-resize-handle.movement-not-allowed {\n    stroke: var(--glsp-error-foreground) !important;\n    fill: var(--glsp-error-foreground) !important;\n}\n\n.sprotty .error > .sprotty-node {\n    filter: drop-shadow(0px 0px 2px var(--glsp-error-foreground)) !important;\n}\n\n.sprotty .warning > .sprotty-node {\n    filter: drop-shadow(0px 0px 2px var(--glsp-warning-foreground)) !important;\n}\n\n.sprotty .info > .sprotty-node {\n    filter: drop-shadow(0px 0px 2px var(--glsp-info-foreground)) !important;\n}\n\n.sprotty svg {\n    border-style: solid;\n    border-width: 1px;\n    border-color: #bbb;\n}\n\n.sprotty text {\n    stroke-width: 0;\n    stroke: #000;\n    fill: #000;\n    font-family: sans-serif;\n    font-size: 8pt;\n    text-anchor: middle;\n}\n\n.glsp-projection {\n    width: 40%;\n    opacity: 1;\n}\n\n.sprotty-projection-bar.vertical.bordered-projection-bar {\n    width: var(--theia-scrollbar-rail-width);\n}\n\n.sprotty-projection-bar.horizontal.bordered-projection-bar {\n    height: var(--theia-scrollbar-rail-width);\n}\n\n.projection-scroll-bar {\n    transition: opacity 0.8s linear;\n}\n\n.mouse-enter .projection-scroll-bar {\n    opacity: 0.3;\n    background: transparent;\n    background-color: #aaa;\n    z-index: 1;\n}\n\n.mouse-leave .projection-scroll-bar {\n    opacity: 0;\n    pointer-events: none;\n    background: transparent;\n    background-color: #aaa;\n    z-index: 1;\n}\n\n.bordered-projection-bar {\n    border-left: 1px solid rgba(212, 212, 212, 0.2);\n    border-top: 1px solid rgba(212, 212, 212, 0.2);\n    fill: transparent;\n    width: var(--theia-scrollbar-rail-width);\n}\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/@eclipse-glsp/client/css/tool-palette.css":
/*!******************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/@eclipse-glsp/client/css/tool-palette.css ***!
  \******************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../css-loader/dist/runtime/sourceMaps.js */ "./node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, "/********************************************************************************\n * Copyright (c) 2019-2021 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* Css for main container */\n.tool-palette {\n    position: absolute;\n    right: 40px;\n    top: 25px;\n    text-align: center;\n    width: 225px;\n    display: block;\n    z-index: 1000;\n    border-style: solid;\n    border-width: 0px;\n    border-color: #bbb;\n    border-radius: 5px;\n    color: black;\n    user-select: none;\n    /* supported by Chrome and Opera */\n    -webkit-user-select: none;\n    /* Safari */\n    -khtml-user-select: none;\n    /* Konqueror HTML */\n    -moz-user-select: none;\n    /* Firefox */\n    -ms-user-select: none;\n    /* Internet Explorer/Edge */\n}\n\n/* Css for header compartment */\n\n.palette-header {\n    padding: 0.4em;\n    text-align: left;\n    background: #cccccc;\n    border: 1px solid rgba(60, 60, 60, 0.6);\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    flex-wrap: wrap;\n}\n\n.header-icon {\n    display: flex;\n    align-items: center;\n}\n\n.header-icon i {\n    margin-right: 0.2em;\n}\n\n.header-tools {\n    display: flex;\n    align-items: center;\n}\n\n.header-tools i {\n    border: 1px solid #cccccc;\n    padding: 0.15em;\n    margin-right: 0.15em;\n}\n\n.header-tools i:hover {\n    background: #dfdfdf;\n}\n\n.header-tools .clicked {\n    background: #bddaef;\n    border: 1px solid rgba(60, 60, 60, 0.6);\n}\n\n/*Css for palette body compartment */\n\n.palette-body {\n    background: rgba(100, 100, 100, 0.2);\n    border: 1px solid rgba(60, 60, 60, 0.6);\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n}\n\n.tool-group {\n    text-align: left;\n    background: #ededee;\n}\n\n.group-header {\n    background: #cccccc;\n    display: flex;\n    align-items: center;\n}\n\n.group-header:hover {\n    background: #aaaaaa;\n}\n\n.group-header i {\n    padding: 0.4em;\n}\n\n.tool-button {\n    background: #ededee;\n    padding: 0.4em;\n    display: flex;\n    align-items: center;\n}\n\n.tool-button i {\n    margin-right: 0.4em;\n}\n\n.tool-button:hover {\n    background: #dfdfdf;\n}\n\n.tool-button.clicked {\n    background: #bddaef;\n}\n\n.tool-button.collapsed {\n    display: none;\n}\n\n.collapsible-palette {\n    overflow: auto;\n    transition: max-height 0.2s ease-out;\n}\n\n.minimize-palette-button {\n    position: absolute;\n    right: 20px;\n    top: 35px;\n    z-index: 1000;\n}\n\n.search-input {\n    background: #dfdfdf;\n    color: black;\n    border: #bddaef;\n    padding-left: 3px;\n    width: 100%;\n    margin: 3px;\n}\n", "",{"version":3,"sources":["webpack://./node_modules/@eclipse-glsp/client/css/tool-palette.css"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;iFAciF;;AAEjF,2BAA2B;AAC3B;IACI,kBAAkB;IAClB,WAAW;IACX,SAAS;IACT,kBAAkB;IAClB,YAAY;IACZ,cAAc;IACd,aAAa;IACb,mBAAmB;IACnB,iBAAiB;IACjB,kBAAkB;IAClB,kBAAkB;IAClB,YAAY;IACZ,iBAAiB;IACjB,kCAAkC;IAClC,yBAAyB;IACzB,WAAW;IACX,wBAAwB;IACxB,mBAAmB;IACnB,sBAAsB;IACtB,YAAY;IACZ,qBAAqB;IACrB,2BAA2B;AAC/B;;AAEA,+BAA+B;;AAE/B;IACI,cAAc;IACd,gBAAgB;IAChB,mBAAmB;IACnB,uCAAuC;IACvC,4EAA4E;IAC5E,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,yBAAyB;IACzB,eAAe;IACf,oBAAoB;AACxB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;IACnB,uCAAuC;AAC3C;;AAEA,oCAAoC;;AAEpC;IACI,oCAAoC;IACpC,uCAAuC;IACvC,4EAA4E;AAChF;;AAEA;IACI,gBAAgB;IAChB,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;IACnB,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,mBAAmB;IACnB,cAAc;IACd,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,cAAc;IACd,oCAAoC;AACxC;;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,SAAS;IACT,aAAa;AACjB;;AAEA;IACI,mBAAmB;IACnB,YAAY;IACZ,eAAe;IACf,iBAAiB;IACjB,WAAW;IACX,WAAW;AACf","sourcesContent":["/********************************************************************************\n * Copyright (c) 2019-2021 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* Css for main container */\n.tool-palette {\n    position: absolute;\n    right: 40px;\n    top: 25px;\n    text-align: center;\n    width: 225px;\n    display: block;\n    z-index: 1000;\n    border-style: solid;\n    border-width: 0px;\n    border-color: #bbb;\n    border-radius: 5px;\n    color: black;\n    user-select: none;\n    /* supported by Chrome and Opera */\n    -webkit-user-select: none;\n    /* Safari */\n    -khtml-user-select: none;\n    /* Konqueror HTML */\n    -moz-user-select: none;\n    /* Firefox */\n    -ms-user-select: none;\n    /* Internet Explorer/Edge */\n}\n\n/* Css for header compartment */\n\n.palette-header {\n    padding: 0.4em;\n    text-align: left;\n    background: #cccccc;\n    border: 1px solid rgba(60, 60, 60, 0.6);\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    flex-wrap: wrap;\n}\n\n.header-icon {\n    display: flex;\n    align-items: center;\n}\n\n.header-icon i {\n    margin-right: 0.2em;\n}\n\n.header-tools {\n    display: flex;\n    align-items: center;\n}\n\n.header-tools i {\n    border: 1px solid #cccccc;\n    padding: 0.15em;\n    margin-right: 0.15em;\n}\n\n.header-tools i:hover {\n    background: #dfdfdf;\n}\n\n.header-tools .clicked {\n    background: #bddaef;\n    border: 1px solid rgba(60, 60, 60, 0.6);\n}\n\n/*Css for palette body compartment */\n\n.palette-body {\n    background: rgba(100, 100, 100, 0.2);\n    border: 1px solid rgba(60, 60, 60, 0.6);\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n}\n\n.tool-group {\n    text-align: left;\n    background: #ededee;\n}\n\n.group-header {\n    background: #cccccc;\n    display: flex;\n    align-items: center;\n}\n\n.group-header:hover {\n    background: #aaaaaa;\n}\n\n.group-header i {\n    padding: 0.4em;\n}\n\n.tool-button {\n    background: #ededee;\n    padding: 0.4em;\n    display: flex;\n    align-items: center;\n}\n\n.tool-button i {\n    margin-right: 0.4em;\n}\n\n.tool-button:hover {\n    background: #dfdfdf;\n}\n\n.tool-button.clicked {\n    background: #bddaef;\n}\n\n.tool-button.collapsed {\n    display: none;\n}\n\n.collapsible-palette {\n    overflow: auto;\n    transition: max-height 0.2s ease-out;\n}\n\n.minimize-palette-button {\n    position: absolute;\n    right: 20px;\n    top: 35px;\n    z-index: 1000;\n}\n\n.search-input {\n    background: #dfdfdf;\n    color: black;\n    border: #bddaef;\n    padding-left: 3px;\n    width: 100%;\n    margin: 3px;\n}\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/@vscode/codicons/dist/codicon.css":
/*!**********************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/@vscode/codicons/dist/codicon.css ***!
  \**********************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../css-loader/dist/runtime/sourceMaps.js */ "./node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../css-loader/dist/runtime/getUrl.js */ "./node_modules/css-loader/dist/runtime/getUrl.js");
/* harmony import */ var _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__);
// Imports



var ___CSS_LOADER_URL_IMPORT_0___ = new URL(/* asset import */ __webpack_require__(/*! ./codicon.ttf?2ab61cbaefbdf4c7c5589068100bee0c */ "./node_modules/@vscode/codicons/dist/codicon.ttf?2ab61cbaefbdf4c7c5589068100bee0c"), __webpack_require__.b);
var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
var ___CSS_LOADER_URL_REPLACEMENT_0___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_0___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n@font-face {\n\tfont-family: \"codicon\";\n\tfont-display: block;\n\tsrc: url(" + ___CSS_LOADER_URL_REPLACEMENT_0___ + ") format(\"truetype\");\n}\n\n.codicon[class*='codicon-'] {\n\tfont: normal normal normal 16px/1 codicon;\n\tdisplay: inline-block;\n\ttext-decoration: none;\n\ttext-rendering: auto;\n\ttext-align: center;\n\t-webkit-font-smoothing: antialiased;\n\t-moz-osx-font-smoothing: grayscale;\n\tuser-select: none;\n\t-webkit-user-select: none;\n\t-ms-user-select: none;\n}\n\n/*---------------------\n *  Modifiers\n *-------------------*/\n\n@keyframes codicon-spin {\n\t100% {\n\t\ttransform:rotate(360deg);\n\t}\n}\n\n.codicon-sync.codicon-modifier-spin,\n.codicon-loading.codicon-modifier-spin,\n.codicon-gear.codicon-modifier-spin {\n\t/* Use steps to throttle FPS to reduce CPU usage */\n\tanimation: codicon-spin 1.5s steps(30) infinite;\n}\n\n.codicon-modifier-disabled {\n\topacity: 0.5;\n}\n\n.codicon-modifier-hidden {\n\topacity: 0;\n}\n\n/* custom speed & easing for loading icon */\n.codicon-loading {\n\tanimation-duration: 1s !important;\n\tanimation-timing-function: cubic-bezier(0.53, 0.21, 0.29, 0.67) !important;\n}\n\n/*---------------------\n *  Icons\n *-------------------*/\n\n.codicon-add:before { content: \"\\ea60\" }\n.codicon-plus:before { content: \"\\ea60\" }\n.codicon-gist-new:before { content: \"\\ea60\" }\n.codicon-repo-create:before { content: \"\\ea60\" }\n.codicon-lightbulb:before { content: \"\\ea61\" }\n.codicon-light-bulb:before { content: \"\\ea61\" }\n.codicon-repo:before { content: \"\\ea62\" }\n.codicon-repo-delete:before { content: \"\\ea62\" }\n.codicon-gist-fork:before { content: \"\\ea63\" }\n.codicon-repo-forked:before { content: \"\\ea63\" }\n.codicon-git-pull-request:before { content: \"\\ea64\" }\n.codicon-git-pull-request-abandoned:before { content: \"\\ea64\" }\n.codicon-record-keys:before { content: \"\\ea65\" }\n.codicon-keyboard:before { content: \"\\ea65\" }\n.codicon-tag:before { content: \"\\ea66\" }\n.codicon-tag-add:before { content: \"\\ea66\" }\n.codicon-tag-remove:before { content: \"\\ea66\" }\n.codicon-person:before { content: \"\\ea67\" }\n.codicon-person-follow:before { content: \"\\ea67\" }\n.codicon-person-outline:before { content: \"\\ea67\" }\n.codicon-person-filled:before { content: \"\\ea67\" }\n.codicon-git-branch:before { content: \"\\ea68\" }\n.codicon-git-branch-create:before { content: \"\\ea68\" }\n.codicon-git-branch-delete:before { content: \"\\ea68\" }\n.codicon-source-control:before { content: \"\\ea68\" }\n.codicon-mirror:before { content: \"\\ea69\" }\n.codicon-mirror-public:before { content: \"\\ea69\" }\n.codicon-star:before { content: \"\\ea6a\" }\n.codicon-star-add:before { content: \"\\ea6a\" }\n.codicon-star-delete:before { content: \"\\ea6a\" }\n.codicon-star-empty:before { content: \"\\ea6a\" }\n.codicon-comment:before { content: \"\\ea6b\" }\n.codicon-comment-add:before { content: \"\\ea6b\" }\n.codicon-alert:before { content: \"\\ea6c\" }\n.codicon-warning:before { content: \"\\ea6c\" }\n.codicon-search:before { content: \"\\ea6d\" }\n.codicon-search-save:before { content: \"\\ea6d\" }\n.codicon-log-out:before { content: \"\\ea6e\" }\n.codicon-sign-out:before { content: \"\\ea6e\" }\n.codicon-log-in:before { content: \"\\ea6f\" }\n.codicon-sign-in:before { content: \"\\ea6f\" }\n.codicon-eye:before { content: \"\\ea70\" }\n.codicon-eye-unwatch:before { content: \"\\ea70\" }\n.codicon-eye-watch:before { content: \"\\ea70\" }\n.codicon-circle-filled:before { content: \"\\ea71\" }\n.codicon-primitive-dot:before { content: \"\\ea71\" }\n.codicon-close-dirty:before { content: \"\\ea71\" }\n.codicon-debug-breakpoint:before { content: \"\\ea71\" }\n.codicon-debug-breakpoint-disabled:before { content: \"\\ea71\" }\n.codicon-debug-hint:before { content: \"\\ea71\" }\n.codicon-terminal-decoration-success:before { content: \"\\ea71\" }\n.codicon-primitive-square:before { content: \"\\ea72\" }\n.codicon-edit:before { content: \"\\ea73\" }\n.codicon-pencil:before { content: \"\\ea73\" }\n.codicon-info:before { content: \"\\ea74\" }\n.codicon-issue-opened:before { content: \"\\ea74\" }\n.codicon-gist-private:before { content: \"\\ea75\" }\n.codicon-git-fork-private:before { content: \"\\ea75\" }\n.codicon-lock:before { content: \"\\ea75\" }\n.codicon-mirror-private:before { content: \"\\ea75\" }\n.codicon-close:before { content: \"\\ea76\" }\n.codicon-remove-close:before { content: \"\\ea76\" }\n.codicon-x:before { content: \"\\ea76\" }\n.codicon-repo-sync:before { content: \"\\ea77\" }\n.codicon-sync:before { content: \"\\ea77\" }\n.codicon-clone:before { content: \"\\ea78\" }\n.codicon-desktop-download:before { content: \"\\ea78\" }\n.codicon-beaker:before { content: \"\\ea79\" }\n.codicon-microscope:before { content: \"\\ea79\" }\n.codicon-vm:before { content: \"\\ea7a\" }\n.codicon-device-desktop:before { content: \"\\ea7a\" }\n.codicon-file:before { content: \"\\ea7b\" }\n.codicon-file-text:before { content: \"\\ea7b\" }\n.codicon-more:before { content: \"\\ea7c\" }\n.codicon-ellipsis:before { content: \"\\ea7c\" }\n.codicon-kebab-horizontal:before { content: \"\\ea7c\" }\n.codicon-mail-reply:before { content: \"\\ea7d\" }\n.codicon-reply:before { content: \"\\ea7d\" }\n.codicon-organization:before { content: \"\\ea7e\" }\n.codicon-organization-filled:before { content: \"\\ea7e\" }\n.codicon-organization-outline:before { content: \"\\ea7e\" }\n.codicon-new-file:before { content: \"\\ea7f\" }\n.codicon-file-add:before { content: \"\\ea7f\" }\n.codicon-new-folder:before { content: \"\\ea80\" }\n.codicon-file-directory-create:before { content: \"\\ea80\" }\n.codicon-trash:before { content: \"\\ea81\" }\n.codicon-trashcan:before { content: \"\\ea81\" }\n.codicon-history:before { content: \"\\ea82\" }\n.codicon-clock:before { content: \"\\ea82\" }\n.codicon-folder:before { content: \"\\ea83\" }\n.codicon-file-directory:before { content: \"\\ea83\" }\n.codicon-symbol-folder:before { content: \"\\ea83\" }\n.codicon-logo-github:before { content: \"\\ea84\" }\n.codicon-mark-github:before { content: \"\\ea84\" }\n.codicon-github:before { content: \"\\ea84\" }\n.codicon-terminal:before { content: \"\\ea85\" }\n.codicon-console:before { content: \"\\ea85\" }\n.codicon-repl:before { content: \"\\ea85\" }\n.codicon-zap:before { content: \"\\ea86\" }\n.codicon-symbol-event:before { content: \"\\ea86\" }\n.codicon-error:before { content: \"\\ea87\" }\n.codicon-stop:before { content: \"\\ea87\" }\n.codicon-variable:before { content: \"\\ea88\" }\n.codicon-symbol-variable:before { content: \"\\ea88\" }\n.codicon-array:before { content: \"\\ea8a\" }\n.codicon-symbol-array:before { content: \"\\ea8a\" }\n.codicon-symbol-module:before { content: \"\\ea8b\" }\n.codicon-symbol-package:before { content: \"\\ea8b\" }\n.codicon-symbol-namespace:before { content: \"\\ea8b\" }\n.codicon-symbol-object:before { content: \"\\ea8b\" }\n.codicon-symbol-method:before { content: \"\\ea8c\" }\n.codicon-symbol-function:before { content: \"\\ea8c\" }\n.codicon-symbol-constructor:before { content: \"\\ea8c\" }\n.codicon-symbol-boolean:before { content: \"\\ea8f\" }\n.codicon-symbol-null:before { content: \"\\ea8f\" }\n.codicon-symbol-numeric:before { content: \"\\ea90\" }\n.codicon-symbol-number:before { content: \"\\ea90\" }\n.codicon-symbol-structure:before { content: \"\\ea91\" }\n.codicon-symbol-struct:before { content: \"\\ea91\" }\n.codicon-symbol-parameter:before { content: \"\\ea92\" }\n.codicon-symbol-type-parameter:before { content: \"\\ea92\" }\n.codicon-symbol-key:before { content: \"\\ea93\" }\n.codicon-symbol-text:before { content: \"\\ea93\" }\n.codicon-symbol-reference:before { content: \"\\ea94\" }\n.codicon-go-to-file:before { content: \"\\ea94\" }\n.codicon-symbol-enum:before { content: \"\\ea95\" }\n.codicon-symbol-value:before { content: \"\\ea95\" }\n.codicon-symbol-ruler:before { content: \"\\ea96\" }\n.codicon-symbol-unit:before { content: \"\\ea96\" }\n.codicon-activate-breakpoints:before { content: \"\\ea97\" }\n.codicon-archive:before { content: \"\\ea98\" }\n.codicon-arrow-both:before { content: \"\\ea99\" }\n.codicon-arrow-down:before { content: \"\\ea9a\" }\n.codicon-arrow-left:before { content: \"\\ea9b\" }\n.codicon-arrow-right:before { content: \"\\ea9c\" }\n.codicon-arrow-small-down:before { content: \"\\ea9d\" }\n.codicon-arrow-small-left:before { content: \"\\ea9e\" }\n.codicon-arrow-small-right:before { content: \"\\ea9f\" }\n.codicon-arrow-small-up:before { content: \"\\eaa0\" }\n.codicon-arrow-up:before { content: \"\\eaa1\" }\n.codicon-bell:before { content: \"\\eaa2\" }\n.codicon-bold:before { content: \"\\eaa3\" }\n.codicon-book:before { content: \"\\eaa4\" }\n.codicon-bookmark:before { content: \"\\eaa5\" }\n.codicon-debug-breakpoint-conditional-unverified:before { content: \"\\eaa6\" }\n.codicon-debug-breakpoint-conditional:before { content: \"\\eaa7\" }\n.codicon-debug-breakpoint-conditional-disabled:before { content: \"\\eaa7\" }\n.codicon-debug-breakpoint-data-unverified:before { content: \"\\eaa8\" }\n.codicon-debug-breakpoint-data:before { content: \"\\eaa9\" }\n.codicon-debug-breakpoint-data-disabled:before { content: \"\\eaa9\" }\n.codicon-debug-breakpoint-log-unverified:before { content: \"\\eaaa\" }\n.codicon-debug-breakpoint-log:before { content: \"\\eaab\" }\n.codicon-debug-breakpoint-log-disabled:before { content: \"\\eaab\" }\n.codicon-briefcase:before { content: \"\\eaac\" }\n.codicon-broadcast:before { content: \"\\eaad\" }\n.codicon-browser:before { content: \"\\eaae\" }\n.codicon-bug:before { content: \"\\eaaf\" }\n.codicon-calendar:before { content: \"\\eab0\" }\n.codicon-case-sensitive:before { content: \"\\eab1\" }\n.codicon-check:before { content: \"\\eab2\" }\n.codicon-checklist:before { content: \"\\eab3\" }\n.codicon-chevron-down:before { content: \"\\eab4\" }\n.codicon-chevron-left:before { content: \"\\eab5\" }\n.codicon-chevron-right:before { content: \"\\eab6\" }\n.codicon-chevron-up:before { content: \"\\eab7\" }\n.codicon-chrome-close:before { content: \"\\eab8\" }\n.codicon-chrome-maximize:before { content: \"\\eab9\" }\n.codicon-chrome-minimize:before { content: \"\\eaba\" }\n.codicon-chrome-restore:before { content: \"\\eabb\" }\n.codicon-circle-outline:before { content: \"\\eabc\" }\n.codicon-circle:before { content: \"\\eabc\" }\n.codicon-debug-breakpoint-unverified:before { content: \"\\eabc\" }\n.codicon-terminal-decoration-incomplete:before { content: \"\\eabc\" }\n.codicon-circle-slash:before { content: \"\\eabd\" }\n.codicon-circuit-board:before { content: \"\\eabe\" }\n.codicon-clear-all:before { content: \"\\eabf\" }\n.codicon-clippy:before { content: \"\\eac0\" }\n.codicon-close-all:before { content: \"\\eac1\" }\n.codicon-cloud-download:before { content: \"\\eac2\" }\n.codicon-cloud-upload:before { content: \"\\eac3\" }\n.codicon-code:before { content: \"\\eac4\" }\n.codicon-collapse-all:before { content: \"\\eac5\" }\n.codicon-color-mode:before { content: \"\\eac6\" }\n.codicon-comment-discussion:before { content: \"\\eac7\" }\n.codicon-credit-card:before { content: \"\\eac9\" }\n.codicon-dash:before { content: \"\\eacc\" }\n.codicon-dashboard:before { content: \"\\eacd\" }\n.codicon-database:before { content: \"\\eace\" }\n.codicon-debug-continue:before { content: \"\\eacf\" }\n.codicon-debug-disconnect:before { content: \"\\ead0\" }\n.codicon-debug-pause:before { content: \"\\ead1\" }\n.codicon-debug-restart:before { content: \"\\ead2\" }\n.codicon-debug-start:before { content: \"\\ead3\" }\n.codicon-debug-step-into:before { content: \"\\ead4\" }\n.codicon-debug-step-out:before { content: \"\\ead5\" }\n.codicon-debug-step-over:before { content: \"\\ead6\" }\n.codicon-debug-stop:before { content: \"\\ead7\" }\n.codicon-debug:before { content: \"\\ead8\" }\n.codicon-device-camera-video:before { content: \"\\ead9\" }\n.codicon-device-camera:before { content: \"\\eada\" }\n.codicon-device-mobile:before { content: \"\\eadb\" }\n.codicon-diff-added:before { content: \"\\eadc\" }\n.codicon-diff-ignored:before { content: \"\\eadd\" }\n.codicon-diff-modified:before { content: \"\\eade\" }\n.codicon-diff-removed:before { content: \"\\eadf\" }\n.codicon-diff-renamed:before { content: \"\\eae0\" }\n.codicon-diff:before { content: \"\\eae1\" }\n.codicon-discard:before { content: \"\\eae2\" }\n.codicon-editor-layout:before { content: \"\\eae3\" }\n.codicon-empty-window:before { content: \"\\eae4\" }\n.codicon-exclude:before { content: \"\\eae5\" }\n.codicon-extensions:before { content: \"\\eae6\" }\n.codicon-eye-closed:before { content: \"\\eae7\" }\n.codicon-file-binary:before { content: \"\\eae8\" }\n.codicon-file-code:before { content: \"\\eae9\" }\n.codicon-file-media:before { content: \"\\eaea\" }\n.codicon-file-pdf:before { content: \"\\eaeb\" }\n.codicon-file-submodule:before { content: \"\\eaec\" }\n.codicon-file-symlink-directory:before { content: \"\\eaed\" }\n.codicon-file-symlink-file:before { content: \"\\eaee\" }\n.codicon-file-zip:before { content: \"\\eaef\" }\n.codicon-files:before { content: \"\\eaf0\" }\n.codicon-filter:before { content: \"\\eaf1\" }\n.codicon-flame:before { content: \"\\eaf2\" }\n.codicon-fold-down:before { content: \"\\eaf3\" }\n.codicon-fold-up:before { content: \"\\eaf4\" }\n.codicon-fold:before { content: \"\\eaf5\" }\n.codicon-folder-active:before { content: \"\\eaf6\" }\n.codicon-folder-opened:before { content: \"\\eaf7\" }\n.codicon-gear:before { content: \"\\eaf8\" }\n.codicon-gift:before { content: \"\\eaf9\" }\n.codicon-gist-secret:before { content: \"\\eafa\" }\n.codicon-gist:before { content: \"\\eafb\" }\n.codicon-git-commit:before { content: \"\\eafc\" }\n.codicon-git-compare:before { content: \"\\eafd\" }\n.codicon-compare-changes:before { content: \"\\eafd\" }\n.codicon-git-merge:before { content: \"\\eafe\" }\n.codicon-github-action:before { content: \"\\eaff\" }\n.codicon-github-alt:before { content: \"\\eb00\" }\n.codicon-globe:before { content: \"\\eb01\" }\n.codicon-grabber:before { content: \"\\eb02\" }\n.codicon-graph:before { content: \"\\eb03\" }\n.codicon-gripper:before { content: \"\\eb04\" }\n.codicon-heart:before { content: \"\\eb05\" }\n.codicon-home:before { content: \"\\eb06\" }\n.codicon-horizontal-rule:before { content: \"\\eb07\" }\n.codicon-hubot:before { content: \"\\eb08\" }\n.codicon-inbox:before { content: \"\\eb09\" }\n.codicon-issue-reopened:before { content: \"\\eb0b\" }\n.codicon-issues:before { content: \"\\eb0c\" }\n.codicon-italic:before { content: \"\\eb0d\" }\n.codicon-jersey:before { content: \"\\eb0e\" }\n.codicon-json:before { content: \"\\eb0f\" }\n.codicon-kebab-vertical:before { content: \"\\eb10\" }\n.codicon-key:before { content: \"\\eb11\" }\n.codicon-law:before { content: \"\\eb12\" }\n.codicon-lightbulb-autofix:before { content: \"\\eb13\" }\n.codicon-link-external:before { content: \"\\eb14\" }\n.codicon-link:before { content: \"\\eb15\" }\n.codicon-list-ordered:before { content: \"\\eb16\" }\n.codicon-list-unordered:before { content: \"\\eb17\" }\n.codicon-live-share:before { content: \"\\eb18\" }\n.codicon-loading:before { content: \"\\eb19\" }\n.codicon-location:before { content: \"\\eb1a\" }\n.codicon-mail-read:before { content: \"\\eb1b\" }\n.codicon-mail:before { content: \"\\eb1c\" }\n.codicon-markdown:before { content: \"\\eb1d\" }\n.codicon-megaphone:before { content: \"\\eb1e\" }\n.codicon-mention:before { content: \"\\eb1f\" }\n.codicon-milestone:before { content: \"\\eb20\" }\n.codicon-mortar-board:before { content: \"\\eb21\" }\n.codicon-move:before { content: \"\\eb22\" }\n.codicon-multiple-windows:before { content: \"\\eb23\" }\n.codicon-mute:before { content: \"\\eb24\" }\n.codicon-no-newline:before { content: \"\\eb25\" }\n.codicon-note:before { content: \"\\eb26\" }\n.codicon-octoface:before { content: \"\\eb27\" }\n.codicon-open-preview:before { content: \"\\eb28\" }\n.codicon-package:before { content: \"\\eb29\" }\n.codicon-paintcan:before { content: \"\\eb2a\" }\n.codicon-pin:before { content: \"\\eb2b\" }\n.codicon-play:before { content: \"\\eb2c\" }\n.codicon-run:before { content: \"\\eb2c\" }\n.codicon-plug:before { content: \"\\eb2d\" }\n.codicon-preserve-case:before { content: \"\\eb2e\" }\n.codicon-preview:before { content: \"\\eb2f\" }\n.codicon-project:before { content: \"\\eb30\" }\n.codicon-pulse:before { content: \"\\eb31\" }\n.codicon-question:before { content: \"\\eb32\" }\n.codicon-quote:before { content: \"\\eb33\" }\n.codicon-radio-tower:before { content: \"\\eb34\" }\n.codicon-reactions:before { content: \"\\eb35\" }\n.codicon-references:before { content: \"\\eb36\" }\n.codicon-refresh:before { content: \"\\eb37\" }\n.codicon-regex:before { content: \"\\eb38\" }\n.codicon-remote-explorer:before { content: \"\\eb39\" }\n.codicon-remote:before { content: \"\\eb3a\" }\n.codicon-remove:before { content: \"\\eb3b\" }\n.codicon-replace-all:before { content: \"\\eb3c\" }\n.codicon-replace:before { content: \"\\eb3d\" }\n.codicon-repo-clone:before { content: \"\\eb3e\" }\n.codicon-repo-force-push:before { content: \"\\eb3f\" }\n.codicon-repo-pull:before { content: \"\\eb40\" }\n.codicon-repo-push:before { content: \"\\eb41\" }\n.codicon-report:before { content: \"\\eb42\" }\n.codicon-request-changes:before { content: \"\\eb43\" }\n.codicon-rocket:before { content: \"\\eb44\" }\n.codicon-root-folder-opened:before { content: \"\\eb45\" }\n.codicon-root-folder:before { content: \"\\eb46\" }\n.codicon-rss:before { content: \"\\eb47\" }\n.codicon-ruby:before { content: \"\\eb48\" }\n.codicon-save-all:before { content: \"\\eb49\" }\n.codicon-save-as:before { content: \"\\eb4a\" }\n.codicon-save:before { content: \"\\eb4b\" }\n.codicon-screen-full:before { content: \"\\eb4c\" }\n.codicon-screen-normal:before { content: \"\\eb4d\" }\n.codicon-search-stop:before { content: \"\\eb4e\" }\n.codicon-server:before { content: \"\\eb50\" }\n.codicon-settings-gear:before { content: \"\\eb51\" }\n.codicon-settings:before { content: \"\\eb52\" }\n.codicon-shield:before { content: \"\\eb53\" }\n.codicon-smiley:before { content: \"\\eb54\" }\n.codicon-sort-precedence:before { content: \"\\eb55\" }\n.codicon-split-horizontal:before { content: \"\\eb56\" }\n.codicon-split-vertical:before { content: \"\\eb57\" }\n.codicon-squirrel:before { content: \"\\eb58\" }\n.codicon-star-full:before { content: \"\\eb59\" }\n.codicon-star-half:before { content: \"\\eb5a\" }\n.codicon-symbol-class:before { content: \"\\eb5b\" }\n.codicon-symbol-color:before { content: \"\\eb5c\" }\n.codicon-symbol-constant:before { content: \"\\eb5d\" }\n.codicon-symbol-enum-member:before { content: \"\\eb5e\" }\n.codicon-symbol-field:before { content: \"\\eb5f\" }\n.codicon-symbol-file:before { content: \"\\eb60\" }\n.codicon-symbol-interface:before { content: \"\\eb61\" }\n.codicon-symbol-keyword:before { content: \"\\eb62\" }\n.codicon-symbol-misc:before { content: \"\\eb63\" }\n.codicon-symbol-operator:before { content: \"\\eb64\" }\n.codicon-symbol-property:before { content: \"\\eb65\" }\n.codicon-wrench:before { content: \"\\eb65\" }\n.codicon-wrench-subaction:before { content: \"\\eb65\" }\n.codicon-symbol-snippet:before { content: \"\\eb66\" }\n.codicon-tasklist:before { content: \"\\eb67\" }\n.codicon-telescope:before { content: \"\\eb68\" }\n.codicon-text-size:before { content: \"\\eb69\" }\n.codicon-three-bars:before { content: \"\\eb6a\" }\n.codicon-thumbsdown:before { content: \"\\eb6b\" }\n.codicon-thumbsup:before { content: \"\\eb6c\" }\n.codicon-tools:before { content: \"\\eb6d\" }\n.codicon-triangle-down:before { content: \"\\eb6e\" }\n.codicon-triangle-left:before { content: \"\\eb6f\" }\n.codicon-triangle-right:before { content: \"\\eb70\" }\n.codicon-triangle-up:before { content: \"\\eb71\" }\n.codicon-twitter:before { content: \"\\eb72\" }\n.codicon-unfold:before { content: \"\\eb73\" }\n.codicon-unlock:before { content: \"\\eb74\" }\n.codicon-unmute:before { content: \"\\eb75\" }\n.codicon-unverified:before { content: \"\\eb76\" }\n.codicon-verified:before { content: \"\\eb77\" }\n.codicon-versions:before { content: \"\\eb78\" }\n.codicon-vm-active:before { content: \"\\eb79\" }\n.codicon-vm-outline:before { content: \"\\eb7a\" }\n.codicon-vm-running:before { content: \"\\eb7b\" }\n.codicon-watch:before { content: \"\\eb7c\" }\n.codicon-whitespace:before { content: \"\\eb7d\" }\n.codicon-whole-word:before { content: \"\\eb7e\" }\n.codicon-window:before { content: \"\\eb7f\" }\n.codicon-word-wrap:before { content: \"\\eb80\" }\n.codicon-zoom-in:before { content: \"\\eb81\" }\n.codicon-zoom-out:before { content: \"\\eb82\" }\n.codicon-list-filter:before { content: \"\\eb83\" }\n.codicon-list-flat:before { content: \"\\eb84\" }\n.codicon-list-selection:before { content: \"\\eb85\" }\n.codicon-selection:before { content: \"\\eb85\" }\n.codicon-list-tree:before { content: \"\\eb86\" }\n.codicon-debug-breakpoint-function-unverified:before { content: \"\\eb87\" }\n.codicon-debug-breakpoint-function:before { content: \"\\eb88\" }\n.codicon-debug-breakpoint-function-disabled:before { content: \"\\eb88\" }\n.codicon-debug-stackframe-active:before { content: \"\\eb89\" }\n.codicon-circle-small-filled:before { content: \"\\eb8a\" }\n.codicon-debug-stackframe-dot:before { content: \"\\eb8a\" }\n.codicon-terminal-decoration-mark:before { content: \"\\eb8a\" }\n.codicon-debug-stackframe:before { content: \"\\eb8b\" }\n.codicon-debug-stackframe-focused:before { content: \"\\eb8b\" }\n.codicon-debug-breakpoint-unsupported:before { content: \"\\eb8c\" }\n.codicon-symbol-string:before { content: \"\\eb8d\" }\n.codicon-debug-reverse-continue:before { content: \"\\eb8e\" }\n.codicon-debug-step-back:before { content: \"\\eb8f\" }\n.codicon-debug-restart-frame:before { content: \"\\eb90\" }\n.codicon-debug-alt:before { content: \"\\eb91\" }\n.codicon-call-incoming:before { content: \"\\eb92\" }\n.codicon-call-outgoing:before { content: \"\\eb93\" }\n.codicon-menu:before { content: \"\\eb94\" }\n.codicon-expand-all:before { content: \"\\eb95\" }\n.codicon-feedback:before { content: \"\\eb96\" }\n.codicon-group-by-ref-type:before { content: \"\\eb97\" }\n.codicon-ungroup-by-ref-type:before { content: \"\\eb98\" }\n.codicon-account:before { content: \"\\eb99\" }\n.codicon-bell-dot:before { content: \"\\eb9a\" }\n.codicon-debug-console:before { content: \"\\eb9b\" }\n.codicon-library:before { content: \"\\eb9c\" }\n.codicon-output:before { content: \"\\eb9d\" }\n.codicon-run-all:before { content: \"\\eb9e\" }\n.codicon-sync-ignored:before { content: \"\\eb9f\" }\n.codicon-pinned:before { content: \"\\eba0\" }\n.codicon-github-inverted:before { content: \"\\eba1\" }\n.codicon-server-process:before { content: \"\\eba2\" }\n.codicon-server-environment:before { content: \"\\eba3\" }\n.codicon-pass:before { content: \"\\eba4\" }\n.codicon-issue-closed:before { content: \"\\eba4\" }\n.codicon-stop-circle:before { content: \"\\eba5\" }\n.codicon-play-circle:before { content: \"\\eba6\" }\n.codicon-record:before { content: \"\\eba7\" }\n.codicon-debug-alt-small:before { content: \"\\eba8\" }\n.codicon-vm-connect:before { content: \"\\eba9\" }\n.codicon-cloud:before { content: \"\\ebaa\" }\n.codicon-merge:before { content: \"\\ebab\" }\n.codicon-export:before { content: \"\\ebac\" }\n.codicon-graph-left:before { content: \"\\ebad\" }\n.codicon-magnet:before { content: \"\\ebae\" }\n.codicon-notebook:before { content: \"\\ebaf\" }\n.codicon-redo:before { content: \"\\ebb0\" }\n.codicon-check-all:before { content: \"\\ebb1\" }\n.codicon-pinned-dirty:before { content: \"\\ebb2\" }\n.codicon-pass-filled:before { content: \"\\ebb3\" }\n.codicon-circle-large-filled:before { content: \"\\ebb4\" }\n.codicon-circle-large:before { content: \"\\ebb5\" }\n.codicon-circle-large-outline:before { content: \"\\ebb5\" }\n.codicon-combine:before { content: \"\\ebb6\" }\n.codicon-gather:before { content: \"\\ebb6\" }\n.codicon-table:before { content: \"\\ebb7\" }\n.codicon-variable-group:before { content: \"\\ebb8\" }\n.codicon-type-hierarchy:before { content: \"\\ebb9\" }\n.codicon-type-hierarchy-sub:before { content: \"\\ebba\" }\n.codicon-type-hierarchy-super:before { content: \"\\ebbb\" }\n.codicon-git-pull-request-create:before { content: \"\\ebbc\" }\n.codicon-run-above:before { content: \"\\ebbd\" }\n.codicon-run-below:before { content: \"\\ebbe\" }\n.codicon-notebook-template:before { content: \"\\ebbf\" }\n.codicon-debug-rerun:before { content: \"\\ebc0\" }\n.codicon-workspace-trusted:before { content: \"\\ebc1\" }\n.codicon-workspace-untrusted:before { content: \"\\ebc2\" }\n.codicon-workspace-unknown:before { content: \"\\ebc3\" }\n.codicon-terminal-cmd:before { content: \"\\ebc4\" }\n.codicon-terminal-debian:before { content: \"\\ebc5\" }\n.codicon-terminal-linux:before { content: \"\\ebc6\" }\n.codicon-terminal-powershell:before { content: \"\\ebc7\" }\n.codicon-terminal-tmux:before { content: \"\\ebc8\" }\n.codicon-terminal-ubuntu:before { content: \"\\ebc9\" }\n.codicon-terminal-bash:before { content: \"\\ebca\" }\n.codicon-arrow-swap:before { content: \"\\ebcb\" }\n.codicon-copy:before { content: \"\\ebcc\" }\n.codicon-person-add:before { content: \"\\ebcd\" }\n.codicon-filter-filled:before { content: \"\\ebce\" }\n.codicon-wand:before { content: \"\\ebcf\" }\n.codicon-debug-line-by-line:before { content: \"\\ebd0\" }\n.codicon-inspect:before { content: \"\\ebd1\" }\n.codicon-layers:before { content: \"\\ebd2\" }\n.codicon-layers-dot:before { content: \"\\ebd3\" }\n.codicon-layers-active:before { content: \"\\ebd4\" }\n.codicon-compass:before { content: \"\\ebd5\" }\n.codicon-compass-dot:before { content: \"\\ebd6\" }\n.codicon-compass-active:before { content: \"\\ebd7\" }\n.codicon-azure:before { content: \"\\ebd8\" }\n.codicon-issue-draft:before { content: \"\\ebd9\" }\n.codicon-git-pull-request-closed:before { content: \"\\ebda\" }\n.codicon-git-pull-request-draft:before { content: \"\\ebdb\" }\n.codicon-debug-all:before { content: \"\\ebdc\" }\n.codicon-debug-coverage:before { content: \"\\ebdd\" }\n.codicon-run-errors:before { content: \"\\ebde\" }\n.codicon-folder-library:before { content: \"\\ebdf\" }\n.codicon-debug-continue-small:before { content: \"\\ebe0\" }\n.codicon-beaker-stop:before { content: \"\\ebe1\" }\n.codicon-graph-line:before { content: \"\\ebe2\" }\n.codicon-graph-scatter:before { content: \"\\ebe3\" }\n.codicon-pie-chart:before { content: \"\\ebe4\" }\n.codicon-bracket:before { content: \"\\eb0f\" }\n.codicon-bracket-dot:before { content: \"\\ebe5\" }\n.codicon-bracket-error:before { content: \"\\ebe6\" }\n.codicon-lock-small:before { content: \"\\ebe7\" }\n.codicon-azure-devops:before { content: \"\\ebe8\" }\n.codicon-verified-filled:before { content: \"\\ebe9\" }\n.codicon-newline:before { content: \"\\ebea\" }\n.codicon-layout:before { content: \"\\ebeb\" }\n.codicon-layout-activitybar-left:before { content: \"\\ebec\" }\n.codicon-layout-activitybar-right:before { content: \"\\ebed\" }\n.codicon-layout-panel-left:before { content: \"\\ebee\" }\n.codicon-layout-panel-center:before { content: \"\\ebef\" }\n.codicon-layout-panel-justify:before { content: \"\\ebf0\" }\n.codicon-layout-panel-right:before { content: \"\\ebf1\" }\n.codicon-layout-panel:before { content: \"\\ebf2\" }\n.codicon-layout-sidebar-left:before { content: \"\\ebf3\" }\n.codicon-layout-sidebar-right:before { content: \"\\ebf4\" }\n.codicon-layout-statusbar:before { content: \"\\ebf5\" }\n.codicon-layout-menubar:before { content: \"\\ebf6\" }\n.codicon-layout-centered:before { content: \"\\ebf7\" }\n.codicon-target:before { content: \"\\ebf8\" }\n.codicon-indent:before { content: \"\\ebf9\" }\n.codicon-record-small:before { content: \"\\ebfa\" }\n.codicon-error-small:before { content: \"\\ebfb\" }\n.codicon-terminal-decoration-error:before { content: \"\\ebfb\" }\n.codicon-arrow-circle-down:before { content: \"\\ebfc\" }\n.codicon-arrow-circle-left:before { content: \"\\ebfd\" }\n.codicon-arrow-circle-right:before { content: \"\\ebfe\" }\n.codicon-arrow-circle-up:before { content: \"\\ebff\" }\n.codicon-layout-sidebar-right-off:before { content: \"\\ec00\" }\n.codicon-layout-panel-off:before { content: \"\\ec01\" }\n.codicon-layout-sidebar-left-off:before { content: \"\\ec02\" }\n.codicon-blank:before { content: \"\\ec03\" }\n.codicon-heart-filled:before { content: \"\\ec04\" }\n.codicon-map:before { content: \"\\ec05\" }\n.codicon-map-filled:before { content: \"\\ec06\" }\n.codicon-circle-small:before { content: \"\\ec07\" }\n.codicon-bell-slash:before { content: \"\\ec08\" }\n.codicon-bell-slash-dot:before { content: \"\\ec09\" }\n.codicon-comment-unresolved:before { content: \"\\ec0a\" }\n.codicon-git-pull-request-go-to-changes:before { content: \"\\ec0b\" }\n.codicon-git-pull-request-new-changes:before { content: \"\\ec0c\" }\n.codicon-search-fuzzy:before { content: \"\\ec0d\" }\n.codicon-comment-draft:before { content: \"\\ec0e\" }\n.codicon-send:before { content: \"\\ec0f\" }\n.codicon-sparkle:before { content: \"\\ec10\" }\n.codicon-insert:before { content: \"\\ec11\" }\n", "",{"version":3,"sources":["webpack://./node_modules/@vscode/codicons/dist/codicon.css"],"names":[],"mappings":"AAAA;;;+FAG+F;;AAE/F;CACC,sBAAsB;CACtB,mBAAmB;CACnB,+DAA6E;AAC9E;;AAEA;CACC,yCAAyC;CACzC,qBAAqB;CACrB,qBAAqB;CACrB,oBAAoB;CACpB,kBAAkB;CAClB,mCAAmC;CACnC,kCAAkC;CAClC,iBAAiB;CACjB,yBAAyB;CACzB,qBAAqB;AACtB;;AAEA;;sBAEsB;;AAEtB;CACC;EACC,wBAAwB;CACzB;AACD;;AAEA;;;CAGC,kDAAkD;CAClD,+CAA+C;AAChD;;AAEA;CACC,YAAY;AACb;;AAEA;CACC,UAAU;AACX;;AAEA,2CAA2C;AAC3C;CACC,iCAAiC;CACjC,0EAA0E;AAC3E;;AAEA;;sBAEsB;;AAEtB,sBAAsB,iBAAiB;AACvC,uBAAuB,iBAAiB;AACxC,2BAA2B,iBAAiB;AAC5C,8BAA8B,iBAAiB;AAC/C,4BAA4B,iBAAiB;AAC7C,6BAA6B,iBAAiB;AAC9C,uBAAuB,iBAAiB;AACxC,8BAA8B,iBAAiB;AAC/C,4BAA4B,iBAAiB;AAC7C,8BAA8B,iBAAiB;AAC/C,mCAAmC,iBAAiB;AACpD,6CAA6C,iBAAiB;AAC9D,8BAA8B,iBAAiB;AAC/C,2BAA2B,iBAAiB;AAC5C,sBAAsB,iBAAiB;AACvC,0BAA0B,iBAAiB;AAC3C,6BAA6B,iBAAiB;AAC9C,yBAAyB,iBAAiB;AAC1C,gCAAgC,iBAAiB;AACjD,iCAAiC,iBAAiB;AAClD,gCAAgC,iBAAiB;AACjD,6BAA6B,iBAAiB;AAC9C,oCAAoC,iBAAiB;AACrD,oCAAoC,iBAAiB;AACrD,iCAAiC,iBAAiB;AAClD,yBAAyB,iBAAiB;AAC1C,gCAAgC,iBAAiB;AACjD,uBAAuB,iBAAiB;AACxC,2BAA2B,iBAAiB;AAC5C,8BAA8B,iBAAiB;AAC/C,6BAA6B,iBAAiB;AAC9C,0BAA0B,iBAAiB;AAC3C,8BAA8B,iBAAiB;AAC/C,wBAAwB,iBAAiB;AACzC,0BAA0B,iBAAiB;AAC3C,yBAAyB,iBAAiB;AAC1C,8BAA8B,iBAAiB;AAC/C,0BAA0B,iBAAiB;AAC3C,2BAA2B,iBAAiB;AAC5C,yBAAyB,iBAAiB;AAC1C,0BAA0B,iBAAiB;AAC3C,sBAAsB,iBAAiB;AACvC,8BAA8B,iBAAiB;AAC/C,4BAA4B,iBAAiB;AAC7C,gCAAgC,iBAAiB;AACjD,gCAAgC,iBAAiB;AACjD,8BAA8B,iBAAiB;AAC/C,mCAAmC,iBAAiB;AACpD,4CAA4C,iBAAiB;AAC7D,6BAA6B,iBAAiB;AAC9C,8CAA8C,iBAAiB;AAC/D,mCAAmC,iBAAiB;AACpD,uBAAuB,iBAAiB;AACxC,yBAAyB,iBAAiB;AAC1C,uBAAuB,iBAAiB;AACxC,+BAA+B,iBAAiB;AAChD,+BAA+B,iBAAiB;AAChD,mCAAmC,iBAAiB;AACpD,uBAAuB,iBAAiB;AACxC,iCAAiC,iBAAiB;AAClD,wBAAwB,iBAAiB;AACzC,+BAA+B,iBAAiB;AAChD,oBAAoB,iBAAiB;AACrC,4BAA4B,iBAAiB;AAC7C,uBAAuB,iBAAiB;AACxC,wBAAwB,iBAAiB;AACzC,mCAAmC,iBAAiB;AACpD,yBAAyB,iBAAiB;AAC1C,6BAA6B,iBAAiB;AAC9C,qBAAqB,iBAAiB;AACtC,iCAAiC,iBAAiB;AAClD,uBAAuB,iBAAiB;AACxC,4BAA4B,iBAAiB;AAC7C,uBAAuB,iBAAiB;AACxC,2BAA2B,iBAAiB;AAC5C,mCAAmC,iBAAiB;AACpD,6BAA6B,iBAAiB;AAC9C,wBAAwB,iBAAiB;AACzC,+BAA+B,iBAAiB;AAChD,sCAAsC,iBAAiB;AACvD,uCAAuC,iBAAiB;AACxD,2BAA2B,iBAAiB;AAC5C,2BAA2B,iBAAiB;AAC5C,6BAA6B,iBAAiB;AAC9C,wCAAwC,iBAAiB;AACzD,wBAAwB,iBAAiB;AACzC,2BAA2B,iBAAiB;AAC5C,0BAA0B,iBAAiB;AAC3C,wBAAwB,iBAAiB;AACzC,yBAAyB,iBAAiB;AAC1C,iCAAiC,iBAAiB;AAClD,gCAAgC,iBAAiB;AACjD,8BAA8B,iBAAiB;AAC/C,8BAA8B,iBAAiB;AAC/C,yBAAyB,iBAAiB;AAC1C,2BAA2B,iBAAiB;AAC5C,0BAA0B,iBAAiB;AAC3C,uBAAuB,iBAAiB;AACxC,sBAAsB,iBAAiB;AACvC,+BAA+B,iBAAiB;AAChD,wBAAwB,iBAAiB;AACzC,uBAAuB,iBAAiB;AACxC,2BAA2B,iBAAiB;AAC5C,kCAAkC,iBAAiB;AACnD,wBAAwB,iBAAiB;AACzC,+BAA+B,iBAAiB;AAChD,gCAAgC,iBAAiB;AACjD,iCAAiC,iBAAiB;AAClD,mCAAmC,iBAAiB;AACpD,gCAAgC,iBAAiB;AACjD,gCAAgC,iBAAiB;AACjD,kCAAkC,iBAAiB;AACnD,qCAAqC,iBAAiB;AACtD,iCAAiC,iBAAiB;AAClD,8BAA8B,iBAAiB;AAC/C,iCAAiC,iBAAiB;AAClD,gCAAgC,iBAAiB;AACjD,mCAAmC,iBAAiB;AACpD,gCAAgC,iBAAiB;AACjD,mCAAmC,iBAAiB;AACpD,wCAAwC,iBAAiB;AACzD,6BAA6B,iBAAiB;AAC9C,8BAA8B,iBAAiB;AAC/C,mCAAmC,iBAAiB;AACpD,6BAA6B,iBAAiB;AAC9C,8BAA8B,iBAAiB;AAC/C,+BAA+B,iBAAiB;AAChD,+BAA+B,iBAAiB;AAChD,8BAA8B,iBAAiB;AAC/C,uCAAuC,iBAAiB;AACxD,0BAA0B,iBAAiB;AAC3C,6BAA6B,iBAAiB;AAC9C,6BAA6B,iBAAiB;AAC9C,6BAA6B,iBAAiB;AAC9C,8BAA8B,iBAAiB;AAC/C,mCAAmC,iBAAiB;AACpD,mCAAmC,iBAAiB;AACpD,oCAAoC,iBAAiB;AACrD,iCAAiC,iBAAiB;AAClD,2BAA2B,iBAAiB;AAC5C,uBAAuB,iBAAiB;AACxC,uBAAuB,iBAAiB;AACxC,uBAAuB,iBAAiB;AACxC,2BAA2B,iBAAiB;AAC5C,0DAA0D,iBAAiB;AAC3E,+CAA+C,iBAAiB;AAChE,wDAAwD,iBAAiB;AACzE,mDAAmD,iBAAiB;AACpE,wCAAwC,iBAAiB;AACzD,iDAAiD,iBAAiB;AAClE,kDAAkD,iBAAiB;AACnE,uCAAuC,iBAAiB;AACxD,gDAAgD,iBAAiB;AACjE,4BAA4B,iBAAiB;AAC7C,4BAA4B,iBAAiB;AAC7C,0BAA0B,iBAAiB;AAC3C,sBAAsB,iBAAiB;AACvC,2BAA2B,iBAAiB;AAC5C,iCAAiC,iBAAiB;AAClD,wBAAwB,iBAAiB;AACzC,4BAA4B,iBAAiB;AAC7C,+BAA+B,iBAAiB;AAChD,+BAA+B,iBAAiB;AAChD,gCAAgC,iBAAiB;AACjD,6BAA6B,iBAAiB;AAC9C,+BAA+B,iBAAiB;AAChD,kCAAkC,iBAAiB;AACnD,kCAAkC,iBAAiB;AACnD,iCAAiC,iBAAiB;AAClD,iCAAiC,iBAAiB;AAClD,yBAAyB,iBAAiB;AAC1C,8CAA8C,iBAAiB;AAC/D,iDAAiD,iBAAiB;AAClE,+BAA+B,iBAAiB;AAChD,gCAAgC,iBAAiB;AACjD,4BAA4B,iBAAiB;AAC7C,yBAAyB,iBAAiB;AAC1C,4BAA4B,iBAAiB;AAC7C,iCAAiC,iBAAiB;AAClD,+BAA+B,iBAAiB;AAChD,uBAAuB,iBAAiB;AACxC,+BAA+B,iBAAiB;AAChD,6BAA6B,iBAAiB;AAC9C,qCAAqC,iBAAiB;AACtD,8BAA8B,iBAAiB;AAC/C,uBAAuB,iBAAiB;AACxC,4BAA4B,iBAAiB;AAC7C,2BAA2B,iBAAiB;AAC5C,iCAAiC,iBAAiB;AAClD,mCAAmC,iBAAiB;AACpD,8BAA8B,iBAAiB;AAC/C,gCAAgC,iBAAiB;AACjD,8BAA8B,iBAAiB;AAC/C,kCAAkC,iBAAiB;AACnD,iCAAiC,iBAAiB;AAClD,kCAAkC,iBAAiB;AACnD,6BAA6B,iBAAiB;AAC9C,wBAAwB,iBAAiB;AACzC,sCAAsC,iBAAiB;AACvD,gCAAgC,iBAAiB;AACjD,gCAAgC,iBAAiB;AACjD,6BAA6B,iBAAiB;AAC9C,+BAA+B,iBAAiB;AAChD,gCAAgC,iBAAiB;AACjD,+BAA+B,iBAAiB;AAChD,+BAA+B,iBAAiB;AAChD,uBAAuB,iBAAiB;AACxC,0BAA0B,iBAAiB;AAC3C,gCAAgC,iBAAiB;AACjD,+BAA+B,iBAAiB;AAChD,0BAA0B,iBAAiB;AAC3C,6BAA6B,iBAAiB;AAC9C,6BAA6B,iBAAiB;AAC9C,8BAA8B,iBAAiB;AAC/C,4BAA4B,iBAAiB;AAC7C,6BAA6B,iBAAiB;AAC9C,2BAA2B,iBAAiB;AAC5C,iCAAiC,iBAAiB;AAClD,yCAAyC,iBAAiB;AAC1D,oCAAoC,iBAAiB;AACrD,2BAA2B,iBAAiB;AAC5C,wBAAwB,iBAAiB;AACzC,yBAAyB,iBAAiB;AAC1C,wBAAwB,iBAAiB;AACzC,4BAA4B,iBAAiB;AAC7C,0BAA0B,iBAAiB;AAC3C,uBAAuB,iBAAiB;AACxC,gCAAgC,iBAAiB;AACjD,gCAAgC,iBAAiB;AACjD,uBAAuB,iBAAiB;AACxC,uBAAuB,iBAAiB;AACxC,8BAA8B,iBAAiB;AAC/C,uBAAuB,iBAAiB;AACxC,6BAA6B,iBAAiB;AAC9C,8BAA8B,iBAAiB;AAC/C,kCAAkC,iBAAiB;AACnD,4BAA4B,iBAAiB;AAC7C,gCAAgC,iBAAiB;AACjD,6BAA6B,iBAAiB;AAC9C,wBAAwB,iBAAiB;AACzC,0BAA0B,iBAAiB;AAC3C,wBAAwB,iBAAiB;AACzC,0BAA0B,iBAAiB;AAC3C,wBAAwB,iBAAiB;AACzC,uBAAuB,iBAAiB;AACxC,kCAAkC,iBAAiB;AACnD,wBAAwB,iBAAiB;AACzC,wBAAwB,iBAAiB;AACzC,iCAAiC,iBAAiB;AAClD,yBAAyB,iBAAiB;AAC1C,yBAAyB,iBAAiB;AAC1C,yBAAyB,iBAAiB;AAC1C,uBAAuB,iBAAiB;AACxC,iCAAiC,iBAAiB;AAClD,sBAAsB,iBAAiB;AACvC,sBAAsB,iBAAiB;AACvC,oCAAoC,iBAAiB;AACrD,gCAAgC,iBAAiB;AACjD,uBAAuB,iBAAiB;AACxC,+BAA+B,iBAAiB;AAChD,iCAAiC,iBAAiB;AAClD,6BAA6B,iBAAiB;AAC9C,0BAA0B,iBAAiB;AAC3C,2BAA2B,iBAAiB;AAC5C,4BAA4B,iBAAiB;AAC7C,uBAAuB,iBAAiB;AACxC,2BAA2B,iBAAiB;AAC5C,4BAA4B,iBAAiB;AAC7C,0BAA0B,iBAAiB;AAC3C,4BAA4B,iBAAiB;AAC7C,+BAA+B,iBAAiB;AAChD,uBAAuB,iBAAiB;AACxC,mCAAmC,iBAAiB;AACpD,uBAAuB,iBAAiB;AACxC,6BAA6B,iBAAiB;AAC9C,uBAAuB,iBAAiB;AACxC,2BAA2B,iBAAiB;AAC5C,+BAA+B,iBAAiB;AAChD,0BAA0B,iBAAiB;AAC3C,2BAA2B,iBAAiB;AAC5C,sBAAsB,iBAAiB;AACvC,uBAAuB,iBAAiB;AACxC,sBAAsB,iBAAiB;AACvC,uBAAuB,iBAAiB;AACxC,gCAAgC,iBAAiB;AACjD,0BAA0B,iBAAiB;AAC3C,0BAA0B,iBAAiB;AAC3C,wBAAwB,iBAAiB;AACzC,2BAA2B,iBAAiB;AAC5C,wBAAwB,iBAAiB;AACzC,8BAA8B,iBAAiB;AAC/C,4BAA4B,iBAAiB;AAC7C,6BAA6B,iBAAiB;AAC9C,0BAA0B,iBAAiB;AAC3C,wBAAwB,iBAAiB;AACzC,kCAAkC,iBAAiB;AACnD,yBAAyB,iBAAiB;AAC1C,yBAAyB,iBAAiB;AAC1C,8BAA8B,iBAAiB;AAC/C,0BAA0B,iBAAiB;AAC3C,6BAA6B,iBAAiB;AAC9C,kCAAkC,iBAAiB;AACnD,4BAA4B,iBAAiB;AAC7C,4BAA4B,iBAAiB;AAC7C,yBAAyB,iBAAiB;AAC1C,kCAAkC,iBAAiB;AACnD,yBAAyB,iBAAiB;AAC1C,qCAAqC,iBAAiB;AACtD,8BAA8B,iBAAiB;AAC/C,sBAAsB,iBAAiB;AACvC,uBAAuB,iBAAiB;AACxC,2BAA2B,iBAAiB;AAC5C,0BAA0B,iBAAiB;AAC3C,uBAAuB,iBAAiB;AACxC,8BAA8B,iBAAiB;AAC/C,gCAAgC,iBAAiB;AACjD,8BAA8B,iBAAiB;AAC/C,yBAAyB,iBAAiB;AAC1C,gCAAgC,iBAAiB;AACjD,2BAA2B,iBAAiB;AAC5C,yBAAyB,iBAAiB;AAC1C,yBAAyB,iBAAiB;AAC1C,kCAAkC,iBAAiB;AACnD,mCAAmC,iBAAiB;AACpD,iCAAiC,iBAAiB;AAClD,2BAA2B,iBAAiB;AAC5C,4BAA4B,iBAAiB;AAC7C,4BAA4B,iBAAiB;AAC7C,+BAA+B,iBAAiB;AAChD,+BAA+B,iBAAiB;AAChD,kCAAkC,iBAAiB;AACnD,qCAAqC,iBAAiB;AACtD,+BAA+B,iBAAiB;AAChD,8BAA8B,iBAAiB;AAC/C,mCAAmC,iBAAiB;AACpD,iCAAiC,iBAAiB;AAClD,8BAA8B,iBAAiB;AAC/C,kCAAkC,iBAAiB;AACnD,kCAAkC,iBAAiB;AACnD,yBAAyB,iBAAiB;AAC1C,mCAAmC,iBAAiB;AACpD,iCAAiC,iBAAiB;AAClD,2BAA2B,iBAAiB;AAC5C,4BAA4B,iBAAiB;AAC7C,4BAA4B,iBAAiB;AAC7C,6BAA6B,iBAAiB;AAC9C,6BAA6B,iBAAiB;AAC9C,2BAA2B,iBAAiB;AAC5C,wBAAwB,iBAAiB;AACzC,gCAAgC,iBAAiB;AACjD,gCAAgC,iBAAiB;AACjD,iCAAiC,iBAAiB;AAClD,8BAA8B,iBAAiB;AAC/C,0BAA0B,iBAAiB;AAC3C,yBAAyB,iBAAiB;AAC1C,yBAAyB,iBAAiB;AAC1C,yBAAyB,iBAAiB;AAC1C,6BAA6B,iBAAiB;AAC9C,2BAA2B,iBAAiB;AAC5C,2BAA2B,iBAAiB;AAC5C,4BAA4B,iBAAiB;AAC7C,6BAA6B,iBAAiB;AAC9C,6BAA6B,iBAAiB;AAC9C,wBAAwB,iBAAiB;AACzC,6BAA6B,iBAAiB;AAC9C,6BAA6B,iBAAiB;AAC9C,yBAAyB,iBAAiB;AAC1C,4BAA4B,iBAAiB;AAC7C,0BAA0B,iBAAiB;AAC3C,2BAA2B,iBAAiB;AAC5C,8BAA8B,iBAAiB;AAC/C,4BAA4B,iBAAiB;AAC7C,iCAAiC,iBAAiB;AAClD,4BAA4B,iBAAiB;AAC7C,4BAA4B,iBAAiB;AAC7C,uDAAuD,iBAAiB;AACxE,4CAA4C,iBAAiB;AAC7D,qDAAqD,iBAAiB;AACtE,0CAA0C,iBAAiB;AAC3D,sCAAsC,iBAAiB;AACvD,uCAAuC,iBAAiB;AACxD,2CAA2C,iBAAiB;AAC5D,mCAAmC,iBAAiB;AACpD,2CAA2C,iBAAiB;AAC5D,+CAA+C,iBAAiB;AAChE,gCAAgC,iBAAiB;AACjD,yCAAyC,iBAAiB;AAC1D,kCAAkC,iBAAiB;AACnD,sCAAsC,iBAAiB;AACvD,4BAA4B,iBAAiB;AAC7C,gCAAgC,iBAAiB;AACjD,gCAAgC,iBAAiB;AACjD,uBAAuB,iBAAiB;AACxC,6BAA6B,iBAAiB;AAC9C,2BAA2B,iBAAiB;AAC5C,oCAAoC,iBAAiB;AACrD,sCAAsC,iBAAiB;AACvD,0BAA0B,iBAAiB;AAC3C,2BAA2B,iBAAiB;AAC5C,gCAAgC,iBAAiB;AACjD,0BAA0B,iBAAiB;AAC3C,yBAAyB,iBAAiB;AAC1C,0BAA0B,iBAAiB;AAC3C,+BAA+B,iBAAiB;AAChD,yBAAyB,iBAAiB;AAC1C,kCAAkC,iBAAiB;AACnD,iCAAiC,iBAAiB;AAClD,qCAAqC,iBAAiB;AACtD,uBAAuB,iBAAiB;AACxC,+BAA+B,iBAAiB;AAChD,8BAA8B,iBAAiB;AAC/C,8BAA8B,iBAAiB;AAC/C,yBAAyB,iBAAiB;AAC1C,kCAAkC,iBAAiB;AACnD,6BAA6B,iBAAiB;AAC9C,wBAAwB,iBAAiB;AACzC,wBAAwB,iBAAiB;AACzC,yBAAyB,iBAAiB;AAC1C,6BAA6B,iBAAiB;AAC9C,yBAAyB,iBAAiB;AAC1C,2BAA2B,iBAAiB;AAC5C,uBAAuB,iBAAiB;AACxC,4BAA4B,iBAAiB;AAC7C,+BAA+B,iBAAiB;AAChD,8BAA8B,iBAAiB;AAC/C,sCAAsC,iBAAiB;AACvD,+BAA+B,iBAAiB;AAChD,uCAAuC,iBAAiB;AACxD,0BAA0B,iBAAiB;AAC3C,yBAAyB,iBAAiB;AAC1C,wBAAwB,iBAAiB;AACzC,iCAAiC,iBAAiB;AAClD,iCAAiC,iBAAiB;AAClD,qCAAqC,iBAAiB;AACtD,uCAAuC,iBAAiB;AACxD,0CAA0C,iBAAiB;AAC3D,4BAA4B,iBAAiB;AAC7C,4BAA4B,iBAAiB;AAC7C,oCAAoC,iBAAiB;AACrD,8BAA8B,iBAAiB;AAC/C,oCAAoC,iBAAiB;AACrD,sCAAsC,iBAAiB;AACvD,oCAAoC,iBAAiB;AACrD,+BAA+B,iBAAiB;AAChD,kCAAkC,iBAAiB;AACnD,iCAAiC,iBAAiB;AAClD,sCAAsC,iBAAiB;AACvD,gCAAgC,iBAAiB;AACjD,kCAAkC,iBAAiB;AACnD,gCAAgC,iBAAiB;AACjD,6BAA6B,iBAAiB;AAC9C,uBAAuB,iBAAiB;AACxC,6BAA6B,iBAAiB;AAC9C,gCAAgC,iBAAiB;AACjD,uBAAuB,iBAAiB;AACxC,qCAAqC,iBAAiB;AACtD,0BAA0B,iBAAiB;AAC3C,yBAAyB,iBAAiB;AAC1C,6BAA6B,iBAAiB;AAC9C,gCAAgC,iBAAiB;AACjD,0BAA0B,iBAAiB;AAC3C,8BAA8B,iBAAiB;AAC/C,iCAAiC,iBAAiB;AAClD,wBAAwB,iBAAiB;AACzC,8BAA8B,iBAAiB;AAC/C,0CAA0C,iBAAiB;AAC3D,yCAAyC,iBAAiB;AAC1D,4BAA4B,iBAAiB;AAC7C,iCAAiC,iBAAiB;AAClD,6BAA6B,iBAAiB;AAC9C,iCAAiC,iBAAiB;AAClD,uCAAuC,iBAAiB;AACxD,8BAA8B,iBAAiB;AAC/C,6BAA6B,iBAAiB;AAC9C,gCAAgC,iBAAiB;AACjD,4BAA4B,iBAAiB;AAC7C,0BAA0B,iBAAiB;AAC3C,8BAA8B,iBAAiB;AAC/C,gCAAgC,iBAAiB;AACjD,6BAA6B,iBAAiB;AAC9C,+BAA+B,iBAAiB;AAChD,kCAAkC,iBAAiB;AACnD,0BAA0B,iBAAiB;AAC3C,yBAAyB,iBAAiB;AAC1C,0CAA0C,iBAAiB;AAC3D,2CAA2C,iBAAiB;AAC5D,oCAAoC,iBAAiB;AACrD,sCAAsC,iBAAiB;AACvD,uCAAuC,iBAAiB;AACxD,qCAAqC,iBAAiB;AACtD,+BAA+B,iBAAiB;AAChD,sCAAsC,iBAAiB;AACvD,uCAAuC,iBAAiB;AACxD,mCAAmC,iBAAiB;AACpD,iCAAiC,iBAAiB;AAClD,kCAAkC,iBAAiB;AACnD,yBAAyB,iBAAiB;AAC1C,yBAAyB,iBAAiB;AAC1C,+BAA+B,iBAAiB;AAChD,8BAA8B,iBAAiB;AAC/C,4CAA4C,iBAAiB;AAC7D,oCAAoC,iBAAiB;AACrD,oCAAoC,iBAAiB;AACrD,qCAAqC,iBAAiB;AACtD,kCAAkC,iBAAiB;AACnD,2CAA2C,iBAAiB;AAC5D,mCAAmC,iBAAiB;AACpD,0CAA0C,iBAAiB;AAC3D,wBAAwB,iBAAiB;AACzC,+BAA+B,iBAAiB;AAChD,sBAAsB,iBAAiB;AACvC,6BAA6B,iBAAiB;AAC9C,+BAA+B,iBAAiB;AAChD,6BAA6B,iBAAiB;AAC9C,iCAAiC,iBAAiB;AAClD,qCAAqC,iBAAiB;AACtD,iDAAiD,iBAAiB;AAClE,+CAA+C,iBAAiB;AAChE,+BAA+B,iBAAiB;AAChD,gCAAgC,iBAAiB;AACjD,uBAAuB,iBAAiB;AACxC,0BAA0B,iBAAiB;AAC3C,yBAAyB,iBAAiB","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n@font-face {\n\tfont-family: \"codicon\";\n\tfont-display: block;\n\tsrc: url(\"./codicon.ttf?2ab61cbaefbdf4c7c5589068100bee0c\") format(\"truetype\");\n}\n\n.codicon[class*='codicon-'] {\n\tfont: normal normal normal 16px/1 codicon;\n\tdisplay: inline-block;\n\ttext-decoration: none;\n\ttext-rendering: auto;\n\ttext-align: center;\n\t-webkit-font-smoothing: antialiased;\n\t-moz-osx-font-smoothing: grayscale;\n\tuser-select: none;\n\t-webkit-user-select: none;\n\t-ms-user-select: none;\n}\n\n/*---------------------\n *  Modifiers\n *-------------------*/\n\n@keyframes codicon-spin {\n\t100% {\n\t\ttransform:rotate(360deg);\n\t}\n}\n\n.codicon-sync.codicon-modifier-spin,\n.codicon-loading.codicon-modifier-spin,\n.codicon-gear.codicon-modifier-spin {\n\t/* Use steps to throttle FPS to reduce CPU usage */\n\tanimation: codicon-spin 1.5s steps(30) infinite;\n}\n\n.codicon-modifier-disabled {\n\topacity: 0.5;\n}\n\n.codicon-modifier-hidden {\n\topacity: 0;\n}\n\n/* custom speed & easing for loading icon */\n.codicon-loading {\n\tanimation-duration: 1s !important;\n\tanimation-timing-function: cubic-bezier(0.53, 0.21, 0.29, 0.67) !important;\n}\n\n/*---------------------\n *  Icons\n *-------------------*/\n\n.codicon-add:before { content: \"\\ea60\" }\n.codicon-plus:before { content: \"\\ea60\" }\n.codicon-gist-new:before { content: \"\\ea60\" }\n.codicon-repo-create:before { content: \"\\ea60\" }\n.codicon-lightbulb:before { content: \"\\ea61\" }\n.codicon-light-bulb:before { content: \"\\ea61\" }\n.codicon-repo:before { content: \"\\ea62\" }\n.codicon-repo-delete:before { content: \"\\ea62\" }\n.codicon-gist-fork:before { content: \"\\ea63\" }\n.codicon-repo-forked:before { content: \"\\ea63\" }\n.codicon-git-pull-request:before { content: \"\\ea64\" }\n.codicon-git-pull-request-abandoned:before { content: \"\\ea64\" }\n.codicon-record-keys:before { content: \"\\ea65\" }\n.codicon-keyboard:before { content: \"\\ea65\" }\n.codicon-tag:before { content: \"\\ea66\" }\n.codicon-tag-add:before { content: \"\\ea66\" }\n.codicon-tag-remove:before { content: \"\\ea66\" }\n.codicon-person:before { content: \"\\ea67\" }\n.codicon-person-follow:before { content: \"\\ea67\" }\n.codicon-person-outline:before { content: \"\\ea67\" }\n.codicon-person-filled:before { content: \"\\ea67\" }\n.codicon-git-branch:before { content: \"\\ea68\" }\n.codicon-git-branch-create:before { content: \"\\ea68\" }\n.codicon-git-branch-delete:before { content: \"\\ea68\" }\n.codicon-source-control:before { content: \"\\ea68\" }\n.codicon-mirror:before { content: \"\\ea69\" }\n.codicon-mirror-public:before { content: \"\\ea69\" }\n.codicon-star:before { content: \"\\ea6a\" }\n.codicon-star-add:before { content: \"\\ea6a\" }\n.codicon-star-delete:before { content: \"\\ea6a\" }\n.codicon-star-empty:before { content: \"\\ea6a\" }\n.codicon-comment:before { content: \"\\ea6b\" }\n.codicon-comment-add:before { content: \"\\ea6b\" }\n.codicon-alert:before { content: \"\\ea6c\" }\n.codicon-warning:before { content: \"\\ea6c\" }\n.codicon-search:before { content: \"\\ea6d\" }\n.codicon-search-save:before { content: \"\\ea6d\" }\n.codicon-log-out:before { content: \"\\ea6e\" }\n.codicon-sign-out:before { content: \"\\ea6e\" }\n.codicon-log-in:before { content: \"\\ea6f\" }\n.codicon-sign-in:before { content: \"\\ea6f\" }\n.codicon-eye:before { content: \"\\ea70\" }\n.codicon-eye-unwatch:before { content: \"\\ea70\" }\n.codicon-eye-watch:before { content: \"\\ea70\" }\n.codicon-circle-filled:before { content: \"\\ea71\" }\n.codicon-primitive-dot:before { content: \"\\ea71\" }\n.codicon-close-dirty:before { content: \"\\ea71\" }\n.codicon-debug-breakpoint:before { content: \"\\ea71\" }\n.codicon-debug-breakpoint-disabled:before { content: \"\\ea71\" }\n.codicon-debug-hint:before { content: \"\\ea71\" }\n.codicon-terminal-decoration-success:before { content: \"\\ea71\" }\n.codicon-primitive-square:before { content: \"\\ea72\" }\n.codicon-edit:before { content: \"\\ea73\" }\n.codicon-pencil:before { content: \"\\ea73\" }\n.codicon-info:before { content: \"\\ea74\" }\n.codicon-issue-opened:before { content: \"\\ea74\" }\n.codicon-gist-private:before { content: \"\\ea75\" }\n.codicon-git-fork-private:before { content: \"\\ea75\" }\n.codicon-lock:before { content: \"\\ea75\" }\n.codicon-mirror-private:before { content: \"\\ea75\" }\n.codicon-close:before { content: \"\\ea76\" }\n.codicon-remove-close:before { content: \"\\ea76\" }\n.codicon-x:before { content: \"\\ea76\" }\n.codicon-repo-sync:before { content: \"\\ea77\" }\n.codicon-sync:before { content: \"\\ea77\" }\n.codicon-clone:before { content: \"\\ea78\" }\n.codicon-desktop-download:before { content: \"\\ea78\" }\n.codicon-beaker:before { content: \"\\ea79\" }\n.codicon-microscope:before { content: \"\\ea79\" }\n.codicon-vm:before { content: \"\\ea7a\" }\n.codicon-device-desktop:before { content: \"\\ea7a\" }\n.codicon-file:before { content: \"\\ea7b\" }\n.codicon-file-text:before { content: \"\\ea7b\" }\n.codicon-more:before { content: \"\\ea7c\" }\n.codicon-ellipsis:before { content: \"\\ea7c\" }\n.codicon-kebab-horizontal:before { content: \"\\ea7c\" }\n.codicon-mail-reply:before { content: \"\\ea7d\" }\n.codicon-reply:before { content: \"\\ea7d\" }\n.codicon-organization:before { content: \"\\ea7e\" }\n.codicon-organization-filled:before { content: \"\\ea7e\" }\n.codicon-organization-outline:before { content: \"\\ea7e\" }\n.codicon-new-file:before { content: \"\\ea7f\" }\n.codicon-file-add:before { content: \"\\ea7f\" }\n.codicon-new-folder:before { content: \"\\ea80\" }\n.codicon-file-directory-create:before { content: \"\\ea80\" }\n.codicon-trash:before { content: \"\\ea81\" }\n.codicon-trashcan:before { content: \"\\ea81\" }\n.codicon-history:before { content: \"\\ea82\" }\n.codicon-clock:before { content: \"\\ea82\" }\n.codicon-folder:before { content: \"\\ea83\" }\n.codicon-file-directory:before { content: \"\\ea83\" }\n.codicon-symbol-folder:before { content: \"\\ea83\" }\n.codicon-logo-github:before { content: \"\\ea84\" }\n.codicon-mark-github:before { content: \"\\ea84\" }\n.codicon-github:before { content: \"\\ea84\" }\n.codicon-terminal:before { content: \"\\ea85\" }\n.codicon-console:before { content: \"\\ea85\" }\n.codicon-repl:before { content: \"\\ea85\" }\n.codicon-zap:before { content: \"\\ea86\" }\n.codicon-symbol-event:before { content: \"\\ea86\" }\n.codicon-error:before { content: \"\\ea87\" }\n.codicon-stop:before { content: \"\\ea87\" }\n.codicon-variable:before { content: \"\\ea88\" }\n.codicon-symbol-variable:before { content: \"\\ea88\" }\n.codicon-array:before { content: \"\\ea8a\" }\n.codicon-symbol-array:before { content: \"\\ea8a\" }\n.codicon-symbol-module:before { content: \"\\ea8b\" }\n.codicon-symbol-package:before { content: \"\\ea8b\" }\n.codicon-symbol-namespace:before { content: \"\\ea8b\" }\n.codicon-symbol-object:before { content: \"\\ea8b\" }\n.codicon-symbol-method:before { content: \"\\ea8c\" }\n.codicon-symbol-function:before { content: \"\\ea8c\" }\n.codicon-symbol-constructor:before { content: \"\\ea8c\" }\n.codicon-symbol-boolean:before { content: \"\\ea8f\" }\n.codicon-symbol-null:before { content: \"\\ea8f\" }\n.codicon-symbol-numeric:before { content: \"\\ea90\" }\n.codicon-symbol-number:before { content: \"\\ea90\" }\n.codicon-symbol-structure:before { content: \"\\ea91\" }\n.codicon-symbol-struct:before { content: \"\\ea91\" }\n.codicon-symbol-parameter:before { content: \"\\ea92\" }\n.codicon-symbol-type-parameter:before { content: \"\\ea92\" }\n.codicon-symbol-key:before { content: \"\\ea93\" }\n.codicon-symbol-text:before { content: \"\\ea93\" }\n.codicon-symbol-reference:before { content: \"\\ea94\" }\n.codicon-go-to-file:before { content: \"\\ea94\" }\n.codicon-symbol-enum:before { content: \"\\ea95\" }\n.codicon-symbol-value:before { content: \"\\ea95\" }\n.codicon-symbol-ruler:before { content: \"\\ea96\" }\n.codicon-symbol-unit:before { content: \"\\ea96\" }\n.codicon-activate-breakpoints:before { content: \"\\ea97\" }\n.codicon-archive:before { content: \"\\ea98\" }\n.codicon-arrow-both:before { content: \"\\ea99\" }\n.codicon-arrow-down:before { content: \"\\ea9a\" }\n.codicon-arrow-left:before { content: \"\\ea9b\" }\n.codicon-arrow-right:before { content: \"\\ea9c\" }\n.codicon-arrow-small-down:before { content: \"\\ea9d\" }\n.codicon-arrow-small-left:before { content: \"\\ea9e\" }\n.codicon-arrow-small-right:before { content: \"\\ea9f\" }\n.codicon-arrow-small-up:before { content: \"\\eaa0\" }\n.codicon-arrow-up:before { content: \"\\eaa1\" }\n.codicon-bell:before { content: \"\\eaa2\" }\n.codicon-bold:before { content: \"\\eaa3\" }\n.codicon-book:before { content: \"\\eaa4\" }\n.codicon-bookmark:before { content: \"\\eaa5\" }\n.codicon-debug-breakpoint-conditional-unverified:before { content: \"\\eaa6\" }\n.codicon-debug-breakpoint-conditional:before { content: \"\\eaa7\" }\n.codicon-debug-breakpoint-conditional-disabled:before { content: \"\\eaa7\" }\n.codicon-debug-breakpoint-data-unverified:before { content: \"\\eaa8\" }\n.codicon-debug-breakpoint-data:before { content: \"\\eaa9\" }\n.codicon-debug-breakpoint-data-disabled:before { content: \"\\eaa9\" }\n.codicon-debug-breakpoint-log-unverified:before { content: \"\\eaaa\" }\n.codicon-debug-breakpoint-log:before { content: \"\\eaab\" }\n.codicon-debug-breakpoint-log-disabled:before { content: \"\\eaab\" }\n.codicon-briefcase:before { content: \"\\eaac\" }\n.codicon-broadcast:before { content: \"\\eaad\" }\n.codicon-browser:before { content: \"\\eaae\" }\n.codicon-bug:before { content: \"\\eaaf\" }\n.codicon-calendar:before { content: \"\\eab0\" }\n.codicon-case-sensitive:before { content: \"\\eab1\" }\n.codicon-check:before { content: \"\\eab2\" }\n.codicon-checklist:before { content: \"\\eab3\" }\n.codicon-chevron-down:before { content: \"\\eab4\" }\n.codicon-chevron-left:before { content: \"\\eab5\" }\n.codicon-chevron-right:before { content: \"\\eab6\" }\n.codicon-chevron-up:before { content: \"\\eab7\" }\n.codicon-chrome-close:before { content: \"\\eab8\" }\n.codicon-chrome-maximize:before { content: \"\\eab9\" }\n.codicon-chrome-minimize:before { content: \"\\eaba\" }\n.codicon-chrome-restore:before { content: \"\\eabb\" }\n.codicon-circle-outline:before { content: \"\\eabc\" }\n.codicon-circle:before { content: \"\\eabc\" }\n.codicon-debug-breakpoint-unverified:before { content: \"\\eabc\" }\n.codicon-terminal-decoration-incomplete:before { content: \"\\eabc\" }\n.codicon-circle-slash:before { content: \"\\eabd\" }\n.codicon-circuit-board:before { content: \"\\eabe\" }\n.codicon-clear-all:before { content: \"\\eabf\" }\n.codicon-clippy:before { content: \"\\eac0\" }\n.codicon-close-all:before { content: \"\\eac1\" }\n.codicon-cloud-download:before { content: \"\\eac2\" }\n.codicon-cloud-upload:before { content: \"\\eac3\" }\n.codicon-code:before { content: \"\\eac4\" }\n.codicon-collapse-all:before { content: \"\\eac5\" }\n.codicon-color-mode:before { content: \"\\eac6\" }\n.codicon-comment-discussion:before { content: \"\\eac7\" }\n.codicon-credit-card:before { content: \"\\eac9\" }\n.codicon-dash:before { content: \"\\eacc\" }\n.codicon-dashboard:before { content: \"\\eacd\" }\n.codicon-database:before { content: \"\\eace\" }\n.codicon-debug-continue:before { content: \"\\eacf\" }\n.codicon-debug-disconnect:before { content: \"\\ead0\" }\n.codicon-debug-pause:before { content: \"\\ead1\" }\n.codicon-debug-restart:before { content: \"\\ead2\" }\n.codicon-debug-start:before { content: \"\\ead3\" }\n.codicon-debug-step-into:before { content: \"\\ead4\" }\n.codicon-debug-step-out:before { content: \"\\ead5\" }\n.codicon-debug-step-over:before { content: \"\\ead6\" }\n.codicon-debug-stop:before { content: \"\\ead7\" }\n.codicon-debug:before { content: \"\\ead8\" }\n.codicon-device-camera-video:before { content: \"\\ead9\" }\n.codicon-device-camera:before { content: \"\\eada\" }\n.codicon-device-mobile:before { content: \"\\eadb\" }\n.codicon-diff-added:before { content: \"\\eadc\" }\n.codicon-diff-ignored:before { content: \"\\eadd\" }\n.codicon-diff-modified:before { content: \"\\eade\" }\n.codicon-diff-removed:before { content: \"\\eadf\" }\n.codicon-diff-renamed:before { content: \"\\eae0\" }\n.codicon-diff:before { content: \"\\eae1\" }\n.codicon-discard:before { content: \"\\eae2\" }\n.codicon-editor-layout:before { content: \"\\eae3\" }\n.codicon-empty-window:before { content: \"\\eae4\" }\n.codicon-exclude:before { content: \"\\eae5\" }\n.codicon-extensions:before { content: \"\\eae6\" }\n.codicon-eye-closed:before { content: \"\\eae7\" }\n.codicon-file-binary:before { content: \"\\eae8\" }\n.codicon-file-code:before { content: \"\\eae9\" }\n.codicon-file-media:before { content: \"\\eaea\" }\n.codicon-file-pdf:before { content: \"\\eaeb\" }\n.codicon-file-submodule:before { content: \"\\eaec\" }\n.codicon-file-symlink-directory:before { content: \"\\eaed\" }\n.codicon-file-symlink-file:before { content: \"\\eaee\" }\n.codicon-file-zip:before { content: \"\\eaef\" }\n.codicon-files:before { content: \"\\eaf0\" }\n.codicon-filter:before { content: \"\\eaf1\" }\n.codicon-flame:before { content: \"\\eaf2\" }\n.codicon-fold-down:before { content: \"\\eaf3\" }\n.codicon-fold-up:before { content: \"\\eaf4\" }\n.codicon-fold:before { content: \"\\eaf5\" }\n.codicon-folder-active:before { content: \"\\eaf6\" }\n.codicon-folder-opened:before { content: \"\\eaf7\" }\n.codicon-gear:before { content: \"\\eaf8\" }\n.codicon-gift:before { content: \"\\eaf9\" }\n.codicon-gist-secret:before { content: \"\\eafa\" }\n.codicon-gist:before { content: \"\\eafb\" }\n.codicon-git-commit:before { content: \"\\eafc\" }\n.codicon-git-compare:before { content: \"\\eafd\" }\n.codicon-compare-changes:before { content: \"\\eafd\" }\n.codicon-git-merge:before { content: \"\\eafe\" }\n.codicon-github-action:before { content: \"\\eaff\" }\n.codicon-github-alt:before { content: \"\\eb00\" }\n.codicon-globe:before { content: \"\\eb01\" }\n.codicon-grabber:before { content: \"\\eb02\" }\n.codicon-graph:before { content: \"\\eb03\" }\n.codicon-gripper:before { content: \"\\eb04\" }\n.codicon-heart:before { content: \"\\eb05\" }\n.codicon-home:before { content: \"\\eb06\" }\n.codicon-horizontal-rule:before { content: \"\\eb07\" }\n.codicon-hubot:before { content: \"\\eb08\" }\n.codicon-inbox:before { content: \"\\eb09\" }\n.codicon-issue-reopened:before { content: \"\\eb0b\" }\n.codicon-issues:before { content: \"\\eb0c\" }\n.codicon-italic:before { content: \"\\eb0d\" }\n.codicon-jersey:before { content: \"\\eb0e\" }\n.codicon-json:before { content: \"\\eb0f\" }\n.codicon-kebab-vertical:before { content: \"\\eb10\" }\n.codicon-key:before { content: \"\\eb11\" }\n.codicon-law:before { content: \"\\eb12\" }\n.codicon-lightbulb-autofix:before { content: \"\\eb13\" }\n.codicon-link-external:before { content: \"\\eb14\" }\n.codicon-link:before { content: \"\\eb15\" }\n.codicon-list-ordered:before { content: \"\\eb16\" }\n.codicon-list-unordered:before { content: \"\\eb17\" }\n.codicon-live-share:before { content: \"\\eb18\" }\n.codicon-loading:before { content: \"\\eb19\" }\n.codicon-location:before { content: \"\\eb1a\" }\n.codicon-mail-read:before { content: \"\\eb1b\" }\n.codicon-mail:before { content: \"\\eb1c\" }\n.codicon-markdown:before { content: \"\\eb1d\" }\n.codicon-megaphone:before { content: \"\\eb1e\" }\n.codicon-mention:before { content: \"\\eb1f\" }\n.codicon-milestone:before { content: \"\\eb20\" }\n.codicon-mortar-board:before { content: \"\\eb21\" }\n.codicon-move:before { content: \"\\eb22\" }\n.codicon-multiple-windows:before { content: \"\\eb23\" }\n.codicon-mute:before { content: \"\\eb24\" }\n.codicon-no-newline:before { content: \"\\eb25\" }\n.codicon-note:before { content: \"\\eb26\" }\n.codicon-octoface:before { content: \"\\eb27\" }\n.codicon-open-preview:before { content: \"\\eb28\" }\n.codicon-package:before { content: \"\\eb29\" }\n.codicon-paintcan:before { content: \"\\eb2a\" }\n.codicon-pin:before { content: \"\\eb2b\" }\n.codicon-play:before { content: \"\\eb2c\" }\n.codicon-run:before { content: \"\\eb2c\" }\n.codicon-plug:before { content: \"\\eb2d\" }\n.codicon-preserve-case:before { content: \"\\eb2e\" }\n.codicon-preview:before { content: \"\\eb2f\" }\n.codicon-project:before { content: \"\\eb30\" }\n.codicon-pulse:before { content: \"\\eb31\" }\n.codicon-question:before { content: \"\\eb32\" }\n.codicon-quote:before { content: \"\\eb33\" }\n.codicon-radio-tower:before { content: \"\\eb34\" }\n.codicon-reactions:before { content: \"\\eb35\" }\n.codicon-references:before { content: \"\\eb36\" }\n.codicon-refresh:before { content: \"\\eb37\" }\n.codicon-regex:before { content: \"\\eb38\" }\n.codicon-remote-explorer:before { content: \"\\eb39\" }\n.codicon-remote:before { content: \"\\eb3a\" }\n.codicon-remove:before { content: \"\\eb3b\" }\n.codicon-replace-all:before { content: \"\\eb3c\" }\n.codicon-replace:before { content: \"\\eb3d\" }\n.codicon-repo-clone:before { content: \"\\eb3e\" }\n.codicon-repo-force-push:before { content: \"\\eb3f\" }\n.codicon-repo-pull:before { content: \"\\eb40\" }\n.codicon-repo-push:before { content: \"\\eb41\" }\n.codicon-report:before { content: \"\\eb42\" }\n.codicon-request-changes:before { content: \"\\eb43\" }\n.codicon-rocket:before { content: \"\\eb44\" }\n.codicon-root-folder-opened:before { content: \"\\eb45\" }\n.codicon-root-folder:before { content: \"\\eb46\" }\n.codicon-rss:before { content: \"\\eb47\" }\n.codicon-ruby:before { content: \"\\eb48\" }\n.codicon-save-all:before { content: \"\\eb49\" }\n.codicon-save-as:before { content: \"\\eb4a\" }\n.codicon-save:before { content: \"\\eb4b\" }\n.codicon-screen-full:before { content: \"\\eb4c\" }\n.codicon-screen-normal:before { content: \"\\eb4d\" }\n.codicon-search-stop:before { content: \"\\eb4e\" }\n.codicon-server:before { content: \"\\eb50\" }\n.codicon-settings-gear:before { content: \"\\eb51\" }\n.codicon-settings:before { content: \"\\eb52\" }\n.codicon-shield:before { content: \"\\eb53\" }\n.codicon-smiley:before { content: \"\\eb54\" }\n.codicon-sort-precedence:before { content: \"\\eb55\" }\n.codicon-split-horizontal:before { content: \"\\eb56\" }\n.codicon-split-vertical:before { content: \"\\eb57\" }\n.codicon-squirrel:before { content: \"\\eb58\" }\n.codicon-star-full:before { content: \"\\eb59\" }\n.codicon-star-half:before { content: \"\\eb5a\" }\n.codicon-symbol-class:before { content: \"\\eb5b\" }\n.codicon-symbol-color:before { content: \"\\eb5c\" }\n.codicon-symbol-constant:before { content: \"\\eb5d\" }\n.codicon-symbol-enum-member:before { content: \"\\eb5e\" }\n.codicon-symbol-field:before { content: \"\\eb5f\" }\n.codicon-symbol-file:before { content: \"\\eb60\" }\n.codicon-symbol-interface:before { content: \"\\eb61\" }\n.codicon-symbol-keyword:before { content: \"\\eb62\" }\n.codicon-symbol-misc:before { content: \"\\eb63\" }\n.codicon-symbol-operator:before { content: \"\\eb64\" }\n.codicon-symbol-property:before { content: \"\\eb65\" }\n.codicon-wrench:before { content: \"\\eb65\" }\n.codicon-wrench-subaction:before { content: \"\\eb65\" }\n.codicon-symbol-snippet:before { content: \"\\eb66\" }\n.codicon-tasklist:before { content: \"\\eb67\" }\n.codicon-telescope:before { content: \"\\eb68\" }\n.codicon-text-size:before { content: \"\\eb69\" }\n.codicon-three-bars:before { content: \"\\eb6a\" }\n.codicon-thumbsdown:before { content: \"\\eb6b\" }\n.codicon-thumbsup:before { content: \"\\eb6c\" }\n.codicon-tools:before { content: \"\\eb6d\" }\n.codicon-triangle-down:before { content: \"\\eb6e\" }\n.codicon-triangle-left:before { content: \"\\eb6f\" }\n.codicon-triangle-right:before { content: \"\\eb70\" }\n.codicon-triangle-up:before { content: \"\\eb71\" }\n.codicon-twitter:before { content: \"\\eb72\" }\n.codicon-unfold:before { content: \"\\eb73\" }\n.codicon-unlock:before { content: \"\\eb74\" }\n.codicon-unmute:before { content: \"\\eb75\" }\n.codicon-unverified:before { content: \"\\eb76\" }\n.codicon-verified:before { content: \"\\eb77\" }\n.codicon-versions:before { content: \"\\eb78\" }\n.codicon-vm-active:before { content: \"\\eb79\" }\n.codicon-vm-outline:before { content: \"\\eb7a\" }\n.codicon-vm-running:before { content: \"\\eb7b\" }\n.codicon-watch:before { content: \"\\eb7c\" }\n.codicon-whitespace:before { content: \"\\eb7d\" }\n.codicon-whole-word:before { content: \"\\eb7e\" }\n.codicon-window:before { content: \"\\eb7f\" }\n.codicon-word-wrap:before { content: \"\\eb80\" }\n.codicon-zoom-in:before { content: \"\\eb81\" }\n.codicon-zoom-out:before { content: \"\\eb82\" }\n.codicon-list-filter:before { content: \"\\eb83\" }\n.codicon-list-flat:before { content: \"\\eb84\" }\n.codicon-list-selection:before { content: \"\\eb85\" }\n.codicon-selection:before { content: \"\\eb85\" }\n.codicon-list-tree:before { content: \"\\eb86\" }\n.codicon-debug-breakpoint-function-unverified:before { content: \"\\eb87\" }\n.codicon-debug-breakpoint-function:before { content: \"\\eb88\" }\n.codicon-debug-breakpoint-function-disabled:before { content: \"\\eb88\" }\n.codicon-debug-stackframe-active:before { content: \"\\eb89\" }\n.codicon-circle-small-filled:before { content: \"\\eb8a\" }\n.codicon-debug-stackframe-dot:before { content: \"\\eb8a\" }\n.codicon-terminal-decoration-mark:before { content: \"\\eb8a\" }\n.codicon-debug-stackframe:before { content: \"\\eb8b\" }\n.codicon-debug-stackframe-focused:before { content: \"\\eb8b\" }\n.codicon-debug-breakpoint-unsupported:before { content: \"\\eb8c\" }\n.codicon-symbol-string:before { content: \"\\eb8d\" }\n.codicon-debug-reverse-continue:before { content: \"\\eb8e\" }\n.codicon-debug-step-back:before { content: \"\\eb8f\" }\n.codicon-debug-restart-frame:before { content: \"\\eb90\" }\n.codicon-debug-alt:before { content: \"\\eb91\" }\n.codicon-call-incoming:before { content: \"\\eb92\" }\n.codicon-call-outgoing:before { content: \"\\eb93\" }\n.codicon-menu:before { content: \"\\eb94\" }\n.codicon-expand-all:before { content: \"\\eb95\" }\n.codicon-feedback:before { content: \"\\eb96\" }\n.codicon-group-by-ref-type:before { content: \"\\eb97\" }\n.codicon-ungroup-by-ref-type:before { content: \"\\eb98\" }\n.codicon-account:before { content: \"\\eb99\" }\n.codicon-bell-dot:before { content: \"\\eb9a\" }\n.codicon-debug-console:before { content: \"\\eb9b\" }\n.codicon-library:before { content: \"\\eb9c\" }\n.codicon-output:before { content: \"\\eb9d\" }\n.codicon-run-all:before { content: \"\\eb9e\" }\n.codicon-sync-ignored:before { content: \"\\eb9f\" }\n.codicon-pinned:before { content: \"\\eba0\" }\n.codicon-github-inverted:before { content: \"\\eba1\" }\n.codicon-server-process:before { content: \"\\eba2\" }\n.codicon-server-environment:before { content: \"\\eba3\" }\n.codicon-pass:before { content: \"\\eba4\" }\n.codicon-issue-closed:before { content: \"\\eba4\" }\n.codicon-stop-circle:before { content: \"\\eba5\" }\n.codicon-play-circle:before { content: \"\\eba6\" }\n.codicon-record:before { content: \"\\eba7\" }\n.codicon-debug-alt-small:before { content: \"\\eba8\" }\n.codicon-vm-connect:before { content: \"\\eba9\" }\n.codicon-cloud:before { content: \"\\ebaa\" }\n.codicon-merge:before { content: \"\\ebab\" }\n.codicon-export:before { content: \"\\ebac\" }\n.codicon-graph-left:before { content: \"\\ebad\" }\n.codicon-magnet:before { content: \"\\ebae\" }\n.codicon-notebook:before { content: \"\\ebaf\" }\n.codicon-redo:before { content: \"\\ebb0\" }\n.codicon-check-all:before { content: \"\\ebb1\" }\n.codicon-pinned-dirty:before { content: \"\\ebb2\" }\n.codicon-pass-filled:before { content: \"\\ebb3\" }\n.codicon-circle-large-filled:before { content: \"\\ebb4\" }\n.codicon-circle-large:before { content: \"\\ebb5\" }\n.codicon-circle-large-outline:before { content: \"\\ebb5\" }\n.codicon-combine:before { content: \"\\ebb6\" }\n.codicon-gather:before { content: \"\\ebb6\" }\n.codicon-table:before { content: \"\\ebb7\" }\n.codicon-variable-group:before { content: \"\\ebb8\" }\n.codicon-type-hierarchy:before { content: \"\\ebb9\" }\n.codicon-type-hierarchy-sub:before { content: \"\\ebba\" }\n.codicon-type-hierarchy-super:before { content: \"\\ebbb\" }\n.codicon-git-pull-request-create:before { content: \"\\ebbc\" }\n.codicon-run-above:before { content: \"\\ebbd\" }\n.codicon-run-below:before { content: \"\\ebbe\" }\n.codicon-notebook-template:before { content: \"\\ebbf\" }\n.codicon-debug-rerun:before { content: \"\\ebc0\" }\n.codicon-workspace-trusted:before { content: \"\\ebc1\" }\n.codicon-workspace-untrusted:before { content: \"\\ebc2\" }\n.codicon-workspace-unknown:before { content: \"\\ebc3\" }\n.codicon-terminal-cmd:before { content: \"\\ebc4\" }\n.codicon-terminal-debian:before { content: \"\\ebc5\" }\n.codicon-terminal-linux:before { content: \"\\ebc6\" }\n.codicon-terminal-powershell:before { content: \"\\ebc7\" }\n.codicon-terminal-tmux:before { content: \"\\ebc8\" }\n.codicon-terminal-ubuntu:before { content: \"\\ebc9\" }\n.codicon-terminal-bash:before { content: \"\\ebca\" }\n.codicon-arrow-swap:before { content: \"\\ebcb\" }\n.codicon-copy:before { content: \"\\ebcc\" }\n.codicon-person-add:before { content: \"\\ebcd\" }\n.codicon-filter-filled:before { content: \"\\ebce\" }\n.codicon-wand:before { content: \"\\ebcf\" }\n.codicon-debug-line-by-line:before { content: \"\\ebd0\" }\n.codicon-inspect:before { content: \"\\ebd1\" }\n.codicon-layers:before { content: \"\\ebd2\" }\n.codicon-layers-dot:before { content: \"\\ebd3\" }\n.codicon-layers-active:before { content: \"\\ebd4\" }\n.codicon-compass:before { content: \"\\ebd5\" }\n.codicon-compass-dot:before { content: \"\\ebd6\" }\n.codicon-compass-active:before { content: \"\\ebd7\" }\n.codicon-azure:before { content: \"\\ebd8\" }\n.codicon-issue-draft:before { content: \"\\ebd9\" }\n.codicon-git-pull-request-closed:before { content: \"\\ebda\" }\n.codicon-git-pull-request-draft:before { content: \"\\ebdb\" }\n.codicon-debug-all:before { content: \"\\ebdc\" }\n.codicon-debug-coverage:before { content: \"\\ebdd\" }\n.codicon-run-errors:before { content: \"\\ebde\" }\n.codicon-folder-library:before { content: \"\\ebdf\" }\n.codicon-debug-continue-small:before { content: \"\\ebe0\" }\n.codicon-beaker-stop:before { content: \"\\ebe1\" }\n.codicon-graph-line:before { content: \"\\ebe2\" }\n.codicon-graph-scatter:before { content: \"\\ebe3\" }\n.codicon-pie-chart:before { content: \"\\ebe4\" }\n.codicon-bracket:before { content: \"\\eb0f\" }\n.codicon-bracket-dot:before { content: \"\\ebe5\" }\n.codicon-bracket-error:before { content: \"\\ebe6\" }\n.codicon-lock-small:before { content: \"\\ebe7\" }\n.codicon-azure-devops:before { content: \"\\ebe8\" }\n.codicon-verified-filled:before { content: \"\\ebe9\" }\n.codicon-newline:before { content: \"\\ebea\" }\n.codicon-layout:before { content: \"\\ebeb\" }\n.codicon-layout-activitybar-left:before { content: \"\\ebec\" }\n.codicon-layout-activitybar-right:before { content: \"\\ebed\" }\n.codicon-layout-panel-left:before { content: \"\\ebee\" }\n.codicon-layout-panel-center:before { content: \"\\ebef\" }\n.codicon-layout-panel-justify:before { content: \"\\ebf0\" }\n.codicon-layout-panel-right:before { content: \"\\ebf1\" }\n.codicon-layout-panel:before { content: \"\\ebf2\" }\n.codicon-layout-sidebar-left:before { content: \"\\ebf3\" }\n.codicon-layout-sidebar-right:before { content: \"\\ebf4\" }\n.codicon-layout-statusbar:before { content: \"\\ebf5\" }\n.codicon-layout-menubar:before { content: \"\\ebf6\" }\n.codicon-layout-centered:before { content: \"\\ebf7\" }\n.codicon-target:before { content: \"\\ebf8\" }\n.codicon-indent:before { content: \"\\ebf9\" }\n.codicon-record-small:before { content: \"\\ebfa\" }\n.codicon-error-small:before { content: \"\\ebfb\" }\n.codicon-terminal-decoration-error:before { content: \"\\ebfb\" }\n.codicon-arrow-circle-down:before { content: \"\\ebfc\" }\n.codicon-arrow-circle-left:before { content: \"\\ebfd\" }\n.codicon-arrow-circle-right:before { content: \"\\ebfe\" }\n.codicon-arrow-circle-up:before { content: \"\\ebff\" }\n.codicon-layout-sidebar-right-off:before { content: \"\\ec00\" }\n.codicon-layout-panel-off:before { content: \"\\ec01\" }\n.codicon-layout-sidebar-left-off:before { content: \"\\ec02\" }\n.codicon-blank:before { content: \"\\ec03\" }\n.codicon-heart-filled:before { content: \"\\ec04\" }\n.codicon-map:before { content: \"\\ec05\" }\n.codicon-map-filled:before { content: \"\\ec06\" }\n.codicon-circle-small:before { content: \"\\ec07\" }\n.codicon-bell-slash:before { content: \"\\ec08\" }\n.codicon-bell-slash-dot:before { content: \"\\ec09\" }\n.codicon-comment-unresolved:before { content: \"\\ec0a\" }\n.codicon-git-pull-request-go-to-changes:before { content: \"\\ec0b\" }\n.codicon-git-pull-request-new-changes:before { content: \"\\ec0c\" }\n.codicon-search-fuzzy:before { content: \"\\ec0d\" }\n.codicon-comment-draft:before { content: \"\\ec0e\" }\n.codicon-send:before { content: \"\\ec0f\" }\n.codicon-sparkle:before { content: \"\\ec10\" }\n.codicon-insert:before { content: \"\\ec11\" }\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/balloon-css/balloon.min.css":
/*!****************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/balloon-css/balloon.min.css ***!
  \****************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../css-loader/dist/runtime/sourceMaps.js */ "./node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../css-loader/dist/runtime/getUrl.js */ "./node_modules/css-loader/dist/runtime/getUrl.js");
/* harmony import */ var _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__);
// Imports



var ___CSS_LOADER_URL_IMPORT_0___ = new URL(/* asset import */ __webpack_require__(/*! data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2236px%22%20height%3D%2212px%22%3E%3Cpath%20fill%3D%22rgba%2817,17,17,0.9%29%22%20transform%3D%22rotate%280%29%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E */ "data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2236px%22%20height%3D%2212px%22%3E%3Cpath%20fill%3D%22rgba%2817,17,17,0.9%29%22%20transform%3D%22rotate%280%29%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E"), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_1___ = new URL(/* asset import */ __webpack_require__(/*! data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2236px%22%20height%3D%2212px%22%3E%3Cpath%20fill%3D%22rgba%2817,17,17,0.9%29%22%20transform%3D%22rotate%28180 18 6%29%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E */ "data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2236px%22%20height%3D%2212px%22%3E%3Cpath%20fill%3D%22rgba%2817,17,17,0.9%29%22%20transform%3D%22rotate%28180 18 6%29%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E"), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_2___ = new URL(/* asset import */ __webpack_require__(/*! data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2212px%22%20height%3D%2236px%22%3E%3Cpath%20fill%3D%22rgba%2817,17,17,0.9%29%22%20transform%3D%22rotate%28-90 18 18%29%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E */ "data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2212px%22%20height%3D%2236px%22%3E%3Cpath%20fill%3D%22rgba%2817,17,17,0.9%29%22%20transform%3D%22rotate%28-90 18 18%29%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E"), __webpack_require__.b);
var ___CSS_LOADER_URL_IMPORT_3___ = new URL(/* asset import */ __webpack_require__(/*! data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2212px%22%20height%3D%2236px%22%3E%3Cpath%20fill%3D%22rgba%2817,17,17,0.9%29%22%20transform%3D%22rotate%2890 6 6%29%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E */ "data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2212px%22%20height%3D%2236px%22%3E%3Cpath%20fill%3D%22rgba%2817,17,17,0.9%29%22%20transform%3D%22rotate%2890 6 6%29%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E"), __webpack_require__.b);
var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
var ___CSS_LOADER_URL_REPLACEMENT_0___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_0___);
var ___CSS_LOADER_URL_REPLACEMENT_1___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_1___);
var ___CSS_LOADER_URL_REPLACEMENT_2___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_2___);
var ___CSS_LOADER_URL_REPLACEMENT_3___ = _css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_3___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, "button[data-balloon]{overflow:visible}[data-balloon]{position:relative;cursor:pointer}[data-balloon]:after{filter:alpha(opacity=0);-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";-moz-opacity:0;-khtml-opacity:0;opacity:0;pointer-events:none;-webkit-transition:all 0.18s ease-out 0.18s;-moz-transition:all 0.18s ease-out 0.18s;-ms-transition:all 0.18s ease-out 0.18s;-o-transition:all 0.18s ease-out 0.18s;transition:all 0.18s ease-out 0.18s;font-family:sans-serif !important;font-weight:normal !important;font-style:normal !important;text-shadow:none !important;font-size:12px !important;background:rgba(17,17,17,0.9);border-radius:4px;color:#fff;content:attr(data-balloon);padding:.5em 1em;position:absolute;white-space:nowrap;z-index:10}[data-balloon]:before{background:no-repeat url(" + ___CSS_LOADER_URL_REPLACEMENT_0___ + ");background-size:100% auto;width:18px;height:6px;filter:alpha(opacity=0);-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";-moz-opacity:0;-khtml-opacity:0;opacity:0;pointer-events:none;-webkit-transition:all 0.18s ease-out 0.18s;-moz-transition:all 0.18s ease-out 0.18s;-ms-transition:all 0.18s ease-out 0.18s;-o-transition:all 0.18s ease-out 0.18s;transition:all 0.18s ease-out 0.18s;content:'';position:absolute;z-index:10}[data-balloon]:hover:before,[data-balloon]:hover:after,[data-balloon][data-balloon-visible]:before,[data-balloon][data-balloon-visible]:after{filter:alpha(opacity=100);-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=100)\";-moz-opacity:1;-khtml-opacity:1;opacity:1;pointer-events:auto}[data-balloon]:not([data-balloon-pos]):after{bottom:100%;left:50%;margin-bottom:11px;-webkit-transform:translate(-50%, 10px);-moz-transform:translate(-50%, 10px);-ms-transform:translate(-50%, 10px);transform:translate(-50%, 10px);-webkit-transform-origin:top;-moz-transform-origin:top;-ms-transform-origin:top;transform-origin:top}[data-balloon]:not([data-balloon-pos]):before{bottom:100%;left:50%;margin-bottom:5px;-webkit-transform:translate(-50%, 10px);-moz-transform:translate(-50%, 10px);-ms-transform:translate(-50%, 10px);transform:translate(-50%, 10px);-webkit-transform-origin:top;-moz-transform-origin:top;-ms-transform-origin:top;transform-origin:top}[data-balloon]:not([data-balloon-pos]):hover:after,[data-balloon]:not([data-balloon-pos])[data-balloon-visible]:after{-webkit-transform:translate(-50%, 0);-moz-transform:translate(-50%, 0);-ms-transform:translate(-50%, 0);transform:translate(-50%, 0)}[data-balloon]:not([data-balloon-pos]):hover:before,[data-balloon]:not([data-balloon-pos])[data-balloon-visible]:before{-webkit-transform:translate(-50%, 0);-moz-transform:translate(-50%, 0);-ms-transform:translate(-50%, 0);transform:translate(-50%, 0)}[data-balloon].font-awesome:after{font-family:FontAwesome, sans-serif !important}[data-balloon][data-balloon-break]:after{white-space:pre}[data-balloon][data-balloon-blunt]:before,[data-balloon][data-balloon-blunt]:after{-webkit-transition:none;-moz-transition:none;-ms-transition:none;-o-transition:none;transition:none}[data-balloon][data-balloon-pos=\"up\"]:after{bottom:100%;left:50%;margin-bottom:11px;-webkit-transform:translate(-50%, 10px);-moz-transform:translate(-50%, 10px);-ms-transform:translate(-50%, 10px);transform:translate(-50%, 10px);-webkit-transform-origin:top;-moz-transform-origin:top;-ms-transform-origin:top;transform-origin:top}[data-balloon][data-balloon-pos=\"up\"]:before{bottom:100%;left:50%;margin-bottom:5px;-webkit-transform:translate(-50%, 10px);-moz-transform:translate(-50%, 10px);-ms-transform:translate(-50%, 10px);transform:translate(-50%, 10px);-webkit-transform-origin:top;-moz-transform-origin:top;-ms-transform-origin:top;transform-origin:top}[data-balloon][data-balloon-pos=\"up\"]:hover:after,[data-balloon][data-balloon-pos=\"up\"][data-balloon-visible]:after{-webkit-transform:translate(-50%, 0);-moz-transform:translate(-50%, 0);-ms-transform:translate(-50%, 0);transform:translate(-50%, 0)}[data-balloon][data-balloon-pos=\"up\"]:hover:before,[data-balloon][data-balloon-pos=\"up\"][data-balloon-visible]:before{-webkit-transform:translate(-50%, 0);-moz-transform:translate(-50%, 0);-ms-transform:translate(-50%, 0);transform:translate(-50%, 0)}[data-balloon][data-balloon-pos=\"up-left\"]:after{bottom:100%;left:0;margin-bottom:11px;-webkit-transform:translate(0, 10px);-moz-transform:translate(0, 10px);-ms-transform:translate(0, 10px);transform:translate(0, 10px);-webkit-transform-origin:top;-moz-transform-origin:top;-ms-transform-origin:top;transform-origin:top}[data-balloon][data-balloon-pos=\"up-left\"]:before{bottom:100%;left:5px;margin-bottom:5px;-webkit-transform:translate(0, 10px);-moz-transform:translate(0, 10px);-ms-transform:translate(0, 10px);transform:translate(0, 10px);-webkit-transform-origin:top;-moz-transform-origin:top;-ms-transform-origin:top;transform-origin:top}[data-balloon][data-balloon-pos=\"up-left\"]:hover:after,[data-balloon][data-balloon-pos=\"up-left\"][data-balloon-visible]:after{-webkit-transform:translate(0, 0);-moz-transform:translate(0, 0);-ms-transform:translate(0, 0);transform:translate(0, 0)}[data-balloon][data-balloon-pos=\"up-left\"]:hover:before,[data-balloon][data-balloon-pos=\"up-left\"][data-balloon-visible]:before{-webkit-transform:translate(0, 0);-moz-transform:translate(0, 0);-ms-transform:translate(0, 0);transform:translate(0, 0)}[data-balloon][data-balloon-pos=\"up-right\"]:after{bottom:100%;right:0;margin-bottom:11px;-webkit-transform:translate(0, 10px);-moz-transform:translate(0, 10px);-ms-transform:translate(0, 10px);transform:translate(0, 10px);-webkit-transform-origin:top;-moz-transform-origin:top;-ms-transform-origin:top;transform-origin:top}[data-balloon][data-balloon-pos=\"up-right\"]:before{bottom:100%;right:5px;margin-bottom:5px;-webkit-transform:translate(0, 10px);-moz-transform:translate(0, 10px);-ms-transform:translate(0, 10px);transform:translate(0, 10px);-webkit-transform-origin:top;-moz-transform-origin:top;-ms-transform-origin:top;transform-origin:top}[data-balloon][data-balloon-pos=\"up-right\"]:hover:after,[data-balloon][data-balloon-pos=\"up-right\"][data-balloon-visible]:after{-webkit-transform:translate(0, 0);-moz-transform:translate(0, 0);-ms-transform:translate(0, 0);transform:translate(0, 0)}[data-balloon][data-balloon-pos=\"up-right\"]:hover:before,[data-balloon][data-balloon-pos=\"up-right\"][data-balloon-visible]:before{-webkit-transform:translate(0, 0);-moz-transform:translate(0, 0);-ms-transform:translate(0, 0);transform:translate(0, 0)}[data-balloon][data-balloon-pos='down']:after{left:50%;margin-top:11px;top:100%;-webkit-transform:translate(-50%, -10px);-moz-transform:translate(-50%, -10px);-ms-transform:translate(-50%, -10px);transform:translate(-50%, -10px)}[data-balloon][data-balloon-pos='down']:before{background:no-repeat url(" + ___CSS_LOADER_URL_REPLACEMENT_1___ + ");background-size:100% auto;width:18px;height:6px;left:50%;margin-top:5px;top:100%;-webkit-transform:translate(-50%, -10px);-moz-transform:translate(-50%, -10px);-ms-transform:translate(-50%, -10px);transform:translate(-50%, -10px)}[data-balloon][data-balloon-pos='down']:hover:after,[data-balloon][data-balloon-pos='down'][data-balloon-visible]:after{-webkit-transform:translate(-50%, 0);-moz-transform:translate(-50%, 0);-ms-transform:translate(-50%, 0);transform:translate(-50%, 0)}[data-balloon][data-balloon-pos='down']:hover:before,[data-balloon][data-balloon-pos='down'][data-balloon-visible]:before{-webkit-transform:translate(-50%, 0);-moz-transform:translate(-50%, 0);-ms-transform:translate(-50%, 0);transform:translate(-50%, 0)}[data-balloon][data-balloon-pos='down-left']:after{left:0;margin-top:11px;top:100%;-webkit-transform:translate(0, -10px);-moz-transform:translate(0, -10px);-ms-transform:translate(0, -10px);transform:translate(0, -10px)}[data-balloon][data-balloon-pos='down-left']:before{background:no-repeat url(" + ___CSS_LOADER_URL_REPLACEMENT_1___ + ");background-size:100% auto;width:18px;height:6px;left:5px;margin-top:5px;top:100%;-webkit-transform:translate(0, -10px);-moz-transform:translate(0, -10px);-ms-transform:translate(0, -10px);transform:translate(0, -10px)}[data-balloon][data-balloon-pos='down-left']:hover:after,[data-balloon][data-balloon-pos='down-left'][data-balloon-visible]:after{-webkit-transform:translate(0, 0);-moz-transform:translate(0, 0);-ms-transform:translate(0, 0);transform:translate(0, 0)}[data-balloon][data-balloon-pos='down-left']:hover:before,[data-balloon][data-balloon-pos='down-left'][data-balloon-visible]:before{-webkit-transform:translate(0, 0);-moz-transform:translate(0, 0);-ms-transform:translate(0, 0);transform:translate(0, 0)}[data-balloon][data-balloon-pos='down-right']:after{right:0;margin-top:11px;top:100%;-webkit-transform:translate(0, -10px);-moz-transform:translate(0, -10px);-ms-transform:translate(0, -10px);transform:translate(0, -10px)}[data-balloon][data-balloon-pos='down-right']:before{background:no-repeat url(" + ___CSS_LOADER_URL_REPLACEMENT_1___ + ");background-size:100% auto;width:18px;height:6px;right:5px;margin-top:5px;top:100%;-webkit-transform:translate(0, -10px);-moz-transform:translate(0, -10px);-ms-transform:translate(0, -10px);transform:translate(0, -10px)}[data-balloon][data-balloon-pos='down-right']:hover:after,[data-balloon][data-balloon-pos='down-right'][data-balloon-visible]:after{-webkit-transform:translate(0, 0);-moz-transform:translate(0, 0);-ms-transform:translate(0, 0);transform:translate(0, 0)}[data-balloon][data-balloon-pos='down-right']:hover:before,[data-balloon][data-balloon-pos='down-right'][data-balloon-visible]:before{-webkit-transform:translate(0, 0);-moz-transform:translate(0, 0);-ms-transform:translate(0, 0);transform:translate(0, 0)}[data-balloon][data-balloon-pos='left']:after{margin-right:11px;right:100%;top:50%;-webkit-transform:translate(10px, -50%);-moz-transform:translate(10px, -50%);-ms-transform:translate(10px, -50%);transform:translate(10px, -50%)}[data-balloon][data-balloon-pos='left']:before{background:no-repeat url(" + ___CSS_LOADER_URL_REPLACEMENT_2___ + ");background-size:100% auto;width:6px;height:18px;margin-right:5px;right:100%;top:50%;-webkit-transform:translate(10px, -50%);-moz-transform:translate(10px, -50%);-ms-transform:translate(10px, -50%);transform:translate(10px, -50%)}[data-balloon][data-balloon-pos='left']:hover:after,[data-balloon][data-balloon-pos='left'][data-balloon-visible]:after{-webkit-transform:translate(0, -50%);-moz-transform:translate(0, -50%);-ms-transform:translate(0, -50%);transform:translate(0, -50%)}[data-balloon][data-balloon-pos='left']:hover:before,[data-balloon][data-balloon-pos='left'][data-balloon-visible]:before{-webkit-transform:translate(0, -50%);-moz-transform:translate(0, -50%);-ms-transform:translate(0, -50%);transform:translate(0, -50%)}[data-balloon][data-balloon-pos='right']:after{left:100%;margin-left:11px;top:50%;-webkit-transform:translate(-10px, -50%);-moz-transform:translate(-10px, -50%);-ms-transform:translate(-10px, -50%);transform:translate(-10px, -50%)}[data-balloon][data-balloon-pos='right']:before{background:no-repeat url(" + ___CSS_LOADER_URL_REPLACEMENT_3___ + ");background-size:100% auto;width:6px;height:18px;left:100%;margin-left:5px;top:50%;-webkit-transform:translate(-10px, -50%);-moz-transform:translate(-10px, -50%);-ms-transform:translate(-10px, -50%);transform:translate(-10px, -50%)}[data-balloon][data-balloon-pos='right']:hover:after,[data-balloon][data-balloon-pos='right'][data-balloon-visible]:after{-webkit-transform:translate(0, -50%);-moz-transform:translate(0, -50%);-ms-transform:translate(0, -50%);transform:translate(0, -50%)}[data-balloon][data-balloon-pos='right']:hover:before,[data-balloon][data-balloon-pos='right'][data-balloon-visible]:before{-webkit-transform:translate(0, -50%);-moz-transform:translate(0, -50%);-ms-transform:translate(0, -50%);transform:translate(0, -50%)}[data-balloon][data-balloon-length='small']:after{white-space:normal;width:80px}[data-balloon][data-balloon-length='medium']:after{white-space:normal;width:150px}[data-balloon][data-balloon-length='large']:after{white-space:normal;width:260px}[data-balloon][data-balloon-length='xlarge']:after{white-space:normal;width:380px}@media screen and (max-width: 768px){[data-balloon][data-balloon-length='xlarge']:after{white-space:normal;width:90vw}}[data-balloon][data-balloon-length='fit']:after{white-space:normal;width:100%}\n", "",{"version":3,"sources":["webpack://./node_modules/balloon-css/balloon.min.css"],"names":[],"mappings":"AAAA,qBAAqB,gBAAgB,CAAC,eAAe,iBAAiB,CAAC,cAAc,CAAC,qBAAqB,uBAAuB,CAAC,+DAA+D,CAAC,cAAc,CAAC,gBAAgB,CAAC,SAAS,CAAC,mBAAmB,CAAC,2CAA2C,CAAC,wCAAwC,CAAC,uCAAuC,CAAC,sCAAsC,CAAC,mCAAmC,CAAC,iCAAiC,CAAC,6BAA6B,CAAC,4BAA4B,CAAC,2BAA2B,CAAC,yBAAyB,CAAC,6BAA6B,CAAC,iBAAiB,CAAC,UAAU,CAAC,0BAA0B,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,UAAU,CAAC,sBAAsB,4DAA0Z,CAAC,yBAAyB,CAAC,UAAU,CAAC,UAAU,CAAC,uBAAuB,CAAC,+DAA+D,CAAC,cAAc,CAAC,gBAAgB,CAAC,SAAS,CAAC,mBAAmB,CAAC,2CAA2C,CAAC,wCAAwC,CAAC,uCAAuC,CAAC,sCAAsC,CAAC,mCAAmC,CAAC,UAAU,CAAC,iBAAiB,CAAC,UAAU,CAAC,8IAA8I,yBAAyB,CAAC,iEAAiE,CAAC,cAAc,CAAC,gBAAgB,CAAC,SAAS,CAAC,mBAAmB,CAAC,6CAA6C,WAAW,CAAC,QAAQ,CAAC,kBAAkB,CAAC,uCAAuC,CAAC,oCAAoC,CAAC,mCAAmC,CAAC,+BAA+B,CAAC,4BAA4B,CAAC,yBAAyB,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,8CAA8C,WAAW,CAAC,QAAQ,CAAC,iBAAiB,CAAC,uCAAuC,CAAC,oCAAoC,CAAC,mCAAmC,CAAC,+BAA+B,CAAC,4BAA4B,CAAC,yBAAyB,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,sHAAsH,oCAAoC,CAAC,iCAAiC,CAAC,gCAAgC,CAAC,4BAA4B,CAAC,wHAAwH,oCAAoC,CAAC,iCAAiC,CAAC,gCAAgC,CAAC,4BAA4B,CAAC,kCAAkC,8CAA8C,CAAC,yCAAyC,eAAe,CAAC,mFAAmF,uBAAuB,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,kBAAkB,CAAC,eAAe,CAAC,4CAA4C,WAAW,CAAC,QAAQ,CAAC,kBAAkB,CAAC,uCAAuC,CAAC,oCAAoC,CAAC,mCAAmC,CAAC,+BAA+B,CAAC,4BAA4B,CAAC,yBAAyB,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,6CAA6C,WAAW,CAAC,QAAQ,CAAC,iBAAiB,CAAC,uCAAuC,CAAC,oCAAoC,CAAC,mCAAmC,CAAC,+BAA+B,CAAC,4BAA4B,CAAC,yBAAyB,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,oHAAoH,oCAAoC,CAAC,iCAAiC,CAAC,gCAAgC,CAAC,4BAA4B,CAAC,sHAAsH,oCAAoC,CAAC,iCAAiC,CAAC,gCAAgC,CAAC,4BAA4B,CAAC,iDAAiD,WAAW,CAAC,MAAM,CAAC,kBAAkB,CAAC,oCAAoC,CAAC,iCAAiC,CAAC,gCAAgC,CAAC,4BAA4B,CAAC,4BAA4B,CAAC,yBAAyB,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,kDAAkD,WAAW,CAAC,QAAQ,CAAC,iBAAiB,CAAC,oCAAoC,CAAC,iCAAiC,CAAC,gCAAgC,CAAC,4BAA4B,CAAC,4BAA4B,CAAC,yBAAyB,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,8HAA8H,iCAAiC,CAAC,8BAA8B,CAAC,6BAA6B,CAAC,yBAAyB,CAAC,gIAAgI,iCAAiC,CAAC,8BAA8B,CAAC,6BAA6B,CAAC,yBAAyB,CAAC,kDAAkD,WAAW,CAAC,OAAO,CAAC,kBAAkB,CAAC,oCAAoC,CAAC,iCAAiC,CAAC,gCAAgC,CAAC,4BAA4B,CAAC,4BAA4B,CAAC,yBAAyB,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,mDAAmD,WAAW,CAAC,SAAS,CAAC,iBAAiB,CAAC,oCAAoC,CAAC,iCAAiC,CAAC,gCAAgC,CAAC,4BAA4B,CAAC,4BAA4B,CAAC,yBAAyB,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,gIAAgI,iCAAiC,CAAC,8BAA8B,CAAC,6BAA6B,CAAC,yBAAyB,CAAC,kIAAkI,iCAAiC,CAAC,8BAA8B,CAAC,6BAA6B,CAAC,yBAAyB,CAAC,8CAA8C,QAAQ,CAAC,eAAe,CAAC,QAAQ,CAAC,wCAAwC,CAAC,qCAAqC,CAAC,oCAAoC,CAAC,gCAAgC,CAAC,+CAA+C,4DAAia,CAAC,yBAAyB,CAAC,UAAU,CAAC,UAAU,CAAC,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,wCAAwC,CAAC,qCAAqC,CAAC,oCAAoC,CAAC,gCAAgC,CAAC,wHAAwH,oCAAoC,CAAC,iCAAiC,CAAC,gCAAgC,CAAC,4BAA4B,CAAC,0HAA0H,oCAAoC,CAAC,iCAAiC,CAAC,gCAAgC,CAAC,4BAA4B,CAAC,mDAAmD,MAAM,CAAC,eAAe,CAAC,QAAQ,CAAC,qCAAqC,CAAC,kCAAkC,CAAC,iCAAiC,CAAC,6BAA6B,CAAC,oDAAoD,4DAAia,CAAC,yBAAyB,CAAC,UAAU,CAAC,UAAU,CAAC,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,qCAAqC,CAAC,kCAAkC,CAAC,iCAAiC,CAAC,6BAA6B,CAAC,kIAAkI,iCAAiC,CAAC,8BAA8B,CAAC,6BAA6B,CAAC,yBAAyB,CAAC,oIAAoI,iCAAiC,CAAC,8BAA8B,CAAC,6BAA6B,CAAC,yBAAyB,CAAC,oDAAoD,OAAO,CAAC,eAAe,CAAC,QAAQ,CAAC,qCAAqC,CAAC,kCAAkC,CAAC,iCAAiC,CAAC,6BAA6B,CAAC,qDAAqD,4DAAia,CAAC,yBAAyB,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,cAAc,CAAC,QAAQ,CAAC,qCAAqC,CAAC,kCAAkC,CAAC,iCAAiC,CAAC,6BAA6B,CAAC,oIAAoI,iCAAiC,CAAC,8BAA8B,CAAC,6BAA6B,CAAC,yBAAyB,CAAC,sIAAsI,iCAAiC,CAAC,8BAA8B,CAAC,6BAA6B,CAAC,yBAAyB,CAAC,8CAA8C,iBAAiB,CAAC,UAAU,CAAC,OAAO,CAAC,uCAAuC,CAAC,oCAAoC,CAAC,mCAAmC,CAAC,+BAA+B,CAAC,+CAA+C,4DAAka,CAAC,yBAAyB,CAAC,SAAS,CAAC,WAAW,CAAC,gBAAgB,CAAC,UAAU,CAAC,OAAO,CAAC,uCAAuC,CAAC,oCAAoC,CAAC,mCAAmC,CAAC,+BAA+B,CAAC,wHAAwH,oCAAoC,CAAC,iCAAiC,CAAC,gCAAgC,CAAC,4BAA4B,CAAC,0HAA0H,oCAAoC,CAAC,iCAAiC,CAAC,gCAAgC,CAAC,4BAA4B,CAAC,+CAA+C,SAAS,CAAC,gBAAgB,CAAC,OAAO,CAAC,wCAAwC,CAAC,qCAAqC,CAAC,oCAAoC,CAAC,gCAAgC,CAAC,gDAAgD,4DAA+Z,CAAC,yBAAyB,CAAC,SAAS,CAAC,WAAW,CAAC,SAAS,CAAC,eAAe,CAAC,OAAO,CAAC,wCAAwC,CAAC,qCAAqC,CAAC,oCAAoC,CAAC,gCAAgC,CAAC,0HAA0H,oCAAoC,CAAC,iCAAiC,CAAC,gCAAgC,CAAC,4BAA4B,CAAC,4HAA4H,oCAAoC,CAAC,iCAAiC,CAAC,gCAAgC,CAAC,4BAA4B,CAAC,kDAAkD,kBAAkB,CAAC,UAAU,CAAC,mDAAmD,kBAAkB,CAAC,WAAW,CAAC,kDAAkD,kBAAkB,CAAC,WAAW,CAAC,mDAAmD,kBAAkB,CAAC,WAAW,CAAC,qCAAqC,mDAAmD,kBAAkB,CAAC,UAAU,CAAC,CAAC,gDAAgD,kBAAkB,CAAC,UAAU","sourcesContent":["button[data-balloon]{overflow:visible}[data-balloon]{position:relative;cursor:pointer}[data-balloon]:after{filter:alpha(opacity=0);-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";-moz-opacity:0;-khtml-opacity:0;opacity:0;pointer-events:none;-webkit-transition:all 0.18s ease-out 0.18s;-moz-transition:all 0.18s ease-out 0.18s;-ms-transition:all 0.18s ease-out 0.18s;-o-transition:all 0.18s ease-out 0.18s;transition:all 0.18s ease-out 0.18s;font-family:sans-serif !important;font-weight:normal !important;font-style:normal !important;text-shadow:none !important;font-size:12px !important;background:rgba(17,17,17,0.9);border-radius:4px;color:#fff;content:attr(data-balloon);padding:.5em 1em;position:absolute;white-space:nowrap;z-index:10}[data-balloon]:before{background:no-repeat url(\"data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2236px%22%20height%3D%2212px%22%3E%3Cpath%20fill%3D%22rgba(17,17,17,0.9)%22%20transform%3D%22rotate(0)%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E\");background-size:100% auto;width:18px;height:6px;filter:alpha(opacity=0);-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";-moz-opacity:0;-khtml-opacity:0;opacity:0;pointer-events:none;-webkit-transition:all 0.18s ease-out 0.18s;-moz-transition:all 0.18s ease-out 0.18s;-ms-transition:all 0.18s ease-out 0.18s;-o-transition:all 0.18s ease-out 0.18s;transition:all 0.18s ease-out 0.18s;content:'';position:absolute;z-index:10}[data-balloon]:hover:before,[data-balloon]:hover:after,[data-balloon][data-balloon-visible]:before,[data-balloon][data-balloon-visible]:after{filter:alpha(opacity=100);-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=100)\";-moz-opacity:1;-khtml-opacity:1;opacity:1;pointer-events:auto}[data-balloon]:not([data-balloon-pos]):after{bottom:100%;left:50%;margin-bottom:11px;-webkit-transform:translate(-50%, 10px);-moz-transform:translate(-50%, 10px);-ms-transform:translate(-50%, 10px);transform:translate(-50%, 10px);-webkit-transform-origin:top;-moz-transform-origin:top;-ms-transform-origin:top;transform-origin:top}[data-balloon]:not([data-balloon-pos]):before{bottom:100%;left:50%;margin-bottom:5px;-webkit-transform:translate(-50%, 10px);-moz-transform:translate(-50%, 10px);-ms-transform:translate(-50%, 10px);transform:translate(-50%, 10px);-webkit-transform-origin:top;-moz-transform-origin:top;-ms-transform-origin:top;transform-origin:top}[data-balloon]:not([data-balloon-pos]):hover:after,[data-balloon]:not([data-balloon-pos])[data-balloon-visible]:after{-webkit-transform:translate(-50%, 0);-moz-transform:translate(-50%, 0);-ms-transform:translate(-50%, 0);transform:translate(-50%, 0)}[data-balloon]:not([data-balloon-pos]):hover:before,[data-balloon]:not([data-balloon-pos])[data-balloon-visible]:before{-webkit-transform:translate(-50%, 0);-moz-transform:translate(-50%, 0);-ms-transform:translate(-50%, 0);transform:translate(-50%, 0)}[data-balloon].font-awesome:after{font-family:FontAwesome, sans-serif !important}[data-balloon][data-balloon-break]:after{white-space:pre}[data-balloon][data-balloon-blunt]:before,[data-balloon][data-balloon-blunt]:after{-webkit-transition:none;-moz-transition:none;-ms-transition:none;-o-transition:none;transition:none}[data-balloon][data-balloon-pos=\"up\"]:after{bottom:100%;left:50%;margin-bottom:11px;-webkit-transform:translate(-50%, 10px);-moz-transform:translate(-50%, 10px);-ms-transform:translate(-50%, 10px);transform:translate(-50%, 10px);-webkit-transform-origin:top;-moz-transform-origin:top;-ms-transform-origin:top;transform-origin:top}[data-balloon][data-balloon-pos=\"up\"]:before{bottom:100%;left:50%;margin-bottom:5px;-webkit-transform:translate(-50%, 10px);-moz-transform:translate(-50%, 10px);-ms-transform:translate(-50%, 10px);transform:translate(-50%, 10px);-webkit-transform-origin:top;-moz-transform-origin:top;-ms-transform-origin:top;transform-origin:top}[data-balloon][data-balloon-pos=\"up\"]:hover:after,[data-balloon][data-balloon-pos=\"up\"][data-balloon-visible]:after{-webkit-transform:translate(-50%, 0);-moz-transform:translate(-50%, 0);-ms-transform:translate(-50%, 0);transform:translate(-50%, 0)}[data-balloon][data-balloon-pos=\"up\"]:hover:before,[data-balloon][data-balloon-pos=\"up\"][data-balloon-visible]:before{-webkit-transform:translate(-50%, 0);-moz-transform:translate(-50%, 0);-ms-transform:translate(-50%, 0);transform:translate(-50%, 0)}[data-balloon][data-balloon-pos=\"up-left\"]:after{bottom:100%;left:0;margin-bottom:11px;-webkit-transform:translate(0, 10px);-moz-transform:translate(0, 10px);-ms-transform:translate(0, 10px);transform:translate(0, 10px);-webkit-transform-origin:top;-moz-transform-origin:top;-ms-transform-origin:top;transform-origin:top}[data-balloon][data-balloon-pos=\"up-left\"]:before{bottom:100%;left:5px;margin-bottom:5px;-webkit-transform:translate(0, 10px);-moz-transform:translate(0, 10px);-ms-transform:translate(0, 10px);transform:translate(0, 10px);-webkit-transform-origin:top;-moz-transform-origin:top;-ms-transform-origin:top;transform-origin:top}[data-balloon][data-balloon-pos=\"up-left\"]:hover:after,[data-balloon][data-balloon-pos=\"up-left\"][data-balloon-visible]:after{-webkit-transform:translate(0, 0);-moz-transform:translate(0, 0);-ms-transform:translate(0, 0);transform:translate(0, 0)}[data-balloon][data-balloon-pos=\"up-left\"]:hover:before,[data-balloon][data-balloon-pos=\"up-left\"][data-balloon-visible]:before{-webkit-transform:translate(0, 0);-moz-transform:translate(0, 0);-ms-transform:translate(0, 0);transform:translate(0, 0)}[data-balloon][data-balloon-pos=\"up-right\"]:after{bottom:100%;right:0;margin-bottom:11px;-webkit-transform:translate(0, 10px);-moz-transform:translate(0, 10px);-ms-transform:translate(0, 10px);transform:translate(0, 10px);-webkit-transform-origin:top;-moz-transform-origin:top;-ms-transform-origin:top;transform-origin:top}[data-balloon][data-balloon-pos=\"up-right\"]:before{bottom:100%;right:5px;margin-bottom:5px;-webkit-transform:translate(0, 10px);-moz-transform:translate(0, 10px);-ms-transform:translate(0, 10px);transform:translate(0, 10px);-webkit-transform-origin:top;-moz-transform-origin:top;-ms-transform-origin:top;transform-origin:top}[data-balloon][data-balloon-pos=\"up-right\"]:hover:after,[data-balloon][data-balloon-pos=\"up-right\"][data-balloon-visible]:after{-webkit-transform:translate(0, 0);-moz-transform:translate(0, 0);-ms-transform:translate(0, 0);transform:translate(0, 0)}[data-balloon][data-balloon-pos=\"up-right\"]:hover:before,[data-balloon][data-balloon-pos=\"up-right\"][data-balloon-visible]:before{-webkit-transform:translate(0, 0);-moz-transform:translate(0, 0);-ms-transform:translate(0, 0);transform:translate(0, 0)}[data-balloon][data-balloon-pos='down']:after{left:50%;margin-top:11px;top:100%;-webkit-transform:translate(-50%, -10px);-moz-transform:translate(-50%, -10px);-ms-transform:translate(-50%, -10px);transform:translate(-50%, -10px)}[data-balloon][data-balloon-pos='down']:before{background:no-repeat url(\"data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2236px%22%20height%3D%2212px%22%3E%3Cpath%20fill%3D%22rgba(17,17,17,0.9)%22%20transform%3D%22rotate(180 18 6)%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E\");background-size:100% auto;width:18px;height:6px;left:50%;margin-top:5px;top:100%;-webkit-transform:translate(-50%, -10px);-moz-transform:translate(-50%, -10px);-ms-transform:translate(-50%, -10px);transform:translate(-50%, -10px)}[data-balloon][data-balloon-pos='down']:hover:after,[data-balloon][data-balloon-pos='down'][data-balloon-visible]:after{-webkit-transform:translate(-50%, 0);-moz-transform:translate(-50%, 0);-ms-transform:translate(-50%, 0);transform:translate(-50%, 0)}[data-balloon][data-balloon-pos='down']:hover:before,[data-balloon][data-balloon-pos='down'][data-balloon-visible]:before{-webkit-transform:translate(-50%, 0);-moz-transform:translate(-50%, 0);-ms-transform:translate(-50%, 0);transform:translate(-50%, 0)}[data-balloon][data-balloon-pos='down-left']:after{left:0;margin-top:11px;top:100%;-webkit-transform:translate(0, -10px);-moz-transform:translate(0, -10px);-ms-transform:translate(0, -10px);transform:translate(0, -10px)}[data-balloon][data-balloon-pos='down-left']:before{background:no-repeat url(\"data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2236px%22%20height%3D%2212px%22%3E%3Cpath%20fill%3D%22rgba(17,17,17,0.9)%22%20transform%3D%22rotate(180 18 6)%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E\");background-size:100% auto;width:18px;height:6px;left:5px;margin-top:5px;top:100%;-webkit-transform:translate(0, -10px);-moz-transform:translate(0, -10px);-ms-transform:translate(0, -10px);transform:translate(0, -10px)}[data-balloon][data-balloon-pos='down-left']:hover:after,[data-balloon][data-balloon-pos='down-left'][data-balloon-visible]:after{-webkit-transform:translate(0, 0);-moz-transform:translate(0, 0);-ms-transform:translate(0, 0);transform:translate(0, 0)}[data-balloon][data-balloon-pos='down-left']:hover:before,[data-balloon][data-balloon-pos='down-left'][data-balloon-visible]:before{-webkit-transform:translate(0, 0);-moz-transform:translate(0, 0);-ms-transform:translate(0, 0);transform:translate(0, 0)}[data-balloon][data-balloon-pos='down-right']:after{right:0;margin-top:11px;top:100%;-webkit-transform:translate(0, -10px);-moz-transform:translate(0, -10px);-ms-transform:translate(0, -10px);transform:translate(0, -10px)}[data-balloon][data-balloon-pos='down-right']:before{background:no-repeat url(\"data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2236px%22%20height%3D%2212px%22%3E%3Cpath%20fill%3D%22rgba(17,17,17,0.9)%22%20transform%3D%22rotate(180 18 6)%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E\");background-size:100% auto;width:18px;height:6px;right:5px;margin-top:5px;top:100%;-webkit-transform:translate(0, -10px);-moz-transform:translate(0, -10px);-ms-transform:translate(0, -10px);transform:translate(0, -10px)}[data-balloon][data-balloon-pos='down-right']:hover:after,[data-balloon][data-balloon-pos='down-right'][data-balloon-visible]:after{-webkit-transform:translate(0, 0);-moz-transform:translate(0, 0);-ms-transform:translate(0, 0);transform:translate(0, 0)}[data-balloon][data-balloon-pos='down-right']:hover:before,[data-balloon][data-balloon-pos='down-right'][data-balloon-visible]:before{-webkit-transform:translate(0, 0);-moz-transform:translate(0, 0);-ms-transform:translate(0, 0);transform:translate(0, 0)}[data-balloon][data-balloon-pos='left']:after{margin-right:11px;right:100%;top:50%;-webkit-transform:translate(10px, -50%);-moz-transform:translate(10px, -50%);-ms-transform:translate(10px, -50%);transform:translate(10px, -50%)}[data-balloon][data-balloon-pos='left']:before{background:no-repeat url(\"data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2212px%22%20height%3D%2236px%22%3E%3Cpath%20fill%3D%22rgba(17,17,17,0.9)%22%20transform%3D%22rotate(-90 18 18)%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E\");background-size:100% auto;width:6px;height:18px;margin-right:5px;right:100%;top:50%;-webkit-transform:translate(10px, -50%);-moz-transform:translate(10px, -50%);-ms-transform:translate(10px, -50%);transform:translate(10px, -50%)}[data-balloon][data-balloon-pos='left']:hover:after,[data-balloon][data-balloon-pos='left'][data-balloon-visible]:after{-webkit-transform:translate(0, -50%);-moz-transform:translate(0, -50%);-ms-transform:translate(0, -50%);transform:translate(0, -50%)}[data-balloon][data-balloon-pos='left']:hover:before,[data-balloon][data-balloon-pos='left'][data-balloon-visible]:before{-webkit-transform:translate(0, -50%);-moz-transform:translate(0, -50%);-ms-transform:translate(0, -50%);transform:translate(0, -50%)}[data-balloon][data-balloon-pos='right']:after{left:100%;margin-left:11px;top:50%;-webkit-transform:translate(-10px, -50%);-moz-transform:translate(-10px, -50%);-ms-transform:translate(-10px, -50%);transform:translate(-10px, -50%)}[data-balloon][data-balloon-pos='right']:before{background:no-repeat url(\"data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2212px%22%20height%3D%2236px%22%3E%3Cpath%20fill%3D%22rgba(17,17,17,0.9)%22%20transform%3D%22rotate(90 6 6)%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E\");background-size:100% auto;width:6px;height:18px;left:100%;margin-left:5px;top:50%;-webkit-transform:translate(-10px, -50%);-moz-transform:translate(-10px, -50%);-ms-transform:translate(-10px, -50%);transform:translate(-10px, -50%)}[data-balloon][data-balloon-pos='right']:hover:after,[data-balloon][data-balloon-pos='right'][data-balloon-visible]:after{-webkit-transform:translate(0, -50%);-moz-transform:translate(0, -50%);-ms-transform:translate(0, -50%);transform:translate(0, -50%)}[data-balloon][data-balloon-pos='right']:hover:before,[data-balloon][data-balloon-pos='right'][data-balloon-visible]:before{-webkit-transform:translate(0, -50%);-moz-transform:translate(0, -50%);-ms-transform:translate(0, -50%);transform:translate(0, -50%)}[data-balloon][data-balloon-length='small']:after{white-space:normal;width:80px}[data-balloon][data-balloon-length='medium']:after{white-space:normal;width:150px}[data-balloon][data-balloon-length='large']:after{white-space:normal;width:260px}[data-balloon][data-balloon-length='xlarge']:after{white-space:normal;width:380px}@media screen and (max-width: 768px){[data-balloon][data-balloon-length='xlarge']:after{white-space:normal;width:90vw}}[data-balloon][data-balloon-length='fit']:after{white-space:normal;width:100%}\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sprotty/css/edit-label.css":
/*!***************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sprotty/css/edit-label.css ***!
  \***************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../css-loader/dist/runtime/sourceMaps.js */ "./node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, "/********************************************************************************\n * Copyright (c) 2019-2020 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n.label-edit input, .label-edit textarea {\n    background: rgba(255, 255, 255, 0.5);\n    border-radius: 5px;\n    border: 0;\n    width: 99%;\n    height: 99%;\n}\n\n.label-edit input:focus, .label-edit textarea:focus {\n    outline: none;\n    outline-offset: 0px;\n}\n\n.label-edit {\n    border-left: 1px dotted gray;\n}\n\n.label-edit.validation-warning {\n    color: orange;\n    border-left: 1px dotted orange;\n}\n\n.label-edit.validation-error {\n    color: red;\n    border-left: 1px dotted red;\n}", "",{"version":3,"sources":["webpack://./node_modules/sprotty/css/edit-label.css"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;iFAciF;;AAEjF;IACI,oCAAoC;IACpC,kBAAkB;IAClB,SAAS;IACT,UAAU;IACV,WAAW;AACf;;AAEA;IACI,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,4BAA4B;AAChC;;AAEA;IACI,aAAa;IACb,8BAA8B;AAClC;;AAEA;IACI,UAAU;IACV,2BAA2B;AAC/B","sourcesContent":["/********************************************************************************\n * Copyright (c) 2019-2020 EclipseSource and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n.label-edit input, .label-edit textarea {\n    background: rgba(255, 255, 255, 0.5);\n    border-radius: 5px;\n    border: 0;\n    width: 99%;\n    height: 99%;\n}\n\n.label-edit input:focus, .label-edit textarea:focus {\n    outline: none;\n    outline-offset: 0px;\n}\n\n.label-edit {\n    border-left: 1px dotted gray;\n}\n\n.label-edit.validation-warning {\n    color: orange;\n    border-left: 1px dotted orange;\n}\n\n.label-edit.validation-error {\n    color: red;\n    border-left: 1px dotted red;\n}"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/@eclipse-glsp-examples/workflow-glsp/lib/di.config.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp-examples/workflow-glsp/lib/di.config.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.initializeWorkflowDiagramContainer = exports.createWorkflowDiagramContainer = exports.workflowDiagramModule = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const client_1 = __webpack_require__(/*! @eclipse-glsp/client */ "./node_modules/@eclipse-glsp/client/lib/index.js");
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
__webpack_require__(/*! balloon-css/balloon.min.css */ "./node_modules/balloon-css/balloon.min.css");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
__webpack_require__(/*! sprotty/css/edit-label.css */ "./node_modules/sprotty/css/edit-label.css");
__webpack_require__(/*! ../css/diagram.css */ "./node_modules/@eclipse-glsp-examples/workflow-glsp/css/diagram.css");
const di_config_1 = __webpack_require__(/*! ./direct-task-editing/di.config */ "./node_modules/@eclipse-glsp-examples/workflow-glsp/lib/direct-task-editing/di.config.js");
const model_1 = __webpack_require__(/*! ./model */ "./node_modules/@eclipse-glsp-examples/workflow-glsp/lib/model.js");
const workflow_views_1 = __webpack_require__(/*! ./workflow-views */ "./node_modules/@eclipse-glsp-examples/workflow-glsp/lib/workflow-views.js");
exports.workflowDiagramModule = new inversify_1.ContainerModule((bind, unbind, isBound, rebind) => {
    const context = { bind, unbind, isBound, rebind };
    (0, protocol_1.bindOrRebind)(context, client_1.TYPES.ILogger).to(client_1.ConsoleLogger).inSingletonScope();
    (0, protocol_1.bindOrRebind)(context, client_1.TYPES.LogLevel).toConstantValue(client_1.LogLevel.warn);
    bind(client_1.TYPES.ISnapper).to(client_1.GridSnapper);
    (0, client_1.bindAsService)(context, client_1.TYPES.ICommandPaletteActionProvider, client_1.RevealNamedElementActionProvider);
    (0, client_1.bindAsService)(context, client_1.TYPES.IContextMenuItemProvider, client_1.DeleteElementContextMenuItemProvider);
    (0, client_1.configureDefaultModelElements)(context);
    (0, client_1.configureModelElement)(context, 'task:automated', model_1.TaskNode, client_1.RoundedCornerNodeView);
    (0, client_1.configureModelElement)(context, 'task:manual', model_1.TaskNode, client_1.RoundedCornerNodeView);
    (0, client_1.configureModelElement)(context, 'label:heading', client_1.SLabel, client_1.SLabelView, { enable: [client_1.editLabelFeature] });
    (0, client_1.configureModelElement)(context, 'comp:comp', client_1.SCompartment, client_1.SCompartmentView);
    (0, client_1.configureModelElement)(context, 'comp:header', client_1.SCompartment, client_1.SCompartmentView);
    (0, client_1.configureModelElement)(context, 'label:icon', client_1.SLabel, client_1.SLabelView);
    (0, client_1.configureModelElement)(context, protocol_1.DefaultTypes.EDGE, client_1.GEdge, workflow_views_1.WorkflowEdgeView);
    (0, client_1.configureModelElement)(context, 'edge:weighted', model_1.WeightedEdge, workflow_views_1.WorkflowEdgeView);
    (0, client_1.configureModelElement)(context, 'icon', model_1.Icon, workflow_views_1.IconView);
    (0, client_1.configureModelElement)(context, 'activityNode:merge', model_1.ActivityNode, client_1.DiamondNodeView);
    (0, client_1.configureModelElement)(context, 'activityNode:decision', model_1.ActivityNode, client_1.DiamondNodeView);
    (0, client_1.configureModelElement)(context, 'activityNode:fork', model_1.ActivityNode, client_1.RectangularNodeView);
    (0, client_1.configureModelElement)(context, 'activityNode:join', model_1.ActivityNode, client_1.RectangularNodeView);
    (0, client_1.configureModelElement)(context, protocol_1.DefaultTypes.GRAPH, client_1.GLSPGraph, client_1.GLSPProjectionView);
    (0, client_1.configureModelElement)(context, 'category', model_1.CategoryNode, client_1.RoundedCornerNodeView);
    (0, client_1.configureModelElement)(context, 'struct', client_1.SCompartment, client_1.StructureCompartmentView);
});
function createWorkflowDiagramContainer(widgetId, ...containerConfiguration) {
    return initializeWorkflowDiagramContainer(new inversify_1.Container(), widgetId, ...containerConfiguration);
}
exports.createWorkflowDiagramContainer = createWorkflowDiagramContainer;
function initializeWorkflowDiagramContainer(container, widgetId, ...containerConfiguration) {
    (0, client_1.initializeDiagramContainer)(container, exports.workflowDiagramModule, di_config_1.directTaskEditor, ...containerConfiguration);
    (0, client_1.overrideViewerOptions)(container, {
        baseDiv: widgetId,
        hiddenDiv: widgetId + '_hidden'
    });
    return container;
}
exports.initializeWorkflowDiagramContainer = initializeWorkflowDiagramContainer;


/***/ }),

/***/ "./node_modules/@eclipse-glsp-examples/workflow-glsp/lib/direct-task-editing/di.config.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp-examples/workflow-glsp/lib/direct-task-editing/di.config.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.directTaskEditor = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const client_1 = __webpack_require__(/*! @eclipse-glsp/client */ "./node_modules/@eclipse-glsp/client/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const direct_task_editor_1 = __webpack_require__(/*! ./direct-task-editor */ "./node_modules/@eclipse-glsp-examples/workflow-glsp/lib/direct-task-editing/direct-task-editor.js");
exports.directTaskEditor = new inversify_1.ContainerModule((bind, _unbind, _isBound) => {
    (0, client_1.bindAsService)(bind, client_1.TYPES.IUIExtension, direct_task_editor_1.TaskEditor);
});


/***/ }),

/***/ "./node_modules/@eclipse-glsp-examples/workflow-glsp/lib/direct-task-editing/direct-task-editor.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp-examples/workflow-glsp/lib/direct-task-editing/direct-task-editor.js ***!
  \*********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var TaskEditor_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TaskEditor = exports.EditTaskOperation = void 0;
/********************************************************************************
 * Copyright (c) 2020-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const client_1 = __webpack_require__(/*! @eclipse-glsp/client */ "./node_modules/@eclipse-glsp/client/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const dom_helper_1 = __webpack_require__(/*! sprotty/lib/base/views/dom-helper */ "./node_modules/sprotty/lib/base/views/dom-helper.js");
const model_1 = __webpack_require__(/*! ../model */ "./node_modules/@eclipse-glsp-examples/workflow-glsp/lib/model.js");
var EditTaskOperation;
(function (EditTaskOperation) {
    EditTaskOperation.KIND = 'editTask';
    function is(object) {
        return (client_1.Action.hasKind(object, EditTaskOperation.KIND) &&
            (0, client_1.hasStringProp)(object, 'taskId') &&
            (0, client_1.hasStringProp)(object, 'feature') &&
            (0, client_1.hasStringProp)(object, 'value'));
    }
    EditTaskOperation.is = is;
    function create(options) {
        return Object.assign({ kind: EditTaskOperation.KIND, isOperation: true }, options);
    }
    EditTaskOperation.create = create;
})(EditTaskOperation = exports.EditTaskOperation || (exports.EditTaskOperation = {}));
let TaskEditor = TaskEditor_1 = class TaskEditor extends client_1.AbstractUIExtension {
    constructor() {
        super(...arguments);
        this.autoSuggestionSettings = {
            noSuggestionsMessage: 'No suggestions available',
            suggestionsClass: 'command-palette-suggestions',
            debounceWaitMs: 50,
            showOnFocus: true
        };
    }
    id() {
        return TaskEditor_1.ID;
    }
    containerClass() {
        return 'command-palette';
    }
    initializeContents(containerElement) {
        this.autoSuggestion = new client_1.AutoCompleteWidget(this.autoSuggestionSettings, { provideSuggestions: input => this.retrieveSuggestions(input) }, { executeFromSuggestion: input => this.executeFromSuggestion(input) }, () => this.hide(), this.logger);
        this.autoSuggestion.configureValidation({ validate: input => this.validateInput(input) }, new client_1.ValidationDecorator(containerElement));
        this.autoSuggestion.configureTextSubmitHandler({
            executeFromTextOnlyInput: (input) => this.executeFromTextOnlyInput(input)
        });
        this.autoSuggestion.initialize(containerElement);
    }
    show(root, ...contextElementIds) {
        super.show(root, ...contextElementIds);
        this.autoSuggestion.open(root);
    }
    onBeforeShow(containerElement, root, ...contextElementIds) {
        this.task = getTask(contextElementIds, root.index)[0];
        this.autoSuggestion.inputField.value = '';
        this.setPosition(containerElement);
    }
    setPosition(containerElement) {
        let x = 0;
        let y = 0;
        if (this.task) {
            const bounds = (0, client_1.getAbsoluteClientBounds)(this.task, this.domHelper, this.viewerOptions);
            x = bounds.x + 5;
            y = bounds.y + 5;
        }
        containerElement.style.left = `${x}px`;
        containerElement.style.top = `${y}px`;
        containerElement.style.width = '200px';
    }
    async retrieveSuggestions(input) {
        const response = await this.actionDispatcher.request(client_1.RequestContextActions.create({ contextId: TaskEditor_1.ID, editorContext: this.editorContextService.get({ ['text']: input }) }));
        if (client_1.SetContextActions.is(response)) {
            return response.actions;
        }
        return Promise.reject();
    }
    async validateInput(input) {
        const response = await this.actionDispatcher.request(client_1.RequestEditValidationAction.create({ contextId: TaskEditor_1.ID, modelElementId: this.task.id, text: input }));
        if (client_1.SetEditValidationResultAction.is(response)) {
            return response.status;
        }
        return Promise.reject();
    }
    executeFromSuggestion(input) {
        this.actionDispatcher.dispatchAll((0, client_1.toActionArray)(input));
    }
    executeFromTextOnlyInput(input) {
        if (input.startsWith('duration:')) {
            const value = input.substring('duration:'.length);
            const action = EditTaskOperation.create({ taskId: this.task.id, feature: 'duration', value });
            this.actionDispatcher.dispatch(action);
        }
        else if (input.startsWith('taskType:')) {
            const value = input.substring('taskType:'.length);
            const action = EditTaskOperation.create({ taskId: this.task.id, feature: 'taskType', value });
            this.actionDispatcher.dispatch(action);
        }
        else {
            throw new Error('Unsupported Task Editing: ' + input);
        }
    }
    hide() {
        this.autoSuggestion.dispose();
        super.hide();
    }
};
TaskEditor.ID = 'task-editor';
__decorate([
    (0, inversify_1.inject)(client_1.TYPES.IActionDispatcher),
    __metadata("design:type", client_1.GLSPActionDispatcher)
], TaskEditor.prototype, "actionDispatcher", void 0);
__decorate([
    (0, inversify_1.inject)(client_1.EditorContextService),
    __metadata("design:type", client_1.EditorContextService)
], TaskEditor.prototype, "editorContextService", void 0);
__decorate([
    (0, inversify_1.inject)(client_1.TYPES.ViewerOptions),
    __metadata("design:type", Object)
], TaskEditor.prototype, "viewerOptions", void 0);
__decorate([
    (0, inversify_1.inject)(client_1.TYPES.DOMHelper),
    __metadata("design:type", dom_helper_1.DOMHelper)
], TaskEditor.prototype, "domHelper", void 0);
__decorate([
    (0, inversify_1.inject)(client_1.TYPES.ILogger),
    __metadata("design:type", Object)
], TaskEditor.prototype, "logger", void 0);
TaskEditor = TaskEditor_1 = __decorate([
    (0, inversify_1.injectable)()
], TaskEditor);
exports.TaskEditor = TaskEditor;
function getTask(ids, index) {
    return ids.map(id => index.getById(id)).filter(element => element && (0, model_1.isTaskNode)(element));
}


/***/ }),

/***/ "./node_modules/@eclipse-glsp-examples/workflow-glsp/lib/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp-examples/workflow-glsp/lib/index.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
__exportStar(__webpack_require__(/*! ./di.config */ "./node_modules/@eclipse-glsp-examples/workflow-glsp/lib/di.config.js"), exports);
__exportStar(__webpack_require__(/*! ./direct-task-editing/direct-task-editor */ "./node_modules/@eclipse-glsp-examples/workflow-glsp/lib/direct-task-editing/direct-task-editor.js"), exports);
__exportStar(__webpack_require__(/*! ./model */ "./node_modules/@eclipse-glsp-examples/workflow-glsp/lib/model.js"), exports);
__exportStar(__webpack_require__(/*! ./workflow-views */ "./node_modules/@eclipse-glsp-examples/workflow-glsp/lib/workflow-views.js"), exports);


/***/ }),

/***/ "./node_modules/@eclipse-glsp-examples/workflow-glsp/lib/model.js":
/*!************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp-examples/workflow-glsp/lib/model.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CategoryNode = exports.Icon = exports.ActivityNode = exports.WeightedEdge = exports.isTaskNode = exports.TaskNode = void 0;
/********************************************************************************
 * Copyright (c) 2020-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const client_1 = __webpack_require__(/*! @eclipse-glsp/client */ "./node_modules/@eclipse-glsp/client/lib/index.js");
class TaskNode extends client_1.RectangularNode {
    get editableLabel() {
        const label = this.children.find(element => element.type === 'label:heading');
        if (label && (0, client_1.isEditableLabel)(label)) {
            return label;
        }
        return undefined;
    }
    get name() {
        var _a;
        const labelText = (_a = this.editableLabel) === null || _a === void 0 ? void 0 : _a.text;
        return labelText ? labelText : '<unknown>';
    }
}
exports.TaskNode = TaskNode;
TaskNode.DEFAULT_FEATURES = [
    client_1.connectableFeature,
    client_1.deletableFeature,
    client_1.selectFeature,
    client_1.boundsFeature,
    client_1.moveFeature,
    client_1.layoutContainerFeature,
    client_1.fadeFeature,
    client_1.hoverFeedbackFeature,
    client_1.popupFeature,
    client_1.nameFeature,
    client_1.withEditLabelFeature
];
function isTaskNode(element) {
    return element instanceof TaskNode || false;
}
exports.isTaskNode = isTaskNode;
class WeightedEdge extends client_1.GEdge {
}
exports.WeightedEdge = WeightedEdge;
class ActivityNode extends client_1.DiamondNode {
    constructor() {
        super(...arguments);
        this.nodeType = ActivityNode.Type.UNDEFINED;
        this.size = {
            width: 32,
            height: 32
        };
        this.strokeWidth = 1;
    }
}
exports.ActivityNode = ActivityNode;
(function (ActivityNode) {
    let Type;
    (function (Type) {
        Type.INITIAL = 'initialNode';
        Type.FINAL = 'finalNode';
        Type.DECISION = 'decisionNode';
        Type.MERGE = 'mergeNode';
        Type.JOIN = 'joinNode';
        Type.FORK = 'forkNode';
        Type.UNDEFINED = 'undefined';
    })(Type = ActivityNode.Type || (ActivityNode.Type = {}));
})(ActivityNode = exports.ActivityNode || (exports.ActivityNode = {}));
class Icon extends client_1.SShapeElement {
    constructor() {
        super(...arguments);
        this.size = {
            width: 32,
            height: 32
        };
    }
}
exports.Icon = Icon;
Icon.DEFAULT_FEATURES = [client_1.boundsFeature, client_1.layoutContainerFeature, client_1.layoutableChildFeature, client_1.fadeFeature];
class CategoryNode extends client_1.RectangularNode {
    constructor() {
        super(...arguments);
        this.name = '';
    }
    get editableLabel() {
        const label = this.children.find(element => element.type === 'label:heading');
        if (label && (0, client_1.isEditableLabel)(label)) {
            return label;
        }
        return undefined;
    }
}
exports.CategoryNode = CategoryNode;
CategoryNode.DEFAULT_FEATURES = [
    client_1.deletableFeature,
    client_1.selectFeature,
    client_1.boundsFeature,
    client_1.moveFeature,
    client_1.layoutContainerFeature,
    client_1.fadeFeature,
    client_1.hoverFeedbackFeature,
    client_1.popupFeature,
    client_1.nameFeature,
    client_1.withEditLabelFeature
];


/***/ }),

/***/ "./node_modules/@eclipse-glsp-examples/workflow-glsp/lib/workflow-views.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp-examples/workflow-glsp/lib/workflow-views.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.IconView = exports.WorkflowEdgeView = void 0;
/********************************************************************************
 * Copyright (c) 2019-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const client_1 = __webpack_require__(/*! @eclipse-glsp/client */ "./node_modules/@eclipse-glsp/client/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const model_1 = __webpack_require__(/*! ./model */ "./node_modules/@eclipse-glsp-examples/workflow-glsp/lib/model.js");
// eslint-disable-next-line @typescript-eslint/no-unused-vars
const JSX = { createElement: client_1.svg };
let WorkflowEdgeView = class WorkflowEdgeView extends client_1.PolylineEdgeViewWithGapsOnIntersections {
    renderAdditionals(edge, segments, context) {
        const additionals = super.renderAdditionals(edge, segments, context);
        const p1 = segments[segments.length - 2];
        const p2 = segments[segments.length - 1];
        const arrow = (JSX.createElement("path", { "class-sprotty-edge": true, "class-arrow": true, d: 'M 1,0 L 10,-4 L 10,4 Z', transform: `rotate(${(0, client_1.toDegrees)((0, client_1.angleOfPoint)({ x: p1.x - p2.x, y: p1.y - p2.y }))} ${p2.x} ${p2.y}) translate(${p2.x} ${p2.y})` }));
        additionals.push(arrow);
        return additionals;
    }
};
WorkflowEdgeView = __decorate([
    (0, inversify_1.injectable)()
], WorkflowEdgeView);
exports.WorkflowEdgeView = WorkflowEdgeView;
let IconView = class IconView extends client_1.ShapeView {
    render(element, context) {
        const taskNode = (0, client_1.findParentByFeature)(element, model_1.isTaskNode);
        if (!taskNode || !this.isVisible(element, context)) {
            return undefined;
        }
        let icon;
        if (taskNode.type === 'task:manual') {
            // From codicons: https://github.com/microsoft/vscode-codicons/blob/main/src/icons/account.svg?short_path=8135b2d
            icon =
                // eslint-disable-next-line max-len
                'M16 7.992C16 3.58 12.416 0 8 0S0 3.58 0 7.992c0 2.43 1.104 4.62 2.832 6.09.016.016.032.016.032.032.144.112.288.224.448.336.08.048.144.111.224.175A7.98 7.98 0 0 0 8.016 16a7.98 7.98 0 0 0 4.48-1.375c.08-.048.144-.111.224-.16.144-.111.304-.223.448-.335.016-.016.032-.016.032-.032 1.696-1.487 2.8-3.676 2.8-6.106zm-8 7.001c-1.504 0-2.88-.48-4.016-1.279.016-.128.048-.255.08-.383a4.17 4.17 0 0 1 .416-.991c.176-.304.384-.576.64-.816.24-.24.528-.463.816-.639.304-.176.624-.304.976-.4A4.15 4.15 0 0 1 8 10.342a4.185 4.185 0 0 1 2.928 1.166c.368.368.656.8.864 1.295.112.288.192.592.24.911A7.03 7.03 0 0 1 8 14.993zm-2.448-7.4a2.49 2.49 0 0 1-.208-1.024c0-.351.064-.703.208-1.023.144-.32.336-.607.576-.847.24-.24.528-.431.848-.575.32-.144.672-.208 1.024-.208.368 0 .704.064 1.024.208.32.144.608.336.848.575.24.24.432.528.576.847.144.32.208.672.208 1.023 0 .368-.064.704-.208 1.023a2.84 2.84 0 0 1-.576.848 2.84 2.84 0 0 1-.848.575 2.715 2.715 0 0 1-2.064 0 2.84 2.84 0 0 1-.848-.575 2.526 2.526 0 0 1-.56-.848zm7.424 5.306c0-.032-.016-.048-.016-.08a5.22 5.22 0 0 0-.688-1.406 4.883 4.883 0 0 0-1.088-1.135 5.207 5.207 0 0 0-1.04-.608 2.82 2.82 0 0 0 .464-.383 4.2 4.2 0 0 0 .624-.784 3.624 3.624 0 0 0 .528-1.934 3.71 3.71 0 0 0-.288-1.47 3.799 3.799 0 0 0-.816-1.199 3.845 3.845 0 0 0-1.2-.8 3.72 3.72 0 0 0-1.472-.287 3.72 3.72 0 0 0-1.472.288 3.631 3.631 0 0 0-1.2.815 3.84 3.84 0 0 0-.8 1.199 3.71 3.71 0 0 0-.288 1.47c0 .352.048.688.144 1.007.096.336.224.64.4.927.16.288.384.544.624.784.144.144.304.271.48.383a5.12 5.12 0 0 0-1.04.624c-.416.32-.784.703-1.088 1.119a4.999 4.999 0 0 0-.688 1.406c-.016.032-.016.064-.016.08C1.776 11.636.992 9.91.992 7.992.992 4.14 4.144.991 8 .991s7.008 3.149 7.008 7.001a6.96 6.96 0 0 1-2.032 4.907z';
        }
        else {
            // From codicons: https://github.com/microsoft/vscode-codicons/blob/main/src/icons/gear.svg?short_path=8ee3ec4
            icon =
                // eslint-disable-next-line max-len
                'M9.1 4.4L8.6 2H7.4l-.5 2.4-.7.3-2-1.3-.9.8 1.3 2-.2.7-2.4.5v1.2l2.4.5.3.8-1.3 2 .8.8 2-1.3.8.3.4 2.3h1.2l.5-2.4.8-.3 2 1.3.8-.8-1.3-2 .3-.8 2.3-.4V7.4l-2.4-.5-.3-.8 1.3-2-.8-.8-2 1.3-.7-.2zM9.4 1l.5 2.4L12 2.1l2 2-1.4 2.1 2.4.4v2.8l-2.4.5L14 12l-2 2-2.1-1.4-.5 2.4H6.6l-.5-2.4L4 13.9l-2-2 1.4-2.1L1 9.4V6.6l2.4-.5L2.1 4l2-2 2.1 1.4.4-2.4h2.8zm.6 7c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zM8 9c.6 0 1-.4 1-1s-.4-1-1-1-1 .4-1 1 .4 1 1 1z';
        }
        const vnode = (JSX.createElement("g", null,
            JSX.createElement("path", { transform: 'scale(1.15),translate(0.75,0.75)', 
                // From codicons: https://github.com/microsoft/vscode-codicons/blob/main/src/icons/terminal.svg?short_path=2ffc08e
                // eslint-disable-next-line max-len
                d: icon }),
            JSX.createElement("rect", { "class-icon-background": true, x: 0, y: 0, width: 25, height: 20 }),
            context.renderChildren(element)));
        const subType = (0, client_1.getSubType)(element);
        if (subType) {
            (0, client_1.setAttr)(vnode, 'class', subType);
        }
        return vnode;
    }
};
IconView = __decorate([
    (0, inversify_1.injectable)()
], IconView);
exports.IconView = IconView;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/base/action-dispatcher.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/base/action-dispatcher.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GLSPActionDispatcher = void 0;
/********************************************************************************
 * Copyright (c) 2019-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const model_initialization_constraint_1 = __webpack_require__(/*! ./model-initialization-constraint */ "./node_modules/@eclipse-glsp/client/lib/base/model-initialization-constraint.js");
class GLSPActionDispatcher extends sprotty_1.ActionDispatcher {
    constructor() {
        super(...arguments);
        this.timeouts = new Map();
        this.initializedConstraint = false;
    }
    initialize() {
        return super.initialize().then(() => this.startModelInitialization());
    }
    startModelInitialization() {
        if (!this.initializedConstraint) {
            this.logger.log(this, 'Starting model initialization mode');
            this.initializationConstraint.onInitialized().then(() => this.logger.log(this, 'Model initialization completed'));
            this.initializedConstraint = true;
        }
    }
    onceModelInitialized() {
        return this.initializationConstraint.onInitialized();
    }
    dispatch(action) {
        const result = super.dispatch(action);
        this.initializationConstraint.notifyDispatched(action);
        return result;
    }
    handleAction(action) {
        if (protocol_1.ResponseAction.hasValidResponseId(action)) {
            // clear timeout
            const timeout = this.timeouts.get(action.responseId);
            if (timeout !== undefined) {
                clearTimeout(timeout);
                this.timeouts.delete(action.responseId);
            }
            // we might have reached a timeout, so we simply drop the response
            const deferred = this.requests.get(action.responseId);
            if (deferred === undefined) {
                this.logger.log(this, 'No matching request for response', action);
                return Promise.resolve();
            }
        }
        return super.handleAction(action);
    }
    request(action) {
        if (!action.requestId && action.requestId === '') {
            // No request id has been specified. So we use a generated one.
            action.requestId = protocol_1.RequestAction.generateRequestId();
        }
        return super.request(action);
    }
    /**
     * Dispatch a request and waits for a response until the timeout given in `timeoutMs` has
     * been reached. The returned promise is resolved when a response with matching identifier
     * is dispatched or when the timeout has been reached. That response is _not_ passed to the
     * registered action handlers. Instead, it is the responsibility of the caller of this method
     * to handle the response properly. For example, it can be sent to the registered handlers by
     * passing it again to the `dispatch` method.
     * If `rejectOnTimeout` is set to false (default) the returned promise will be resolved with
     * no value, otherwise it will be rejected.
     */
    requestUntil(action, timeoutMs = 2000, rejectOnTimeout = false) {
        if (!action.requestId && action.requestId === '') {
            // No request id has been specified. So we use a generated one.
            action.requestId = protocol_1.RequestAction.generateRequestId();
        }
        const requestId = action.requestId;
        const timeout = setTimeout(() => {
            const deferred = this.requests.get(requestId);
            if (deferred !== undefined) {
                // cleanup
                clearTimeout(timeout);
                this.requests.delete(requestId);
                const notification = 'Request ' + requestId + ' (' + action + ') time out after ' + timeoutMs + 'ms.';
                if (rejectOnTimeout) {
                    deferred.reject(notification);
                }
                else {
                    this.logger.info(this, notification);
                    deferred.resolve();
                }
            }
        }, timeoutMs);
        this.timeouts.set(requestId, timeout);
        return super.request(action);
    }
}
__decorate([
    (0, inversify_1.inject)(model_initialization_constraint_1.ModelInitializationConstraint),
    __metadata("design:type", model_initialization_constraint_1.ModelInitializationConstraint)
], GLSPActionDispatcher.prototype, "initializationConstraint", void 0);
exports.GLSPActionDispatcher = GLSPActionDispatcher;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/base/actions/focus-change-action.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/base/actions/focus-change-action.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FocusStateChangedAction = void 0;
/********************************************************************************
 * Copyright (c) 2021-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
var FocusStateChangedAction;
(function (FocusStateChangedAction) {
    FocusStateChangedAction.KIND = 'focusStateChanged';
    function is(object) {
        return protocol_1.Action.hasKind(object, FocusStateChangedAction.KIND) && (0, protocol_1.hasBooleanProp)(object, 'hasFocus');
    }
    FocusStateChangedAction.is = is;
    function create(hasFocus = true) {
        return {
            kind: FocusStateChangedAction.KIND,
            hasFocus
        };
    }
    FocusStateChangedAction.create = create;
})(FocusStateChangedAction = exports.FocusStateChangedAction || (exports.FocusStateChangedAction = {}));


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/base/argumentable.js":
/*!********************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/base/argumentable.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.hasArguments = void 0;
function hasArguments(element) {
    return element !== undefined && 'args' in element;
}
exports.hasArguments = hasArguments;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/base/auto-complete/auto-complete-actions.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/base/auto-complete/auto-complete-actions.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AutoCompleteValue = void 0;
/********************************************************************************
 * Copyright (c) 2020-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
var AutoCompleteValue;
(function (AutoCompleteValue) {
    function is(object) {
        return protocol_1.LabeledAction.is(object) && (0, protocol_1.hasStringProp)(object, 'text');
    }
    AutoCompleteValue.is = is;
})(AutoCompleteValue = exports.AutoCompleteValue || (exports.AutoCompleteValue = {}));


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/base/auto-complete/auto-complete-widget.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/base/auto-complete/auto-complete-widget.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toActionArray = exports.AutoCompleteWidget = void 0;
/********************************************************************************
 * Copyright (c) 2020-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const iterable_1 = __webpack_require__(/*! sprotty/lib/utils/iterable */ "./node_modules/sprotty/lib/utils/iterable.js");
const keyboard_1 = __webpack_require__(/*! sprotty/lib/utils/keyboard */ "./node_modules/sprotty/lib/utils/keyboard.js");
const auto_complete_actions_1 = __webpack_require__(/*! ./auto-complete-actions */ "./node_modules/@eclipse-glsp/client/lib/base/auto-complete/auto-complete-actions.js");
const validation_decorator_1 = __webpack_require__(/*! ./validation-decorator */ "./node_modules/@eclipse-glsp/client/lib/base/auto-complete/validation-decorator.js");
// eslint-disable-next-line @typescript-eslint/no-var-requires
const configureAutocomplete = __webpack_require__(/*! autocompleter */ "./node_modules/autocompleter/autocomplete.js");
/**
 * The `AutoCompleteWidget` is a reusable UI element that provides a text input supporting auto-completion,
 * validation, validation messages, etc.
 *
 * An example for using it is available in the workflow diagram:
 * https://github.com/eclipse-glsp/glsp-client/blob/master/examples/workflow-glsp/src/direct-task-editing/direct-task-editor.ts
 */
class AutoCompleteWidget {
    constructor(autoSuggestionSettings, suggestionProvider, suggestionSubmitHandler, 
    // eslint-disable-next-line @typescript-eslint/no-empty-function
    notifyClose = () => { }, logger) {
        this.autoSuggestionSettings = autoSuggestionSettings;
        this.suggestionProvider = suggestionProvider;
        this.suggestionSubmitHandler = suggestionSubmitHandler;
        this.notifyClose = notifyClose;
        this.logger = logger;
        this.loadingIndicatorClasses = (0, sprotty_1.codiconCSSClasses)('loading', false, true, ['loading']);
        this.validationDecorator = validation_decorator_1.IValidationDecorator.NO_DECORATION;
    }
    configureValidation(inputValidator, validationDecorator = validation_decorator_1.IValidationDecorator.NO_DECORATION) {
        this.inputValidator = inputValidator;
        this.validationDecorator = validationDecorator;
    }
    configureTextSubmitHandler(textSubmitHandler) {
        this.textSubmitHandler = textSubmitHandler;
    }
    initialize(containerElement) {
        this.containerElement = containerElement;
        this.inputElement = this.createInputElement();
        this.containerElement.appendChild(this.inputElement);
        this.containerElement.style.position = 'absolute';
    }
    createInputElement() {
        const inputElement = document.createElement('input');
        inputElement.style.position = 'absolute';
        inputElement.spellcheck = false;
        inputElement.autocapitalize = 'false';
        inputElement.autocomplete = 'false';
        inputElement.style.width = '100%';
        inputElement.addEventListener('keydown', event => this.handleKeyDown(event));
        inputElement.addEventListener('blur', () => window.setTimeout(() => this.notifyClose(), 200));
        return inputElement;
    }
    handleKeyDown(event) {
        if ((0, keyboard_1.matchesKeystroke)(event, 'Escape')) {
            this.notifyClose();
            return;
        }
        if ((0, keyboard_1.matchesKeystroke)(event, 'Enter') && !this.isInputElementChanged() && this.isSuggestionAvailable()) {
            return;
        }
        if (this.isInputElementChanged()) {
            this.invalidateValidationResultAndContextActions();
        }
        if (!(0, keyboard_1.matchesKeystroke)(event, 'Enter') || this.isSuggestionAvailable()) {
            return;
        }
        if (!this.validationDecorator.isValidatedOk()) {
            event.stopImmediatePropagation();
            return;
        }
        if (this.textSubmitHandler) {
            this.executeFromTextOnlyInput();
            this.notifyClose();
        }
    }
    isInputElementChanged() {
        return this.inputElement.value !== this.previousContent;
    }
    invalidateValidationResultAndContextActions() {
        this.contextActions = undefined;
        this.validationDecorator.invalidate();
    }
    open(root, ...contextElementIds) {
        this.contextActions = undefined;
        this.autoCompleteResult = configureAutocomplete(this.autocompleteSettings(root));
        this.previousContent = this.inputElement.value;
        this.inputElement.setSelectionRange(0, this.inputElement.value.length);
        this.inputElement.focus();
    }
    autocompleteSettings(root) {
        return {
            input: this.inputElement,
            emptyMsg: this.autoSuggestionSettings.noSuggestionsMessage,
            className: this.autoSuggestionSettings.suggestionsClass,
            showOnFocus: this.autoSuggestionSettings.showOnFocus,
            debounceWaitMs: this.autoSuggestionSettings.debounceWaitMs,
            minLength: -1,
            fetch: (text, update) => this.updateSuggestions(update, text, root),
            onSelect: (item) => this.onSelect(item),
            render: (item, currentValue) => this.renderSuggestions(item, currentValue),
            customize: (input, inputRect, container, maxHeight) => {
                this.customizeInputElement(input, inputRect, container, maxHeight);
            }
        };
    }
    customizeInputElement(input, inputRect, container, maxHeight) {
        // move container into our UIExtension container as this is already positioned correctly
        if (this.containerElement) {
            this.containerElement.appendChild(container);
        }
    }
    updateSuggestions(update, text, root, ...contextElementIds) {
        this.onLoading();
        this.doUpdateSuggestions(text, root)
            .then(actions => {
            this.contextActions = this.filterActions(text, actions);
            update(this.contextActions);
            this.onLoaded('success');
        })
            .catch(reason => {
            if (this.logger) {
                this.logger.error(this, 'Failed to obtain suggestions', reason);
            }
            this.onLoaded('error');
        });
    }
    onLoading() {
        if (this.loadingIndicator && this.containerElement.contains(this.loadingIndicator)) {
            return;
        }
        this.loadingIndicator = document.createElement('span');
        this.loadingIndicator.classList.add(...this.loadingIndicatorClasses);
        this.containerElement.appendChild(this.loadingIndicator);
    }
    doUpdateSuggestions(text, root, ...contextElementIds) {
        return this.suggestionProvider.provideSuggestions(text);
    }
    onLoaded(_success) {
        if (this.containerElement.contains(this.loadingIndicator)) {
            this.containerElement.removeChild(this.loadingIndicator);
        }
        this.validationDecorator.invalidate();
        this.validateInputIfNoContextActions();
        this.previousContent = this.inputElement.value;
    }
    renderSuggestions(item, value) {
        const itemElement = document.createElement('div');
        const wordMatcher = this.escapeForRegExp(value).split(' ').join('|');
        const regex = new RegExp(wordMatcher, 'gi');
        if (item.icon) {
            this.renderIcon(itemElement, item.icon);
        }
        itemElement.innerHTML += item.label.replace(regex, match => '<em>' + match + '</em>');
        return itemElement;
    }
    escapeForRegExp(value) {
        return value.replace(/([.?*+^$[\]\\(){}|-])/g, '\\$1');
    }
    renderIcon(itemElement, icon) {
        itemElement.innerHTML += `<span class="icon ${icon}"></span>`;
    }
    filterActions(filterText, actions) {
        return (0, iterable_1.toArray)(actions.filter(action => {
            const label = action.label.toLowerCase();
            const searchWords = filterText.split(' ');
            return searchWords.every(word => label.indexOf(word.toLowerCase()) !== -1);
        }));
    }
    onSelect(item) {
        if (auto_complete_actions_1.AutoCompleteValue.is(item)) {
            this.inputElement.value = item.text;
            // trigger update of suggestions with an keyup event
            window.setTimeout(() => this.inputElement.dispatchEvent(new Event('keyup')));
        }
        else {
            this.executeFromSuggestion(item);
            this.notifyClose();
        }
    }
    validateInputIfNoContextActions() {
        if (this.isNoOrExactlyOneMatchingContextAction()) {
            this.validateInput();
        }
        else {
            this.validationDecorator.dispose();
        }
    }
    isNoOrExactlyOneMatchingContextAction() {
        return (!this.isSuggestionAvailable() ||
            (this.contextActions && this.contextActions.length === 1 && this.inputElement.value.endsWith(this.contextActions[0].label)));
    }
    isSuggestionAvailable() {
        return this.contextActions && this.contextActions.length > 0;
    }
    validateInput() {
        if (this.inputValidator) {
            this.inputValidator
                .validate(this.inputElement.value)
                .then(result => this.validationDecorator.decorateValidationResult(result))
                .catch(error => this.handleErrorDuringValidation(error));
        }
    }
    handleErrorDuringValidation(error) {
        if (this.logger) {
            this.logger.error(this, 'Failed to validate input', error);
        }
        this.validationDecorator.dispose();
    }
    executeFromSuggestion(input) {
        this.suggestionSubmitHandler.executeFromSuggestion(input);
    }
    executeFromTextOnlyInput() {
        if (this.textSubmitHandler) {
            this.textSubmitHandler.executeFromTextOnlyInput(this.inputElement.value);
        }
    }
    get inputField() {
        return this.inputElement;
    }
    dispose() {
        this.validationDecorator.dispose();
        if (this.autoCompleteResult) {
            this.autoCompleteResult.destroy();
        }
    }
}
exports.AutoCompleteWidget = AutoCompleteWidget;
function toActionArray(input) {
    if (protocol_1.LabeledAction.is(input)) {
        return input.actions;
    }
    else if (protocol_1.Action.is(input)) {
        return [input];
    }
    return [];
}
exports.toActionArray = toActionArray;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/base/auto-complete/validation-decorator.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/base/auto-complete/validation-decorator.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ValidationDecorator = exports.IValidationDecorator = void 0;
/********************************************************************************
 * Copyright (c) 2020-2021 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const codicon_1 = __webpack_require__(/*! sprotty/lib/utils/codicon */ "./node_modules/sprotty/lib/utils/codicon.js");
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
var IValidationDecorator;
(function (IValidationDecorator) {
    IValidationDecorator.NO_DECORATION = {
        // eslint-disable-next-line @typescript-eslint/no-empty-function
        decorateValidationResult(_status) { },
        isValidatedOk() {
            return false;
        },
        // eslint-disable-next-line @typescript-eslint/no-empty-function
        invalidate() { },
        // eslint-disable-next-line @typescript-eslint/no-empty-function
        dispose() { }
    };
})(IValidationDecorator = exports.IValidationDecorator || (exports.IValidationDecorator = {}));
class ValidationDecorator {
    constructor(containerElement) {
        this.containerElement = containerElement;
        this.warningClasses = ['warning'];
        this.warningIconClasses = (0, codicon_1.codiconCSSString)('warning');
        this.errorClasses = ['error'];
        this.errorIconClasses = (0, codicon_1.codiconCSSString)('error');
        this.isValidated = false;
        this.hasValidationError = false;
    }
    decorateValidationResult(status) {
        if (protocol_1.ValidationStatus.isError(status)) {
            this.hasValidationError = true;
            this.decorateError(status.message ? status.message : 'Error');
        }
        else if (protocol_1.ValidationStatus.isWarning(status)) {
            this.hasValidationError = false;
            this.decorateWarning(status.message ? status.message : 'Warning');
        }
        else {
            this.hasValidationError = false;
            this.dispose();
        }
        this.isValidated = true;
    }
    decorateError(message) {
        this.switchCssClasses(this.containerElement, this.errorClasses);
        const div = this.createDecorationDiv();
        this.switchCssClasses(div, this.errorClasses);
        div.innerHTML = `<span class="${this.errorIconClasses}"></span> ${message}`;
        this.adjustPosition();
    }
    decorateWarning(message) {
        this.switchCssClasses(this.containerElement, this.warningClasses);
        const div = this.createDecorationDiv();
        this.switchCssClasses(div, this.warningClasses);
        div.innerHTML = `<span class="${this.warningIconClasses}"></span> ${message}`;
        this.adjustPosition();
    }
    switchCssClasses(element, cssClasses) {
        element.classList.remove(...this.errorClasses, ...this.warningClasses);
        element.classList.add(...cssClasses);
    }
    createDecorationDiv() {
        if (!this.decorationDiv) {
            this.containerElement.classList.add('validation');
            this.decorationDiv = document.createElement('div');
            this.decorationDiv.style.width = `${this.decorationContainerWidth()}px`;
            this.decorationDiv.classList.add('validation-decorator');
            this.containerElement.appendChild(this.decorationDiv);
        }
        return this.decorationDiv;
    }
    decorationContainerWidth() {
        return this.containerElement.clientWidth - 5;
    }
    adjustPosition() {
        if (this.decorationDiv) {
            const height = this.decorationDiv.clientHeight + 2;
            this.decorationDiv.style.top = `-${height}px`;
        }
    }
    isValidatedOk() {
        return this.isValidated && !this.hasValidationError;
    }
    invalidate() {
        this.isValidated = false;
    }
    dispose() {
        this.hasValidationError = false;
        this.isValidated = false;
        if (this.decorationDiv && this.containerElement && this.containerElement.contains(this.decorationDiv)) {
            this.containerElement.removeChild(this.decorationDiv);
            this.switchCssClasses(this.containerElement, []);
            this.decorationDiv = undefined;
        }
    }
}
exports.ValidationDecorator = ValidationDecorator;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/base/command-stack.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/base/command-stack.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GLSPCommandStack = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
let GLSPCommandStack = class GLSPCommandStack extends sprotty_1.CommandStack {
    undo() {
        this.logger.warn(this, 'GLSPCommandStack.undo() was called. This should never happen as the GLSP server is responsible for handling undo requests');
        return this.currentModel;
    }
    redo() {
        this.logger.warn(this, 'GLSPCommandStack.redo() was called. This should never happen as the GLSP server is responsible for handling redo requests');
        return this.currentModel;
    }
};
GLSPCommandStack = __decorate([
    (0, inversify_1.injectable)()
], GLSPCommandStack);
exports.GLSPCommandStack = GLSPCommandStack;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/base/container-modules.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/base/container-modules.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2021-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createClientContainer = exports.initializeDiagramContainer = exports.DEFAULT_MODULES = void 0;
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const di_config_1 = __webpack_require__(/*! ../features/svg-metadata/di.config */ "./node_modules/@eclipse-glsp/client/lib/features/svg-metadata/di.config.js");
const di_config_2 = __webpack_require__(/*! ../features/bounds/di.config */ "./node_modules/@eclipse-glsp/client/lib/features/bounds/di.config.js");
const di_config_3 = __webpack_require__(/*! ../features/command-palette/di.config */ "./node_modules/@eclipse-glsp/client/lib/features/command-palette/di.config.js");
const di_config_4 = __webpack_require__(/*! ../features/context-menu/di.config */ "./node_modules/@eclipse-glsp/client/lib/features/context-menu/di.config.js");
const di_config_5 = __webpack_require__(/*! ../features/copy-paste/di.config */ "./node_modules/@eclipse-glsp/client/lib/features/copy-paste/di.config.js");
const di_config_6 = __webpack_require__(/*! ../features/decoration/di.config */ "./node_modules/@eclipse-glsp/client/lib/features/decoration/di.config.js");
const di_config_7 = __webpack_require__(/*! ../features/edit-label/di.config */ "./node_modules/@eclipse-glsp/client/lib/features/edit-label/di.config.js");
const di_config_8 = __webpack_require__(/*! ../features/export/di.config */ "./node_modules/@eclipse-glsp/client/lib/features/export/di.config.js");
const di_config_9 = __webpack_require__(/*! ../features/hints/di.config */ "./node_modules/@eclipse-glsp/client/lib/features/hints/di.config.js");
const di_config_10 = __webpack_require__(/*! ../features/hover/di.config */ "./node_modules/@eclipse-glsp/client/lib/features/hover/di.config.js");
const di_config_11 = __webpack_require__(/*! ../features/layout/di.config */ "./node_modules/@eclipse-glsp/client/lib/features/layout/di.config.js");
const di_config_12 = __webpack_require__(/*! ../features/mouse-tool/di.config */ "./node_modules/@eclipse-glsp/client/lib/features/mouse-tool/di.config.js");
const di_config_13 = __webpack_require__(/*! ../features/navigation/di.config */ "./node_modules/@eclipse-glsp/client/lib/features/navigation/di.config.js");
const di_config_14 = __webpack_require__(/*! ../features/select/di.config */ "./node_modules/@eclipse-glsp/client/lib/features/select/di.config.js");
const di_config_15 = __webpack_require__(/*! ../features/source-model-watcher/di.config */ "./node_modules/@eclipse-glsp/client/lib/features/source-model-watcher/di.config.js");
const di_config_16 = __webpack_require__(/*! ../features/tool-feedback/di.config */ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/di.config.js");
const di_config_17 = __webpack_require__(/*! ../features/tool-palette/di.config */ "./node_modules/@eclipse-glsp/client/lib/features/tool-palette/di.config.js");
const di_config_18 = __webpack_require__(/*! ../features/tools/di.config */ "./node_modules/@eclipse-glsp/client/lib/features/tools/di.config.js");
const di_config_19 = __webpack_require__(/*! ../features/validation/di.config */ "./node_modules/@eclipse-glsp/client/lib/features/validation/di.config.js");
const di_config_20 = __webpack_require__(/*! ../features/viewport/di.config */ "./node_modules/@eclipse-glsp/client/lib/features/viewport/di.config.js");
const di_config_21 = __webpack_require__(/*! ./di.config */ "./node_modules/@eclipse-glsp/client/lib/base/di.config.js");
exports.DEFAULT_MODULES = [
    sprotty_1.defaultModule,
    di_config_21.default,
    sprotty_1.buttonModule,
    sprotty_1.edgeIntersectionModule,
    sprotty_1.edgeLayoutModule,
    sprotty_1.expandModule,
    di_config_8.default,
    sprotty_1.fadeModule,
    di_config_2.default,
    di_config_3.default,
    di_config_4.default,
    di_config_6.default,
    di_config_7.default,
    di_config_10.default,
    di_config_12.default,
    di_config_14.default,
    di_config_5.glspServerCopyPasteModule,
    di_config_20.default,
    sprotty_1.labelEditUiModule,
    di_config_11.default,
    di_config_19.markerNavigatorModule,
    di_config_9.default,
    sprotty_1.modelSourceModule,
    di_config_15.default,
    di_config_13.default,
    sprotty_1.openModule,
    di_config_17.default,
    sprotty_1.routingModule,
    di_config_16.default,
    di_config_18.toolsModule,
    di_config_18.enableDefaultToolsOnFocusLossModule,
    di_config_19.validationModule,
    sprotty_1.zorderModule,
    di_config_1.default
];
/**
 *  Initializes a GLSP Diagram container with the GLSP default modules and the specified custom `modules`.
 *  Additional modules can be passed as direct arguments or as part of a {@link ModuleConfiguration}.
 *  ```typescript
 *  const container= createDiagramContainer(myModule1, myModule2)
 *  // or
 *  const container= createDiagramContainer({ add: [myModule1, myModule2]})
 *  ```
 *  Default modules can be excluded using {@link ModuleConfiguration}s.
 *  This means, you can still customize the default modules in two ways.
 *
 * First, you can exclude default modules and add a module with your custom code.
 *
 * ```typescript
 * const container = createDiagramContainer({ add:myModelSourceWatcherModule, remove: modelSourceWatcherModule} );
 * ```
 *
 * Second, you can unbind or rebind implementations that are originally bound in one of the default modules.
 *
 * ```typescript
 * rebind(NavigationTargetResolver).to(MyNavigationTargetResolver);
 * ```
 *
 * @param containerConfiguration
 *          Custom modules to be loaded in addition to the default modules and/or default modules that should be excluded.
 * @returns The initialized container.
 */
function initializeDiagramContainer(container, ...containerConfiguration) {
    return (0, protocol_1.initializeContainer)(container, ...exports.DEFAULT_MODULES, ...containerConfiguration);
}
exports.initializeDiagramContainer = initializeDiagramContainer;
/**
 * Creates a GLSP Client container with the GLSP default modules and the specified custom `modules`.
 *
 * You can still customize the default modules in two ways.
 *
 * First, you can unload default modules and load them again with your custom code.
 *
 * ```typescript
 * const container = createClientContainer(myModule1, myModule2);
 * container.unload(modelSourceWatcherModule);
 * container.load(myModelSourceWatcherModule);
 * ```
 *
 * Second, you can unbind or rebind implementations that are originally bound in one of the default modules.
 *
 * ```typescript
 * rebind(NavigationTargetResolver).to(MyNavigationTargetResolver);
 * ```
 * @param modules Custom modules to be loaded in addition to the default modules.
 * @returns The created container.
 * @deprecated Please use `initializeDiagramContainer` from `@eclipse-glsp/client` instead
 */
function createClientContainer(...modules) {
    return initializeDiagramContainer(new inversify_1.Container(), ...modules);
}
exports.createClientContainer = createClientContainer;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/base/di.config.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/base/di.config.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.configureServerActions = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
__webpack_require__(/*! @vscode/codicons/dist/codicon.css */ "./node_modules/@vscode/codicons/dist/codicon.css");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
__webpack_require__(/*! ../../css/glsp-sprotty.css */ "./node_modules/@eclipse-glsp/client/css/glsp-sprotty.css");
const action_dispatcher_1 = __webpack_require__(/*! ./action-dispatcher */ "./node_modules/@eclipse-glsp/client/lib/base/action-dispatcher.js");
const focus_change_action_1 = __webpack_require__(/*! ./actions/focus-change-action */ "./node_modules/@eclipse-glsp/client/lib/base/actions/focus-change-action.js");
const command_stack_1 = __webpack_require__(/*! ./command-stack */ "./node_modules/@eclipse-glsp/client/lib/base/command-stack.js");
const editor_context_service_1 = __webpack_require__(/*! ./editor-context-service */ "./node_modules/@eclipse-glsp/client/lib/base/editor-context-service.js");
const focus_tracker_1 = __webpack_require__(/*! ./focus-tracker */ "./node_modules/@eclipse-glsp/client/lib/base/focus-tracker.js");
const model_initialization_constraint_1 = __webpack_require__(/*! ./model-initialization-constraint */ "./node_modules/@eclipse-glsp/client/lib/base/model-initialization-constraint.js");
const model_registry_1 = __webpack_require__(/*! ./model/model-registry */ "./node_modules/@eclipse-glsp/client/lib/base/model/model-registry.js");
const update_model_command_1 = __webpack_require__(/*! ./model/update-model-command */ "./node_modules/@eclipse-glsp/client/lib/base/model/update-model-command.js");
const selection_clearing_mouse_listener_1 = __webpack_require__(/*! ./selection-clearing-mouse-listener */ "./node_modules/@eclipse-glsp/client/lib/base/selection-clearing-mouse-listener.js");
const glsp_tool_manager_1 = __webpack_require__(/*! ./tool-manager/glsp-tool-manager */ "./node_modules/@eclipse-glsp/client/lib/base/tool-manager/glsp-tool-manager.js");
const types_1 = __webpack_require__(/*! ./types */ "./node_modules/@eclipse-glsp/client/lib/base/types.js");
const view_registry_1 = __webpack_require__(/*! ./view/view-registry */ "./node_modules/@eclipse-glsp/client/lib/base/view/view-registry.js");
const defaultGLSPModule = new inversify_1.ContainerModule((bind, _unbind, isBound, rebind) => {
    const context = { bind, _unbind, isBound, rebind };
    bind(editor_context_service_1.EditorContextService).toSelf().inSingletonScope();
    bind(types_1.TYPES.IEditorContextServiceProvider).toProvider(ctx => () => new Promise((resolve, reject) => {
        if (ctx.container.isBound(editor_context_service_1.EditorContextService)) {
            resolve(ctx.container.get(editor_context_service_1.EditorContextService));
        }
        else {
            reject();
        }
    }));
    (0, sprotty_1.configureActionHandler)(context, protocol_1.SetEditModeAction.KIND, editor_context_service_1.EditorContextService);
    bind(focus_tracker_1.FocusTracker).toSelf().inSingletonScope();
    (0, sprotty_1.configureActionHandler)(context, focus_change_action_1.FocusStateChangedAction.KIND, focus_tracker_1.FocusTracker);
    // Model update initialization ------------------------------------
    (0, sprotty_1.configureCommand)(context, update_model_command_1.FeedbackAwareUpdateModelCommand);
    (0, sprotty_1.configureActionHandler)(context, sprotty_1.SetModelCommand.KIND, update_model_command_1.SetModelActionHandler);
    (0, protocol_1.bindAsService)(context, types_1.TYPES.MouseListener, selection_clearing_mouse_listener_1.SelectionClearingMouseListener);
    (0, protocol_1.bindOrRebind)(context, types_1.TYPES.ICommandStack).to(command_stack_1.GLSPCommandStack);
    bind(glsp_tool_manager_1.GLSPToolManager).toSelf().inSingletonScope();
    (0, protocol_1.bindOrRebind)(context, types_1.TYPES.IToolManager).toService(glsp_tool_manager_1.GLSPToolManager);
    bind(action_dispatcher_1.GLSPActionDispatcher).toSelf().inSingletonScope();
    (0, protocol_1.bindOrRebind)(context, types_1.TYPES.IActionDispatcher).toService(action_dispatcher_1.GLSPActionDispatcher);
    bind(model_initialization_constraint_1.ModelInitializationConstraint).to(model_initialization_constraint_1.DefaultModelInitializationConstraint).inSingletonScope();
    // support re-registration of model elements and views
    (0, protocol_1.bindOrRebind)(context, types_1.TYPES.SModelRegistry).to(model_registry_1.GLSPModelRegistry).inSingletonScope();
    (0, protocol_1.bindOrRebind)(context, types_1.TYPES.ViewRegistry).to(view_registry_1.GLSPViewRegistry).inSingletonScope();
});
exports["default"] = defaultGLSPModule;
/**
 * Utility function to configure the {@link ModelSource}, i.e. the `DiagramServer`, as action handler for all server actions for the given
 * diagramType.
 * @param result A promise that resolves after all server actions have been registered.
 * @param diagramType The diagram type.
 * @param container The di container.
 */
async function configureServerActions(result, diagramType, container) {
    const modelSource = container.get(types_1.TYPES.ModelSource);
    const actionHandlerRegistry = container.get(sprotty_1.ActionHandlerRegistry);
    const serverActions = result.serverActions[diagramType];
    if (serverActions.length === 0) {
        throw new Error(`No server-handled actions could be derived from the initialize result for diagramType: ${diagramType}!`);
    }
    serverActions.forEach(actionKind => actionHandlerRegistry.register(actionKind, modelSource));
}
exports.configureServerActions = configureServerActions;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/base/drag-aware-mouse-listener.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/base/drag-aware-mouse-listener.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DragAwareMouseListener = void 0;
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
/**
 * A mouse listener that is aware of prior mouse dragging.
 *
 * Therefore, this listener distinguishes between mouse up events after dragging and
 * mouse up events without prior dragging. Subclasses may override the methods
 * `draggingMouseUp` and/or `nonDraggingMouseUp` to react to only these specific kinds
 * of mouse up events.
 */
class DragAwareMouseListener extends sprotty_1.MouseListener {
    constructor() {
        super(...arguments);
        this._isMouseDown = false;
        this._isMouseDrag = false;
    }
    mouseDown(target, event) {
        this._isMouseDown = true;
        return [];
    }
    mouseMove(target, event) {
        if (this._isMouseDown) {
            this._isMouseDrag = true;
        }
        return [];
    }
    mouseUp(element, event) {
        this._isMouseDown = false;
        if (this._isMouseDrag) {
            this._isMouseDrag = false;
            return this.draggingMouseUp(element, event);
        }
        return this.nonDraggingMouseUp(element, event);
    }
    nonDraggingMouseUp(element, event) {
        return [];
    }
    draggingMouseUp(element, event) {
        return [];
    }
    get isMouseDrag() {
        return this._isMouseDrag;
    }
    get isMouseDown() {
        return this._isMouseDown;
    }
}
exports.DragAwareMouseListener = DragAwareMouseListener;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/base/editor-context-service.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/base/editor-context-service.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EditorContextService = void 0;
/********************************************************************************
 * Copyright (c) 2020-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const selection_service_1 = __webpack_require__(/*! ../features/select/selection-service */ "./node_modules/@eclipse-glsp/client/lib/features/select/selection-service.js");
const source_uri_aware_1 = __webpack_require__(/*! ./source-uri-aware */ "./node_modules/@eclipse-glsp/client/lib/base/source-uri-aware.js");
const types_1 = __webpack_require__(/*! ./types */ "./node_modules/@eclipse-glsp/client/lib/base/types.js");
/**
 * The `EditorContextService` is a central injectable component that gives read-only access to
 * certain aspects of the diagram, such as the currently selected elements, the model root,
 * the edit mode, the latest position of the mouse in the diagram.
 *
 * It has been introduced for two main reasons:
 * 1. to simplify accessing the model root and the current selection from components that are
 *    not commands,
 * 2. to conveniently create an EditorContext, which is a context object sent as part of several
 *    actions to the server to describe the current state of the editor (selection, last mouse
 *    position, etc.).
 */
let EditorContextService = class EditorContextService {
    constructor() {
        this.editModeListeners = [];
    }
    register(editModeListener) {
        (0, protocol_1.distinctAdd)(this.editModeListeners, editModeListener);
    }
    deregister(editModeListener) {
        (0, protocol_1.remove)(this.editModeListeners, editModeListener);
    }
    get(args) {
        return {
            selectedElementIds: Array.from(this.selectionService.getSelectedElementIDs()),
            lastMousePosition: this.mousePositionTracker.lastPositionOnDiagram,
            args
        };
    }
    getWithSelection(selectedElementIds, args) {
        return {
            selectedElementIds,
            lastMousePosition: this.mousePositionTracker.lastPositionOnDiagram,
            args
        };
    }
    handle(action) {
        if (protocol_1.SetEditModeAction.is(action)) {
            const oldValue = this._editMode;
            this._editMode = action.editMode;
            this.notifyEditModeListeners(oldValue);
        }
    }
    notifyEditModeListeners(oldValue) {
        this.editModeListeners.forEach(listener => listener.editModeChanged(oldValue, this.editMode));
    }
    async getSourceUri() {
        const modelSource = await this.modelSourceProvider();
        if ((0, source_uri_aware_1.isSourceUriAware)(modelSource)) {
            return modelSource.sourceURI;
        }
        return undefined;
    }
    get editMode() {
        return this._editMode;
    }
    get modelRoot() {
        return this.selectionService.getModelRoot();
    }
    get selectedElements() {
        return this.selectionService.getSelectedElements();
    }
    get isReadonly() {
        return this.editMode === protocol_1.EditMode.READONLY;
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.SelectionService),
    __metadata("design:type", selection_service_1.SelectionService)
], EditorContextService.prototype, "selectionService", void 0);
__decorate([
    (0, inversify_1.inject)(sprotty_1.MousePositionTracker),
    __metadata("design:type", sprotty_1.MousePositionTracker)
], EditorContextService.prototype, "mousePositionTracker", void 0);
__decorate([
    (0, inversify_1.multiInject)(types_1.TYPES.IEditModeListener),
    (0, inversify_1.optional)(),
    __metadata("design:type", Array)
], EditorContextService.prototype, "editModeListeners", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ModelSourceProvider),
    __metadata("design:type", Function)
], EditorContextService.prototype, "modelSourceProvider", void 0);
EditorContextService = __decorate([
    (0, inversify_1.injectable)()
], EditorContextService);
exports.EditorContextService = EditorContextService;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/base/focus-tracker.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/base/focus-tracker.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FocusTracker = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const focus_change_action_1 = __webpack_require__(/*! ./actions/focus-change-action */ "./node_modules/@eclipse-glsp/client/lib/base/actions/focus-change-action.js");
const types_1 = __webpack_require__(/*! ./types */ "./node_modules/@eclipse-glsp/client/lib/base/types.js");
let FocusTracker = class FocusTracker {
    constructor() {
        this.inActiveCssClass = 'inactive';
        this._hasFocus = true;
    }
    get hasFocus() {
        return this._hasFocus;
    }
    handle(action) {
        if (focus_change_action_1.FocusStateChangedAction.is(action)) {
            this._hasFocus = action.hasFocus;
            const placeholder = document.getElementById(this.options.baseDiv);
            if (!placeholder) {
                return;
            }
            if (this.hasFocus) {
                if (placeholder.classList.contains(this.inActiveCssClass)) {
                    placeholder.classList.remove(this.inActiveCssClass);
                }
            }
            else {
                placeholder.classList.add(this.inActiveCssClass);
            }
        }
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ViewerOptions),
    __metadata("design:type", Object)
], FocusTracker.prototype, "options", void 0);
FocusTracker = __decorate([
    (0, inversify_1.injectable)()
], FocusTracker);
exports.FocusTracker = FocusTracker;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/base/model-initialization-constraint.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/base/model-initialization-constraint.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DefaultModelInitializationConstraint = exports.ModelInitializationConstraint = void 0;
/********************************************************************************
 * Copyright (c) 2020-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
/**
 * The constraint defining when the initialization of the GLSP model is completed.
 *
 * Many actions, such as the `CenterAction`, can only be successfully processed if
 * the GLSP model initialization is completed, that is, the model has been set,
 * its bounds have been computed, the canvas bounds are available, etc.
 *
 * An injectable implementation of this constraint will be used by the
 * `GLSPActionDispatcher` to determine when the initialization is completed.
 * The action dispatcher therefore provides a promise via `onceInitialized()`
 * to trigger clients that want to dispatch an action, once the initialization
 * is done.
 *
 * For most of the cases `DefaultInitializationConstraint` can be used. In fact,
 * it is bound by default. However, custom implementations can rebind other
 * implementations of this constraint to, for instance, delay further before the
 * `onceInitialized()` promise is fulfilled by the `GLSPActionDispatcher`.
 */
let ModelInitializationConstraint = class ModelInitializationConstraint {
    constructor() {
        this.completion = new protocol_1.Deferred();
        this.completed = false;
    }
    get isCompleted() {
        return this.completed;
    }
    setCompleted(isCompleted) {
        this.completed = isCompleted;
        if (isCompleted) {
            this.completion.resolve();
        }
    }
    onInitialized() {
        return this.completion.promise;
    }
    notifyDispatched(action) {
        if (this.isCompleted) {
            return;
        }
        if (this.isInitializedAfter(action)) {
            this.setCompleted(true);
        }
    }
};
ModelInitializationConstraint = __decorate([
    (0, inversify_1.injectable)()
], ModelInitializationConstraint);
exports.ModelInitializationConstraint = ModelInitializationConstraint;
/**
 * Default initialization constraint triggers after a non-empty `UpdateModelAction`
 * and a subsequent `InitializeCanvasBoundsAction`.
 */
let DefaultModelInitializationConstraint = class DefaultModelInitializationConstraint extends ModelInitializationConstraint {
    constructor() {
        super(...arguments);
        this.seenNonEmptyModelAction = false;
    }
    isInitializedAfter(action) {
        if (this.isNonEmptyModelAction(action)) {
            this.seenNonEmptyModelAction = true;
        }
        else if (this.seenNonEmptyModelAction && action.kind === sprotty_1.InitializeCanvasBoundsAction.KIND) {
            return true;
        }
        return false;
    }
    isNonEmptyModelAction(action) {
        if (protocol_1.SetModelAction.is(action) || protocol_1.UpdateModelAction.is(action)) {
            return action.newRoot.type !== 'NONE';
        }
        return false;
    }
};
DefaultModelInitializationConstraint = __decorate([
    (0, inversify_1.injectable)()
], DefaultModelInitializationConstraint);
exports.DefaultModelInitializationConstraint = DefaultModelInitializationConstraint;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/base/model/model-registry.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/base/model/model-registry.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GLSPModelRegistry = void 0;
/********************************************************************************
 * Copyright (c) 2021-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
let GLSPModelRegistry = class GLSPModelRegistry extends sprotty_1.SModelRegistry {
    register(key, factory) {
        if (key === undefined) {
            throw new Error('Key is undefined');
        }
        if (this.hasKey(key)) {
            // do not throw error but log overwriting
            console.log(`Factory for model element '${key}' will be overwritten.`);
        }
        this.elements.set(key, factory);
    }
};
GLSPModelRegistry = __decorate([
    (0, inversify_1.injectable)()
], GLSPModelRegistry);
exports.GLSPModelRegistry = GLSPModelRegistry;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/base/model/update-model-command.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/base/model/update-model-command.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FeedbackAwareUpdateModelCommand = exports.SetModelActionHandler = void 0;
/********************************************************************************
 * Copyright (c) 2019-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const types_1 = __webpack_require__(/*! ../types */ "./node_modules/@eclipse-glsp/client/lib/base/types.js");
/**
 * ActionHandler that transforms a {@link SetModelAction} into an {@link UpdateModelAction} that can be handled
 * by the {@link FeedbackAwareUpdateModelCommand}. This can be done because in sprotty an {@link UpdateModelCommand} and
 * a {@link SetModelCommand} have the same behavior of no model is present yet.
 */
let SetModelActionHandler = class SetModelActionHandler {
    handle(action) {
        if (protocol_1.SetModelAction.is(action)) {
            return protocol_1.UpdateModelAction.create(action.newRoot, { animate: false });
        }
    }
};
SetModelActionHandler = __decorate([
    (0, inversify_1.injectable)()
], SetModelActionHandler);
exports.SetModelActionHandler = SetModelActionHandler;
/**
 * A special {@link UpdateModelCommand} that retrieves all registered {@link Action}s from the {@link IFeedbackActionDispatcher}
 * (if present) and applies their feedback to the `newRoot` before performing the update. This enables persistent client-side feedback
 * across model updates initiated by the GLSP server.
 */
let FeedbackAwareUpdateModelCommand = class FeedbackAwareUpdateModelCommand extends sprotty_1.UpdateModelCommand {
    constructor(action, actionHandlerRegistryProvider) {
        super(Object.assign({ animate: true }, action));
        this.modelRootListeners = [];
        actionHandlerRegistryProvider().then(registry => (this.actionHandlerRegistry = registry));
    }
    performUpdate(oldRoot, newRoot, context) {
        if (this.feedbackActionDispatcher && this.actionHandlerRegistry) {
            // Create a temporary context which defines the `newRoot` as `root`
            // This way we do not corrupt the redo/undo behavior of the super class
            const tempContext = Object.assign(Object.assign({}, context), { root: newRoot });
            const feedbackCommands = this.getFeedbackCommands(this.actionHandlerRegistry);
            feedbackCommands.forEach(command => command.execute(tempContext));
        }
        this.modelRootListeners.forEach(listener => listener.modelRootChanged(newRoot));
        return super.performUpdate(oldRoot, newRoot, context);
    }
    getFeedbackCommands(registry) {
        const result = [];
        this.feedbackActionDispatcher.getRegisteredFeedback().forEach(action => {
            const commands = registry
                .get(action.kind)
                .filter((0, protocol_1.toTypeGuard)(sprotty_1.CommandActionHandler))
                .map(handler => handler.handle(action));
            result.push(...commands);
        });
        // sort commands descanting by priority
        return result.sort((a, b) => this.getPriority(b) - this.getPriority(a));
    }
    getPriority(command) {
        var _a;
        return (_a = command.priority) !== null && _a !== void 0 ? _a : 0;
    }
    // Override the `createAnimations` implementation and remove the animation for edge morphing. Otherwise routing & reconnect
    // handles flicker after each server update.
    createAnimations(data, root, context) {
        const animations = super.createAnimations(data, root, context);
        return animations.filter(animation => !(animation instanceof sprotty_1.MorphEdgesAnimation));
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ILogger),
    __metadata("design:type", Object)
], FeedbackAwareUpdateModelCommand.prototype, "logger", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.IFeedbackActionDispatcher),
    (0, inversify_1.optional)(),
    __metadata("design:type", Object)
], FeedbackAwareUpdateModelCommand.prototype, "feedbackActionDispatcher", void 0);
__decorate([
    (0, inversify_1.multiInject)(types_1.TYPES.SModelRootListener),
    (0, inversify_1.optional)(),
    __metadata("design:type", Array)
], FeedbackAwareUpdateModelCommand.prototype, "modelRootListeners", void 0);
FeedbackAwareUpdateModelCommand = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
    __param(1, (0, inversify_1.inject)(types_1.TYPES.ActionHandlerRegistryProvider)),
    __metadata("design:paramtypes", [Object, Function])
], FeedbackAwareUpdateModelCommand);
exports.FeedbackAwareUpdateModelCommand = FeedbackAwareUpdateModelCommand;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/base/selection-clearing-mouse-listener.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/base/selection-clearing-mouse-listener.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SelectionClearingMouseListener = void 0;
/********************************************************************************
 * Copyright (c) 2020-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
/**
 * A mouse listener that clears the document selection on click
 *
 * Clicking on SVG elements doesn't update the document selection. In the context of diagramming
 * with GLSP, this is unnatural, as the user would expect that clicking in the diagram (e.g. to
 * select a diagram element) would clear any other selection state in the DOM. From a technical
 * point of view, an active selection in the document after clicking into the diagram may also
 * lead to bogus target elements in certain browser events, such as clipboard events, etc.
 *
 * This listener helps to overcome this problem by actively clearing any existing selection in
 * the document, if the user clicks into the diagram.
 */
let SelectionClearingMouseListener = class SelectionClearingMouseListener extends sprotty_1.MouseListener {
    mouseDown(_target, event) {
        const selection = document.getSelection();
        // eslint-disable-next-line no-null/no-null
        if (selection === null) {
            return [];
        }
        selection.removeAllRanges();
        selection.addRange(document.createRange());
        return [];
    }
};
SelectionClearingMouseListener = __decorate([
    (0, inversify_1.injectable)()
], SelectionClearingMouseListener);
exports.SelectionClearingMouseListener = SelectionClearingMouseListener;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/base/source-uri-aware.js":
/*!************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/base/source-uri-aware.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isSourceUriAware = void 0;
/********************************************************************************
 * Copyright (c) 2020-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
function isSourceUriAware(obj) {
    return protocol_1.AnyObject.is(obj) && (0, protocol_1.hasStringProp)(obj, 'sourceURI');
}
exports.isSourceUriAware = isSourceUriAware;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/base/tool-manager/glsp-tool-manager.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/base/tool-manager/glsp-tool-manager.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GLSPTool = exports.GLSPToolManager = void 0;
/********************************************************************************
 * Copyright (c) 2020-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const types_1 = __webpack_require__(/*! ../types */ "./node_modules/@eclipse-glsp/client/lib/base/types.js");
let GLSPToolManager = class GLSPToolManager extends sprotty_1.ToolManager {
    initialize() {
        this.registerTools(...this.tools);
        this.registerDefaultTools(...this.defaultTools);
        this.enableDefaultTools();
        this.contextServiceProvider().then(editorContext => {
            editorContext.register(this);
            this.editorContext = editorContext;
        });
    }
    registerDefaultTools(...tools) {
        for (const tool of tools) {
            (0, protocol_1.distinctAdd)(this.defaultTools, tool);
        }
    }
    registerTools(...tools) {
        for (const tool of tools) {
            (0, protocol_1.distinctAdd)(this.tools, tool);
        }
    }
    enable(toolIds) {
        this.disableActiveTools();
        let tools = toolIds.map(id => this.tool(id));
        if (this.editorContext && this.editorContext.isReadonly) {
            tools = tools.filter(tool => tool && (!GLSPTool.is(tool) || tool.isEditTool === false));
        }
        tools.forEach(tool => {
            if (tool !== undefined) {
                tool.enable();
                this.actives.push(tool);
            }
        });
    }
    disableEditTools() {
        this.disableActiveTools();
        this.enable(this.defaultTools.filter(tool => !GLSPTool.is(tool) || tool.isEditTool === false).map(tool => tool.id));
    }
    editModeChanged(oldValue, newValue) {
        if (oldValue === newValue) {
            return;
        }
        if (newValue === protocol_1.EditMode.READONLY) {
            this.disableEditTools();
        }
        else if (newValue === protocol_1.EditMode.EDITABLE) {
            this.enableDefaultTools();
        }
    }
};
__decorate([
    (0, inversify_1.multiInject)(types_1.TYPES.ITool),
    (0, inversify_1.optional)(),
    __metadata("design:type", Array)
], GLSPToolManager.prototype, "tools", void 0);
__decorate([
    (0, inversify_1.multiInject)(types_1.TYPES.IDefaultTool),
    (0, inversify_1.optional)(),
    __metadata("design:type", Array)
], GLSPToolManager.prototype, "defaultTools", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.IEditorContextServiceProvider),
    __metadata("design:type", Function)
], GLSPToolManager.prototype, "contextServiceProvider", void 0);
__decorate([
    (0, inversify_1.postConstruct)(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], GLSPToolManager.prototype, "initialize", null);
GLSPToolManager = __decorate([
    (0, inversify_1.injectable)()
], GLSPToolManager);
exports.GLSPToolManager = GLSPToolManager;
var GLSPTool;
(function (GLSPTool) {
    function is(object) {
        return (protocol_1.AnyObject.is(object) &&
            (0, protocol_1.hasStringProp)(object, 'id') &&
            (0, protocol_1.hasFunctionProp)(object, 'enable') &&
            (0, protocol_1.hasFunctionProp)(object, 'disable') &&
            (0, protocol_1.hasBooleanProp)(object, 'isEditTool'));
    }
    GLSPTool.is = is;
})(GLSPTool = exports.GLSPTool || (exports.GLSPTool = {}));


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/base/tool-manager/tool-actions.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/base/tool-manager/tool-actions.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EnableToolsAction = exports.EnableDefaultToolsAction = void 0;
/********************************************************************************
 * Copyright (c) 2022 STMicroelectronics and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const tool_1 = __webpack_require__(/*! sprotty/lib/base/tool-manager/tool */ "./node_modules/sprotty/lib/base/tool-manager/tool.js");
Object.defineProperty(exports, "EnableDefaultToolsAction", ({ enumerable: true, get: function () { return tool_1.EnableDefaultToolsAction; } }));
Object.defineProperty(exports, "EnableToolsAction", ({ enumerable: true, get: function () { return tool_1.EnableToolsAction; } }));
tool_1.EnableDefaultToolsAction.is = (object) => protocol_1.Action.hasKind(object, tool_1.EnableDefaultToolsAction.KIND);
tool_1.EnableToolsAction.is = (object) => protocol_1.Action.hasKind(object, tool_1.EnableToolsAction.KIND) && (0, protocol_1.hasArrayProp)(object, 'toolIds');


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/base/types.js":
/*!*************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/base/types.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GLSP_TYPES = exports.TYPES = void 0;
/********************************************************************************
 * Copyright (c) 2019-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
/**
 * Reexport of the TYPES namespace of sprotty augments with additional GLSP specific service
 * identifiers.
 */
exports.TYPES = Object.assign(Object.assign({}, sprotty_1.TYPES), { IAsyncClipboardService: Symbol('IAsyncClipboardService'), IEditorContextServiceProvider: Symbol('IEditorContextProvider'), IFeedbackActionDispatcher: Symbol('IFeedbackActionDispatcher'), IToolFactory: Symbol('Factory<Tool>'), ITypeHintProvider: Symbol('ITypeHintProvider'), IMovementRestrictor: Symbol('IMovementRestrictor'), SelectionService: Symbol('SelectionService'), SelectionListener: Symbol('SelectionListener'), SModelRootListener: Symbol('SModelRootListener'), MouseTool: Symbol('MouseTool'), IContextMenuProvider: Symbol('IContextMenuProvider'), ICopyPasteHandler: Symbol('ICopyPasteHandler'), ITool: Symbol('ITool'), IDefaultTool: Symbol('IDefaultTool'), IEditModeListener: Symbol('IEditModeListener'), IMarqueeBehavior: Symbol('IMarqueeBehavior') });
/**
 * Keep a reexport under the old deprecated namespace to avoid hard API breaks.
 * This gives adopters a grace period but all deprecated API will be removed before the 1.0.0 release.
 * @deprecated Please use `TYPES` from `@eclipse-glsp/client` instead
 */
exports.GLSP_TYPES = exports.TYPES;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/base/view/view-registry.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/base/view/view-registry.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GLSPViewRegistry = void 0;
/********************************************************************************
 * Copyright (c) 2021-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
let GLSPViewRegistry = class GLSPViewRegistry extends sprotty_1.ViewRegistry {
    register(key, instance) {
        if (key === undefined) {
            throw new Error('Key is undefined');
        }
        if (this.hasKey(key)) {
            // do not throw error but log overwriting
            console.log(`View instance for type '${key}' will be overwritten.`);
        }
        this.elements.set(key, instance);
    }
};
GLSPViewRegistry = __decorate([
    (0, inversify_1.injectable)()
], GLSPViewRegistry);
exports.GLSPViewRegistry = GLSPViewRegistry;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/bounds/di.config.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/bounds/di.config.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2022-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/@eclipse-glsp/client/lib/base/types.js");
const freeform_layout_1 = __webpack_require__(/*! ./freeform-layout */ "./node_modules/@eclipse-glsp/client/lib/features/bounds/freeform-layout.js");
const glsp_hidden_bounds_updater_1 = __webpack_require__(/*! ./glsp-hidden-bounds-updater */ "./node_modules/@eclipse-glsp/client/lib/features/bounds/glsp-hidden-bounds-updater.js");
const hbox_layout_1 = __webpack_require__(/*! ./hbox-layout */ "./node_modules/@eclipse-glsp/client/lib/features/bounds/hbox-layout.js");
const vbox_layout_1 = __webpack_require__(/*! ./vbox-layout */ "./node_modules/@eclipse-glsp/client/lib/features/bounds/vbox-layout.js");
const glspBoundsModule = new inversify_1.ContainerModule((bind, _unbind, isBound, _rebind) => {
    const context = { bind, isBound };
    (0, sprotty_1.configureCommand)(context, sprotty_1.SetBoundsCommand);
    (0, sprotty_1.configureCommand)(context, sprotty_1.RequestBoundsCommand);
    bind(sprotty_1.HiddenBoundsUpdater).toSelf().inSingletonScope();
    (0, protocol_1.bindAsService)(context, types_1.TYPES.HiddenVNodePostprocessor, glsp_hidden_bounds_updater_1.GLSPHiddenBoundsUpdater);
    bind(types_1.TYPES.Layouter).to(sprotty_1.Layouter).inSingletonScope();
    bind(types_1.TYPES.LayoutRegistry).to(sprotty_1.LayoutRegistry).inSingletonScope();
    (0, sprotty_1.configureLayout)(context, sprotty_1.VBoxLayouter.KIND, vbox_layout_1.VBoxLayouterExt);
    (0, sprotty_1.configureLayout)(context, sprotty_1.HBoxLayouter.KIND, hbox_layout_1.HBoxLayouterExt);
    (0, sprotty_1.configureLayout)(context, freeform_layout_1.FreeFormLayouter.KIND, freeform_layout_1.FreeFormLayouter);
});
exports["default"] = glspBoundsModule;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/bounds/freeform-layout.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/bounds/freeform-layout.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FreeFormLayouter = void 0;
/********************************************************************************
 * Copyright (c) 2021-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const abstract_layout_1 = __webpack_require__(/*! sprotty/lib/features/bounds/abstract-layout */ "./node_modules/sprotty/lib/features/bounds/abstract-layout.js");
/**
 * Layouts children of a container with explicit X/Y positions
 */
let FreeFormLayouter = class FreeFormLayouter extends abstract_layout_1.AbstractLayout {
    layout(container, layouter) {
        const boundsData = layouter.getBoundsData(container);
        const options = this.getLayoutOptions(container);
        const childrenSize = this.getChildrenSize(container, options, layouter);
        // The real size of the compartment will be determined by the parent node layout;
        // we only need to compute the bounds required to layout the children.
        const maxWidth = childrenSize.width > 0 ? childrenSize.width + options.paddingLeft + options.paddingRight : 0;
        const maxHeight = childrenSize.height > 0 ? childrenSize.height + options.paddingTop + options.paddingBottom : 0;
        if (maxWidth > 0 && maxHeight > 0) {
            const offset = this.layoutChildren(container, layouter, options, maxWidth, maxHeight);
            boundsData.bounds = this.getFinalContainerBounds(container, offset, options, maxWidth, maxHeight);
            boundsData.boundsChanged = true;
        }
        else {
            boundsData.bounds = { x: boundsData.bounds.x, y: boundsData.bounds.y, width: 0, height: 0 };
            boundsData.boundsChanged = true;
        }
    }
    getChildrenSize(container, containerOptions, layouter) {
        let maxX = 0;
        let maxY = 0;
        container.children.forEach(child => {
            const bounds = layouter.getBoundsData(child).bounds;
            if (bounds !== undefined && protocol_1.Dimension.isValid(bounds)) {
                const childMaxX = bounds.x + bounds.width;
                const childMaxY = bounds.y + bounds.height;
                maxX = Math.max(maxX, childMaxX);
                maxY = Math.max(maxY, childMaxY);
            }
        });
        return {
            width: maxX,
            height: maxY
        };
    }
    layoutChild(child, boundsData, bounds, childOptions, containerOptions, currentOffset, maxWidth, maxHeight) {
        boundsData.bounds = {
            x: child.bounds.x,
            y: child.bounds.y,
            width: bounds.width,
            height: bounds.height
        };
        boundsData.boundsChanged = true;
        return currentOffset;
    }
    getFinalContainerBounds(container, lastOffset, options, maxWidth, maxHeight) {
        const result = {
            x: container.bounds.x,
            y: container.bounds.y,
            width: Math.max(options.minWidth, maxWidth + options.paddingLeft + options.paddingRight),
            height: Math.max(options.minHeight, maxHeight + options.paddingTop + options.paddingBottom)
        };
        return result;
    }
    getDefaultLayoutOptions() {
        return {
            resizeContainer: true,
            paddingTop: 0,
            paddingBottom: 0,
            paddingLeft: 0,
            paddingRight: 0,
            paddingFactor: 1,
            minWidth: 0,
            minHeight: 0
        };
    }
    spread(a, b) {
        return Object.assign(Object.assign({}, a), b);
    }
};
FreeFormLayouter.KIND = 'freeform';
FreeFormLayouter = __decorate([
    (0, inversify_1.injectable)()
], FreeFormLayouter);
exports.FreeFormLayouter = FreeFormLayouter;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/bounds/glsp-hidden-bounds-updater.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/bounds/glsp-hidden-bounds-updater.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2022-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GLSPHiddenBoundsUpdater = void 0;
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const smodel_util_1 = __webpack_require__(/*! ../../utils/smodel-util */ "./node_modules/@eclipse-glsp/client/lib/utils/smodel-util.js");
/**
 * Grabs the bounds from hidden SVG DOM elements, applies layouts, collects routes and fires {@link ComputedBoundsAction}s.
 *
 * The actions will contain the bound, alignment, and routing points of elements.
 */
let GLSPHiddenBoundsUpdater = class GLSPHiddenBoundsUpdater extends sprotty_1.HiddenBoundsUpdater {
    constructor() {
        super(...arguments);
        this.element2route = [];
        this.edges = [];
        this.nodes = [];
    }
    decorate(vnode, element) {
        super.decorate(vnode, element);
        if ((0, smodel_util_1.isRoutable)(element)) {
            this.element2route.push((0, smodel_util_1.calcElementAndRoute)(element, this.edgeRouterRegistry));
        }
        return vnode;
    }
    postUpdate(cause) {
        const actions = this.captureActions(() => super.postUpdate(cause));
        actions
            .filter(action => protocol_1.ComputedBoundsAction.is(action))
            .forEach(action => this.actionDispatcher.dispatch(this.enhanceAction(action)));
        this.element2route = [];
    }
    captureActions(call) {
        const capturingActionDispatcher = new CapturingActionDispatcher();
        const actualActionDispatcher = this.actionDispatcher;
        this.actionDispatcher = capturingActionDispatcher;
        try {
            call();
            return capturingActionDispatcher.actions;
        }
        finally {
            this.actionDispatcher = actualActionDispatcher;
        }
    }
    enhanceAction(action) {
        action.routes = this.element2route.length === 0 ? undefined : this.element2route;
        return action;
    }
};
__decorate([
    (0, inversify_1.inject)(sprotty_1.EdgeRouterRegistry),
    (0, inversify_1.optional)(),
    __metadata("design:type", sprotty_1.EdgeRouterRegistry)
], GLSPHiddenBoundsUpdater.prototype, "edgeRouterRegistry", void 0);
GLSPHiddenBoundsUpdater = __decorate([
    (0, inversify_1.injectable)()
], GLSPHiddenBoundsUpdater);
exports.GLSPHiddenBoundsUpdater = GLSPHiddenBoundsUpdater;
class CapturingActionDispatcher {
    constructor() {
        this.actions = [];
    }
    async dispatch(action) {
        this.actions.push(action);
    }
    async dispatchAll(actions) {
        this.actions.push(...actions);
    }
    async request(action) {
        // ignore, not needed for our purposes
        return new protocol_1.Deferred().promise;
    }
}


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/bounds/hbox-layout.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/bounds/hbox-layout.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.HBoxLayouterExt = void 0;
/********************************************************************************
 * Copyright (c) 2021-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
/**
 * Extends HBoxLayouter to support additional layout options
 */
let HBoxLayouterExt = class HBoxLayouterExt extends sprotty_1.HBoxLayouter {
    layout(container, layouter) {
        var _a, _b;
        const boundsData = layouter.getBoundsData(container);
        const options = this.getLayoutOptions(container);
        const childrenSize = this.getChildrenSize(container, options, layouter);
        const fixedSize = this.getFixedContainerBounds(container, options, layouter);
        const currentWidth = boundsData.bounds ? ((_a = boundsData.bounds) === null || _a === void 0 ? void 0 : _a.width) - options.paddingLeft - options.paddingRight : 0;
        const currentHeight = boundsData.bounds ? ((_b = boundsData.bounds) === null || _b === void 0 ? void 0 : _b.height) - options.paddingTop - options.paddingBottom : 0;
        const maxWidth = options.paddingFactor *
            (options.resizeContainer
                ? Math.max(fixedSize.width - options.paddingLeft - options.paddingRight, childrenSize.width)
                : Math.max(0, fixedSize.width - options.paddingLeft - options.paddingRight));
        const maxHeight = options.paddingFactor *
            (options.resizeContainer
                ? Math.max(fixedSize.height - options.paddingTop - options.paddingBottom, childrenSize.height)
                : Math.max(0, fixedSize.height - options.paddingTop - options.paddingBottom));
        const width = Math.max(currentWidth, maxWidth);
        const height = Math.max(currentHeight, maxHeight);
        // Remaining size that can be grabbed by children with the hGrab option
        const grabWidth = width - childrenSize.width;
        // Number of children that request hGrab
        // FIXME: This approach works fine when only 1 child uses HGrab, but may cause rounding issues
        // when the grabHeight can't be equally shared by all children.
        const grabbingChildren = container.children
            .map(child => this.getChildLayoutOptions(child, options))
            .filter(opt => opt.hGrab).length;
        if (width > 0 && height > 0) {
            const offset = this.layoutChildren(container, layouter, options, width, height, grabWidth, grabbingChildren);
            boundsData.bounds = this.getFinalContainerBounds(container, offset, options, childrenSize.width, childrenSize.height);
            boundsData.boundsChanged = true;
        }
    }
    getChildrenSize(container, containerOptions, layouter) {
        let maxWidth = 0;
        let maxHeight = -1;
        let isFirst = true;
        container.children.forEach(child => {
            if ((0, sprotty_1.isLayoutableChild)(child)) {
                const bounds = layouter.getBoundsData(child).bounds;
                if (bounds !== undefined && protocol_1.Dimension.isValid(bounds)) {
                    maxWidth += bounds.width;
                    if (isFirst) {
                        isFirst = false;
                    }
                    else {
                        maxWidth += containerOptions.hGap;
                    }
                    maxHeight = Math.max(maxHeight, bounds.height);
                }
            }
        });
        const result = {
            width: maxWidth,
            height: maxHeight
        };
        return result;
    }
    layoutChildren(container, layouter, containerOptions, maxWidth, maxHeight, grabWidth, grabbingChildren) {
        let currentOffset = {
            x: containerOptions.paddingLeft + 0.5 * (maxWidth - maxWidth / containerOptions.paddingFactor),
            y: containerOptions.paddingTop + 0.5 * (maxHeight - maxHeight / containerOptions.paddingFactor)
        };
        container.children.forEach(child => {
            if ((0, sprotty_1.isLayoutableChild)(child)) {
                const boundsData = layouter.getBoundsData(child);
                const bounds = boundsData.bounds;
                const childOptions = this.getChildLayoutOptions(child, containerOptions);
                if (bounds !== undefined && protocol_1.Dimension.isValid(bounds)) {
                    currentOffset = this.layoutChild(child, boundsData, bounds, childOptions, containerOptions, currentOffset, maxWidth, maxHeight, grabWidth, grabbingChildren);
                }
            }
        });
        return currentOffset;
    }
    layoutChild(child, boundsData, bounds, childOptions, containerOptions, currentOffset, maxWidth, maxHeight, grabWidth, grabbingChildren) {
        const vAlign = childOptions.vGrab ? 'top' : childOptions.vAlign;
        const dy = this.getDy(vAlign, bounds, maxHeight);
        let offset = super.layoutChild(child, boundsData, bounds, childOptions, containerOptions, currentOffset, maxWidth, maxHeight);
        boundsData.bounds = Object.assign(Object.assign({}, boundsData.bounds), { x: currentOffset.x, y: currentOffset.y + dy });
        if (childOptions.vGrab) {
            boundsData.bounds = {
                x: boundsData.bounds.x,
                y: boundsData.bounds.y,
                width: boundsData.bounds.width,
                height: maxHeight
            };
            boundsData.boundsChanged = true;
        }
        if (childOptions.hGrab && grabWidth && grabbingChildren) {
            const width = boundsData.bounds.width + grabWidth / grabbingChildren;
            boundsData.bounds = {
                x: boundsData.bounds.x,
                y: boundsData.bounds.y,
                width: width,
                height: boundsData.bounds.height
            };
            boundsData.boundsChanged = true;
            offset = { x: currentOffset.x + width, y: currentOffset.y };
        }
        return offset;
    }
    getFixedContainerBounds(container, layoutOptions, layouter) {
        var _a, _b;
        const currentContainer = container;
        // eslint-disable-next-line no-constant-condition
        if ((0, sprotty_1.isBoundsAware)(currentContainer)) {
            const bounds = currentContainer.bounds;
            const elementOptions = this.getElementLayoutOptions(currentContainer);
            const width = (_a = elementOptions === null || elementOptions === void 0 ? void 0 : elementOptions.prefWidth) !== null && _a !== void 0 ? _a : 0;
            const height = (_b = elementOptions === null || elementOptions === void 0 ? void 0 : elementOptions.prefHeight) !== null && _b !== void 0 ? _b : 0;
            return Object.assign(Object.assign({}, bounds), { width, height });
        }
        return protocol_1.Bounds.EMPTY;
    }
    getChildLayoutOptions(child, containerOptions) {
        return super.getChildLayoutOptions(child, this.filterContainerOptions(containerOptions));
    }
    getLayoutOptions(element) {
        return super.getLayoutOptions(element);
    }
    getElementLayoutOptions(element) {
        return element.layoutOptions;
    }
    getFinalContainerBounds(container, lastOffset, options, maxWidth, maxHeight) {
        var _a, _b;
        const elementOptions = this.getElementLayoutOptions(container);
        const width = (_a = elementOptions === null || elementOptions === void 0 ? void 0 : elementOptions.prefWidth) !== null && _a !== void 0 ? _a : options.minWidth;
        const height = (_b = elementOptions === null || elementOptions === void 0 ? void 0 : elementOptions.prefHeight) !== null && _b !== void 0 ? _b : options.minHeight;
        const result = {
            x: container.bounds.x,
            y: container.bounds.y,
            width: Math.max(width, maxWidth + options.paddingLeft + options.paddingRight),
            height: Math.max(height, maxHeight + options.paddingTop + options.paddingBottom)
        };
        return result;
    }
    getDefaultLayoutOptions() {
        return {
            resizeContainer: true,
            paddingTop: 5,
            paddingBottom: 5,
            paddingLeft: 5,
            paddingRight: 5,
            paddingFactor: 1,
            hGap: 1,
            vAlign: 'center',
            minWidth: 0,
            minHeight: 0,
            hGrab: false,
            vGrab: false,
            // eslint-disable-next-line no-null/no-null
            prefHeight: null,
            // eslint-disable-next-line no-null/no-null
            prefWidth: null
        };
    }
    filterContainerOptions(containerOptions) {
        // Reset object-specific layout options to default before merging,
        // to make sure they won't be inherited (grab, prefSize)
        // eslint-disable-next-line no-null/no-null
        const localOptions = { vGrab: false, hGrab: false, prefHeight: null, prefWidth: null };
        return Object.assign(Object.assign({}, containerOptions), localOptions);
    }
};
HBoxLayouterExt.KIND = sprotty_1.HBoxLayouter.KIND;
HBoxLayouterExt = __decorate([
    (0, inversify_1.injectable)()
], HBoxLayouterExt);
exports.HBoxLayouterExt = HBoxLayouterExt;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/bounds/layouter.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/bounds/layouter.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.StatefulLayouterExt = exports.LayouterExt = void 0;
/********************************************************************************
 * Copyright (c) 2022-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "./node_modules/sprotty-protocol/lib/utils/geometry.js");
let LayouterExt = class LayouterExt extends sprotty_1.Layouter {
    layout(element2boundsData) {
        new StatefulLayouterExt(element2boundsData, this.layoutRegistry, this.logger).layout();
    }
};
LayouterExt = __decorate([
    (0, inversify_1.injectable)()
], LayouterExt);
exports.LayouterExt = LayouterExt;
// 2-pass layout:
// Step 1: Find "rendered size" of each element (may take resizeContainer into account)
// Child-to-parent layout
// Step 2: Extend parents as necessary, then use the adjusted parent size to properly
// align children (center/end alignments, hGrab/vGrab)
// Parent-to-children layout
class StatefulLayouterExt extends sprotty_1.StatefulLayouter {
    /**
     *
     * @param elementToBoundsData The map of element to bounds data. Bounds Data are computed from the hidden
     * SVG rendering pass.
     * @param layoutRegistry2 The registry of available layouts.
     * @param log The log.
     */
    constructor(elementToBoundsData, layoutRegistry2, log) {
        super(elementToBoundsData, layoutRegistry2, log);
        this.elementToBoundsData = elementToBoundsData;
        this.layoutRegistry2 = layoutRegistry2;
        this.toBeLayouted2 = [];
        elementToBoundsData.forEach((data, element) => {
            if ((0, sprotty_1.isLayoutContainer)(element)) {
                this.toBeLayouted2.push(element);
            }
        });
        for (const element of this.toBeLayouted2) {
            // Clear previous layout information for dynamic-layout objects
            elementToBoundsData.delete(element);
        }
    }
    getBoundsData(element) {
        let boundsData = this.elementToBoundsData.get(element);
        let bounds = element.bounds;
        if ((0, sprotty_1.isLayoutContainer)(element) && this.toBeLayouted2.indexOf(element) >= 0) {
            bounds = this.doLayout(element);
        }
        else if ((0, sprotty_1.isLayoutContainer)(element)) {
            bounds = {
                x: 0,
                y: 0,
                width: -1,
                height: -1
            };
        }
        if (!boundsData) {
            boundsData = {
                bounds: bounds,
                boundsChanged: false,
                alignmentChanged: false
            };
            this.elementToBoundsData.set(element, boundsData);
        }
        return boundsData;
    }
    layout() {
        // First pass: apply layout with cleared container data. Will get
        // preferred size for all elements (Children first, then parents)
        while (this.toBeLayouted2.length > 0) {
            const element = this.toBeLayouted2[0];
            this.doLayout(element);
        }
        this.toBeLayouted2 = [];
        this.elementToBoundsData.forEach((data, element) => {
            if ((0, sprotty_1.isLayoutContainer)(element)) {
                this.toBeLayouted2.push(element);
            }
        });
        // Second pass: apply layout with initial size data for all
        // nodes. Update the position/size of all elements, taking
        // vGrab/hGrab into account (parent -> children).
        while (this.toBeLayouted2.length > 0) {
            const element = this.toBeLayouted2[0];
            this.doLayout(element);
        }
    }
    doLayout(element) {
        const index = this.toBeLayouted2.indexOf(element);
        if (index >= 0) {
            this.toBeLayouted2.splice(index, 1);
        }
        const layout = this.layoutRegistry2.get(element.layout);
        if (layout) {
            layout.layout(element, this);
        }
        const boundsData = this.elementToBoundsData.get(element);
        if (boundsData !== undefined && boundsData.bounds !== undefined) {
            return boundsData.bounds;
        }
        else {
            this.log.error(element, 'Layout failed');
            return geometry_1.Bounds.EMPTY;
        }
    }
}
exports.StatefulLayouterExt = StatefulLayouterExt;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/bounds/vbox-layout.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/bounds/vbox-layout.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.VBoxLayouterExt = void 0;
/********************************************************************************
 * Copyright (c) 2021-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
/**
 * Extends VBoxLayouter to support additional layout options
 */
let VBoxLayouterExt = class VBoxLayouterExt extends sprotty_1.VBoxLayouter {
    layout(container, layouter) {
        var _a, _b;
        const boundsData = layouter.getBoundsData(container);
        const options = this.getLayoutOptions(container);
        const childrenSize = this.getChildrenSize(container, options, layouter);
        const fixedSize = this.getFixedContainerBounds(container, options, layouter);
        const currentWidth = (((_a = boundsData.bounds) === null || _a === void 0 ? void 0 : _a.width) || 0) - options.paddingLeft - options.paddingRight;
        const currentHeight = (((_b = boundsData.bounds) === null || _b === void 0 ? void 0 : _b.height) || 0) - options.paddingTop - options.paddingBottom;
        const maxWidth = options.paddingFactor *
            (options.resizeContainer
                ? Math.max(fixedSize.width - options.paddingLeft - options.paddingRight, childrenSize.width)
                : Math.max(0, fixedSize.width - options.paddingLeft - options.paddingRight));
        const maxHeight = options.paddingFactor *
            (options.resizeContainer
                ? Math.max(fixedSize.height - options.paddingTop - options.paddingBottom, childrenSize.height)
                : Math.max(0, fixedSize.height - options.paddingTop - options.paddingBottom));
        const width = Math.max(currentWidth, maxWidth);
        const height = Math.max(currentHeight, maxHeight);
        // Remaining size that can be grabbed by children with the vGrab option
        const grabHeight = height - childrenSize.height;
        // Number of children that request vGrab
        // FIXME: This approach works fine when only 1 child uses VGrab, but may cause rounding issues
        // when the grabHeight can't be equally shared by all children.
        const grabbingChildren = container.children
            .map(child => this.getChildLayoutOptions(child, options))
            .filter(opt => opt.vGrab).length;
        if (maxWidth > 0 && maxHeight > 0) {
            const offset = this.layoutChildren(container, layouter, options, width, height, grabHeight, grabbingChildren);
            boundsData.bounds = this.getFinalContainerBounds(container, offset, options, childrenSize.width, childrenSize.height);
            boundsData.boundsChanged = true;
        }
    }
    getChildrenSize(container, containerOptions, layouter) {
        let maxWidth = -1;
        let maxHeight = 0;
        let isFirst = true;
        container.children.forEach(child => {
            if ((0, sprotty_1.isLayoutableChild)(child)) {
                const bounds = layouter.getBoundsData(child).bounds;
                if (bounds !== undefined && protocol_1.Dimension.isValid(bounds)) {
                    maxHeight += bounds.height;
                    if (isFirst) {
                        isFirst = false;
                    }
                    else {
                        maxHeight += containerOptions.vGap;
                    }
                    maxWidth = Math.max(maxWidth, bounds.width);
                }
            }
        });
        const result = {
            width: maxWidth,
            height: maxHeight
        };
        return result;
    }
    layoutChildren(container, layouter, containerOptions, maxWidth, maxHeight, grabHeight, grabbingChildren) {
        let currentOffset = {
            x: containerOptions.paddingLeft + 0.5 * (maxWidth - maxWidth / containerOptions.paddingFactor),
            y: containerOptions.paddingTop + 0.5 * (maxHeight - maxHeight / containerOptions.paddingFactor)
        };
        container.children.forEach(child => {
            if ((0, sprotty_1.isLayoutableChild)(child)) {
                const boundsData = layouter.getBoundsData(child);
                const bounds = boundsData.bounds;
                const childOptions = this.getChildLayoutOptions(child, containerOptions);
                if (bounds !== undefined && protocol_1.Dimension.isValid(bounds)) {
                    currentOffset = this.layoutChild(child, boundsData, bounds, childOptions, containerOptions, currentOffset, maxWidth, maxHeight, grabHeight, grabbingChildren);
                }
            }
        });
        return currentOffset;
    }
    layoutChild(child, boundsData, bounds, childOptions, containerOptions, currentOffset, maxWidth, maxHeight, grabHeight, grabbingChildren) {
        const hAlign = childOptions.hGrab ? 'left' : childOptions.hAlign;
        const dx = this.getDx(hAlign, bounds, maxWidth);
        let offset = super.layoutChild(child, boundsData, bounds, childOptions, containerOptions, currentOffset, maxWidth, maxHeight);
        boundsData.bounds = Object.assign(Object.assign({}, boundsData.bounds), { x: currentOffset.x + dx, y: currentOffset.y });
        if (childOptions.hGrab) {
            boundsData.bounds = {
                x: boundsData.bounds.x,
                y: boundsData.bounds.y,
                width: maxWidth,
                height: boundsData.bounds.height
            };
            boundsData.boundsChanged = true;
        }
        if (childOptions.vGrab && grabHeight && grabbingChildren) {
            const height = boundsData.bounds.height + grabHeight / grabbingChildren;
            boundsData.bounds = {
                x: boundsData.bounds.x,
                y: boundsData.bounds.y,
                width: boundsData.bounds.width,
                height: height
            };
            boundsData.boundsChanged = true;
            offset = { x: currentOffset.x, y: currentOffset.y + height };
        }
        return offset;
    }
    getFixedContainerBounds(container, layoutOptions, layouter) {
        var _a, _b;
        const currentContainer = container;
        // eslint-disable-next-line no-constant-condition
        if ((0, sprotty_1.isBoundsAware)(currentContainer)) {
            const bounds = currentContainer.bounds;
            const elementOptions = this.getElementLayoutOptions(currentContainer);
            const width = (_a = elementOptions === null || elementOptions === void 0 ? void 0 : elementOptions.prefWidth) !== null && _a !== void 0 ? _a : 0;
            const height = (_b = elementOptions === null || elementOptions === void 0 ? void 0 : elementOptions.prefHeight) !== null && _b !== void 0 ? _b : 0;
            return Object.assign(Object.assign({}, bounds), { width, height });
        }
        return protocol_1.Bounds.EMPTY;
    }
    getChildLayoutOptions(child, containerOptions) {
        return super.getChildLayoutOptions(child, this.filterContainerOptions(containerOptions));
    }
    getLayoutOptions(element) {
        return super.getLayoutOptions(element);
    }
    getElementLayoutOptions(element) {
        return element.layoutOptions;
    }
    getFinalContainerBounds(container, lastOffset, options, maxWidth, maxHeight) {
        var _a, _b;
        const elementOptions = this.getElementLayoutOptions(container);
        const width = (_a = elementOptions === null || elementOptions === void 0 ? void 0 : elementOptions.prefWidth) !== null && _a !== void 0 ? _a : options.minWidth;
        const height = (_b = elementOptions === null || elementOptions === void 0 ? void 0 : elementOptions.prefHeight) !== null && _b !== void 0 ? _b : options.minHeight;
        const result = {
            x: container.bounds.x,
            y: container.bounds.y,
            width: Math.max(width, maxWidth + options.paddingLeft + options.paddingRight),
            height: Math.max(height, maxHeight + options.paddingTop + options.paddingBottom)
        };
        return result;
    }
    getDefaultLayoutOptions() {
        return {
            resizeContainer: true,
            paddingTop: 5,
            paddingBottom: 5,
            paddingLeft: 5,
            paddingRight: 5,
            paddingFactor: 1,
            vGap: 1,
            hAlign: 'center',
            minWidth: 0,
            minHeight: 0,
            hGrab: false,
            vGrab: false,
            // eslint-disable-next-line no-null/no-null
            prefHeight: null,
            // eslint-disable-next-line no-null/no-null
            prefWidth: null
        };
    }
    filterContainerOptions(containerOptions) {
        // Reset object-specific layout options to default before merging,
        // to make sure they won't be inherited (grab, prefSize)
        // eslint-disable-next-line no-null/no-null
        const localOptions = { vGrab: false, hGrab: false, prefHeight: null, prefWidth: null };
        return Object.assign(Object.assign({}, containerOptions), localOptions);
    }
};
VBoxLayouterExt.KIND = sprotty_1.VBoxLayouter.KIND;
VBoxLayouterExt = __decorate([
    (0, inversify_1.injectable)()
], VBoxLayouterExt);
exports.VBoxLayouterExt = VBoxLayouterExt;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/change-bounds/model.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/change-bounds/model.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.removeResizeHandles = exports.addResizeHandles = exports.SResizeHandle = exports.isBoundsAwareMoveable = exports.ResizeHandleLocation = exports.isResizable = exports.resizeFeature = void 0;
/********************************************************************************
 * Copyright (c) 2019-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
exports.resizeFeature = Symbol('resizeFeature');
function isResizable(element) {
    return (0, sprotty_1.isBoundsAware)(element) && (0, sprotty_1.isSelectable)(element) && element instanceof sprotty_1.SParentElement && element.hasFeature(exports.resizeFeature);
}
exports.isResizable = isResizable;
// eslint-disable-next-line no-shadow
var ResizeHandleLocation;
(function (ResizeHandleLocation) {
    ResizeHandleLocation["TopLeft"] = "top-left";
    ResizeHandleLocation["TopRight"] = "top-right";
    ResizeHandleLocation["BottomLeft"] = "bottom-left";
    ResizeHandleLocation["BottomRight"] = "bottom-right";
})(ResizeHandleLocation = exports.ResizeHandleLocation || (exports.ResizeHandleLocation = {}));
function isBoundsAwareMoveable(element) {
    return (0, sprotty_1.isMoveable)(element) && (0, sprotty_1.isBoundsAware)(element);
}
exports.isBoundsAwareMoveable = isBoundsAwareMoveable;
class SResizeHandle extends sprotty_1.SChildElement {
    constructor(location, type = SResizeHandle.TYPE, hoverFeedback = false) {
        super();
        this.location = location;
        this.type = type;
        this.hoverFeedback = hoverFeedback;
    }
    hasFeature(feature) {
        return feature === sprotty_1.hoverFeedbackFeature;
    }
    isNwSeResize() {
        return this.location === ResizeHandleLocation.TopLeft || this.location === ResizeHandleLocation.BottomRight;
    }
    isNeSwResize() {
        return this.location === ResizeHandleLocation.TopRight || this.location === ResizeHandleLocation.BottomLeft;
    }
}
exports.SResizeHandle = SResizeHandle;
SResizeHandle.TYPE = 'resize-handle';
function addResizeHandles(element) {
    removeResizeHandles(element);
    element.add(new SResizeHandle(ResizeHandleLocation.TopLeft));
    element.add(new SResizeHandle(ResizeHandleLocation.TopRight));
    element.add(new SResizeHandle(ResizeHandleLocation.BottomLeft));
    element.add(new SResizeHandle(ResizeHandleLocation.BottomRight));
}
exports.addResizeHandles = addResizeHandles;
function removeResizeHandles(element) {
    element.removeAll(child => child instanceof SResizeHandle);
}
exports.removeResizeHandles = removeResizeHandles;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/change-bounds/movement-restrictor.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/change-bounds/movement-restrictor.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.removeMovementRestrictionFeedback = exports.createMovementRestrictionFeedback = exports.NoOverlapMovementRestrictor = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const viewpoint_util_1 = __webpack_require__(/*! ../../utils/viewpoint-util */ "./node_modules/@eclipse-glsp/client/lib/utils/viewpoint-util.js");
const css_feedback_1 = __webpack_require__(/*! ../tool-feedback/css-feedback */ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/css-feedback.js");
const model_1 = __webpack_require__(/*! ./model */ "./node_modules/@eclipse-glsp/client/lib/features/change-bounds/model.js");
/**
 *  A `IMovementRestrictor` that checks for overlapping elements. Move operations
 *  are only valid if the element does not collide with another element after moving.
 */
let NoOverlapMovementRestrictor = class NoOverlapMovementRestrictor {
    constructor() {
        this.cssClasses = ['movement-not-allowed'];
    }
    validate(element, newLocation) {
        if (!(0, model_1.isBoundsAwareMoveable)(element) || !newLocation) {
            return false;
        }
        // Create ghost element at the newLocation
        const ghostElement = Object.create(element);
        ghostElement.bounds = {
            x: newLocation.x,
            y: newLocation.y,
            width: element.bounds.width,
            height: element.bounds.height
        };
        ghostElement.type = 'Ghost';
        ghostElement.id = element.id;
        return !Array.from(element.root.index
            .all()
            .filter(e => e.id !== ghostElement.id && e !== ghostElement.root && e instanceof sprotty_1.SNode)
            .map(e => e)).some(e => this.areOverlapping(e, ghostElement));
    }
    areOverlapping(element1, element2) {
        const b1 = (0, viewpoint_util_1.toAbsoluteBounds)(element1);
        const b2 = (0, viewpoint_util_1.toAbsoluteBounds)(element2);
        const r1TopLeft = b1;
        const r1BottomRight = { x: b1.x + b1.width, y: b1.y + b1.height };
        const r2TopLeft = b2;
        const r2BottomRight = { x: b2.x + b2.width, y: b2.y + b2.height };
        // If one rectangle is on left side of other
        if (r1TopLeft.x > r2BottomRight.x || r2TopLeft.x > r1BottomRight.x) {
            return false;
        }
        // If one rectangle is above other
        if (r1BottomRight.y < r2TopLeft.y || r2BottomRight.y < r1TopLeft.y) {
            return false;
        }
        return true;
    }
};
NoOverlapMovementRestrictor = __decorate([
    (0, inversify_1.injectable)()
], NoOverlapMovementRestrictor);
exports.NoOverlapMovementRestrictor = NoOverlapMovementRestrictor;
/**
 * Utility function to create an action that applies the given {@link IMovementRestrictor.cssClasses} to the given element.
 * @param element The element on which the css classes should be applied.
 * @param movementRestrictor The movement restrictor whose cssClasses should be applied.
 * @returns The corresponding {@link ModifyCSSFeedbackAction}
 */
function createMovementRestrictionFeedback(element, movementRestrictor) {
    const elements = [element];
    if (element instanceof sprotty_1.SParentElement) {
        element.children.filter(child => child instanceof model_1.SResizeHandle).forEach(e => elements.push(e));
    }
    return css_feedback_1.ModifyCSSFeedbackAction.create({ elements, add: movementRestrictor.cssClasses });
}
exports.createMovementRestrictionFeedback = createMovementRestrictionFeedback;
/**
 * Utility function to create an action that removes the given {@link IMovementRestrictor.cssClasses} from the given element.
 * @param element The element from which the css classes should be removed.
 * @param movementRestrictor The movement restrictor whose cssClasses should be removed.
 * @returns The corresponding {@link ModifyCSSFeedbackAction}
 */
function removeMovementRestrictionFeedback(element, movementRestrictor) {
    const elements = [element];
    if (element instanceof sprotty_1.SParentElement) {
        element.children.filter(child => child instanceof model_1.SResizeHandle).forEach(e => elements.push(e));
    }
    return css_feedback_1.ModifyCSSFeedbackAction.create({ elements, remove: movementRestrictor.cssClasses });
}
exports.removeMovementRestrictionFeedback = removeMovementRestrictionFeedback;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/change-bounds/snap.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/change-bounds/snap.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PointPositionUpdater = exports.GridSnapper = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
/**
 * A {@link ISnapper} implementation that snaps all elements onto a fixed gride size.
 * The default grid size is 10x10 pixel.
 * To configure a custom grid size  bind the `TYPES.ISnapper` service identifier
 * to constant value, e.g:
 *
 * ```ts
 * bind(TYPES.ISnapper).toConstantValue(new GridSnapper({x:25 ,y:25 }));
 * ```
 */
let GridSnapper = class GridSnapper {
    constructor(grid = { x: 10, y: 10 }) {
        this.grid = grid;
    }
    snap(position, element) {
        return {
            x: Math.round(position.x / this.grid.x) * this.grid.x,
            y: Math.round(position.y / this.grid.y) * this.grid.y
        };
    }
};
GridSnapper = __decorate([
    (0, inversify_1.injectable)(),
    __metadata("design:paramtypes", [Object])
], GridSnapper);
exports.GridSnapper = GridSnapper;
/**
 * This class can be used to calculate the current position, when an element is
 * moved. This includes node movements, node resizing (resize handle movement)
 * or edge routing-point movements.
 *
 * You can initialize a this class with a optional {@link ISnapper}. If a
 * snapper is present, the positions will be snapped to the defined grid.
 */
class PointPositionUpdater {
    constructor(snapper) {
        this.snapper = snapper;
        this.positionDelta = { x: 0, y: 0 };
    }
    /**
     * Init the position with the {@link Point} of your mouse cursor.
     * This method is normally called in the `mouseDown` event.
     * @param mousePosition current mouse position e.g `{x: event.pageX, y: event.pageY }`
     */
    updateLastDragPosition(mousePosition) {
        this.lastDragPosition = mousePosition;
    }
    /**
     * Check if the mouse is currently not in a drag mode.
     * @returns true if the last drag position is undefined
     */
    isLastDragPositionUndefined() {
        return this.lastDragPosition === undefined;
    }
    /**
     * Reset the updater for new movements.
     * This method is normally called in the `mouseUp` event.
     */
    resetPosition() {
        this.lastDragPosition = undefined;
        this.positionDelta = { x: 0, y: 0 };
    }
    /**
     * Calculate the current position of your movement.
     * This method is normally called in the `mouseMove` event.
     * @param target node which is moved around
     * @param mousePosition current mouse position e.g `{x: event.pageX, y: event.pageY }`
     * @param isSnapEnabled if a snapper is defined you can disable it, e.g when a specific key is pressed `!event.altKey`
     * @returns current position or undefined if updater has no last drag position initialized
     */
    updatePosition(target, mousePosition, isSnapEnabled) {
        var _a;
        if (this.lastDragPosition) {
            const newDragPosition = mousePosition;
            const viewport = (0, sprotty_1.findParentByFeature)(target, sprotty_1.isViewport);
            const zoom = (_a = viewport === null || viewport === void 0 ? void 0 : viewport.zoom) !== null && _a !== void 0 ? _a : 1;
            const dx = (mousePosition.x - this.lastDragPosition.x) / zoom;
            const dy = (mousePosition.y - this.lastDragPosition.y) / zoom;
            const deltaToLastPosition = { x: dx, y: dy };
            this.lastDragPosition = newDragPosition;
            // update position delta with latest delta
            this.positionDelta.x += deltaToLastPosition.x;
            this.positionDelta.y += deltaToLastPosition.y;
            // snap our delta and only send update if the position actually changes
            // otherwise accumulate delta until we do snap to an update
            const positionUpdate = this.snap(this.positionDelta, target, isSnapEnabled);
            if (positionUpdate.x === 0 && positionUpdate.y === 0) {
                return undefined;
            }
            // we update our position so we update our delta by the snapped position
            this.positionDelta.x -= positionUpdate.x;
            this.positionDelta.y -= positionUpdate.y;
            return positionUpdate;
        }
        return undefined;
    }
    snap(position, element, isSnap) {
        return isSnap && this.snapper ? this.snapper.snap(position, element) : { x: position.x, y: position.y };
    }
}
exports.PointPositionUpdater = PointPositionUpdater;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/command-palette/command-palette-tool.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/command-palette/command-palette-tool.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var CommandPaletteTool_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CommandPaletteTool = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
let CommandPaletteTool = CommandPaletteTool_1 = class CommandPaletteTool {
    postConstruct() {
        this.commandPaletteKeyListener = this.createCommandPaletteKeyListener();
    }
    get id() {
        return CommandPaletteTool_1.ID;
    }
    enable() {
        this.keyTool.register(this.commandPaletteKeyListener);
    }
    disable() {
        this.keyTool.deregister(this.commandPaletteKeyListener);
    }
    createCommandPaletteKeyListener() {
        return new sprotty_1.CommandPaletteKeyListener();
    }
};
CommandPaletteTool.ID = 'glsp.command-palette-tool';
__decorate([
    (0, inversify_1.inject)(sprotty_1.KeyTool),
    __metadata("design:type", sprotty_1.KeyTool)
], CommandPaletteTool.prototype, "keyTool", void 0);
__decorate([
    (0, inversify_1.postConstruct)(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], CommandPaletteTool.prototype, "postConstruct", null);
CommandPaletteTool = CommandPaletteTool_1 = __decorate([
    (0, inversify_1.injectable)()
], CommandPaletteTool);
exports.CommandPaletteTool = CommandPaletteTool;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/command-palette/di.config.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/command-palette/di.config.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
__webpack_require__(/*! ../../../css/command-palette.css */ "./node_modules/@eclipse-glsp/client/css/command-palette.css");
const types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/@eclipse-glsp/client/lib/base/types.js");
const command_palette_tool_1 = __webpack_require__(/*! ./command-palette-tool */ "./node_modules/@eclipse-glsp/client/lib/features/command-palette/command-palette-tool.js");
const server_command_palette_provider_1 = __webpack_require__(/*! ./server-command-palette-provider */ "./node_modules/@eclipse-glsp/client/lib/features/command-palette/server-command-palette-provider.js");
const glspCommandPaletteModule = new inversify_1.ContainerModule(bind => {
    (0, protocol_1.bindAsService)(bind, types_1.TYPES.IUIExtension, sprotty_1.CommandPalette);
    bind(types_1.TYPES.ICommandPaletteActionProviderRegistry).to(sprotty_1.CommandPaletteActionProviderRegistry).inSingletonScope();
    (0, protocol_1.bindAsService)(bind, types_1.TYPES.ICommandPaletteActionProvider, server_command_palette_provider_1.ServerCommandPaletteActionProvider);
    (0, protocol_1.bindAsService)(bind, types_1.TYPES.IDefaultTool, command_palette_tool_1.CommandPaletteTool);
});
exports["default"] = glspCommandPaletteModule;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/command-palette/server-command-palette-provider.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/command-palette/server-command-palette-provider.js ***!
  \***********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ServerCommandPaletteActionProvider = exports.ServerCommandPalette = void 0;
/********************************************************************************
 * Copyright (c) 2019-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const action_dispatcher_1 = __webpack_require__(/*! ../../base/action-dispatcher */ "./node_modules/@eclipse-glsp/client/lib/base/action-dispatcher.js");
const editor_context_service_1 = __webpack_require__(/*! ../../base/editor-context-service */ "./node_modules/@eclipse-glsp/client/lib/base/editor-context-service.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/@eclipse-glsp/client/lib/base/types.js");
var ServerCommandPalette;
(function (ServerCommandPalette) {
    ServerCommandPalette.CONTEXT_ID = 'command-palette';
    ServerCommandPalette.TEXT = 'text';
    ServerCommandPalette.INDEX = 'index';
})(ServerCommandPalette = exports.ServerCommandPalette || (exports.ServerCommandPalette = {}));
let ServerCommandPaletteActionProvider = class ServerCommandPaletteActionProvider {
    getActions(_root, text, _lastMousePosition, index) {
        const requestAction = protocol_1.RequestContextActions.create({
            contextId: ServerCommandPalette.CONTEXT_ID,
            editorContext: this.editorContext.get({
                [ServerCommandPalette.TEXT]: text,
                [ServerCommandPalette.INDEX]: index ? index : 0
            })
        });
        return this.actionDispatcher.requestUntil(requestAction).then(response => this.getPaletteActionsFromResponse(response));
    }
    getPaletteActionsFromResponse(action) {
        if (protocol_1.SetContextActions.is(action)) {
            return action.actions;
        }
        return [];
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.IActionDispatcher),
    __metadata("design:type", action_dispatcher_1.GLSPActionDispatcher)
], ServerCommandPaletteActionProvider.prototype, "actionDispatcher", void 0);
__decorate([
    (0, inversify_1.inject)(editor_context_service_1.EditorContextService),
    __metadata("design:type", editor_context_service_1.EditorContextService)
], ServerCommandPaletteActionProvider.prototype, "editorContext", void 0);
ServerCommandPaletteActionProvider = __decorate([
    (0, inversify_1.injectable)()
], ServerCommandPaletteActionProvider);
exports.ServerCommandPaletteActionProvider = ServerCommandPaletteActionProvider;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/context-menu/delete-element-context-menu.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/context-menu/delete-element-context-menu.js ***!
  \****************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DeleteElementContextMenuItemProvider = void 0;
/********************************************************************************
 * Copyright (c) 2020-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/@eclipse-glsp/client/lib/base/types.js");
let DeleteElementContextMenuItemProvider = class DeleteElementContextMenuItemProvider {
    async getItems(_root, _lastMousePosition) {
        const editorContextService = await this.editorContextServiceProvider();
        return [this.createDeleteMenuItem(editorContextService)];
    }
    createDeleteMenuItem(editorContextService) {
        return {
            id: 'delete',
            label: 'Delete',
            sortString: 'd',
            group: 'edit',
            actions: [protocol_1.DeleteElementOperation.create(editorContextService.selectedElements.map(e => e.id))],
            isEnabled: () => !editorContextService.isReadonly && editorContextService.selectedElements.length > 0
        };
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.IEditorContextServiceProvider),
    __metadata("design:type", Function)
], DeleteElementContextMenuItemProvider.prototype, "editorContextServiceProvider", void 0);
DeleteElementContextMenuItemProvider = __decorate([
    (0, inversify_1.injectable)()
], DeleteElementContextMenuItemProvider);
exports.DeleteElementContextMenuItemProvider = DeleteElementContextMenuItemProvider;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/context-menu/di.config.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/context-menu/di.config.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/@eclipse-glsp/client/lib/base/types.js");
const selection_service_aware_context_menu_mouse_listener_1 = __webpack_require__(/*! ./selection-service-aware-context-menu-mouse-listener */ "./node_modules/@eclipse-glsp/client/lib/features/context-menu/selection-service-aware-context-menu-mouse-listener.js");
const server_context_menu_provider_1 = __webpack_require__(/*! ./server-context-menu-provider */ "./node_modules/@eclipse-glsp/client/lib/features/context-menu/server-context-menu-provider.js");
const glspContextMenuModule = new inversify_1.ContainerModule(bind => {
    bind(types_1.TYPES.IContextMenuServiceProvider).toProvider(ctx => () => new Promise((resolve, reject) => {
        if (ctx.container.isBound(types_1.TYPES.IContextMenuService)) {
            resolve(ctx.container.get(types_1.TYPES.IContextMenuService));
        }
        else {
            reject();
        }
    }));
    (0, protocol_1.bindAsService)(bind, types_1.TYPES.MouseListener, selection_service_aware_context_menu_mouse_listener_1.SelectionServiceAwareContextMenuMouseListener);
    bind(types_1.TYPES.IContextMenuProviderRegistry).to(sprotty_1.ContextMenuProviderRegistry);
    (0, protocol_1.bindAsService)(bind, types_1.TYPES.IContextMenuItemProvider, server_context_menu_provider_1.ServerContextMenuItemProvider);
});
exports["default"] = glspContextMenuModule;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/context-menu/selection-service-aware-context-menu-mouse-listener.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/context-menu/selection-service-aware-context-menu-mouse-listener.js ***!
  \****************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SelectionServiceAwareContextMenuMouseListener = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const focus_change_action_1 = __webpack_require__(/*! ../../base/actions/focus-change-action */ "./node_modules/@eclipse-glsp/client/lib/base/actions/focus-change-action.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/@eclipse-glsp/client/lib/base/types.js");
const selection_service_1 = __webpack_require__(/*! ../select/selection-service */ "./node_modules/@eclipse-glsp/client/lib/features/select/selection-service.js");
let SelectionServiceAwareContextMenuMouseListener = class SelectionServiceAwareContextMenuMouseListener extends sprotty_1.MouseListener {
    /**
     * Opens the context menu.
     */
    contextMenu(target, event) {
        return this.openContextMenu(target, event);
    }
    /**
     * Opens the context menu.
     *
     *   - query the context menu service and the context menu elements
     *   - show the context menu
     *   - send a focus state change to indicate that the diagram becomes inactive, once the context menu is shown
     *
     * When the context menu is closed, we focus the diagram element again.
     */
    openContextMenu(target, event) {
        if (!this.contextMenuService || !this.menuProvider) {
            return [];
        }
        const mousePosition = { x: event.x, y: event.y };
        const result = Promise.all([this.contextMenuService(), this.menuProvider.getItems(target.root, mousePosition)])
            .then(([menuService, menuItems]) => menuService.show(menuItems, mousePosition, () => this.focusEventTarget(event)))
            .then(() => focus_change_action_1.FocusStateChangedAction.create(false));
        return [result];
    }
    focusEventTarget(event) {
        const targetElement = event.target instanceof SVGElement ? event.target : undefined;
        const svgParentElement = targetElement === null || targetElement === void 0 ? void 0 : targetElement.closest('svg');
        if (svgParentElement) {
            svgParentElement.focus();
        }
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.IContextMenuServiceProvider),
    (0, inversify_1.optional)(),
    __metadata("design:type", Function)
], SelectionServiceAwareContextMenuMouseListener.prototype, "contextMenuService", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.IContextMenuProviderRegistry),
    (0, inversify_1.optional)(),
    __metadata("design:type", sprotty_1.ContextMenuProviderRegistry)
], SelectionServiceAwareContextMenuMouseListener.prototype, "menuProvider", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.SelectionService),
    __metadata("design:type", selection_service_1.SelectionService)
], SelectionServiceAwareContextMenuMouseListener.prototype, "selectionService", void 0);
SelectionServiceAwareContextMenuMouseListener = __decorate([
    (0, inversify_1.injectable)()
], SelectionServiceAwareContextMenuMouseListener);
exports.SelectionServiceAwareContextMenuMouseListener = SelectionServiceAwareContextMenuMouseListener;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/context-menu/server-context-menu-provider.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/context-menu/server-context-menu-provider.js ***!
  \*****************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ServerContextMenuItemProvider = exports.ServerContextMenu = void 0;
/********************************************************************************
 * Copyright (c) 2019-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const action_dispatcher_1 = __webpack_require__(/*! ../../base/action-dispatcher */ "./node_modules/@eclipse-glsp/client/lib/base/action-dispatcher.js");
const editor_context_service_1 = __webpack_require__(/*! ../../base/editor-context-service */ "./node_modules/@eclipse-glsp/client/lib/base/editor-context-service.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/@eclipse-glsp/client/lib/base/types.js");
var ServerContextMenu;
(function (ServerContextMenu) {
    ServerContextMenu.CONTEXT_ID = 'context-menu';
})(ServerContextMenu = exports.ServerContextMenu || (exports.ServerContextMenu = {}));
let ServerContextMenuItemProvider = class ServerContextMenuItemProvider {
    getItems(root, lastMousePosition) {
        const selectedElementIds = Array.from(root.index
            .all()
            .filter(sprotty_1.isSelected)
            .map(e => e.id));
        const editorContext = this.editorContext.getWithSelection(selectedElementIds);
        const requestAction = protocol_1.RequestContextActions.create({ contextId: ServerContextMenu.CONTEXT_ID, editorContext });
        return this.actionDispatcher.requestUntil(requestAction).then(response => this.getContextActionsFromResponse(response));
    }
    getContextActionsFromResponse(action) {
        if (protocol_1.SetContextActions.is(action)) {
            return action.actions;
        }
        return [];
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.IActionDispatcher),
    __metadata("design:type", action_dispatcher_1.GLSPActionDispatcher)
], ServerContextMenuItemProvider.prototype, "actionDispatcher", void 0);
__decorate([
    (0, inversify_1.inject)(editor_context_service_1.EditorContextService),
    __metadata("design:type", editor_context_service_1.EditorContextService)
], ServerContextMenuItemProvider.prototype, "editorContext", void 0);
ServerContextMenuItemProvider = __decorate([
    (0, inversify_1.injectable)()
], ServerContextMenuItemProvider);
exports.ServerContextMenuItemProvider = ServerContextMenuItemProvider;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/copy-paste/copy-paste-context-menu.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/copy-paste/copy-paste-context-menu.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isNative = exports.supportsPaste = exports.supportsCut = exports.supportsCopy = exports.CopyPasteContextMenuItemProvider = exports.InvokeCopyPasteActionHandler = exports.InvokeCopyPasteAction = void 0;
/********************************************************************************
 * Copyright (c) 2020-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
/* eslint-disable deprecation/deprecation */
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/@eclipse-glsp/client/lib/base/types.js");
var InvokeCopyPasteAction;
(function (InvokeCopyPasteAction) {
    InvokeCopyPasteAction.KIND = 'invokeCopyPaste';
    function is(object) {
        return protocol_1.Action.hasKind(object, InvokeCopyPasteAction.KIND) && (0, protocol_1.hasStringProp)(object, 'command');
    }
    InvokeCopyPasteAction.is = is;
    function create(command) {
        return { kind: InvokeCopyPasteAction.KIND, command };
    }
    InvokeCopyPasteAction.create = create;
})(InvokeCopyPasteAction = exports.InvokeCopyPasteAction || (exports.InvokeCopyPasteAction = {}));
let InvokeCopyPasteActionHandler = class InvokeCopyPasteActionHandler {
    handle(action) {
        switch (action.command) {
            case 'copy':
                if (supportsCopy()) {
                    document.execCommand('copy');
                }
                else {
                    this.notifyUserToUseShortcut('copy');
                }
                break;
            case 'paste':
                if (supportsPaste()) {
                    document.execCommand('paste');
                }
                else {
                    this.notifyUserToUseShortcut('paste');
                }
                break;
            case 'cut':
                if (supportsCut()) {
                    document.execCommand('cut');
                }
                else {
                    this.notifyUserToUseShortcut('cut');
                }
                break;
        }
    }
    notifyUserToUseShortcut(operation) {
        const message = `Please use the browser's ${operation} command or shortcut.`;
        const timeout = 10000;
        const severity = 'WARNING';
        this.dispatcher.dispatchAll([
            protocol_1.ServerStatusAction.create(message, { severity, timeout }),
            protocol_1.ServerMessageAction.create(message, { severity, timeout })
        ]);
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.IActionDispatcher),
    __metadata("design:type", Object)
], InvokeCopyPasteActionHandler.prototype, "dispatcher", void 0);
InvokeCopyPasteActionHandler = __decorate([
    (0, inversify_1.injectable)()
], InvokeCopyPasteActionHandler);
exports.InvokeCopyPasteActionHandler = InvokeCopyPasteActionHandler;
let CopyPasteContextMenuItemProvider = class CopyPasteContextMenuItemProvider {
    getItems(root, _lastMousePosition) {
        const hasSelectedElements = Array.from(root.index.all().filter(sprotty_1.isSelected)).length > 0;
        return Promise.resolve([
            this.createCopyMenuItem(hasSelectedElements),
            this.createCutMenuItem(hasSelectedElements),
            this.createPasteMenuItem()
        ]);
    }
    createPasteMenuItem() {
        return {
            id: 'paste',
            label: 'Paste',
            group: 'copy-paste',
            actions: [InvokeCopyPasteAction.create('paste')],
            isEnabled: () => true
        };
    }
    createCutMenuItem(hasSelectedElements) {
        return {
            id: 'cut',
            label: 'Cut',
            group: 'copy-paste',
            actions: [InvokeCopyPasteAction.create('cut')],
            isEnabled: () => hasSelectedElements
        };
    }
    createCopyMenuItem(hasSelectedElements) {
        return {
            id: 'copy',
            label: 'Copy',
            group: 'copy-paste',
            actions: [InvokeCopyPasteAction.create('copy')],
            isEnabled: () => hasSelectedElements
        };
    }
};
CopyPasteContextMenuItemProvider = __decorate([
    (0, inversify_1.injectable)()
], CopyPasteContextMenuItemProvider);
exports.CopyPasteContextMenuItemProvider = CopyPasteContextMenuItemProvider;
function supportsCopy() {
    return isNative() || document.queryCommandSupported('copy');
}
exports.supportsCopy = supportsCopy;
function supportsCut() {
    return isNative() || document.queryCommandSupported('cut');
}
exports.supportsCut = supportsCut;
function supportsPaste() {
    const isChrome = userAgent().indexOf('Chrome') >= 0;
    return isNative() || (!isChrome && document.queryCommandSupported('paste'));
}
exports.supportsPaste = supportsPaste;
function isNative() {
    return typeof window.process !== 'undefined';
}
exports.isNative = isNative;
function userAgent() {
    return typeof navigator !== 'undefined' ? navigator.userAgent : '';
}


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/copy-paste/copy-paste-handler.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/copy-paste/copy-paste-handler.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ServerCopyPasteHandler = exports.LocalClipboardService = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const uuid_1 = __webpack_require__(/*! uuid */ "./node_modules/uuid/dist/esm-browser/index.js");
const action_dispatcher_1 = __webpack_require__(/*! ../../base/action-dispatcher */ "./node_modules/@eclipse-glsp/client/lib/base/action-dispatcher.js");
const editor_context_service_1 = __webpack_require__(/*! ../../base/editor-context-service */ "./node_modules/@eclipse-glsp/client/lib/base/editor-context-service.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/@eclipse-glsp/client/lib/base/types.js");
/**
 * A local implementation of the async clipboard interface.
 *
 * This implementation just stores the clipboard data in memory, but not in the clipboard.
 * This implementation can be used if you don't need to support cross-widget/browser/application
 * data transfer and you would like to avoid to require the permission of the user for accessing the
 * system clipboard asynchronously.
 *
 * In order to detect whether the user copied something else since we recorded the clipboard data
 * we put a uuid into the system clipboard synchronously. If on paste this ID has changed or is not
 * available anymore, we know that the user copied in another application or context, so we shouldn't
 * paste what we have stored locally and just return undefined.
 *
 * Real async clipboard service implementations can just ignore the ID that is passed and rely on the
 * system clipboard's content instead.
 */
let LocalClipboardService = class LocalClipboardService {
    clear() {
        this.currentId = undefined;
        this.data = undefined;
    }
    put(data, id) {
        this.currentId = id;
        this.data = data;
    }
    get(id) {
        if (id !== this.currentId) {
            return undefined;
        }
        return this.data;
    }
};
LocalClipboardService = __decorate([
    (0, inversify_1.injectable)()
], LocalClipboardService);
exports.LocalClipboardService = LocalClipboardService;
function toClipboardId(clipboardId) {
    return JSON.stringify({ clipboardId });
}
function isClipboardId(jsonData) {
    return jsonData !== undefined && 'clipboardId' in jsonData;
}
function getClipboardIdFromDataTransfer(dataTransfer) {
    const jsonString = dataTransfer.getData(CLIPBOARD_DATA_FORMAT);
    const jsonObject = jsonString ? JSON.parse(jsonString) : undefined;
    return isClipboardId(jsonObject) ? jsonObject.clipboardId : undefined;
}
const CLIPBOARD_DATA_FORMAT = 'text/plain';
let ServerCopyPasteHandler = class ServerCopyPasteHandler {
    handleCopy(event) {
        if (event.clipboardData && this.shouldCopy(event)) {
            const clipboardId = (0, uuid_1.v4)();
            event.clipboardData.setData(CLIPBOARD_DATA_FORMAT, toClipboardId(clipboardId));
            this.actionDispatcher
                .request(protocol_1.RequestClipboardDataAction.create(this.editorContext.get()))
                .then(action => this.clipboardService.put(action.clipboardData, clipboardId));
            event.preventDefault();
        }
        else {
            if (event.clipboardData) {
                event.clipboardData.clearData();
            }
            this.clipboardService.clear();
        }
    }
    handleCut(event) {
        if (event.clipboardData && this.shouldCopy(event)) {
            this.handleCopy(event);
            this.actionDispatcher.dispatch(protocol_1.CutOperation.create(this.editorContext.get()));
            event.preventDefault();
        }
    }
    handlePaste(event) {
        if (event.clipboardData && this.shouldPaste(event)) {
            const clipboardId = getClipboardIdFromDataTransfer(event.clipboardData);
            const clipboardData = this.clipboardService.get(clipboardId);
            if (clipboardData) {
                this.actionDispatcher.dispatch(protocol_1.PasteOperation.create({ clipboardData, editorContext: this.editorContext.get() }));
            }
            event.preventDefault();
        }
    }
    shouldCopy(_event) {
        return this.editorContext.get().selectedElementIds.length > 0 && this.isDiagramActive();
    }
    shouldPaste(_event) {
        return this.isDiagramActive();
    }
    isDiagramActive() {
        var _a, _b;
        return ((_b = (_a = document.activeElement) === null || _a === void 0 ? void 0 : _a.parentElement) === null || _b === void 0 ? void 0 : _b.id) === this.viewerOptions.baseDiv;
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.IActionDispatcher),
    __metadata("design:type", action_dispatcher_1.GLSPActionDispatcher)
], ServerCopyPasteHandler.prototype, "actionDispatcher", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ViewerOptions),
    __metadata("design:type", Object)
], ServerCopyPasteHandler.prototype, "viewerOptions", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.IAsyncClipboardService),
    __metadata("design:type", Object)
], ServerCopyPasteHandler.prototype, "clipboardService", void 0);
__decorate([
    (0, inversify_1.inject)(editor_context_service_1.EditorContextService),
    __metadata("design:type", editor_context_service_1.EditorContextService)
], ServerCopyPasteHandler.prototype, "editorContext", void 0);
ServerCopyPasteHandler = __decorate([
    (0, inversify_1.injectable)()
], ServerCopyPasteHandler);
exports.ServerCopyPasteHandler = ServerCopyPasteHandler;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/copy-paste/di.config.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/copy-paste/di.config.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.copyPasteContextMenuModule = exports.glspServerCopyPasteModule = void 0;
/********************************************************************************
 * Copyright (c) 2019-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/@eclipse-glsp/client/lib/base/types.js");
const copy_paste_context_menu_1 = __webpack_require__(/*! ./copy-paste-context-menu */ "./node_modules/@eclipse-glsp/client/lib/features/copy-paste/copy-paste-context-menu.js");
const copy_paste_handler_1 = __webpack_require__(/*! ./copy-paste-handler */ "./node_modules/@eclipse-glsp/client/lib/features/copy-paste/copy-paste-handler.js");
exports.glspServerCopyPasteModule = new inversify_1.ContainerModule((bind, _unbind, isBound) => {
    bind(types_1.TYPES.ICopyPasteHandler).to(copy_paste_handler_1.ServerCopyPasteHandler);
    bind(types_1.TYPES.IAsyncClipboardService).to(copy_paste_handler_1.LocalClipboardService).inSingletonScope();
});
/**
 * This module is not required if the diagram is deployed in Theia but only intended to be used
 * in a standalone deployment of GLSP. If the GLSP diagram in Theia use the Theia-native
 * `CopyPasteMenuContribution` in `glsp-theia-integration` instead.
 */
exports.copyPasteContextMenuModule = new inversify_1.ContainerModule((bind, _unbind, isBound) => {
    bind(types_1.TYPES.IContextMenuProvider).to(copy_paste_context_menu_1.CopyPasteContextMenuItemProvider).inSingletonScope();
    bind(copy_paste_context_menu_1.InvokeCopyPasteActionHandler).toSelf().inSingletonScope();
    (0, sprotty_1.configureActionHandler)({ bind, isBound }, copy_paste_context_menu_1.InvokeCopyPasteAction.KIND, copy_paste_context_menu_1.InvokeCopyPasteActionHandler);
});


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/decoration/decoration-placer.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/decoration/decoration-placer.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var GlspDecorationPlacer_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GlspDecorationPlacer = void 0;
/********************************************************************************
 * Copyright (c) 2020-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
let GlspDecorationPlacer = GlspDecorationPlacer_1 = class GlspDecorationPlacer extends sprotty_1.DecorationPlacer {
    getPosition(element) {
        if (element instanceof sprotty_1.SChildElement && element.parent instanceof sprotty_1.SRoutableElement) {
            return super.getPosition(element);
        }
        if ((0, sprotty_1.isSizeable)(element)) {
            return {
                x: GlspDecorationPlacer_1.DECORATION_OFFSET.x * element.bounds.width,
                y: GlspDecorationPlacer_1.DECORATION_OFFSET.y * element.bounds.height
            };
        }
        return protocol_1.Point.ORIGIN;
    }
};
GlspDecorationPlacer.DECORATION_OFFSET = { x: 12, y: 10 };
GlspDecorationPlacer = GlspDecorationPlacer_1 = __decorate([
    (0, inversify_1.injectable)()
], GlspDecorationPlacer);
exports.GlspDecorationPlacer = GlspDecorationPlacer;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/decoration/di.config.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/decoration/di.config.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
__webpack_require__(/*! ../../../css/decoration.css */ "./node_modules/@eclipse-glsp/client/css/decoration.css");
const types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/@eclipse-glsp/client/lib/base/types.js");
const decoration_placer_1 = __webpack_require__(/*! ./decoration-placer */ "./node_modules/@eclipse-glsp/client/lib/features/decoration/decoration-placer.js");
const glspDecorationModule = new inversify_1.ContainerModule(bind => {
    (0, protocol_1.bindAsService)(bind, types_1.TYPES.IVNodePostprocessor, decoration_placer_1.GlspDecorationPlacer);
});
exports["default"] = glspDecorationModule;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/edit-label/di.config.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/edit-label/di.config.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/@eclipse-glsp/client/lib/base/types.js");
const edit_label_tool_1 = __webpack_require__(/*! ./edit-label-tool */ "./node_modules/@eclipse-glsp/client/lib/features/edit-label/edit-label-tool.js");
const edit_label_validator_1 = __webpack_require__(/*! ./edit-label-validator */ "./node_modules/@eclipse-glsp/client/lib/features/edit-label/edit-label-validator.js");
const glspEditLabelModule = new inversify_1.ContainerModule((bind, _unbind, isBound, _rebind) => {
    bind(types_1.TYPES.IEditLabelValidator).to(edit_label_validator_1.ServerEditLabelValidator);
    bind(types_1.TYPES.IEditLabelValidationDecorator).to(edit_label_validator_1.BalloonLabelValidationDecorator);
    (0, protocol_1.bindAsService)(bind, types_1.TYPES.IDefaultTool, edit_label_tool_1.DirectLabelEditTool);
    (0, sprotty_1.configureCommand)({ bind, isBound }, sprotty_1.ApplyLabelEditCommand);
});
exports["default"] = glspEditLabelModule;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/edit-label/edit-label-tool.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/edit-label/edit-label-tool.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var DirectLabelEditTool_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DirectLabelEditTool = void 0;
/********************************************************************************
 * Copyright (c) 2020-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const base_glsp_tool_1 = __webpack_require__(/*! ../tools/base-glsp-tool */ "./node_modules/@eclipse-glsp/client/lib/features/tools/base-glsp-tool.js");
let DirectLabelEditTool = DirectLabelEditTool_1 = class DirectLabelEditTool extends base_glsp_tool_1.BaseGLSPTool {
    get id() {
        return DirectLabelEditTool_1.ID;
    }
    createEditLabelMouseListener() {
        return new sprotty_1.EditLabelMouseListener();
    }
    createEditLabelKeyListener() {
        return new sprotty_1.EditLabelKeyListener();
    }
    enable() {
        this.editLabelKeyListener = this.createEditLabelKeyListener();
        this.editLabelMouseListener = this.createEditLabelMouseListener();
        this.mouseTool.register(this.editLabelMouseListener);
        this.keyTool.register(this.editLabelKeyListener);
    }
    disable() {
        this.keyTool.deregister(this.editLabelKeyListener);
        this.mouseTool.deregister(this.editLabelMouseListener);
    }
};
DirectLabelEditTool.ID = 'glsp.direct-label-edit-tool';
DirectLabelEditTool = DirectLabelEditTool_1 = __decorate([
    (0, inversify_1.injectable)()
], DirectLabelEditTool);
exports.DirectLabelEditTool = DirectLabelEditTool;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/edit-label/edit-label-validator.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/edit-label/edit-label-validator.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BalloonLabelValidationDecorator = exports.ServerEditLabelValidator = exports.LabelEditValidation = void 0;
/********************************************************************************
 * Copyright (c) 2019-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const action_dispatcher_1 = __webpack_require__(/*! ../../base/action-dispatcher */ "./node_modules/@eclipse-glsp/client/lib/base/action-dispatcher.js");
var LabelEditValidation;
(function (LabelEditValidation) {
    LabelEditValidation.CONTEXT_ID = 'label-edit';
    function toEditLabelValidationResult(status) {
        const message = status.message;
        let severity = 'ok';
        if (protocol_1.ValidationStatus.isError(status)) {
            severity = 'error';
        }
        else if (protocol_1.ValidationStatus.isWarning(status)) {
            severity = 'warning';
        }
        return { message, severity };
    }
    LabelEditValidation.toEditLabelValidationResult = toEditLabelValidationResult;
    function createValidationRequestAction(value, labelId) {
        return protocol_1.RequestEditValidationAction.create({ contextId: LabelEditValidation.CONTEXT_ID, modelElementId: labelId, text: value });
    }
    LabelEditValidation.createValidationRequestAction = createValidationRequestAction;
})(LabelEditValidation = exports.LabelEditValidation || (exports.LabelEditValidation = {}));
let ServerEditLabelValidator = class ServerEditLabelValidator {
    validate(value, label) {
        const action = LabelEditValidation.createValidationRequestAction(value, label.id);
        return this.actionDispatcher.requestUntil(action).then(response => this.getValidationResultFromResponse(response));
    }
    getValidationResultFromResponse(action) {
        if (protocol_1.SetEditValidationResultAction.is(action)) {
            return LabelEditValidation.toEditLabelValidationResult(action.status);
        }
        return { severity: 'ok' };
    }
};
__decorate([
    (0, inversify_1.inject)(sprotty_1.TYPES.IActionDispatcher),
    __metadata("design:type", action_dispatcher_1.GLSPActionDispatcher)
], ServerEditLabelValidator.prototype, "actionDispatcher", void 0);
ServerEditLabelValidator = __decorate([
    (0, inversify_1.injectable)()
], ServerEditLabelValidator);
exports.ServerEditLabelValidator = ServerEditLabelValidator;
let BalloonLabelValidationDecorator = class BalloonLabelValidationDecorator {
    decorate(input, result) {
        const containerElement = input.parentElement;
        if (!containerElement) {
            return;
        }
        if (result.message) {
            containerElement.setAttribute('data-balloon', result.message);
            containerElement.setAttribute('data-balloon-pos', 'up-left');
            containerElement.setAttribute('data-balloon-visible', 'true');
        }
        switch (result.severity) {
            case 'ok':
                containerElement.classList.add('validation-ok');
                break;
            case 'warning':
                containerElement.classList.add('validation-warning');
                break;
            case 'error':
                containerElement.classList.add('validation-error');
                break;
        }
    }
    dispose(input) {
        const containerElement = input.parentElement;
        if (containerElement) {
            containerElement.removeAttribute('data-balloon');
            containerElement.removeAttribute('data-balloon-pos');
            containerElement.removeAttribute('data-balloon-visible');
            containerElement.classList.remove('validation-ok', 'validation-warning', 'validation-error');
        }
    }
};
BalloonLabelValidationDecorator = __decorate([
    (0, inversify_1.injectable)()
], BalloonLabelValidationDecorator);
exports.BalloonLabelValidationDecorator = BalloonLabelValidationDecorator;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/export/di.config.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/export/di.config.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const glsp_svg_exporter_1 = __webpack_require__(/*! ./glsp-svg-exporter */ "./node_modules/@eclipse-glsp/client/lib/features/export/glsp-svg-exporter.js");
const glspExportSvgModule = new inversify_1.ContainerModule((bind, _unbind, isBound) => {
    const context = { bind, isBound };
    (0, protocol_1.bindAsService)(context, sprotty_1.TYPES.KeyListener, sprotty_1.ExportSvgKeyListener);
    (0, protocol_1.bindAsService)(context, sprotty_1.TYPES.HiddenVNodePostprocessor, sprotty_1.ExportSvgPostprocessor);
    (0, sprotty_1.configureCommand)(context, sprotty_1.ExportSvgCommand);
    bind(sprotty_1.TYPES.SvgExporter).to(glsp_svg_exporter_1.GLSPSvgExporter).inSingletonScope();
});
exports["default"] = glspExportSvgModule;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/export/glsp-svg-exporter.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/export/glsp-svg-exporter.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GLSPSvgExporter = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const uuid_1 = __webpack_require__(/*! uuid */ "./node_modules/uuid/dist/esm-browser/index.js");
let GLSPSvgExporter = class GLSPSvgExporter extends sprotty_1.SvgExporter {
    export(root, _request) {
        if (typeof document !== 'undefined') {
            const svgElement = this.findSvgElement();
            if (svgElement) {
                // createSvg requires the svg to have a non-empty id, so we generate one if necessary
                const originalId = svgElement.id;
                try {
                    svgElement.id = originalId || (0, uuid_1.v4)();
                    // provide generated svg code with respective sizing for proper viewing in browser and remove undesired border
                    const bounds = this.getBounds(root);
                    const svg = this.createSvg(svgElement, root).replace('style="', `style="width: ${bounds.width}px !important;height: ${bounds.height}px !important;border: none !important;`);
                    // do not give request/response id here as otherwise the action is treated as an unrequested response
                    this.actionDispatcher.dispatch(sprotty_1.ExportSvgAction.create(svg, ''));
                }
                finally {
                    svgElement.id = originalId;
                }
            }
        }
    }
    findSvgElement() {
        const div = document.getElementById(this.options.hiddenDiv);
        // search for first svg element as hierarchy within Sprotty might change
        return div && div.querySelector('svg');
    }
};
GLSPSvgExporter = __decorate([
    (0, inversify_1.injectable)()
], GLSPSvgExporter);
exports.GLSPSvgExporter = GLSPSvgExporter;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/hints/di.config.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/hints/di.config.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2019-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/@eclipse-glsp/client/lib/base/types.js");
const type_hints_1 = __webpack_require__(/*! ./type-hints */ "./node_modules/@eclipse-glsp/client/lib/features/hints/type-hints.js");
const modelHintsModule = new inversify_1.ContainerModule((bind, _unbind, isBound) => {
    bind(type_hints_1.TypeHintProvider).toSelf().inSingletonScope();
    bind(types_1.TYPES.ITypeHintProvider).toService(type_hints_1.TypeHintProvider);
    (0, sprotty_1.configureActionHandler)({ bind, isBound }, protocol_1.SetTypeHintsAction.KIND, type_hints_1.TypeHintProvider);
    (0, sprotty_1.configureCommand)({ bind, isBound }, type_hints_1.ApplyTypeHintsCommand);
});
exports["default"] = modelHintsModule;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/hints/model.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/hints/model.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isReparentable = exports.reparentFeature = exports.isContainable = exports.containerFeature = void 0;
exports.containerFeature = Symbol('containable');
function isContainable(element) {
    return element.hasFeature(exports.containerFeature);
}
exports.isContainable = isContainable;
exports.reparentFeature = Symbol('reparentFeature');
function isReparentable(element) {
    return element.hasFeature(exports.reparentFeature);
}
exports.isReparentable = isReparentable;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/hints/type-hints.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/hints/type-hints.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TypeHintProvider = exports.ApplyTypeHintsCommand = exports.ApplyTypeHintsAction = void 0;
/********************************************************************************
 * Copyright (c) 2019-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/@eclipse-glsp/client/lib/base/types.js");
const smodel_util_1 = __webpack_require__(/*! ../../utils/smodel-util */ "./node_modules/@eclipse-glsp/client/lib/utils/smodel-util.js");
const model_1 = __webpack_require__(/*! ../change-bounds/model */ "./node_modules/@eclipse-glsp/client/lib/features/change-bounds/model.js");
const model_2 = __webpack_require__(/*! ../reconnect/model */ "./node_modules/@eclipse-glsp/client/lib/features/reconnect/model.js");
const model_3 = __webpack_require__(/*! ../tool-feedback/model */ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/model.js");
const model_4 = __webpack_require__(/*! ./model */ "./node_modules/@eclipse-glsp/client/lib/features/hints/model.js");
var ApplyTypeHintsAction;
(function (ApplyTypeHintsAction) {
    ApplyTypeHintsAction.KIND = 'applyTypeHints';
    function is(object) {
        return protocol_1.Action.hasKind(object, ApplyTypeHintsAction.KIND);
    }
    ApplyTypeHintsAction.is = is;
    function create() {
        return { kind: ApplyTypeHintsAction.KIND };
    }
    ApplyTypeHintsAction.create = create;
})(ApplyTypeHintsAction = exports.ApplyTypeHintsAction || (exports.ApplyTypeHintsAction = {}));
let ApplyTypeHintsCommand = class ApplyTypeHintsCommand extends model_3.FeedbackCommand {
    constructor(action) {
        super();
        this.action = action;
        this.priority = 10;
    }
    execute(context) {
        context.root.index.all().forEach(element => {
            if (element instanceof sprotty_1.SShapeElement || element instanceof sprotty_1.SModelRoot) {
                this.applyShapeTypeHint(element);
            }
            else if (element instanceof sprotty_1.SEdge) {
                return this.applyEdgeTypeHint(element);
            }
        });
        return context.root;
    }
    applyEdgeTypeHint(element) {
        const hint = this.typeHintProvider.getEdgeTypeHint(element);
        if (hint && isModifiableFeatureSet(element.features)) {
            addOrRemove(element.features, sprotty_1.deletableFeature, hint.deletable);
            addOrRemove(element.features, sprotty_1.editFeature, hint.routable);
            addOrRemove(element.features, model_2.reconnectFeature, hint.repositionable);
        }
    }
    applyShapeTypeHint(element) {
        const hint = this.typeHintProvider.getShapeTypeHint(element);
        if (hint && isModifiableFeatureSet(element.features)) {
            addOrRemove(element.features, sprotty_1.deletableFeature, hint.deletable);
            addOrRemove(element.features, sprotty_1.moveFeature, hint.repositionable);
            addOrRemove(element.features, model_1.resizeFeature, hint.resizable);
            addOrRemove(element.features, model_4.reparentFeature, hint.reparentable);
            addOrRemove(element.features, model_4.containerFeature, true);
            const containable = createContainable(hint);
            Object.assign(element, containable);
            addOrRemove(element.features, sprotty_1.connectableFeature, true);
            const validSourceEdges = this.typeHintProvider.getValidEdgeElementTypes(element, 'source');
            const validTargetEdges = this.typeHintProvider.getValidEdgeElementTypes(element, 'target');
            const connectable = createConnectable(validSourceEdges, validTargetEdges);
            Object.assign(element, connectable);
        }
    }
};
ApplyTypeHintsCommand.KIND = ApplyTypeHintsAction.KIND;
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ITypeHintProvider),
    __metadata("design:type", Object)
], ApplyTypeHintsCommand.prototype, "typeHintProvider", void 0);
ApplyTypeHintsCommand = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
    __metadata("design:paramtypes", [Object])
], ApplyTypeHintsCommand);
exports.ApplyTypeHintsCommand = ApplyTypeHintsCommand;
function createConnectable(validSourceEdges, validTargetEdges) {
    return {
        canConnect: (routable, role) => role === 'source' ? validSourceEdges.includes(routable.type) : validTargetEdges.includes(routable.type)
    };
}
function createContainable(hint) {
    return {
        isContainableElement: element => hint.containableElementTypeIds ? hint.containableElementTypeIds.includes((0, smodel_util_1.getElementTypeId)(element)) : false
    };
}
function addOrRemove(features, feature, add) {
    if (add && !features.has(feature)) {
        features.add(feature);
    }
    else if (!add && features.has(feature)) {
        features.delete(feature);
    }
}
function isModifiableFeatureSet(featureSet) {
    return featureSet !== undefined && featureSet instanceof Set;
}
let TypeHintProvider = class TypeHintProvider {
    constructor() {
        this.shapeHints = new Map();
        this.edgeHints = new Map();
    }
    handle(action) {
        if (protocol_1.SetTypeHintsAction.is(action)) {
            action.shapeHints.forEach(hint => this.shapeHints.set(hint.elementTypeId, hint));
            action.edgeHints.forEach(hint => this.edgeHints.set(hint.elementTypeId, hint));
            this.feedbackActionDispatcher.registerFeedback(this, [ApplyTypeHintsAction.create()]);
        }
    }
    getValidEdgeElementTypes(input, role) {
        const elementTypeId = (0, smodel_util_1.getElementTypeId)(input);
        if (role === 'source') {
            return Array.from(Array.from(this.edgeHints.values())
                .filter(hint => hint.sourceElementTypeIds.some(sourceElementTypeId => (0, smodel_util_1.hasCompatibleType)(elementTypeId, sourceElementTypeId)))
                .map(hint => hint.elementTypeId));
        }
        else {
            return Array.from(Array.from(this.edgeHints.values())
                .filter(hint => hint.targetElementTypeIds.some(targetElementTypeId => (0, smodel_util_1.hasCompatibleType)(elementTypeId, targetElementTypeId)))
                .map(hint => hint.elementTypeId));
        }
    }
    getShapeTypeHint(input) {
        return getTypeHint(input, this.shapeHints);
    }
    getEdgeTypeHint(input) {
        return getTypeHint(input, this.edgeHints);
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.IFeedbackActionDispatcher),
    __metadata("design:type", Object)
], TypeHintProvider.prototype, "feedbackActionDispatcher", void 0);
TypeHintProvider = __decorate([
    (0, inversify_1.injectable)()
], TypeHintProvider);
exports.TypeHintProvider = TypeHintProvider;
function getTypeHint(input, hints) {
    const type = (0, smodel_util_1.getElementTypeId)(input);
    let hint = hints.get(type);
    // Check subtypes
    if (hint === undefined) {
        const subtypes = type.split(':');
        while (hint === undefined && subtypes.length > 0) {
            subtypes.pop();
            hint = hints.get(subtypes.join(':'));
        }
    }
    return hint;
}


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/hover/di.config.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/hover/di.config.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2020-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const popup_position_updater_1 = __webpack_require__(/*! sprotty/lib/features/hover/popup-position-updater */ "./node_modules/sprotty/lib/features/hover/popup-position-updater.js");
const focus_change_action_1 = __webpack_require__(/*! ../../base/actions/focus-change-action */ "./node_modules/@eclipse-glsp/client/lib/base/actions/focus-change-action.js");
const hover_1 = __webpack_require__(/*! ./hover */ "./node_modules/@eclipse-glsp/client/lib/features/hover/hover.js");
const glspHoverModule = new inversify_1.ContainerModule((bind, _unbind, isBound) => {
    const context = { bind, isBound };
    (0, protocol_1.bindAsService)(context, sprotty_1.TYPES.PopupVNodePostprocessor, popup_position_updater_1.PopupPositionUpdater);
    (0, protocol_1.bindAsService)(context, sprotty_1.TYPES.MouseListener, hover_1.GlspHoverMouseListener);
    (0, protocol_1.bindAsService)(context, sprotty_1.TYPES.PopupMouseListener, sprotty_1.PopupHoverMouseListener);
    (0, protocol_1.bindAsService)(context, sprotty_1.TYPES.KeyListener, sprotty_1.HoverKeyListener);
    bind(sprotty_1.TYPES.HoverState).toConstantValue({
        mouseOverTimer: undefined,
        mouseOutTimer: undefined,
        popupOpen: false,
        previousPopupElement: undefined
    });
    bind(sprotty_1.ClosePopupActionHandler).toSelf().inSingletonScope();
    (0, sprotty_1.configureCommand)(context, sprotty_1.HoverFeedbackCommand);
    (0, sprotty_1.configureCommand)(context, sprotty_1.SetPopupModelCommand);
    (0, sprotty_1.configureActionHandler)(context, sprotty_1.SetPopupModelCommand.KIND, sprotty_1.ClosePopupActionHandler);
    (0, sprotty_1.configureActionHandler)(context, sprotty_1.FitToScreenCommand.KIND, sprotty_1.ClosePopupActionHandler);
    (0, sprotty_1.configureActionHandler)(context, sprotty_1.CenterCommand.KIND, sprotty_1.ClosePopupActionHandler);
    (0, sprotty_1.configureActionHandler)(context, sprotty_1.SetViewportCommand.KIND, sprotty_1.ClosePopupActionHandler);
    (0, sprotty_1.configureActionHandler)(context, sprotty_1.MoveCommand.KIND, sprotty_1.ClosePopupActionHandler);
    (0, sprotty_1.configureActionHandler)(context, focus_change_action_1.FocusStateChangedAction.KIND, sprotty_1.ClosePopupActionHandler);
    (0, sprotty_1.configureActionHandler)(context, sprotty_1.EnableToolsAction.KIND, hover_1.GlspHoverMouseListener);
    (0, sprotty_1.configureActionHandler)(context, sprotty_1.EnableDefaultToolsAction.KIND, hover_1.GlspHoverMouseListener);
    (0, sprotty_1.configureActionHandler)(context, focus_change_action_1.FocusStateChangedAction.KIND, hover_1.GlspHoverMouseListener);
});
exports["default"] = glspHoverModule;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/hover/hover.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/hover/hover.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GlspHoverMouseListener = void 0;
/********************************************************************************
 * Copyright (c) 2020-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "./node_modules/sprotty-protocol/lib/actions.js");
const focus_change_action_1 = __webpack_require__(/*! ../../base/actions/focus-change-action */ "./node_modules/@eclipse-glsp/client/lib/base/actions/focus-change-action.js");
const tool_actions_1 = __webpack_require__(/*! ../../base/tool-manager/tool-actions */ "./node_modules/@eclipse-glsp/client/lib/base/tool-manager/tool-actions.js");
const edge_creation_tool_1 = __webpack_require__(/*! ../tools/edge-creation-tool */ "./node_modules/@eclipse-glsp/client/lib/features/tools/edge-creation-tool.js");
const issue_marker_1 = __webpack_require__(/*! ../validation/issue-marker */ "./node_modules/@eclipse-glsp/client/lib/features/validation/issue-marker.js");
let GlspHoverMouseListener = class GlspHoverMouseListener extends sprotty_1.HoverMouseListener {
    constructor() {
        super(...arguments);
        this.enableHover = true;
    }
    /**
     * Stops mouse over timer and remove hover feedback, if focus is lost.
     *
     * This fixes strange effects that appear if the mouse left the element via e.g. a context menu,
     * which explicitly removes the focus of the diagram.
     * @see SelectionServiceAwareContextMenuMouseListener
     * @param action should be a `FocusStateChangedAction`
     * @returns a `HoverFeedbackAction` resetting the state, if the specified action indicates lost focus
     */
    handle(action) {
        if (focus_change_action_1.FocusStateChangedAction.is(action) && !action.hasFocus) {
            this.stopMouseOverTimer();
            if (this.lastHoverFeedbackElementId) {
                const previousTargetId = this.lastHoverFeedbackElementId;
                this.lastHoverFeedbackElementId = undefined;
                return actions_1.HoverFeedbackAction.create({ mouseoverElement: previousTargetId, mouseIsOver: false });
            }
        }
        else if (tool_actions_1.EnableToolsAction.is(action)) {
            this.enableHover = !action.toolIds.includes(edge_creation_tool_1.EdgeCreationTool.ID);
        }
        else if (tool_actions_1.EnableDefaultToolsAction.is(action)) {
            this.enableHover = true;
        }
    }
    mouseOver(target, event) {
        if (this.enableHover) {
            return super.mouseOver(target, event);
        }
        return [];
    }
    startMouseOverTimer(target, event) {
        this.stopMouseOverTimer();
        return new Promise(resolve => {
            this.state.mouseOverTimer = window.setTimeout(() => {
                const popupBounds = this.computePopupBounds(target, { x: event.pageX, y: event.pageY });
                if (target instanceof issue_marker_1.GIssueMarker) {
                    resolve(protocol_1.SetPopupModelAction.create(this.createPopupModel(target, popupBounds)));
                }
                else {
                    resolve(protocol_1.RequestPopupModelAction.create({ elementId: target.id, bounds: popupBounds }));
                }
                this.state.popupOpen = true;
                this.state.previousPopupElement = target;
            }, this.options.popupOpenDelay);
        });
    }
    createPopupModel(marker, bounds) {
        if (marker.issues !== undefined && marker.issues.length > 0) {
            return {
                type: 'html',
                id: 'sprotty-popup',
                children: [this.createMarkerIssuePopup(marker)],
                canvasBounds: this.modifyBounds(bounds)
            };
        }
        return { type: sprotty_1.EMPTY_ROOT.type, id: sprotty_1.EMPTY_ROOT.id };
    }
    createMarkerIssuePopup(marker) {
        const message = this.createIssueMessage(marker);
        return {
            type: 'pre-rendered',
            id: 'popup-title',
            code: `<div class="${(0, issue_marker_1.getSeverity)(marker)}"><div class="sprotty-popup-title">${message}</div></div>`
        };
    }
    createIssueMessage(marker) {
        return '<ul>' + marker.issues.map(i => '<li>' + i.severity.toUpperCase() + ': ' + i.message + '</li>').join('') + '</ul>';
    }
    modifyBounds(bounds) {
        return bounds;
    }
};
GlspHoverMouseListener = __decorate([
    (0, inversify_1.injectable)()
], GlspHoverMouseListener);
exports.GlspHoverMouseListener = GlspHoverMouseListener;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/layout/di.config.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/layout/di.config.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const layout_elements_action_1 = __webpack_require__(/*! ./layout-elements-action */ "./node_modules/@eclipse-glsp/client/lib/features/layout/layout-elements-action.js");
const layoutModule = new inversify_1.ContainerModule((bind, _unbind, isBound, rebind) => {
    const context = { bind, isBound };
    (0, sprotty_1.configureActionHandler)(context, layout_elements_action_1.ResizeElementsAction.KIND, layout_elements_action_1.ResizeElementsActionHandler);
    (0, sprotty_1.configureActionHandler)(context, layout_elements_action_1.AlignElementsAction.KIND, layout_elements_action_1.AlignElementsActionHandler);
});
exports["default"] = layoutModule;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/layout/layout-elements-action.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/layout/layout-elements-action.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AlignElementsActionHandler = exports.AlignElementsAction = exports.SelectFunction = exports.Alignment = exports.ResizeElementsActionHandler = exports.LayoutElementsActionHandler = exports.ResizeElementsAction = exports.ReduceFunction = exports.ResizeDimension = void 0;
/********************************************************************************
 * Copyright (c) 2019-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "./node_modules/sprotty-protocol/lib/actions.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/@eclipse-glsp/client/lib/base/types.js");
const layout_utils_1 = __webpack_require__(/*! ../../utils/layout-utils */ "./node_modules/@eclipse-glsp/client/lib/utils/layout-utils.js");
const smodel_util_1 = __webpack_require__(/*! ../../utils/smodel-util */ "./node_modules/@eclipse-glsp/client/lib/utils/smodel-util.js");
const model_1 = __webpack_require__(/*! ../change-bounds/model */ "./node_modules/@eclipse-glsp/client/lib/features/change-bounds/model.js");
const selection_service_1 = __webpack_require__(/*! ../select/selection-service */ "./node_modules/@eclipse-glsp/client/lib/features/select/selection-service.js");
/**
 * Used to specify the desired resize dimension for a {@link ResizeElementsCommand}.
 */
// eslint-disable-next-line no-shadow
var ResizeDimension;
(function (ResizeDimension) {
    ResizeDimension[ResizeDimension["Width"] = 0] = "Width";
    ResizeDimension[ResizeDimension["Height"] = 1] = "Height";
    ResizeDimension[ResizeDimension["Width_And_Height"] = 2] = "Width_And_Height";
})(ResizeDimension = exports.ResizeDimension || (exports.ResizeDimension = {}));
var ReduceFunction;
(function (ReduceFunction) {
    /**
     * Returns the minimal value of the given numbers.
     * @param values Numbers to be evaluated.
     * @returns The reduced number.
     */
    function min(...values) {
        return Math.min(...values);
    }
    ReduceFunction.min = min;
    /**
     * Returns the maximal value of the given numbers.
     * @param values Numbers to be evaluated.
     * @returns The reduced number.
     */
    function max(...values) {
        return Math.max(...values);
    }
    ReduceFunction.max = max;
    /**
     * Computes the  average of the given numbers.
     * @param values Numbers to be evaluated.
     */
    function avg(...values) {
        return values.reduce((a, b) => a + b, 0) / values.length;
    }
    ReduceFunction.avg = avg;
    /**
     *  Returns the last value of the given numbers.
     *  @param values Numbers to be evaluated.
     *  @returns The reduced number.
     */
    function first(...values) {
        return values[0];
    }
    ReduceFunction.first = first;
    /**
     *  Returns the minimal value of the given numbers.
     *  @param values Numbers  to be evaluated.
     *  @returns The reduced number.
     */
    function last(...values) {
        return values[values.length - 1];
    }
    ReduceFunction.last = last;
    /**
     * Returns the reduce function that corresponds to the given {@link ReduceFunctionType}.
     * @param type The reduce function kind.
     * @returns The corresponding reduce function.
     */
    function get(type) {
        return ReduceFunction[type];
    }
    ReduceFunction.get = get;
})(ReduceFunction = exports.ReduceFunction || (exports.ReduceFunction = {}));
var ResizeElementsAction;
(function (ResizeElementsAction) {
    ResizeElementsAction.KIND = 'resizeElementAction';
    function is(object) {
        return (protocol_1.Action.hasKind(object, ResizeElementsAction.KIND) &&
            (0, protocol_1.hasArrayProp)(object, 'elementIds') &&
            (0, protocol_1.hasNumberProp)(object, 'dimension') &&
            (0, protocol_1.hasStringProp)(object, 'reduceFunction'));
    }
    ResizeElementsAction.is = is;
    function create(options) {
        return Object.assign({ kind: ResizeElementsAction.KIND, dimension: ResizeDimension.Width, elementIds: [] }, options);
    }
    ResizeElementsAction.create = create;
})(ResizeElementsAction = exports.ResizeElementsAction || (exports.ResizeElementsAction = {}));
let LayoutElementsActionHandler = class LayoutElementsActionHandler {
    getSelectedElements(selection) {
        const index = this.selectionService.getModelRoot().index;
        const selectedElements = selection.elementIds.length > 0 ? selection.elementIds : this.selectionService.getSelectedElementIDs();
        return (0, smodel_util_1.getElements)(index, selectedElements, this.isActionElement);
    }
    dispatchAction(action) {
        this.actionDispatcher.dispatch(action);
    }
    dispatchActions(actions) {
        this.actionDispatcher.dispatchAll(actions);
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.IActionDispatcher),
    __metadata("design:type", Object)
], LayoutElementsActionHandler.prototype, "actionDispatcher", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.SelectionService),
    __metadata("design:type", selection_service_1.SelectionService)
], LayoutElementsActionHandler.prototype, "selectionService", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.IMovementRestrictor),
    (0, inversify_1.optional)(),
    __metadata("design:type", Object)
], LayoutElementsActionHandler.prototype, "movementRestrictor", void 0);
LayoutElementsActionHandler = __decorate([
    (0, inversify_1.injectable)()
], LayoutElementsActionHandler);
exports.LayoutElementsActionHandler = LayoutElementsActionHandler;
let ResizeElementsActionHandler = class ResizeElementsActionHandler extends LayoutElementsActionHandler {
    handle(action) {
        const elements = this.getSelectedElements(action);
        if (elements.length > 1) {
            const reduceFn = ReduceFunction.get(action.reduceFunction);
            switch (action.dimension) {
                case ResizeDimension.Width:
                    return this.resizeWidth(elements, reduceFn);
                case ResizeDimension.Height:
                    return this.resizeHeight(elements, reduceFn);
                case ResizeDimension.Width_And_Height:
                    return this.resizeWidthAndHeight(elements, reduceFn);
            }
        }
    }
    resizeWidth(elements, reduceFn) {
        const targetWidth = reduceFn(...elements.map(element => element.bounds.width));
        this.dispatchResizeActions(elements, (element, bounds) => {
            // resize around center (horizontal)
            const halfDiffWidth = 0.5 * (targetWidth - element.bounds.width);
            bounds.newPosition.x = element.bounds.x - halfDiffWidth;
            bounds.newSize.width = targetWidth;
        });
    }
    resizeHeight(elements, reduceFn) {
        const targetHeight = reduceFn(...elements.map(element => element.bounds.height));
        this.dispatchResizeActions(elements, (element, bounds) => {
            // resize around middle (vertical)
            const halfDiffHeight = 0.5 * (targetHeight - element.bounds.height);
            bounds.newPosition.y = element.bounds.y - halfDiffHeight;
            bounds.newSize.height = targetHeight;
        });
    }
    resizeWidthAndHeight(elements, reduceFn) {
        const targetWidth = reduceFn(...elements.map(element => element.bounds.width));
        const targetHeight = reduceFn(...elements.map(element => element.bounds.height));
        this.dispatchResizeActions(elements, (element, bounds) => {
            // resize around center and middle (horizontal & vertical)
            const halfDiffWidth = 0.5 * (targetWidth - element.bounds.width);
            const halfDiffHeight = 0.5 * (targetHeight - element.bounds.height);
            bounds.newPosition = { x: element.bounds.x - halfDiffWidth, y: element.bounds.y - halfDiffHeight };
            bounds.newSize = { width: targetWidth, height: targetHeight };
        });
    }
    dispatchResizeActions(elements, change) {
        const elementAndBounds = []; // client- and server-side resize
        elements.forEach(element => {
            const elementChange = this.createElementAndBounds(element, change);
            if (elementChange) {
                // simply skip invalid changes
                elementAndBounds.push(elementChange);
            }
        });
        this.dispatchActions([protocol_1.SetBoundsAction.create(elementAndBounds), protocol_1.ChangeBoundsOperation.create(elementAndBounds)]);
    }
    createElementAndBounds(element, change) {
        const bounds = {
            elementId: element.id,
            newPosition: {
                x: element.bounds.x,
                y: element.bounds.y
            },
            newSize: {
                width: element.bounds.width,
                height: element.bounds.height
            }
        };
        change(element, bounds);
        return (0, layout_utils_1.toValidElementAndBounds)(element, bounds, this.movementRestrictor);
    }
    isActionElement(element) {
        return (0, model_1.isResizable)(element);
    }
};
ResizeElementsActionHandler = __decorate([
    (0, inversify_1.injectable)()
], ResizeElementsActionHandler);
exports.ResizeElementsActionHandler = ResizeElementsActionHandler;
// eslint-disable-next-line no-shadow
var Alignment;
(function (Alignment) {
    Alignment[Alignment["Left"] = 0] = "Left";
    Alignment[Alignment["Center"] = 1] = "Center";
    Alignment[Alignment["Right"] = 2] = "Right";
    Alignment[Alignment["Top"] = 3] = "Top";
    Alignment[Alignment["Middle"] = 4] = "Middle";
    Alignment[Alignment["Bottom"] = 5] = "Bottom";
})(Alignment = exports.Alignment || (exports.Alignment = {}));
var SelectFunction;
(function (SelectFunction) {
    /**
     * Select all elements from the given set of elements.
     * @param elements The set of elements.
     * @returns All elements.
     */
    function all(elements) {
        return elements;
    }
    SelectFunction.all = all;
    /**
     * Select the first element from a given set of elements.
     * @param elements The elements.
     * @returns An array containing the first element of the given elements.
     */
    function first(elements) {
        return [elements[0]];
    }
    SelectFunction.first = first;
    /**
     * Select the last element from a given set of elements.
     * @param elements The elements.
     * @returns An array containing the last element of the given elements.
     */
    function last(elements) {
        return [elements[elements.length - 1]];
    }
    SelectFunction.last = last;
    /**
     * Returns the select function that corresponds to the given {@link SelectFunctionType}.
     * @param type The select function type.
     * @returns The corresponding select function.
     */
    function get(kind) {
        return SelectFunction[kind];
    }
    SelectFunction.get = get;
})(SelectFunction = exports.SelectFunction || (exports.SelectFunction = {}));
var AlignElementsAction;
(function (AlignElementsAction) {
    AlignElementsAction.KIND = 'alignElements';
    function is(object) {
        return (protocol_1.Action.hasKind(object, AlignElementsAction.KIND) &&
            (0, protocol_1.hasArrayProp)(object, 'elementIds') &&
            (0, protocol_1.hasNumberProp)(object, 'alignment') &&
            (0, protocol_1.hasStringProp)(object, 'selectFunction'));
    }
    AlignElementsAction.is = is;
    function create(options = {}) {
        return Object.assign({ kind: AlignElementsAction.KIND, elementIds: [], alignment: Alignment.Left, selectFunction: 'all' }, options);
    }
    AlignElementsAction.create = create;
})(AlignElementsAction = exports.AlignElementsAction || (exports.AlignElementsAction = {}));
let AlignElementsActionHandler = class AlignElementsActionHandler extends LayoutElementsActionHandler {
    handle(action) {
        const elements = this.getSelectedElements(action);
        const selectFn = SelectFunction.get(action.selectFunction);
        const calculatedElements = selectFn(elements);
        if (elements.length > 1) {
            switch (action.alignment) {
                case Alignment.Left:
                    return this.alignLeft(calculatedElements);
                case Alignment.Center:
                    return this.alignCenter(calculatedElements);
                case Alignment.Right:
                    return this.alignRight(calculatedElements);
                case Alignment.Top:
                    return this.alignTop(calculatedElements);
                case Alignment.Middle:
                    return this.alignMiddle(calculatedElements);
                case Alignment.Bottom:
                    return this.alignBottom(calculatedElements);
            }
        }
    }
    alignLeft(elements) {
        const minX = elements.map(element => element.bounds.x).reduce((a, b) => Math.min(a, b));
        this.dispatchAlignActions(elements, (_, move) => (move.toPosition.x = minX));
    }
    alignCenter(elements) {
        const minX = elements.map(element => element.bounds.x).reduce((a, b) => Math.min(a, b));
        const maxX = elements.map(element => element.bounds.x + element.bounds.width).reduce((a, b) => Math.max(a, b));
        const diffX = maxX - minX;
        const centerX = minX + 0.5 * diffX;
        this.dispatchAlignActions(elements, (element, move) => (move.toPosition.x = centerX - 0.5 * element.bounds.width));
    }
    alignRight(elements) {
        const maxX = elements.map(element => element.bounds.x + element.bounds.width).reduce((a, b) => Math.max(a, b));
        this.dispatchAlignActions(elements, (element, move) => (move.toPosition.x = maxX - element.bounds.width));
    }
    alignTop(elements) {
        const minY = elements.map(element => element.bounds.y).reduce((a, b) => Math.min(a, b));
        this.dispatchAlignActions(elements, (_, move) => (move.toPosition.y = minY));
    }
    alignMiddle(elements) {
        const minY = elements.map(element => element.bounds.y).reduce((a, b) => Math.min(a, b));
        const maxY = elements.map(element => element.bounds.y + element.bounds.height).reduce((a, b) => Math.max(a, b));
        const diffY = maxY - minY;
        const middleY = minY + 0.5 * diffY;
        this.dispatchAlignActions(elements, (element, move) => (move.toPosition.y = middleY - 0.5 * element.bounds.height));
    }
    alignBottom(elements) {
        const maxY = elements.map(element => element.bounds.y + element.bounds.height).reduce((a, b) => Math.max(a, b));
        this.dispatchAlignActions(elements, (element, move) => (move.toPosition.y = maxY - element.bounds.height));
    }
    dispatchAlignActions(elements, change) {
        const moves = []; // client-side move
        const elementAndBounds = []; // server-side move
        elements.forEach(element => {
            const move = this.createElementMove(element, change);
            if (move) {
                // simply skip invalid changes
                moves.push(move);
                const elementAndBound = this.createElementAndBounds(element, move);
                elementAndBounds.push(elementAndBound);
            }
        });
        this.dispatchActions([actions_1.MoveAction.create(moves), protocol_1.ChangeBoundsOperation.create(elementAndBounds)]);
    }
    createElementMove(element, change) {
        const move = {
            elementId: element.id,
            fromPosition: {
                x: element.bounds.x,
                y: element.bounds.y
            },
            toPosition: {
                x: element.bounds.x,
                y: element.bounds.y
            }
        };
        change(element, move);
        return (0, layout_utils_1.toValidElementMove)(element, move, this.movementRestrictor);
    }
    createElementAndBounds(element, move) {
        return {
            elementId: element.id,
            newPosition: {
                x: move.toPosition.x,
                y: move.toPosition.y
            },
            newSize: {
                width: element.bounds.width,
                height: element.bounds.height
            }
        };
    }
    isActionElement(element) {
        return (0, model_1.isBoundsAwareMoveable)(element);
    }
};
AlignElementsActionHandler = __decorate([
    (0, inversify_1.injectable)()
], AlignElementsActionHandler);
exports.AlignElementsActionHandler = AlignElementsActionHandler;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/mouse-tool/di.config.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/mouse-tool/di.config.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2019-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/@eclipse-glsp/client/lib/base/types.js");
const mouse_tool_1 = __webpack_require__(/*! ./mouse-tool */ "./node_modules/@eclipse-glsp/client/lib/features/mouse-tool/mouse-tool.js");
const glspMouseToolModule = new inversify_1.ContainerModule((bind, _unbind, _isBound, rebind) => {
    bind(mouse_tool_1.RankingMouseTool).toSelf().inSingletonScope();
    bind(types_1.TYPES.MouseTool).toService(mouse_tool_1.RankingMouseTool);
    rebind(sprotty_1.MouseTool).toService(mouse_tool_1.RankingMouseTool);
});
exports["default"] = glspMouseToolModule;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/mouse-tool/mouse-tool.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/mouse-tool/mouse-tool.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RankingMouseTool = void 0;
/********************************************************************************
 * Copyright (c) 2019-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/@eclipse-glsp/client/lib/base/types.js");
const model_1 = __webpack_require__(/*! ../rank/model */ "./node_modules/@eclipse-glsp/client/lib/features/rank/model.js");
let RankingMouseTool = class RankingMouseTool extends sprotty_1.MouseTool {
    constructor(mouseListeners = []) {
        super(mouseListeners);
        this.mouseListeners = mouseListeners;
        this.rankedMouseListeners = groupBy(mouseListeners, listener => (0, model_1.getRank)(listener));
    }
    register(mouseListener) {
        super.register(mouseListener);
        this.rankedMouseListeners = groupBy(this.mouseListeners, listener => (0, model_1.getRank)(listener));
    }
    deregister(mouseListener) {
        super.deregister(mouseListener);
        this.rankedMouseListeners = groupBy(this.mouseListeners, listener => (0, model_1.getRank)(listener));
    }
    handleEvent(methodName, model, event) {
        this.focusOnMouseEvent(methodName, model);
        const element = this.getTargetElement(model, event);
        if (!element) {
            return;
        }
        this.notifyListenersByRank(element, methodName, model, event);
    }
    async notifyListenersByRank(element, methodName, model, event) {
        for (const rank of this.rankedMouseListeners) {
            await this.dispatchActions(rank[1], methodName, element, event);
        }
    }
    async dispatchActions(mouseListeners, methodName, element, event) {
        const actions = mouseListeners.map(listener => listener[methodName](element, event)).reduce((a, b) => a.concat(b));
        if (actions.length > 0) {
            event.preventDefault();
            for (const actionOrPromise of actions) {
                if (protocol_1.Action.is(actionOrPromise)) {
                    await this.actionDispatcher.dispatch(actionOrPromise);
                }
                else {
                    actionOrPromise.then((action) => {
                        this.actionDispatcher.dispatch(action);
                    });
                }
            }
        }
    }
};
RankingMouseTool = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.multiInject)(types_1.TYPES.MouseListener)),
    __param(0, (0, inversify_1.optional)()),
    __metadata("design:paramtypes", [Array])
], RankingMouseTool);
exports.RankingMouseTool = RankingMouseTool;
function groupBy(array, keyFunction) {
    const unsortedMap = array.reduce((result, item) => {
        const key = keyFunction(item);
        if (!result.has(key)) {
            result.set(key, [item]);
        }
        else {
            const entries = result.get(key);
            if (entries) {
                entries.push(item);
            }
        }
        return result;
    }, new Map());
    return new Map([...unsortedMap.entries()].sort());
}


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/navigation/di.config.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/navigation/di.config.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2020-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const navigation_action_handler_1 = __webpack_require__(/*! ./navigation-action-handler */ "./node_modules/@eclipse-glsp/client/lib/features/navigation/navigation-action-handler.js");
const navigation_target_resolver_1 = __webpack_require__(/*! ./navigation-target-resolver */ "./node_modules/@eclipse-glsp/client/lib/features/navigation/navigation-target-resolver.js");
const navigationModule = new inversify_1.ContainerModule((bind, _unbind, isBound) => {
    bind(navigation_target_resolver_1.NavigationTargetResolver).toSelf().inSingletonScope();
    bind(navigation_action_handler_1.NavigationActionHandler).toSelf().inSingletonScope();
    (0, sprotty_1.configureActionHandler)({ bind, isBound }, navigation_action_handler_1.NavigateAction.KIND, navigation_action_handler_1.NavigationActionHandler);
    (0, sprotty_1.configureActionHandler)({ bind, isBound }, protocol_1.NavigateToTargetAction.KIND, navigation_action_handler_1.NavigationActionHandler);
    (0, sprotty_1.configureActionHandler)({ bind, isBound }, navigation_action_handler_1.ProcessNavigationArgumentsAction.KIND, navigation_action_handler_1.NavigationActionHandler);
    (0, sprotty_1.configureActionHandler)({ bind, isBound }, protocol_1.NavigateToExternalTargetAction.KIND, navigation_action_handler_1.NavigationActionHandler);
});
exports["default"] = navigationModule;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/navigation/navigation-action-handler.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/navigation/navigation-action-handler.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.NavigationActionHandler = exports.ProcessNavigationArgumentsAction = exports.NavigateAction = void 0;
/********************************************************************************
 * Copyright (c) 2020-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/@eclipse-glsp/client/lib/base/types.js");
const navigation_target_resolver_1 = __webpack_require__(/*! ./navigation-target-resolver */ "./node_modules/@eclipse-glsp/client/lib/features/navigation/navigation-target-resolver.js");
var NavigateAction;
(function (NavigateAction) {
    NavigateAction.KIND = 'navigate';
    function is(object) {
        return protocol_1.Action.hasKind(object, NavigateAction.KIND) && (0, protocol_1.hasStringProp)(object, 'targetTypeId');
    }
    NavigateAction.is = is;
    function create(targetTypeId, options = {}) {
        return Object.assign({ kind: NavigateAction.KIND, targetTypeId }, options);
    }
    NavigateAction.create = create;
})(NavigateAction = exports.NavigateAction || (exports.NavigateAction = {}));
var ProcessNavigationArgumentsAction;
(function (ProcessNavigationArgumentsAction) {
    ProcessNavigationArgumentsAction.KIND = 'processNavigationArguments';
    function is(object) {
        return protocol_1.Action.hasKind(object, ProcessNavigationArgumentsAction.KIND) && (0, protocol_1.hasObjectProp)(object, 'args');
    }
    ProcessNavigationArgumentsAction.is = is;
    function create(args) {
        return {
            kind: ProcessNavigationArgumentsAction.KIND,
            args
        };
    }
    ProcessNavigationArgumentsAction.create = create;
})(ProcessNavigationArgumentsAction = exports.ProcessNavigationArgumentsAction || (exports.ProcessNavigationArgumentsAction = {}));
/**
 * Default handler for all actions that are related to the navigation.
 *
 * For a `NavigateAction` this handler triggers a `RequestNavigationTargetAction` to obtain the actual
 * navigation targets for the navigation type that is specified in the `NavigateAction`.
 * Once the navigation targets are available, it will trigger a `NavigateToTargetAction` to actually
 * perform the navigation.
 *
 * In other scenarios, clients may also trigger the `NavigateToTargetAction` directly, e.g. when opening
 * the diagram.
 *
 * Depending on the URI and arguments of the navigation target we may encounter three cases:
 *   *(a)* the navigation target already specifies element IDs, in which case this action handler navigates
 *         to the specified elements directly, by the selecting them and centering them in the viewport.
 *   *(b)* the arguments of the navigation targets don't contain element IDs, but other arguments, the
 *         navigation target needs to be resolved into actual element IDs by the `NavigationTargetResolver`.
 *         This can for instance be useful, if the navigation deals with queries or some other more complex
 *         logic that can't be dealt with on the client.
 *  *(c)* the target isn't resolved by the `NavigationTargetResolver`, e.g. because the `uri` doesn't match
 *        the URI of the current diagram. In this case, the navigation request is forwarded by dispatching
 *        a `NavigateToExternalTargetAction`.
 */
let NavigationActionHandler = class NavigationActionHandler {
    constructor() {
        this.notificationTimeout = 5000;
    }
    handle(action) {
        if (NavigateAction.is(action)) {
            this.handleNavigateAction(action);
        }
        else if (protocol_1.NavigateToTargetAction.is(action)) {
            this.handleNavigateToTarget(action);
        }
        else if (ProcessNavigationArgumentsAction.is(action)) {
            this.processNavigationArguments(action.args);
        }
        else if (protocol_1.NavigateToExternalTargetAction.is(action)) {
            this.handleNavigateToExternalTarget(action);
        }
    }
    async handleNavigateAction(action) {
        try {
            const editorContextService = await this.editorContextService();
            const editorContext = editorContextService.get(action.args);
            const response = await this.dispatcher.request(protocol_1.RequestNavigationTargetsAction.create({ targetTypeId: action.targetTypeId, editorContext }));
            if (protocol_1.SetNavigationTargetsAction.is(response) && response.targets && response.targets.length === 1) {
                if (response.targets.length > 1) {
                    this.logger.warn(this, 'Processing of multiple targets is not supported yet. ' + 'Only the first is being processed.', response.targets);
                }
                return this.dispatcher.dispatch(protocol_1.NavigateToTargetAction.create(response.targets[0]));
            }
            this.warnAboutFailedNavigation('No valid navigation target found');
        }
        catch (reason) {
            this.logger.error(this, 'Failed to obtain navigation target', reason, action);
        }
    }
    async handleNavigateToTarget(action) {
        try {
            const resolvedElements = await this.resolveElements(action);
            if (this.containsElementIdsOrArguments(resolvedElements)) {
                this.navigateTo(resolvedElements);
                this.handleResolutionArguments(resolvedElements);
                return;
            }
            else {
                this.navigateToExternal(action.target);
                return;
            }
        }
        catch (reason) {
            this.logger.error(this, 'Failed to navigate', reason, action);
        }
    }
    resolveElements(action) {
        return this.resolver.resolve(action.target);
    }
    containsElementIdsOrArguments(target) {
        return target !== undefined && (this.containsElementIds(target.elementIds) || this.containsArguments(target.args));
    }
    containsElementIds(elementIds) {
        return elementIds !== undefined && elementIds.length > 0;
    }
    containsArguments(args) {
        return args !== undefined && args !== undefined && Object.keys(args).length > 0;
    }
    navigateTo(target) {
        const elementIds = target.elementIds;
        if (!this.containsElementIds(elementIds)) {
            return;
        }
        this.dispatcher.dispatchAll([
            protocol_1.SelectAllAction.create(false),
            protocol_1.SelectAction.create({ selectedElementsIDs: elementIds }),
            protocol_1.CenterAction.create(elementIds)
        ]);
    }
    handleResolutionArguments(target) {
        const args = target.args;
        if (!this.containsArguments(args)) {
            return;
        }
        this.dispatcher.dispatch(ProcessNavigationArgumentsAction.create(args));
    }
    navigateToExternal(target) {
        return this.dispatcher.dispatch(protocol_1.NavigateToExternalTargetAction.create(target));
    }
    processNavigationArguments(args) {
        if (args.info && args.info.toString().length > 0) {
            this.notify('INFO', args.info.toString());
        }
        if (args.warning && args.warning.toString().length > 0) {
            this.notify('WARNING', args.warning.toString());
        }
        if (args.error && args.error.toString().length > 0) {
            this.notify('ERROR', args.error.toString());
        }
    }
    async handleNavigateToExternalTarget(action) {
        const registry = await this.actionHandlerRegistryProvider();
        const handlers = registry.get(protocol_1.NavigateToExternalTargetAction.KIND);
        if (handlers.length === 1) {
            // we are the only handler so we know nobody took care of it
            this.warnAboutFailedNavigation('Could not resolve or navigate to target', action.target);
        }
    }
    warnAboutFailedNavigation(msg, target) {
        const message = `${msg}` + (target ? `: '${target.uri}' (arguments: ${JSON.stringify(target.args)})` : '');
        this.logger.warn(this, msg, target);
        this.notify('WARNING', message);
    }
    notify(severity, message) {
        const timeout = this.notificationTimeout;
        this.dispatcher.dispatchAll([
            protocol_1.ServerStatusAction.create(message, { severity, timeout }),
            protocol_1.ServerMessageAction.create(message, { severity, timeout })
        ]);
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ILogger),
    __metadata("design:type", Object)
], NavigationActionHandler.prototype, "logger", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.IActionDispatcher),
    __metadata("design:type", Object)
], NavigationActionHandler.prototype, "dispatcher", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ActionHandlerRegistryProvider),
    __metadata("design:type", Function)
], NavigationActionHandler.prototype, "actionHandlerRegistryProvider", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.IEditorContextServiceProvider),
    __metadata("design:type", Function)
], NavigationActionHandler.prototype, "editorContextService", void 0);
__decorate([
    (0, inversify_1.inject)(navigation_target_resolver_1.NavigationTargetResolver),
    __metadata("design:type", navigation_target_resolver_1.NavigationTargetResolver)
], NavigationActionHandler.prototype, "resolver", void 0);
NavigationActionHandler = __decorate([
    (0, inversify_1.injectable)()
], NavigationActionHandler);
exports.NavigationActionHandler = NavigationActionHandler;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/navigation/navigation-target-resolver.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/navigation/navigation-target-resolver.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.NavigationTargetResolver = void 0;
/********************************************************************************
 * Copyright (c) 2020-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/@eclipse-glsp/client/lib/base/types.js");
/**
 * Resolves `NavigationTargets` to element ids.
 *
 * If the `NavigationTarget` doesn't have element ids itself, this resolver queries the server via a
 * `ResolveNavigationTargetAction` for element ids.
 */
let NavigationTargetResolver = class NavigationTargetResolver {
    async resolve(navigationTarget) {
        const contextService = await this.editorContextService();
        const sourceUri = await contextService.getSourceUri();
        return this.resolveWithSourceUri(sourceUri, navigationTarget);
    }
    async resolveWithSourceUri(sourceUri, target) {
        const targetUri = decodeURIComponent(target.uri);
        if (sourceUri && sourceUri !== targetUri && `file://${sourceUri}` !== targetUri) {
            // different URI, so we can't resolve it locally
            this.logger.info("Source and Target URI are different. Can't resolve locally.", sourceUri, targetUri);
            return undefined;
        }
        if (protocol_1.NavigationTarget.getElementIds(target).length > 0) {
            return protocol_1.SetResolvedNavigationTargetAction.create(protocol_1.NavigationTarget.getElementIds(target));
        }
        const response = await this.requestResolution(target);
        if (protocol_1.SetResolvedNavigationTargetAction.is(response)) {
            return response;
        }
        return undefined;
    }
    requestResolution(target) {
        return this.dispatcher.request(protocol_1.ResolveNavigationTargetAction.create(target));
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.IEditorContextServiceProvider),
    __metadata("design:type", Function)
], NavigationTargetResolver.prototype, "editorContextService", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.IActionDispatcher),
    __metadata("design:type", Object)
], NavigationTargetResolver.prototype, "dispatcher", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ILogger),
    __metadata("design:type", Object)
], NavigationTargetResolver.prototype, "logger", void 0);
NavigationTargetResolver = __decorate([
    (0, inversify_1.injectable)()
], NavigationTargetResolver);
exports.NavigationTargetResolver = NavigationTargetResolver;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/rank/model.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/rank/model.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2019-2021 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getRank = exports.isRanked = exports.DEFAULT_RANK = void 0;
exports.DEFAULT_RANK = 0;
function isRanked(arg) {
    return arg !== undefined && arg.rank !== undefined && typeof arg.rank === 'number';
}
exports.isRanked = isRanked;
function getRank(arg) {
    return isRanked(arg) ? arg.rank : exports.DEFAULT_RANK;
}
exports.getRank = getRank;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/reconnect/model.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/reconnect/model.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SReconnectHandle = exports.createReconnectHandle = exports.isTargetRoutingHandle = exports.isSourceRoutingHandle = exports.removeReconnectHandles = exports.addReconnectHandles = exports.isReconnectHandle = exports.isReconnectable = exports.reconnectFeature = void 0;
/********************************************************************************
 * Copyright (c) 2019-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
exports.reconnectFeature = Symbol('reconnectFeature');
function isReconnectable(element) {
    return element instanceof sprotty_1.SRoutableElement && element.hasFeature(exports.reconnectFeature);
}
exports.isReconnectable = isReconnectable;
const ROUTING_HANDLE_SOURCE_INDEX = -2;
function isReconnectHandle(element) {
    return element !== undefined && element instanceof SReconnectHandle;
}
exports.isReconnectHandle = isReconnectHandle;
function addReconnectHandles(element) {
    removeReconnectHandles(element);
    createReconnectHandle(element, 'source', ROUTING_HANDLE_SOURCE_INDEX);
    createReconnectHandle(element, 'target', element.routingPoints.length);
}
exports.addReconnectHandles = addReconnectHandles;
function removeReconnectHandles(element) {
    element.removeAll(child => child instanceof SReconnectHandle);
}
exports.removeReconnectHandles = removeReconnectHandles;
function isSourceRoutingHandle(edge, routingHandle) {
    return routingHandle.pointIndex === ROUTING_HANDLE_SOURCE_INDEX;
}
exports.isSourceRoutingHandle = isSourceRoutingHandle;
function isTargetRoutingHandle(edge, routingHandle) {
    return routingHandle.pointIndex === edge.routingPoints.length;
}
exports.isTargetRoutingHandle = isTargetRoutingHandle;
function createReconnectHandle(edge, kind, routingPointIndex) {
    const handle = new SReconnectHandle();
    handle.kind = kind;
    handle.pointIndex = routingPointIndex;
    handle.type = 'routing-point';
    if (kind === 'target' && edge.id === sprotty_1.edgeInProgressID) {
        handle.id = sprotty_1.edgeInProgressTargetHandleID;
    }
    edge.add(handle);
    return handle;
}
exports.createReconnectHandle = createReconnectHandle;
class SReconnectHandle extends sprotty_1.SRoutingHandle {
    hasFeature(feature) {
        return feature !== sprotty_1.selectFeature && super.hasFeature(feature);
    }
}
exports.SReconnectHandle = SReconnectHandle;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/save/di.config.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/save/di.config.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/@eclipse-glsp/client/lib/base/types.js");
const save_keylistener_1 = __webpack_require__(/*! ./save-keylistener */ "./node_modules/@eclipse-glsp/client/lib/features/save/save-keylistener.js");
/**
 * This module is not required the diagram is deployed in Theia with the `GLSPDiagramWidget`
 * but only intended to be used in a standalone deployment of GLSP.
 */
const saveModule = new inversify_1.ContainerModule(bind => {
    (0, protocol_1.bindAsService)(bind, types_1.TYPES.KeyListener, save_keylistener_1.SaveModelKeyboardListener);
});
exports["default"] = saveModule;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/save/model.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/save/model.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isSaveable = exports.saveFeature = void 0;
exports.saveFeature = Symbol.for('saveFeature');
function isSaveable(element) {
    return element.hasFeature(exports.saveFeature);
}
exports.isSaveable = isSaveable;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/save/save-keylistener.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/save/save-keylistener.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SaveModelKeyboardListener = void 0;
/********************************************************************************
 * Copyright (c) 2019-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const keyboard_1 = __webpack_require__(/*! sprotty/lib/utils/keyboard */ "./node_modules/sprotty/lib/utils/keyboard.js");
class SaveModelKeyboardListener extends sprotty_1.KeyListener {
    keyDown(_element, event) {
        if ((0, keyboard_1.matchesKeystroke)(event, 'KeyS', 'ctrlCmd')) {
            return [protocol_1.SaveModelAction.create()];
        }
        return [];
    }
}
exports.SaveModelKeyboardListener = SaveModelKeyboardListener;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/select/di.config.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/select/di.config.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/@eclipse-glsp/client/lib/base/types.js");
const select_feedback_action_1 = __webpack_require__(/*! ./select-feedback-action */ "./node_modules/@eclipse-glsp/client/lib/features/select/select-feedback-action.js");
const select_mouse_listener_1 = __webpack_require__(/*! ./select-mouse-listener */ "./node_modules/@eclipse-glsp/client/lib/features/select/select-mouse-listener.js");
const selection_service_1 = __webpack_require__(/*! ./selection-service */ "./node_modules/@eclipse-glsp/client/lib/features/select/selection-service.js");
const glspSelectModule = new inversify_1.ContainerModule((bind, _unbind, isBound) => {
    const context = { bind, isBound };
    (0, protocol_1.bindAsService)(context, types_1.TYPES.SelectionService, selection_service_1.SelectionService);
    (0, sprotty_1.configureCommand)(context, selection_service_1.SelectCommand);
    (0, sprotty_1.configureCommand)(context, selection_service_1.SelectAllCommand);
    (0, sprotty_1.configureCommand)(context, select_feedback_action_1.SelectFeedbackCommand);
    (0, protocol_1.bindAsService)(context, types_1.TYPES.MouseListener, select_mouse_listener_1.RankedSelectMouseListener);
    bind(types_1.TYPES.SModelRootListener).toService(selection_service_1.SelectionService);
});
exports["default"] = glspSelectModule;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/select/select-feedback-action.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/select/select-feedback-action.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SelectFeedbackCommand = exports.SelectFeedbackAction = void 0;
/********************************************************************************
 * Copyright (c) 2019-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/@eclipse-glsp/client/lib/base/types.js");
var SelectFeedbackAction;
(function (SelectFeedbackAction) {
    SelectFeedbackAction.KIND = 'selectFeedback';
    function is(object) {
        return protocol_1.Action.hasKind(object, SelectFeedbackAction.KIND) && (0, protocol_1.hasArrayProp)(object, 'selectedElementsIDs') && (0, protocol_1.hasArrayProp)(object, 'deselectedElementsIDs');
    }
    SelectFeedbackAction.is = is;
    function create(options) {
        return Object.assign(Object.assign({}, protocol_1.SelectAction.create(options)), { kind: SelectFeedbackAction.KIND });
    }
    SelectFeedbackAction.create = create;
})(SelectFeedbackAction = exports.SelectFeedbackAction || (exports.SelectFeedbackAction = {}));
let SelectFeedbackCommand = class SelectFeedbackCommand extends sprotty_1.Command {
    constructor(action) {
        super();
        this.action = action;
        this.sprottySelectCommand = new sprotty_1.SelectCommand(Object.assign(Object.assign({}, action), { kind: protocol_1.SelectAction.KIND }));
    }
    execute(context) {
        return this.sprottySelectCommand.execute(context);
    }
    undo(context) {
        return this.sprottySelectCommand.undo(context);
    }
    redo(context) {
        return this.sprottySelectCommand.redo(context);
    }
};
SelectFeedbackCommand.KIND = SelectFeedbackAction.KIND;
SelectFeedbackCommand = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
    __metadata("design:paramtypes", [Object])
], SelectFeedbackCommand);
exports.SelectFeedbackCommand = SelectFeedbackCommand;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/select/select-mouse-listener.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/select/select-mouse-listener.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RankedSelectMouseListener = void 0;
/********************************************************************************
 * Copyright (c) 2019-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "./node_modules/sprotty-protocol/lib/actions.js");
const iterable_1 = __webpack_require__(/*! sprotty/lib/utils/iterable */ "./node_modules/sprotty/lib/utils/iterable.js");
const model_1 = __webpack_require__(/*! ../rank/model */ "./node_modules/@eclipse-glsp/client/lib/features/rank/model.js");
/**
 * Ranked select mouse listener that is executed before default mouse listeners when using the RankedMouseTool.
 * This ensures that default mouse listeners are working on a model that has selection changes already applied.
 */
class RankedSelectMouseListener extends sprotty_1.SelectMouseListener {
    constructor() {
        super(...arguments);
        this.rank = model_1.DEFAULT_RANK - 1; /* we want to be executed before all default mouse listeners */
    }
    mouseDown(target, event) {
        const result = [];
        if (this.buttonHandlerRegistry !== undefined && target instanceof sprotty_1.SButton && target.enabled) {
            const buttonHandler = this.buttonHandlerRegistry.get(target.type);
            if (buttonHandler !== undefined) {
                return buttonHandler.buttonPressed(target);
            }
        }
        const selectableTarget = (0, sprotty_1.findParentByFeature)(target, sprotty_1.isSelectable);
        if (selectableTarget !== undefined || target instanceof sprotty_1.SModelRoot) {
            this.hasDragged = false;
            let deselect = [];
            // multi-selection?
            if (!(0, sprotty_1.isCtrlOrCmd)(event)) {
                deselect = (0, iterable_1.toArray)(target.root.index
                    .all()
                    .filter(element => (0, sprotty_1.isSelectable)(element) &&
                    element.selected &&
                    !(selectableTarget instanceof sprotty_1.SRoutingHandle && element === selectableTarget.parent)));
            }
            if (selectableTarget !== undefined) {
                if (!selectableTarget.selected) {
                    this.wasSelected = false;
                    result.push(protocol_1.SelectAction.create({
                        selectedElementsIDs: [selectableTarget.id],
                        deselectedElementsIDs: deselect.map(e => e.id)
                    }));
                    result.push(actions_1.BringToFrontAction.create([selectableTarget.id]));
                    const routableDeselect = deselect.filter(e => e instanceof sprotty_1.SRoutableElement).map(e => e.id);
                    if (selectableTarget instanceof sprotty_1.SRoutableElement) {
                        result.push(sprotty_1.SwitchEditModeAction.create({
                            elementsToActivate: [selectableTarget.id],
                            elementsToDeactivate: routableDeselect
                        }));
                    }
                    else if (routableDeselect.length > 0) {
                        result.push(sprotty_1.SwitchEditModeAction.create({ elementsToDeactivate: routableDeselect }));
                    }
                }
                else if ((0, sprotty_1.isCtrlOrCmd)(event)) {
                    this.wasSelected = false;
                    result.push(protocol_1.SelectAction.create({ deselectedElementsIDs: [selectableTarget.id] }));
                    if (selectableTarget instanceof sprotty_1.SRoutableElement) {
                        result.push(sprotty_1.SwitchEditModeAction.create({ elementsToDeactivate: [selectableTarget.id] }));
                    }
                }
                else {
                    this.wasSelected = true;
                }
            }
            else {
                result.push(protocol_1.SelectAction.create({ deselectedElementsIDs: deselect.map(e => e.id) }));
                const routableDeselect = deselect.filter(e => e instanceof sprotty_1.SRoutableElement).map(e => e.id);
                if (routableDeselect.length > 0) {
                    result.push(sprotty_1.SwitchEditModeAction.create({ elementsToDeactivate: routableDeselect }));
                }
            }
        }
        return result;
    }
}
exports.RankedSelectMouseListener = RankedSelectMouseListener;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/select/selection-service.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/select/selection-service.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SelectAllCommand = exports.SelectCommand = exports.SelectionService = void 0;
/********************************************************************************
 * Copyright (c) 2019-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/@eclipse-glsp/client/lib/base/types.js");
const smodel_util_1 = __webpack_require__(/*! ../../utils/smodel-util */ "./node_modules/@eclipse-glsp/client/lib/utils/smodel-util.js");
const select_feedback_action_1 = __webpack_require__(/*! ./select-feedback-action */ "./node_modules/@eclipse-glsp/client/lib/features/select/select-feedback-action.js");
let SelectionService = class SelectionService {
    constructor(selectionListeners = []) {
        this.selectionListeners = selectionListeners;
        this.selectedElementIDs = new Set();
    }
    register(selectionListener) {
        (0, protocol_1.distinctAdd)(this.selectionListeners, selectionListener);
    }
    deregister(selectionListener) {
        (0, protocol_1.remove)(this.selectionListeners, selectionListener);
    }
    modelRootChanged(root) {
        this.updateSelection(root, [], []);
    }
    updateSelection(root, select, deselect) {
        if (root === undefined && select.length === 0 && deselect.length === 0) {
            return;
        }
        const prevRoot = this.root;
        const prevSelectedElementIDs = new Set(this.selectedElementIDs);
        // update root
        this.root = root;
        // update selected element IDs and collect deselected elements
        // - select all elements that are not deselected at the same time (no-op)
        // - deselect all elements that are not selected at the same time (no-op) but was selected
        const toSelect = [...select].filter(selectId => deselect.indexOf(selectId) === -1);
        const toDeselect = [...deselect].filter(deselectId => select.indexOf(deselectId) === -1 && this.selectedElementIDs.has(deselectId));
        for (const id of toDeselect) {
            this.selectedElementIDs.delete(id);
        }
        for (const id of toSelect) {
            this.selectedElementIDs.add(id);
        }
        const deselectedElementIDs = new Set(toDeselect);
        // see if selected elements still exist in the updated root
        for (const id of this.selectedElementIDs) {
            const element = root.index.getById(id);
            if (element === undefined) {
                this.selectedElementIDs.delete(id);
                if (prevRoot !== undefined && prevRoot.index.getById(id)) {
                    deselectedElementIDs.add(id);
                }
            }
        }
        // only send out changes if there actually are changes, i.e., the root or the selected elements changed
        const selectionChanged = prevSelectedElementIDs.size !== this.selectedElementIDs.size ||
            ![...prevSelectedElementIDs].every(value => this.selectedElementIDs.has(value));
        if (selectionChanged) {
            // aggregate to feedback action handling all elements as only the last feedback is restored
            this.dispatchFeedback([
                select_feedback_action_1.SelectFeedbackAction.create({
                    selectedElementsIDs: [...this.selectedElementIDs],
                    deselectedElementsIDs: [...deselectedElementIDs]
                })
            ]);
        }
        const rootChanged = prevRoot !== root;
        if (rootChanged || selectionChanged) {
            // notify listeners after the feedback action
            this.notifyListeners(this.root, this.selectedElementIDs);
        }
    }
    dispatchFeedback(actions) {
        this.feedbackDispatcher.registerFeedback(this, actions);
    }
    notifyListeners(root, selectedElementIDs) {
        this.selectionListeners.forEach(listener => listener.selectionChanged(root, Array.from(selectedElementIDs)));
    }
    getModelRoot() {
        return this.root;
    }
    getSelectedElements() {
        return (0, smodel_util_1.getElements)(this.root.index, Array.from(this.selectedElementIDs), sprotty_1.isSelectable);
    }
    /**
     * QUERY METHODS
     */
    getSelectedElementIDs() {
        return [...this.selectedElementIDs];
    }
    hasSelectedElements() {
        return this.selectedElementIDs.size > 0;
    }
    isSingleSelection() {
        return this.selectedElementIDs.size === 1;
    }
    isMultiSelection() {
        return this.selectedElementIDs.size > 1;
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.IFeedbackActionDispatcher),
    __metadata("design:type", Object)
], SelectionService.prototype, "feedbackDispatcher", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ILogger),
    __metadata("design:type", Object)
], SelectionService.prototype, "logger", void 0);
SelectionService = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.multiInject)(types_1.TYPES.SelectionListener)),
    __param(0, (0, inversify_1.optional)()),
    __metadata("design:paramtypes", [Array])
], SelectionService);
exports.SelectionService = SelectionService;
/**
 * Handles a {@link SelectAction} and propagates the new selection to the {@link SelectionService}.
 * Other tools might be selection-sensitive which means {@link SelectAction}s must be processed as fast as possible.
 * Handling the action with a command ensures that the action is processed before the next render tick.
 */
let SelectCommand = class SelectCommand extends sprotty_1.Command {
    constructor(action, selectionService) {
        super();
        this.action = action;
        this.selectionService = selectionService;
        this.selected = [];
        this.deselected = [];
    }
    execute(context) {
        const model = context.root;
        const selectionGuard = (element) => element instanceof sprotty_1.SChildElement && (0, sprotty_1.isSelectable)(element);
        const selectedElements = (0, smodel_util_1.getElements)(model.index, this.action.selectedElementsIDs, selectionGuard);
        const deselectedElements = (0, smodel_util_1.getElements)(model.index, this.action.deselectedElementsIDs, selectionGuard);
        this.selectionService.updateSelection(model, (0, protocol_1.pluck)(selectedElements, 'id'), (0, protocol_1.pluck)(deselectedElements, 'id'));
        return model;
    }
    // Basically no-op since client-side undo is not supported in GLSP.
    undo(context) {
        return context.root;
    }
    // Basically no-op since client-side redo is not supported in GLSP.
    redo(context) {
        return context.root;
    }
};
SelectCommand.KIND = sprotty_1.SelectCommand.KIND;
SelectCommand = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
    __param(1, (0, inversify_1.inject)(types_1.TYPES.SelectionService)),
    __metadata("design:paramtypes", [Object, SelectionService])
], SelectCommand);
exports.SelectCommand = SelectCommand;
/**
 * Handles a {@link SelectAllAction} and propagates the new selection to the {@link SelectionService}.
 * Other tools might be selection-sensitive which means {@link SelectionAllAction}s must be processed as fast as possible.
 * Handling the action with a command ensures that the action is processed before the next render tick.
 */
let SelectAllCommand = class SelectAllCommand extends sprotty_1.Command {
    constructor(action, selectionService) {
        super();
        this.action = action;
        this.selectionService = selectionService;
        this.previousSelection = new Map();
    }
    execute(context) {
        const model = context.root;
        const selectionGuard = (element) => element instanceof sprotty_1.SChildElement && (0, sprotty_1.isSelectable)(element);
        const selectables = (0, smodel_util_1.getMatchingElements)(model.index, selectionGuard);
        const selectableIds = (0, protocol_1.pluck)(selectables, 'id');
        if (this.action.select) {
            this.selectionService.updateSelection(model, selectableIds, []);
        }
        else {
            this.selectionService.updateSelection(model, [], selectableIds);
        }
        return model;
    }
    // Basically no-op since client-side undo is not supported in GLSP.
    undo(context) {
        return context.root;
    }
    // Basically no-op since client-side redo is not supported in GLSP.
    redo(context) {
        return context.root;
    }
};
SelectAllCommand.KIND = sprotty_1.SelectAllCommand.KIND;
SelectAllCommand = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
    __param(1, (0, inversify_1.inject)(types_1.TYPES.SelectionService)),
    __metadata("design:paramtypes", [Object, SelectionService])
], SelectAllCommand);
exports.SelectAllCommand = SelectAllCommand;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/source-model-watcher/di.config.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/source-model-watcher/di.config.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2019-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const source_model_changed_action_handler_1 = __webpack_require__(/*! ./source-model-changed-action-handler */ "./node_modules/@eclipse-glsp/client/lib/features/source-model-watcher/source-model-changed-action-handler.js");
const sourceModelWatcherModule = new inversify_1.ContainerModule((bind, _unbind, isBound) => {
    (0, sprotty_1.configureActionHandler)({ bind, isBound }, protocol_1.SourceModelChangedAction.KIND, source_model_changed_action_handler_1.SourceModelChangedActionHandler);
});
exports["default"] = sourceModelWatcherModule;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/source-model-watcher/source-model-changed-action-handler.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/source-model-watcher/source-model-changed-action-handler.js ***!
  \********************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SourceModelChangedActionHandler = exports.ExternalSourceModelChangedHandler = void 0;
/********************************************************************************
 * Copyright (c) 2020-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/@eclipse-glsp/client/lib/base/types.js");
/**
 * An external handler of the source model change event.
 *
 * This allows external applications to react specifically to this event, e.g. by bringing up the diagram,
 * check their dirty state, show a dialog, etc.
 */
let ExternalSourceModelChangedHandler = class ExternalSourceModelChangedHandler {
};
ExternalSourceModelChangedHandler = __decorate([
    (0, inversify_1.injectable)()
], ExternalSourceModelChangedHandler);
exports.ExternalSourceModelChangedHandler = ExternalSourceModelChangedHandler;
let SourceModelChangedActionHandler = class SourceModelChangedActionHandler {
    handle(action) {
        if (protocol_1.SourceModelChangedAction.is(action)) {
            if (this.externalModelSourceChangedHandler) {
                this.externalModelSourceChangedHandler
                    .notifySourceModelChange(action.sourceModelName, this.options)
                    .then(actions => this.dispatcher.dispatchAll(actions));
                return;
            }
            this.showSimpleNotification(action);
        }
    }
    showSimpleNotification(action) {
        const message = `The source model ${action.sourceModelName} has changed. You might want to consider reloading.`;
        const timeout = 0;
        const severity = 'WARNING';
        this.dispatcher.dispatchAll([
            protocol_1.ServerStatusAction.create(message, { severity, timeout }),
            protocol_1.ServerMessageAction.create(message, { severity, timeout })
        ]);
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.IActionDispatcher),
    __metadata("design:type", Object)
], SourceModelChangedActionHandler.prototype, "dispatcher", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ViewerOptions),
    __metadata("design:type", Object)
], SourceModelChangedActionHandler.prototype, "options", void 0);
__decorate([
    (0, inversify_1.inject)(ExternalSourceModelChangedHandler),
    (0, inversify_1.optional)(),
    __metadata("design:type", ExternalSourceModelChangedHandler)
], SourceModelChangedActionHandler.prototype, "externalModelSourceChangedHandler", void 0);
SourceModelChangedActionHandler = __decorate([
    (0, inversify_1.injectable)()
], SourceModelChangedActionHandler);
exports.SourceModelChangedActionHandler = SourceModelChangedActionHandler;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/svg-metadata/di.config.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/svg-metadata/di.config.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2023 Business Informatics Group (TU Wien) and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/@eclipse-glsp/client/lib/base/types.js");
const metadata_placer_1 = __webpack_require__(/*! ./metadata-placer */ "./node_modules/@eclipse-glsp/client/lib/features/svg-metadata/metadata-placer.js");
const svgMetadataModule = new inversify_1.ContainerModule(bind => {
    bind(metadata_placer_1.MetadataPlacer).toSelf().inSingletonScope();
    bind(types_1.TYPES.IVNodePostprocessor).toService(metadata_placer_1.MetadataPlacer);
});
exports["default"] = svgMetadataModule;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/svg-metadata/metadata-placer.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/svg-metadata/metadata-placer.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2023 Business Informatics Group (TU Wien) and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MetadataPlacer = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const dom_helper_1 = __webpack_require__(/*! sprotty/lib/base/views/dom-helper */ "./node_modules/sprotty/lib/base/views/dom-helper.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/@eclipse-glsp/client/lib/base/types.js");
let MetadataPlacer = class MetadataPlacer {
    decorate(vnode, element) {
        if (element instanceof sprotty_1.SModelRoot) {
            (0, sprotty_1.setAttr)(vnode, 'data-svg-metadata-api', true);
        }
        (0, sprotty_1.setAttr)(vnode, 'data-svg-metadata-type', element.type);
        if (element instanceof sprotty_1.SChildElement) {
            (0, sprotty_1.setAttr)(vnode, 'data-svg-metadata-parent-id', this.domHelper.createUniqueDOMElementId(element.parent));
        }
        if (element instanceof sprotty_1.SEdge) {
            if (element.source !== undefined) {
                (0, sprotty_1.setAttr)(vnode, 'data-svg-metadata-edge-source-id', this.domHelper.createUniqueDOMElementId(element.source));
            }
            if (element.target !== undefined) {
                (0, sprotty_1.setAttr)(vnode, 'data-svg-metadata-edge-target-id', this.domHelper.createUniqueDOMElementId(element.target));
            }
        }
        return vnode;
    }
    postUpdate() {
        // empty
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.DOMHelper),
    __metadata("design:type", dom_helper_1.DOMHelper)
], MetadataPlacer.prototype, "domHelper", void 0);
MetadataPlacer = __decorate([
    (0, inversify_1.injectable)()
], MetadataPlacer);
exports.MetadataPlacer = MetadataPlacer;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/change-bounds-tool-feedback.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/change-bounds-tool-feedback.js ***!
  \*****************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FeedbackMoveMouseListener = exports.HideChangeBoundsToolResizeFeedbackCommand = exports.ShowChangeBoundsToolResizeFeedbackCommand = exports.HideChangeBoundsToolResizeFeedbackAction = exports.ShowChangeBoundsToolResizeFeedbackAction = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "./node_modules/sprotty-protocol/lib/actions.js");
const smodel_util_1 = __webpack_require__(/*! ../../utils/smodel-util */ "./node_modules/@eclipse-glsp/client/lib/utils/smodel-util.js");
const model_1 = __webpack_require__(/*! ../change-bounds/model */ "./node_modules/@eclipse-glsp/client/lib/features/change-bounds/model.js");
const movement_restrictor_1 = __webpack_require__(/*! ../change-bounds/movement-restrictor */ "./node_modules/@eclipse-glsp/client/lib/features/change-bounds/movement-restrictor.js");
const css_feedback_1 = __webpack_require__(/*! ../tool-feedback/css-feedback */ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/css-feedback.js");
const model_2 = __webpack_require__(/*! ./model */ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/model.js");
var ShowChangeBoundsToolResizeFeedbackAction;
(function (ShowChangeBoundsToolResizeFeedbackAction) {
    ShowChangeBoundsToolResizeFeedbackAction.KIND = 'showChangeBoundsToolResizeFeedback';
    function is(object) {
        return protocol_1.Action.hasKind(object, ShowChangeBoundsToolResizeFeedbackAction.KIND) && (0, protocol_1.hasStringProp)(object, 'elementId');
    }
    ShowChangeBoundsToolResizeFeedbackAction.is = is;
    function create(elementId) {
        return {
            kind: ShowChangeBoundsToolResizeFeedbackAction.KIND,
            elementId
        };
    }
    ShowChangeBoundsToolResizeFeedbackAction.create = create;
})(ShowChangeBoundsToolResizeFeedbackAction = exports.ShowChangeBoundsToolResizeFeedbackAction || (exports.ShowChangeBoundsToolResizeFeedbackAction = {}));
var HideChangeBoundsToolResizeFeedbackAction;
(function (HideChangeBoundsToolResizeFeedbackAction) {
    HideChangeBoundsToolResizeFeedbackAction.KIND = 'hideChangeBoundsToolResizeFeedback';
    function is(object) {
        return protocol_1.Action.hasKind(object, HideChangeBoundsToolResizeFeedbackAction.KIND);
    }
    HideChangeBoundsToolResizeFeedbackAction.is = is;
    function create() {
        return { kind: HideChangeBoundsToolResizeFeedbackAction.KIND };
    }
    HideChangeBoundsToolResizeFeedbackAction.create = create;
})(HideChangeBoundsToolResizeFeedbackAction = exports.HideChangeBoundsToolResizeFeedbackAction || (exports.HideChangeBoundsToolResizeFeedbackAction = {}));
let ShowChangeBoundsToolResizeFeedbackCommand = class ShowChangeBoundsToolResizeFeedbackCommand extends model_2.FeedbackCommand {
    execute(context) {
        const index = context.root.index;
        (0, smodel_util_1.forEachElement)(index, model_1.isResizable, model_1.removeResizeHandles);
        if (this.action.elementId) {
            const resizeElement = index.getById(this.action.elementId);
            if (resizeElement && (0, model_1.isResizable)(resizeElement)) {
                (0, model_1.addResizeHandles)(resizeElement);
            }
        }
        return context.root;
    }
};
ShowChangeBoundsToolResizeFeedbackCommand.KIND = ShowChangeBoundsToolResizeFeedbackAction.KIND;
__decorate([
    (0, inversify_1.inject)(sprotty_1.TYPES.Action),
    __metadata("design:type", Object)
], ShowChangeBoundsToolResizeFeedbackCommand.prototype, "action", void 0);
ShowChangeBoundsToolResizeFeedbackCommand = __decorate([
    (0, inversify_1.injectable)()
], ShowChangeBoundsToolResizeFeedbackCommand);
exports.ShowChangeBoundsToolResizeFeedbackCommand = ShowChangeBoundsToolResizeFeedbackCommand;
let HideChangeBoundsToolResizeFeedbackCommand = class HideChangeBoundsToolResizeFeedbackCommand extends model_2.FeedbackCommand {
    execute(context) {
        const index = context.root.index;
        (0, smodel_util_1.forEachElement)(index, model_1.isResizable, model_1.removeResizeHandles);
        return context.root;
    }
};
HideChangeBoundsToolResizeFeedbackCommand.KIND = HideChangeBoundsToolResizeFeedbackAction.KIND;
__decorate([
    (0, inversify_1.inject)(sprotty_1.TYPES.Action),
    __metadata("design:type", Object)
], HideChangeBoundsToolResizeFeedbackCommand.prototype, "action", void 0);
HideChangeBoundsToolResizeFeedbackCommand = __decorate([
    (0, inversify_1.injectable)()
], HideChangeBoundsToolResizeFeedbackCommand);
exports.HideChangeBoundsToolResizeFeedbackCommand = HideChangeBoundsToolResizeFeedbackCommand;
/**
 * This mouse listener provides visual feedback for moving by sending client-side
 * `MoveAction`s while elements are selected and dragged. This will also update
 * their bounds, which is important, as it is not only required for rendering
 * the visual feedback but also the basis for sending the change to the server
 * (see also `tools/MoveTool`).
 */
class FeedbackMoveMouseListener extends sprotty_1.MouseListener {
    constructor(tool) {
        super();
        this.tool = tool;
        this.hasDragged = false;
        this.elementId2startPos = new Map();
    }
    mouseDown(target, event) {
        if (event.button === 0 && !(target instanceof model_1.SResizeHandle)) {
            const moveable = (0, sprotty_1.findParentByFeature)(target, sprotty_1.isMoveable);
            if (moveable !== undefined) {
                this.startDragPosition = { x: event.pageX, y: event.pageY };
            }
            else {
                this.startDragPosition = undefined;
            }
            this.hasDragged = false;
        }
        return [];
    }
    mouseMove(target, event) {
        const result = [];
        if (event.buttons === 0) {
            this.mouseUp(target, event);
        }
        else if (this.startDragPosition) {
            if (this.elementId2startPos.size === 0) {
                this.collectStartPositions(target.root);
            }
            this.hasDragged = true;
            const moveAction = this.getElementMoves(target, event, false);
            if (moveAction) {
                result.push(moveAction);
                result.push((0, css_feedback_1.cursorFeedbackAction)(css_feedback_1.CursorCSS.MOVE));
            }
        }
        return result;
    }
    collectStartPositions(root) {
        const selectedElements = root.index.all().filter(element => (0, sprotty_1.isSelectable)(element) && element.selected);
        const elementsSet = new Set(selectedElements);
        selectedElements
            .filter(element => !this.isChildOfSelected(elementsSet, element))
            .forEach(element => {
            if ((0, sprotty_1.isMoveable)(element)) {
                this.elementId2startPos.set(element.id, element.position);
            }
        });
    }
    isChildOfSelected(selectedElements, element) {
        while (element instanceof sprotty_1.SChildElement) {
            element = element.parent;
            if (selectedElements.has(element)) {
                return true;
            }
        }
        return false;
    }
    getElementMoves(target, event, finished) {
        if (!this.startDragPosition) {
            return undefined;
        }
        const elementMoves = [];
        const viewport = (0, sprotty_1.findParentByFeature)(target, sprotty_1.isViewport);
        const zoom = viewport ? viewport.zoom : 1;
        const delta = {
            x: (event.pageX - this.startDragPosition.x) / zoom,
            y: (event.pageY - this.startDragPosition.y) / zoom
        };
        this.elementId2startPos.forEach((startPosition, elementId) => {
            const element = target.root.index.getById(elementId);
            if (element) {
                let toPosition = this.snap({
                    x: startPosition.x + delta.x,
                    y: startPosition.y + delta.y
                }, element, !event.shiftKey);
                if ((0, sprotty_1.isMoveable)(element)) {
                    toPosition = this.validateMove(startPosition, toPosition, element, finished);
                    elementMoves.push({
                        elementId: element.id,
                        fromPosition: {
                            x: element.position.x,
                            y: element.position.y
                        },
                        toPosition
                    });
                }
            }
        });
        if (elementMoves.length > 0) {
            return actions_1.MoveAction.create(elementMoves, { animate: false, finished });
        }
        else {
            return undefined;
        }
    }
    validateMove(startPosition, toPosition, element, isFinished) {
        let newPosition = toPosition;
        if (this.tool.movementRestrictor) {
            const valid = this.tool.movementRestrictor.validate(element, toPosition);
            let action;
            if (!valid) {
                action = (0, movement_restrictor_1.createMovementRestrictionFeedback)(element, this.tool.movementRestrictor);
                if (isFinished) {
                    newPosition = startPosition;
                }
            }
            else {
                action = (0, movement_restrictor_1.removeMovementRestrictionFeedback)(element, this.tool.movementRestrictor);
            }
            this.tool.dispatchFeedback([action], this);
        }
        return newPosition;
    }
    snap(position, element, isSnap) {
        if (isSnap && this.tool.snapper) {
            return this.tool.snapper.snap(position, element);
        }
        else {
            return position;
        }
    }
    mouseEnter(target, event) {
        if (target instanceof sprotty_1.SModelRoot && event.buttons === 0 && !this.startDragPosition) {
            this.mouseUp(target, event);
        }
        return [];
    }
    mouseUp(target, event) {
        const result = [];
        if (this.startDragPosition) {
            const moveAction = this.getElementMoves(target, event, true);
            if (moveAction) {
                result.push(moveAction);
            }
            if (this.tool.movementRestrictor) {
                this.tool.deregisterFeedback([(0, movement_restrictor_1.removeMovementRestrictionFeedback)(target, this.tool.movementRestrictor)], this);
            }
            result.push((0, css_feedback_1.cursorFeedbackAction)(css_feedback_1.CursorCSS.DEFAULT));
        }
        this.hasDragged = false;
        this.startDragPosition = undefined;
        this.elementId2startPos.clear();
        return result;
    }
    decorate(vnode, _element) {
        return vnode;
    }
}
exports.FeedbackMoveMouseListener = FeedbackMoveMouseListener;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/creation-tool-feedback.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/creation-tool-feedback.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.removeFeedbackEdge = exports.drawFeedbackEdge = exports.defaultFeedbackEdgeSchema = exports.feedbackEdgeEndId = exports.feedbackEdgeId = exports.FeedbackEdgeEndMovingMouseListener = exports.FeedbackEdgeEnd = exports.RemoveFeedbackEdgeCommand = exports.RemoveFeedbackEdgeAction = exports.DrawFeedbackEdgeCommand = exports.DrawFeedbackEdgeAction = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "./node_modules/sprotty-protocol/lib/actions.js");
const smodel_util_1 = __webpack_require__(/*! ../../utils/smodel-util */ "./node_modules/@eclipse-glsp/client/lib/utils/smodel-util.js");
const viewpoint_util_1 = __webpack_require__(/*! ../../utils/viewpoint-util */ "./node_modules/@eclipse-glsp/client/lib/utils/viewpoint-util.js");
const model_1 = __webpack_require__(/*! ./model */ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/model.js");
var DrawFeedbackEdgeAction;
(function (DrawFeedbackEdgeAction) {
    DrawFeedbackEdgeAction.KIND = 'drawFeedbackEdge';
    function is(object) {
        return protocol_1.Action.hasKind(object, DrawFeedbackEdgeAction.KIND);
    }
    DrawFeedbackEdgeAction.is = is;
    function create(options) {
        return Object.assign({ kind: DrawFeedbackEdgeAction.KIND }, options);
    }
    DrawFeedbackEdgeAction.create = create;
})(DrawFeedbackEdgeAction = exports.DrawFeedbackEdgeAction || (exports.DrawFeedbackEdgeAction = {}));
let DrawFeedbackEdgeCommand = class DrawFeedbackEdgeCommand extends model_1.FeedbackCommand {
    constructor(action) {
        super();
        this.action = action;
    }
    execute(context) {
        drawFeedbackEdge(context, this.action.sourceId, this.action.elementTypeId, this.action.edgeSchema);
        return context.root;
    }
};
DrawFeedbackEdgeCommand.KIND = DrawFeedbackEdgeAction.KIND;
DrawFeedbackEdgeCommand = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(sprotty_1.TYPES.Action)),
    __metadata("design:paramtypes", [Object])
], DrawFeedbackEdgeCommand);
exports.DrawFeedbackEdgeCommand = DrawFeedbackEdgeCommand;
var RemoveFeedbackEdgeAction;
(function (RemoveFeedbackEdgeAction) {
    RemoveFeedbackEdgeAction.KIND = 'removeFeedbackEdgeCommand';
    function is(object) {
        return protocol_1.Action.hasKind(object, RemoveFeedbackEdgeAction.KIND);
    }
    RemoveFeedbackEdgeAction.is = is;
    function create() {
        return { kind: RemoveFeedbackEdgeAction.KIND };
    }
    RemoveFeedbackEdgeAction.create = create;
})(RemoveFeedbackEdgeAction = exports.RemoveFeedbackEdgeAction || (exports.RemoveFeedbackEdgeAction = {}));
let RemoveFeedbackEdgeCommand = class RemoveFeedbackEdgeCommand extends model_1.FeedbackCommand {
    execute(context) {
        removeFeedbackEdge(context.root);
        return context.root;
    }
};
RemoveFeedbackEdgeCommand.KIND = RemoveFeedbackEdgeAction.KIND;
RemoveFeedbackEdgeCommand = __decorate([
    (0, inversify_1.injectable)()
], RemoveFeedbackEdgeCommand);
exports.RemoveFeedbackEdgeCommand = RemoveFeedbackEdgeCommand;
class FeedbackEdgeEnd extends sprotty_1.SDanglingAnchor {
    constructor(sourceId, elementTypeId, feedbackEdge = undefined, type = FeedbackEdgeEnd.TYPE) {
        super();
        this.sourceId = sourceId;
        this.elementTypeId = elementTypeId;
        this.feedbackEdge = feedbackEdge;
        this.type = type;
    }
}
exports.FeedbackEdgeEnd = FeedbackEdgeEnd;
FeedbackEdgeEnd.TYPE = 'feedback-edge-end';
class FeedbackEdgeEndMovingMouseListener extends sprotty_1.MouseListener {
    constructor(anchorRegistry) {
        super();
        this.anchorRegistry = anchorRegistry;
    }
    mouseMove(target, event) {
        const root = target.root;
        const edgeEnd = root.index.getById(feedbackEdgeEndId(root));
        if (!(edgeEnd instanceof FeedbackEdgeEnd) || !edgeEnd.feedbackEdge) {
            return [];
        }
        const edge = edgeEnd.feedbackEdge;
        const position = (0, viewpoint_util_1.getAbsolutePosition)(edgeEnd, event);
        const endAtMousePosition = (0, sprotty_1.findChildrenAtPosition)(target.root, position)
            .reverse()
            .find(element => (0, sprotty_1.isConnectable)(element) && element.canConnect(edge, 'target'));
        if (endAtMousePosition instanceof sprotty_1.SConnectableElement && edge.source && (0, sprotty_1.isBoundsAware)(edge.source)) {
            const anchor = this.computeAbsoluteAnchor(endAtMousePosition, protocol_1.Bounds.center((0, viewpoint_util_1.toAbsoluteBounds)(edge.source)));
            if (protocol_1.Point.euclideanDistance(anchor, edgeEnd.position) > 1) {
                return [actions_1.MoveAction.create([{ elementId: edgeEnd.id, toPosition: anchor }], { animate: false })];
            }
        }
        else {
            return [actions_1.MoveAction.create([{ elementId: edgeEnd.id, toPosition: position }], { animate: false })];
        }
        return [];
    }
    computeAbsoluteAnchor(element, absoluteReferencePoint, offset) {
        const referencePointInParent = absoluteToParent(element, absoluteReferencePoint);
        const anchorComputer = this.anchorRegistry.get(sprotty_1.PolylineEdgeRouter.KIND, element.anchorKind);
        let anchor = anchorComputer.getAnchor(element, referencePointInParent, offset);
        // The anchor is computed in the local coordinate system of the element.
        // If the element is a nested child element we have to add the absolute position of its parent to the anchor.
        if (element.parent !== element.root) {
            const parent = (0, sprotty_1.findParentByFeature)(element.parent, sprotty_1.isBoundsAware);
            if (parent) {
                const absoluteParentPosition = (0, viewpoint_util_1.toAbsoluteBounds)(parent);
                anchor = protocol_1.Point.add(absoluteParentPosition, anchor);
            }
        }
        return anchor;
    }
}
exports.FeedbackEdgeEndMovingMouseListener = FeedbackEdgeEndMovingMouseListener;
/**
 * Convert a point, specified in absolute coordinates, to a point relative
 * to the parent of the specified child element.
 * @param element the child element
 * @param absolutePoint a point in absolute coordinates
 * @returns the equivalent point, relative to the element's parent coordinates
 */
function absoluteToParent(element, absolutePoint) {
    if ((0, sprotty_1.isBoundsAware)(element.parent)) {
        return absoluteToLocal(element.parent, absolutePoint);
    }
    // If the parent is not bounds-aware, assume it's at 0; 0 and proceed
    return absoluteToLocal(element, absolutePoint);
}
/**
 * Convert a point, specified in absolute coordinates, to a point relative
 * to the specified element.
 * @param element the element
 * @param absolutePoint a point in absolute coordinates
 * @returns the equivalent point, relative to the element's coordinates
 */
function absoluteToLocal(element, absolutePoint) {
    const absoluteElementBounds = (0, viewpoint_util_1.toAbsoluteBounds)(element);
    return { x: absolutePoint.x - absoluteElementBounds.x, y: absolutePoint.y - absoluteElementBounds.y };
}
function feedbackEdgeId(root) {
    return root.id + '_feedback_edge';
}
exports.feedbackEdgeId = feedbackEdgeId;
function feedbackEdgeEndId(root) {
    return root.id + '_feedback_anchor';
}
exports.feedbackEdgeEndId = feedbackEdgeEndId;
exports.defaultFeedbackEdgeSchema = {
    cssClasses: ['feedback-edge'],
    opacity: 0.3
};
function drawFeedbackEdge(context, sourceId, elementTypeId, edgeTemplate) {
    const root = context.root;
    const sourceChild = root.index.getById(sourceId);
    if (!sourceChild) {
        return;
    }
    const source = (0, sprotty_1.findParentByFeature)(sourceChild, sprotty_1.isConnectable);
    if (!source || !(0, sprotty_1.isBoundsAware)(source)) {
        return;
    }
    const edgeEnd = new FeedbackEdgeEnd(source.id, elementTypeId);
    edgeEnd.id = feedbackEdgeEndId(root);
    edgeEnd.position = (0, viewpoint_util_1.toAbsolutePosition)(source);
    const edgeSchema = Object.assign(Object.assign({ id: feedbackEdgeId(root), type: elementTypeId, sourceId: source.id, targetId: edgeEnd.id }, exports.defaultFeedbackEdgeSchema), edgeTemplate);
    const feedbackEdge = context.modelFactory.createElement(edgeSchema);
    if ((0, smodel_util_1.isRoutable)(feedbackEdge)) {
        edgeEnd.feedbackEdge = feedbackEdge;
        root.add(edgeEnd);
        root.add(feedbackEdge);
    }
}
exports.drawFeedbackEdge = drawFeedbackEdge;
function removeFeedbackEdge(root) {
    const feedbackEdge = root.index.getById(feedbackEdgeId(root));
    const feedbackEdgeEnd = root.index.getById(feedbackEdgeEndId(root));
    if (feedbackEdge instanceof sprotty_1.SChildElement) {
        root.remove(feedbackEdge);
    }
    if (feedbackEdgeEnd instanceof sprotty_1.SChildElement) {
        root.remove(feedbackEdgeEnd);
    }
}
exports.removeFeedbackEdge = removeFeedbackEdge;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/css-feedback.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/css-feedback.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.deleteCssClasses = exports.applyCssClasses = exports.cursorFeedbackAction = exports.CursorCSS = exports.ModifyCssFeedbackCommand = exports.ModifyCSSFeedbackAction = void 0;
/********************************************************************************
 * Copyright (c) 2019-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/@eclipse-glsp/client/lib/base/types.js");
const smodel_util_1 = __webpack_require__(/*! ../../utils/smodel-util */ "./node_modules/@eclipse-glsp/client/lib/utils/smodel-util.js");
const model_1 = __webpack_require__(/*! ./model */ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/model.js");
var ModifyCSSFeedbackAction;
(function (ModifyCSSFeedbackAction) {
    ModifyCSSFeedbackAction.KIND = 'modifyCSSFeedback';
    function is(object) {
        return protocol_1.Action.hasKind(object, ModifyCSSFeedbackAction.KIND) && (0, protocol_1.hasArrayProp)(object, 'elementIds');
    }
    ModifyCSSFeedbackAction.is = is;
    function create(options) {
        const { elements } = options, rest = __rest(options, ["elements"]);
        const elementIds = elements ? elements.map(element => (typeof element === 'string' ? element : element.id)) : undefined;
        return Object.assign({ kind: ModifyCSSFeedbackAction.KIND, elementIds }, rest);
    }
    ModifyCSSFeedbackAction.create = create;
})(ModifyCSSFeedbackAction = exports.ModifyCSSFeedbackAction || (exports.ModifyCSSFeedbackAction = {}));
let ModifyCssFeedbackCommand = class ModifyCssFeedbackCommand extends model_1.FeedbackCommand {
    constructor(action) {
        super();
        this.action = action;
    }
    execute(context) {
        const elements = this.action.elementIds ? (0, smodel_util_1.getElements)(context.root.index, this.action.elementIds) : [context.root];
        elements.forEach(e => {
            if (this.action.remove) {
                (0, smodel_util_1.removeCssClasses)(e, this.action.remove);
            }
            if (this.action.add) {
                (0, smodel_util_1.addCssClasses)(e, this.action.add);
            }
        });
        return context.root;
    }
};
ModifyCssFeedbackCommand.KIND = ModifyCSSFeedbackAction.KIND;
ModifyCssFeedbackCommand = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
    __metadata("design:paramtypes", [Object])
], ModifyCssFeedbackCommand);
exports.ModifyCssFeedbackCommand = ModifyCssFeedbackCommand;
// eslint-disable-next-line no-shadow
var CursorCSS;
(function (CursorCSS) {
    CursorCSS["DEFAULT"] = "default-mode";
    CursorCSS["OVERLAP_FORBIDDEN"] = "overlap-forbidden-mode";
    CursorCSS["NODE_CREATION"] = "node-creation-mode";
    CursorCSS["EDGE_CREATION_SOURCE"] = "edge-creation-select-source-mode";
    CursorCSS["EDGE_CREATION_TARGET"] = "edge-creation-select-target-mode";
    CursorCSS["EDGE_RECONNECT"] = "edge-reconnect-select-target-mode";
    CursorCSS["OPERATION_NOT_ALLOWED"] = "edge-modification-not-allowed-mode";
    CursorCSS["ELEMENT_DELETION"] = "element-deletion-mode";
    CursorCSS["RESIZE_NESW"] = "resize-nesw-mode";
    CursorCSS["RESIZE_NWSE"] = "resize-nwse-mode";
    CursorCSS["MOVE"] = "move-mode";
    CursorCSS["MARQUEE"] = "marquee-mode";
})(CursorCSS = exports.CursorCSS || (exports.CursorCSS = {}));
function cursorFeedbackAction(cursorCss) {
    const add = [];
    if (cursorCss) {
        add.push(cursorCss);
    }
    return ModifyCSSFeedbackAction.create({ add, remove: Object.values(CursorCSS) });
}
exports.cursorFeedbackAction = cursorFeedbackAction;
function applyCssClasses(element, ...add) {
    return ModifyCSSFeedbackAction.create({ elements: [element], add });
}
exports.applyCssClasses = applyCssClasses;
function deleteCssClasses(element, ...remove) {
    return ModifyCSSFeedbackAction.create({ elements: [element], remove });
}
exports.deleteCssClasses = deleteCssClasses;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/di.config.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/di.config.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/@eclipse-glsp/client/lib/base/types.js");
const model_1 = __webpack_require__(/*! ../change-bounds/model */ "./node_modules/@eclipse-glsp/client/lib/features/change-bounds/model.js");
const change_bounds_tool_feedback_1 = __webpack_require__(/*! ./change-bounds-tool-feedback */ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/change-bounds-tool-feedback.js");
const creation_tool_feedback_1 = __webpack_require__(/*! ./creation-tool-feedback */ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/creation-tool-feedback.js");
const css_feedback_1 = __webpack_require__(/*! ./css-feedback */ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/css-feedback.js");
const edge_edit_tool_feedback_1 = __webpack_require__(/*! ./edge-edit-tool-feedback */ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/edge-edit-tool-feedback.js");
const feedback_action_dispatcher_1 = __webpack_require__(/*! ./feedback-action-dispatcher */ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/feedback-action-dispatcher.js");
const marquee_tool_feedback_1 = __webpack_require__(/*! ./marquee-tool-feedback */ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/marquee-tool-feedback.js");
const view_1 = __webpack_require__(/*! ./view */ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/view.js");
const toolFeedbackModule = new inversify_1.ContainerModule((bind, _unbind, isBound) => {
    const context = { bind, isBound };
    bind(types_1.TYPES.IFeedbackActionDispatcher).to(feedback_action_dispatcher_1.FeedbackActionDispatcher).inSingletonScope();
    (0, sprotty_1.configureCommand)(context, css_feedback_1.ModifyCssFeedbackCommand);
    // create node and edge tool feedback
    (0, sprotty_1.configureCommand)(context, creation_tool_feedback_1.DrawFeedbackEdgeCommand);
    (0, sprotty_1.configureCommand)(context, creation_tool_feedback_1.RemoveFeedbackEdgeCommand);
    (0, sprotty_1.configureCommand)(context, marquee_tool_feedback_1.DrawMarqueeCommand);
    (0, sprotty_1.configureCommand)(context, marquee_tool_feedback_1.RemoveMarqueeCommand);
    (0, sprotty_1.configureView)(context, creation_tool_feedback_1.FeedbackEdgeEnd.TYPE, view_1.FeedbackEdgeEndView);
    // move tool feedback: we use sprotty's MoveCommand as client-side visual feedback
    (0, sprotty_1.configureCommand)(context, sprotty_1.MoveCommand);
    // resize tool feedback
    (0, sprotty_1.configureCommand)(context, change_bounds_tool_feedback_1.ShowChangeBoundsToolResizeFeedbackCommand);
    (0, sprotty_1.configureCommand)(context, change_bounds_tool_feedback_1.HideChangeBoundsToolResizeFeedbackCommand);
    (0, sprotty_1.configureView)(context, model_1.SResizeHandle.TYPE, view_1.SResizeHandleView);
    // reconnect edge tool feedback
    (0, sprotty_1.configureCommand)(context, edge_edit_tool_feedback_1.ShowEdgeReconnectHandlesFeedbackCommand);
    (0, sprotty_1.configureCommand)(context, edge_edit_tool_feedback_1.HideEdgeReconnectHandlesFeedbackCommand);
    (0, sprotty_1.configureCommand)(context, edge_edit_tool_feedback_1.DrawFeedbackEdgeSourceCommand);
    (0, sprotty_1.configureCommand)(context, edge_edit_tool_feedback_1.SwitchRoutingModeCommand);
    (0, protocol_1.bindAsService)(context, types_1.TYPES.IVNodePostprocessor, sprotty_1.LocationPostprocessor);
    bind(types_1.TYPES.HiddenVNodePostprocessor).toService(sprotty_1.LocationPostprocessor);
});
exports["default"] = toolFeedbackModule;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/edge-edit-tool-feedback.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/edge-edit-tool-feedback.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FeedbackEdgeRouteMovingMouseListener = exports.FeedbackEdgeSourceMovingMouseListener = exports.FeedbackEdgeTargetMovingMouseListener = exports.DrawFeedbackEdgeSourceCommand = exports.DrawFeedbackEdgeSourceAction = exports.SwitchRoutingModeCommand = exports.SwitchRoutingModeAction = exports.HideEdgeReconnectHandlesFeedbackCommand = exports.ShowEdgeReconnectHandlesFeedbackCommand = exports.HideEdgeReconnectHandlesFeedbackAction = exports.ShowEdgeReconnectHandlesFeedbackAction = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "./node_modules/sprotty-protocol/lib/actions.js");
const smodel_util_1 = __webpack_require__(/*! ../../utils/smodel-util */ "./node_modules/@eclipse-glsp/client/lib/utils/smodel-util.js");
const viewpoint_util_1 = __webpack_require__(/*! ../../utils/viewpoint-util */ "./node_modules/@eclipse-glsp/client/lib/utils/viewpoint-util.js");
const snap_1 = __webpack_require__(/*! ../change-bounds/snap */ "./node_modules/@eclipse-glsp/client/lib/features/change-bounds/snap.js");
const model_1 = __webpack_require__(/*! ../reconnect/model */ "./node_modules/@eclipse-glsp/client/lib/features/reconnect/model.js");
const creation_tool_feedback_1 = __webpack_require__(/*! ./creation-tool-feedback */ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/creation-tool-feedback.js");
const model_2 = __webpack_require__(/*! ./model */ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/model.js");
var ShowEdgeReconnectHandlesFeedbackAction;
(function (ShowEdgeReconnectHandlesFeedbackAction) {
    ShowEdgeReconnectHandlesFeedbackAction.KIND = 'showReconnectHandlesFeedback';
    function is(object) {
        return protocol_1.Action.hasKind(object, ShowEdgeReconnectHandlesFeedbackAction.KIND);
    }
    ShowEdgeReconnectHandlesFeedbackAction.is = is;
    function create(elementId) {
        return { kind: ShowEdgeReconnectHandlesFeedbackAction.KIND, elementId };
    }
    ShowEdgeReconnectHandlesFeedbackAction.create = create;
})(ShowEdgeReconnectHandlesFeedbackAction = exports.ShowEdgeReconnectHandlesFeedbackAction || (exports.ShowEdgeReconnectHandlesFeedbackAction = {}));
var HideEdgeReconnectHandlesFeedbackAction;
(function (HideEdgeReconnectHandlesFeedbackAction) {
    HideEdgeReconnectHandlesFeedbackAction.KIND = 'hideReconnectHandlesFeedback';
    function is(object) {
        return protocol_1.Action.hasKind(object, HideEdgeReconnectHandlesFeedbackAction.KIND);
    }
    HideEdgeReconnectHandlesFeedbackAction.is = is;
    function create() {
        return { kind: HideEdgeReconnectHandlesFeedbackAction.KIND };
    }
    HideEdgeReconnectHandlesFeedbackAction.create = create;
})(HideEdgeReconnectHandlesFeedbackAction = exports.HideEdgeReconnectHandlesFeedbackAction || (exports.HideEdgeReconnectHandlesFeedbackAction = {}));
let ShowEdgeReconnectHandlesFeedbackCommand = class ShowEdgeReconnectHandlesFeedbackCommand extends model_2.FeedbackCommand {
    constructor(action) {
        super();
        this.action = action;
    }
    execute(context) {
        const index = context.root.index;
        (0, smodel_util_1.forEachElement)(index, smodel_util_1.isRoutable, model_1.removeReconnectHandles);
        const routableElement = index.getById(this.action.elementId);
        if (routableElement && (0, smodel_util_1.isRoutable)(routableElement)) {
            (0, model_1.addReconnectHandles)(routableElement);
        }
        return context.root;
    }
};
ShowEdgeReconnectHandlesFeedbackCommand.KIND = ShowEdgeReconnectHandlesFeedbackAction.KIND;
ShowEdgeReconnectHandlesFeedbackCommand = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(sprotty_1.TYPES.Action)),
    __metadata("design:paramtypes", [Object])
], ShowEdgeReconnectHandlesFeedbackCommand);
exports.ShowEdgeReconnectHandlesFeedbackCommand = ShowEdgeReconnectHandlesFeedbackCommand;
let HideEdgeReconnectHandlesFeedbackCommand = class HideEdgeReconnectHandlesFeedbackCommand extends model_2.FeedbackCommand {
    constructor(action) {
        super();
        this.action = action;
    }
    execute(context) {
        const index = context.root.index;
        (0, smodel_util_1.forEachElement)(index, smodel_util_1.isRoutable, model_1.removeReconnectHandles);
        return context.root;
    }
};
HideEdgeReconnectHandlesFeedbackCommand.KIND = HideEdgeReconnectHandlesFeedbackAction.KIND;
HideEdgeReconnectHandlesFeedbackCommand = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(sprotty_1.TYPES.Action)),
    __metadata("design:paramtypes", [Object])
], HideEdgeReconnectHandlesFeedbackCommand);
exports.HideEdgeReconnectHandlesFeedbackCommand = HideEdgeReconnectHandlesFeedbackCommand;
var SwitchRoutingModeAction;
(function (SwitchRoutingModeAction) {
    SwitchRoutingModeAction.KIND = 'switchRoutingMode';
    function create(options) {
        return Object.assign(Object.assign({}, sprotty_1.SwitchEditModeAction.create(options)), { kind: SwitchRoutingModeAction.KIND });
    }
    SwitchRoutingModeAction.create = create;
})(SwitchRoutingModeAction = exports.SwitchRoutingModeAction || (exports.SwitchRoutingModeAction = {}));
let SwitchRoutingModeCommand = class SwitchRoutingModeCommand extends sprotty_1.SwitchEditModeCommand {
    constructor(action) {
        super(Object.assign(Object.assign({}, action), { kind: sprotty_1.SwitchEditModeAction.KIND }));
    }
};
SwitchRoutingModeCommand.KIND = SwitchRoutingModeAction.KIND;
SwitchRoutingModeCommand = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(sprotty_1.TYPES.Action)),
    __metadata("design:paramtypes", [Object])
], SwitchRoutingModeCommand);
exports.SwitchRoutingModeCommand = SwitchRoutingModeCommand;
var DrawFeedbackEdgeSourceAction;
(function (DrawFeedbackEdgeSourceAction) {
    DrawFeedbackEdgeSourceAction.KIND = 'drawFeedbackEdgeSource';
    function is(object) {
        return protocol_1.Action.hasKind(object, DrawFeedbackEdgeSourceAction.KIND) && (0, protocol_1.hasStringProp)(object, 'elementTypeId') && (0, protocol_1.hasStringProp)(object, 'targetId');
    }
    DrawFeedbackEdgeSourceAction.is = is;
    function create(options) {
        return Object.assign({ kind: DrawFeedbackEdgeSourceAction.KIND }, options);
    }
    DrawFeedbackEdgeSourceAction.create = create;
})(DrawFeedbackEdgeSourceAction = exports.DrawFeedbackEdgeSourceAction || (exports.DrawFeedbackEdgeSourceAction = {}));
let DrawFeedbackEdgeSourceCommand = class DrawFeedbackEdgeSourceCommand extends model_2.FeedbackCommand {
    constructor(action) {
        super();
        this.action = action;
    }
    execute(context) {
        drawFeedbackEdgeSource(context, this.action.targetId, this.action.elementTypeId);
        return context.root;
    }
};
DrawFeedbackEdgeSourceCommand.KIND = DrawFeedbackEdgeSourceAction.KIND;
DrawFeedbackEdgeSourceCommand = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(sprotty_1.TYPES.Action)),
    __metadata("design:paramtypes", [Object])
], DrawFeedbackEdgeSourceCommand);
exports.DrawFeedbackEdgeSourceCommand = DrawFeedbackEdgeSourceCommand;
/**
 * SOURCE AND TARGET MOUSE MOVE LISTENER
 */
class FeedbackEdgeTargetMovingMouseListener extends creation_tool_feedback_1.FeedbackEdgeEndMovingMouseListener {
    constructor(anchorRegistry) {
        super(anchorRegistry);
        this.anchorRegistry = anchorRegistry;
    }
}
exports.FeedbackEdgeTargetMovingMouseListener = FeedbackEdgeTargetMovingMouseListener;
class FeedbackEdgeSourceMovingMouseListener extends sprotty_1.MouseListener {
    constructor(anchorRegistry) {
        super();
        this.anchorRegistry = anchorRegistry;
    }
    mouseMove(target, event) {
        const root = target.root;
        const edgeEnd = root.index.getById((0, creation_tool_feedback_1.feedbackEdgeEndId)(root));
        if (!(edgeEnd instanceof creation_tool_feedback_1.FeedbackEdgeEnd) || !edgeEnd.feedbackEdge) {
            return [];
        }
        const edge = edgeEnd.feedbackEdge;
        const position = (0, viewpoint_util_1.getAbsolutePosition)(edgeEnd, event);
        const endAtMousePosition = (0, sprotty_1.findChildrenAtPosition)(target.root, position).find(e => (0, sprotty_1.isConnectable)(e) && e.canConnect(edge, 'source'));
        if (endAtMousePosition instanceof sprotty_1.SConnectableElement && edge.target && (0, sprotty_1.isBoundsAware)(edge.target)) {
            const anchor = this.computeAbsoluteAnchor(endAtMousePosition, protocol_1.Bounds.center(edge.target.bounds));
            if (protocol_1.Point.euclideanDistance(anchor, edgeEnd.position) > 1) {
                return [actions_1.MoveAction.create([{ elementId: edgeEnd.id, toPosition: anchor }], { animate: false })];
            }
        }
        else {
            return [actions_1.MoveAction.create([{ elementId: edgeEnd.id, toPosition: position }], { animate: false })];
        }
        return [];
    }
    computeAbsoluteAnchor(element, referencePoint, offset) {
        const anchorComputer = this.anchorRegistry.get(sprotty_1.PolylineEdgeRouter.KIND, element.anchorKind);
        let anchor = anchorComputer.getAnchor(element, referencePoint, offset);
        // The anchor is computed in the local coordinate system of the element.
        // If the element is a nested child element we have to add the absolute position of its parent to the anchor.
        if (element.parent !== element.root) {
            const parent = (0, sprotty_1.findParentByFeature)(element.parent, sprotty_1.isBoundsAware);
            if (parent) {
                const absoluteParentPosition = (0, viewpoint_util_1.toAbsoluteBounds)(parent);
                anchor = protocol_1.Point.add(absoluteParentPosition, anchor);
            }
        }
        return anchor;
    }
}
exports.FeedbackEdgeSourceMovingMouseListener = FeedbackEdgeSourceMovingMouseListener;
class FeedbackEdgeRouteMovingMouseListener extends sprotty_1.MouseListener {
    constructor(edgeRouterRegistry, snapper) {
        super();
        this.edgeRouterRegistry = edgeRouterRegistry;
        this.snapper = snapper;
        this.pointPositionUpdater = new snap_1.PointPositionUpdater(snapper);
    }
    mouseDown(target, event) {
        const result = [];
        if (event.button === 0) {
            const routingHandle = (0, sprotty_1.findParentByFeature)(target, smodel_util_1.isRoutingHandle);
            if (routingHandle !== undefined) {
                result.push(SwitchRoutingModeAction.create({ elementsToActivate: [target.id] }));
                this.pointPositionUpdater.updateLastDragPosition({ x: event.pageX, y: event.pageY });
            }
            else {
                this.pointPositionUpdater.resetPosition();
            }
        }
        return result;
    }
    mouseMove(target, event) {
        const result = [];
        if (event.buttons === 0) {
            return this.mouseUp(target, event);
        }
        const positionUpdate = this.pointPositionUpdater.updatePosition(target, { x: event.pageX, y: event.pageY }, !event.altKey);
        if (positionUpdate) {
            const moveActions = this.handleMoveOnClient(target, positionUpdate, !event.altKey);
            result.push(...moveActions);
        }
        return result;
    }
    handleMoveOnClient(target, positionUpdate, isSnap) {
        const handleMoves = [];
        target.root.index
            .all()
            .filter(element => (0, sprotty_1.isSelected)(element))
            .forEach(element => {
            if ((0, smodel_util_1.isRoutingHandle)(element)) {
                const elementMove = this.toElementMove(element, positionUpdate, isSnap);
                if (elementMove) {
                    handleMoves.push(elementMove);
                }
            }
        });
        if (handleMoves.length > 0) {
            return [actions_1.MoveAction.create(handleMoves, { animate: false })];
        }
        return [];
    }
    toElementMove(element, positionDelta, isSnap) {
        const point = this.getHandlePosition(element);
        if (point !== undefined) {
            const snappedPoint = this.getSnappedHandlePosition(element, point, isSnap);
            return {
                elementId: element.id,
                fromPosition: point,
                toPosition: {
                    x: snappedPoint.x + positionDelta.x,
                    y: snappedPoint.y + positionDelta.y
                }
            };
        }
        return undefined;
    }
    getSnappedHandlePosition(element, point, isSnap) {
        if (this.snapper && isSnap) {
            return this.snapper.snap(point, element);
        }
        return point;
    }
    getHandlePosition(handle) {
        if (this.edgeRouterRegistry) {
            const parent = handle.parent;
            if (!(0, smodel_util_1.isRoutable)(parent)) {
                return undefined;
            }
            const router = this.edgeRouterRegistry.get(parent.routerKind);
            const route = router.route(parent);
            return router.getHandlePosition(parent, route, handle);
        }
        return undefined;
    }
    mouseUp(_target, _event) {
        this.pointPositionUpdater.resetPosition();
        return [];
    }
    decorate(vnode, _element) {
        return vnode;
    }
}
exports.FeedbackEdgeRouteMovingMouseListener = FeedbackEdgeRouteMovingMouseListener;
/**
 * UTILITY FUNCTIONS
 */
function drawFeedbackEdgeSource(context, targetId, elementTypeId) {
    const root = context.root;
    const targetChild = root.index.getById(targetId);
    if (!targetChild) {
        return;
    }
    const target = (0, sprotty_1.findParentByFeature)(targetChild, sprotty_1.isConnectable);
    if (!target || !(0, sprotty_1.isBoundsAware)(target)) {
        return;
    }
    const edgeEnd = new creation_tool_feedback_1.FeedbackEdgeEnd(target.id, elementTypeId);
    edgeEnd.id = (0, creation_tool_feedback_1.feedbackEdgeEndId)(root);
    edgeEnd.position = { x: target.bounds.x, y: target.bounds.y };
    const feedbackEdgeSchema = {
        type: 'edge',
        id: (0, creation_tool_feedback_1.feedbackEdgeId)(root),
        sourceId: edgeEnd.id,
        targetId: target.id,
        opacity: 0.3
    };
    const feedbackEdge = context.modelFactory.createElement(feedbackEdgeSchema);
    if ((0, smodel_util_1.isRoutable)(feedbackEdge)) {
        edgeEnd.feedbackEdge = feedbackEdge;
        root.add(edgeEnd);
        root.add(feedbackEdge);
    }
}


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/feedback-action-dispatcher.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/feedback-action-dispatcher.js ***!
  \****************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FeedbackActionDispatcher = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/@eclipse-glsp/client/lib/base/types.js");
let FeedbackActionDispatcher = class FeedbackActionDispatcher {
    constructor() {
        this.feedbackEmitters = new Map();
    }
    registerFeedback(feedbackEmitter, actions) {
        this.feedbackEmitters.set(feedbackEmitter, actions);
        this.dispatch(actions, feedbackEmitter);
    }
    deregisterFeedback(feedbackEmitter, actions) {
        this.feedbackEmitters.delete(feedbackEmitter);
        this.dispatch(actions, feedbackEmitter);
    }
    dispatch(actions, feedbackEmitter) {
        this.actionDispatcher()
            .then(dispatcher => dispatcher.dispatchAll(actions))
            .then(() => this.logger.info(this, `Dispatched feedback actions for ${feedbackEmitter}`))
            .catch(reason => this.logger.error(this, 'Failed to dispatch feedback actions', reason));
    }
    getRegisteredFeedback() {
        const result = [];
        this.feedbackEmitters.forEach((value, key) => result.push(...value));
        return result;
    }
    getRegisteredFeedbackEmitters(action) {
        const result = [];
        this.feedbackEmitters.forEach((value, key) => {
            if (value.find(a => a === action)) {
                result.push(key);
            }
        });
        return result;
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.IActionDispatcherProvider),
    __metadata("design:type", Function)
], FeedbackActionDispatcher.prototype, "actionDispatcher", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ILogger),
    __metadata("design:type", Object)
], FeedbackActionDispatcher.prototype, "logger", void 0);
FeedbackActionDispatcher = __decorate([
    (0, inversify_1.injectable)()
], FeedbackActionDispatcher);
exports.FeedbackActionDispatcher = FeedbackActionDispatcher;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/marquee-tool-feedback.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/marquee-tool-feedback.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.removeMarquee = exports.drawMarquee = exports.MARQUEE = exports.marqueeId = exports.MarqueeEndMovingMouseListener = exports.RemoveMarqueeCommand = exports.RemoveMarqueeAction = exports.DrawMarqueeCommand = exports.DrawMarqueeAction = void 0;
/********************************************************************************
 * Copyright (c) 2021-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const model_1 = __webpack_require__(/*! ./model */ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/model.js");
var DrawMarqueeAction;
(function (DrawMarqueeAction) {
    DrawMarqueeAction.KIND = 'drawMarquee';
    function is(object) {
        return protocol_1.Action.hasKind(object, DrawMarqueeAction.KIND) && (0, protocol_1.hasObjectProp)(object, 'startPoint') && (0, protocol_1.hasObjectProp)(object, 'endPoint');
    }
    DrawMarqueeAction.is = is;
    function create(options) {
        return Object.assign({ kind: DrawMarqueeAction.KIND }, options);
    }
    DrawMarqueeAction.create = create;
})(DrawMarqueeAction = exports.DrawMarqueeAction || (exports.DrawMarqueeAction = {}));
let DrawMarqueeCommand = class DrawMarqueeCommand extends model_1.FeedbackCommand {
    constructor(action) {
        super();
        this.action = action;
    }
    execute(context) {
        drawMarquee(context, this.action.startPoint, this.action.endPoint);
        return context.root;
    }
};
DrawMarqueeCommand.KIND = DrawMarqueeAction.KIND;
DrawMarqueeCommand = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(sprotty_1.TYPES.Action)),
    __metadata("design:paramtypes", [Object])
], DrawMarqueeCommand);
exports.DrawMarqueeCommand = DrawMarqueeCommand;
var RemoveMarqueeAction;
(function (RemoveMarqueeAction) {
    RemoveMarqueeAction.KIND = 'removeMarquee';
    function is(object) {
        return protocol_1.Action.hasKind(object, RemoveMarqueeAction.KIND);
    }
    RemoveMarqueeAction.is = is;
    function create() {
        return { kind: RemoveMarqueeAction.KIND };
    }
    RemoveMarqueeAction.create = create;
})(RemoveMarqueeAction = exports.RemoveMarqueeAction || (exports.RemoveMarqueeAction = {}));
let RemoveMarqueeCommand = class RemoveMarqueeCommand extends model_1.FeedbackCommand {
    execute(context) {
        removeMarquee(context.root);
        return context.root;
    }
};
RemoveMarqueeCommand.KIND = RemoveMarqueeAction.KIND;
RemoveMarqueeCommand = __decorate([
    (0, inversify_1.injectable)()
], RemoveMarqueeCommand);
exports.RemoveMarqueeCommand = RemoveMarqueeCommand;
class MarqueeEndMovingMouseListener extends sprotty_1.MouseListener {
    constructor(anchorRegistry) {
        super();
        this.anchorRegistry = anchorRegistry;
    }
    mouseMove(target, event) {
        return [];
    }
}
exports.MarqueeEndMovingMouseListener = MarqueeEndMovingMouseListener;
function marqueeId(root) {
    return root.id + '_' + exports.MARQUEE;
}
exports.marqueeId = marqueeId;
exports.MARQUEE = 'marquee';
function drawMarquee(context, startPoint, endPoint) {
    const root = context.root;
    removeMarquee(root);
    const marqueeSchema = {
        type: exports.MARQUEE,
        id: marqueeId(root),
        startPoint: startPoint,
        endPoint: endPoint
    };
    const marquee = context.modelFactory.createElement(marqueeSchema);
    root.add(marquee);
}
exports.drawMarquee = drawMarquee;
function removeMarquee(root) {
    const marquee = root.index.getById(marqueeId(root));
    if (marquee instanceof sprotty_1.SChildElement) {
        root.remove(marquee);
    }
}
exports.removeMarquee = removeMarquee;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/model.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/model.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FeedbackCommand = void 0;
/********************************************************************************
 * Copyright (c) 2019-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
class FeedbackCommand extends sprotty_1.Command {
    constructor() {
        super(...arguments);
        // used by the `FeedbackAwareUpdateModelCommand`
        this.priority = 0;
    }
    undo(context) {
        return context.root;
    }
    redo(context) {
        return context.root;
    }
}
exports.FeedbackCommand = FeedbackCommand;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/view.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/view.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SResizeHandleView = exports.FeedbackEdgeEndView = void 0;
/********************************************************************************
 * Copyright (c) 2019-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const model_1 = __webpack_require__(/*! ../change-bounds/model */ "./node_modules/@eclipse-glsp/client/lib/features/change-bounds/model.js");
// eslint-disable-next-line @typescript-eslint/no-unused-vars
const JSX = { createElement: sprotty_1.svg };
/**
 * This view is used for the invisible end of the feedback edge.
 * A feedback edge is shown as a visual feedback when creating edges.
 */
let FeedbackEdgeEndView = class FeedbackEdgeEndView {
    render(model, context) {
        var _a;
        const position = (_a = model.position) !== null && _a !== void 0 ? _a : protocol_1.Point.ORIGIN;
        return JSX.createElement("g", { x: position.x, y: position.y });
    }
};
FeedbackEdgeEndView = __decorate([
    (0, inversify_1.injectable)()
], FeedbackEdgeEndView);
exports.FeedbackEdgeEndView = FeedbackEdgeEndView;
let SResizeHandleView = class SResizeHandleView {
    render(handle, context) {
        const position = this.getPosition(handle);
        if (position !== undefined) {
            const node = (JSX.createElement("circle", { "class-sprotty-resize-handle": true, "class-mouseover": handle.hoverFeedback, cx: position.x, cy: position.y, r: this.getRadius() }));
            (0, sprotty_1.setAttr)(node, 'data-kind', handle.location);
            return node;
        }
        // Fallback: Create an empty group
        return JSX.createElement("g", null);
    }
    getPosition(handle) {
        const parent = handle.parent;
        if ((0, model_1.isResizable)(parent)) {
            if (handle.location === model_1.ResizeHandleLocation.TopLeft) {
                return { x: 0, y: 0 };
            }
            else if (handle.location === model_1.ResizeHandleLocation.TopRight) {
                return { x: parent.bounds.width, y: 0 };
            }
            else if (handle.location === model_1.ResizeHandleLocation.BottomLeft) {
                return { x: 0, y: parent.bounds.height };
            }
            else if (handle.location === model_1.ResizeHandleLocation.BottomRight) {
                return { x: parent.bounds.width, y: parent.bounds.height };
            }
        }
        return undefined;
    }
    getRadius() {
        return 7;
    }
};
SResizeHandleView = __decorate([
    (0, inversify_1.injectable)()
], SResizeHandleView);
exports.SResizeHandleView = SResizeHandleView;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/tool-palette/di.config.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/tool-palette/di.config.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
__webpack_require__(/*! ../../../css/tool-palette.css */ "./node_modules/@eclipse-glsp/client/css/tool-palette.css");
const types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/@eclipse-glsp/client/lib/base/types.js");
const tool_palette_1 = __webpack_require__(/*! ./tool-palette */ "./node_modules/@eclipse-glsp/client/lib/features/tool-palette/tool-palette.js");
const toolPaletteModule = new inversify_1.ContainerModule((bind, _unbind, isBound, _rebind) => {
    (0, protocol_1.bindAsService)(bind, types_1.TYPES.IUIExtension, tool_palette_1.ToolPalette);
    (0, sprotty_1.configureActionHandler)({ bind, isBound }, tool_palette_1.EnableToolPaletteAction.KIND, tool_palette_1.ToolPalette);
    (0, sprotty_1.configureActionHandler)({ bind, isBound }, sprotty_1.EnableDefaultToolsAction.KIND, tool_palette_1.ToolPalette);
});
exports["default"] = toolPaletteModule;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/tool-palette/tool-palette.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/tool-palette/tool-palette.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var ToolPalette_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.changeCodiconClass = exports.changeCSSClass = exports.createToolGroup = exports.createIcon = exports.compare = exports.ToolPalette = exports.EnableToolPaletteAction = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const codicon_1 = __webpack_require__(/*! sprotty/lib/utils/codicon */ "./node_modules/sprotty/lib/utils/codicon.js");
const keyboard_1 = __webpack_require__(/*! sprotty/lib/utils/keyboard */ "./node_modules/sprotty/lib/utils/keyboard.js");
const action_dispatcher_1 = __webpack_require__(/*! ../../base/action-dispatcher */ "./node_modules/@eclipse-glsp/client/lib/base/action-dispatcher.js");
const editor_context_service_1 = __webpack_require__(/*! ../../base/editor-context-service */ "./node_modules/@eclipse-glsp/client/lib/base/editor-context-service.js");
const delete_tool_1 = __webpack_require__(/*! ../tools/delete-tool */ "./node_modules/@eclipse-glsp/client/lib/features/tools/delete-tool.js");
const marquee_mouse_tool_1 = __webpack_require__(/*! ../tools/marquee-mouse-tool */ "./node_modules/@eclipse-glsp/client/lib/features/tools/marquee-mouse-tool.js");
const CLICKED_CSS_CLASS = 'clicked';
const SEARCH_ICON_ID = 'search';
const PALETTE_ICON_ID = 'symbol-color';
const CHEVRON_DOWN_ICON_ID = 'chevron-right';
const PALETTE_HEIGHT = '500px';
var EnableToolPaletteAction;
(function (EnableToolPaletteAction) {
    EnableToolPaletteAction.KIND = 'enableToolPalette';
    function is(object) {
        return protocol_1.Action.hasKind(object, EnableToolPaletteAction.KIND);
    }
    EnableToolPaletteAction.is = is;
    function create() {
        return { kind: EnableToolPaletteAction.KIND };
    }
    EnableToolPaletteAction.create = create;
})(EnableToolPaletteAction = exports.EnableToolPaletteAction || (exports.EnableToolPaletteAction = {}));
let ToolPalette = ToolPalette_1 = class ToolPalette extends sprotty_1.AbstractUIExtension {
    constructor() {
        super(...arguments);
        this.paletteItemsCopy = [];
    }
    id() {
        return ToolPalette_1.ID;
    }
    containerClass() {
        return ToolPalette_1.ID;
    }
    postConstruct() {
        this.editorContext.register(this);
    }
    initialize() {
        if (!this.paletteItems) {
            return false;
        }
        return super.initialize();
    }
    initializeContents(_containerElement) {
        this.createHeader();
        this.createBody();
        this.lastActivebutton = this.defaultToolsButton;
    }
    onBeforeShow(_containerElement, root) {
        this.modelRootId = root.id;
        this.containerElement.style.maxHeight = PALETTE_HEIGHT;
    }
    addMinimizePaletteButton() {
        const baseDiv = document.getElementById(this.options.baseDiv);
        const minPaletteDiv = document.createElement('div');
        minPaletteDiv.classList.add('minimize-palette-button');
        this.containerElement.classList.add('collapsible-palette');
        if (baseDiv) {
            const insertedDiv = baseDiv.insertBefore(minPaletteDiv, baseDiv.firstChild);
            const minimizeIcon = createIcon(CHEVRON_DOWN_ICON_ID);
            this.updateMinimizePaletteButtonTooltip(minPaletteDiv);
            minimizeIcon.onclick = _event => {
                if (this.isPaletteMaximized()) {
                    this.containerElement.style.maxHeight = '0px';
                }
                else {
                    this.containerElement.style.maxHeight = PALETTE_HEIGHT;
                }
                this.updateMinimizePaletteButtonTooltip(minPaletteDiv);
                changeCodiconClass(minimizeIcon, PALETTE_ICON_ID);
                changeCodiconClass(minimizeIcon, CHEVRON_DOWN_ICON_ID);
            };
            insertedDiv.appendChild(minimizeIcon);
        }
    }
    updateMinimizePaletteButtonTooltip(button) {
        if (this.isPaletteMaximized()) {
            button.title = 'Minimize palette';
        }
        else {
            button.title = 'Maximize palette';
        }
    }
    isPaletteMaximized() {
        return this.containerElement && this.containerElement.style.maxHeight !== '0px';
    }
    createBody() {
        const bodyDiv = document.createElement('div');
        bodyDiv.classList.add('palette-body');
        let tabIndex = 0;
        this.paletteItems.sort(compare).forEach(item => {
            if (item.children) {
                const group = createToolGroup(item);
                item.children.sort(compare).forEach(child => group.appendChild(this.createToolButton(child, tabIndex++)));
                bodyDiv.appendChild(group);
            }
            else {
                bodyDiv.appendChild(this.createToolButton(item, tabIndex++));
            }
        });
        if (this.paletteItems.length === 0) {
            const noResultsDiv = document.createElement('div');
            noResultsDiv.innerText = 'No results found.';
            noResultsDiv.classList.add('tool-button');
            bodyDiv.appendChild(noResultsDiv);
        }
        // Remove existing body to refresh filtered entries
        if (this.bodyDiv) {
            this.containerElement.removeChild(this.bodyDiv);
        }
        this.containerElement.appendChild(bodyDiv);
        this.bodyDiv = bodyDiv;
    }
    createHeader() {
        this.addMinimizePaletteButton();
        const headerCompartment = document.createElement('div');
        headerCompartment.classList.add('palette-header');
        headerCompartment.append(this.createHeaderTitle());
        headerCompartment.appendChild(this.createHeaderTools());
        headerCompartment.appendChild((this.searchField = this.createHeaderSearchField()));
        this.containerElement.appendChild(headerCompartment);
    }
    createHeaderTools() {
        const headerTools = document.createElement('div');
        headerTools.classList.add('header-tools');
        this.defaultToolsButton = this.createDefaultToolButton();
        headerTools.appendChild(this.defaultToolsButton);
        const deleteToolButton = this.createMouseDeleteToolButton();
        headerTools.appendChild(deleteToolButton);
        const marqueeToolButton = this.createMarqueeToolButton();
        headerTools.appendChild(marqueeToolButton);
        const validateActionButton = this.createValidateButton();
        headerTools.appendChild(validateActionButton);
        // Create button for Search
        const searchIcon = this.createSearchButton();
        headerTools.appendChild(searchIcon);
        return headerTools;
    }
    createDefaultToolButton() {
        const button = createIcon('inspect');
        button.id = 'btn_default_tools';
        button.title = 'Enable selection tool';
        button.onclick = this.onClickStaticToolButton(this.defaultToolsButton);
        return button;
    }
    createMouseDeleteToolButton() {
        const deleteToolButton = createIcon('chrome-close');
        deleteToolButton.title = 'Enable deletion tool';
        deleteToolButton.onclick = this.onClickStaticToolButton(deleteToolButton, delete_tool_1.MouseDeleteTool.ID);
        return deleteToolButton;
    }
    createMarqueeToolButton() {
        const marqueeToolButton = createIcon('screen-full');
        marqueeToolButton.title = 'Enable marquee tool';
        marqueeToolButton.onclick = this.onClickStaticToolButton(marqueeToolButton, marquee_mouse_tool_1.MarqueeMouseTool.ID);
        return marqueeToolButton;
    }
    createValidateButton() {
        const validateActionButton = createIcon('pass');
        validateActionButton.title = 'Validate model';
        validateActionButton.onclick = _event => {
            const modelIds = [this.modelRootId];
            this.actionDispatcher.dispatch(protocol_1.RequestMarkersAction.create(modelIds, { reason: protocol_1.MarkersReason.BATCH }));
        };
        return validateActionButton;
    }
    createSearchButton() {
        const searchIcon = createIcon(SEARCH_ICON_ID);
        searchIcon.onclick = _ev => {
            const searchField = document.getElementById(this.containerElement.id + '_search_field');
            if (searchField) {
                if (searchField.style.display === 'none') {
                    searchField.style.display = '';
                    searchField.focus();
                }
                else {
                    searchField.style.display = 'none';
                }
            }
        };
        searchIcon.classList.add('search-icon');
        searchIcon.title = 'Filter palette entries';
        return searchIcon;
    }
    createHeaderSearchField() {
        const searchField = document.createElement('input');
        searchField.classList.add('search-input');
        searchField.id = this.containerElement.id + '_search_field';
        searchField.type = 'text';
        searchField.placeholder = ' Search...';
        searchField.style.display = 'none';
        searchField.onkeyup = () => this.requestFilterUpdate(this.searchField.value);
        searchField.onkeydown = ev => this.clearOnEscape(ev);
        return searchField;
    }
    createHeaderTitle() {
        const header = document.createElement('div');
        header.classList.add('header-icon');
        header.appendChild(createIcon(PALETTE_ICON_ID));
        header.insertAdjacentText('beforeend', 'Palette');
        return header;
    }
    createToolButton(item, index) {
        const button = document.createElement('div');
        button.tabIndex = index;
        button.classList.add('tool-button');
        if (item.icon) {
            button.appendChild(createIcon(item.icon));
        }
        button.insertAdjacentText('beforeend', item.label);
        button.onclick = this.onClickCreateToolButton(button, item);
        button.onkeydown = ev => this.clearToolOnEscape(ev);
        return button;
    }
    onClickCreateToolButton(button, item) {
        return (_ev) => {
            if (!this.editorContext.isReadonly) {
                this.actionDispatcher.dispatchAll(item.actions);
                this.changeActiveButton(button);
                button.focus();
            }
        };
    }
    onClickStaticToolButton(button, toolId) {
        return (_ev) => {
            if (!this.editorContext.isReadonly) {
                const action = toolId ? sprotty_1.EnableToolsAction.create([toolId]) : sprotty_1.EnableDefaultToolsAction.create();
                this.actionDispatcher.dispatch(action);
                this.changeActiveButton(button);
                button.focus();
            }
        };
    }
    changeActiveButton(button) {
        if (this.lastActivebutton) {
            this.lastActivebutton.classList.remove(CLICKED_CSS_CLASS);
        }
        if (button) {
            button.classList.add(CLICKED_CSS_CLASS);
            this.lastActivebutton = button;
        }
        else {
            this.defaultToolsButton.classList.add(CLICKED_CSS_CLASS);
            this.lastActivebutton = this.defaultToolsButton;
        }
    }
    handle(action) {
        if (action.kind === EnableToolPaletteAction.KIND) {
            const requestAction = protocol_1.RequestContextActions.create({
                contextId: ToolPalette_1.ID,
                editorContext: {
                    selectedElementIds: []
                }
            });
            this.actionDispatcher.requestUntil(requestAction).then(response => {
                if (protocol_1.SetContextActions.is(response)) {
                    this.paletteItems = response.actions.map(e => e);
                    this.actionDispatcher.dispatch(sprotty_1.SetUIExtensionVisibilityAction.create({ extensionId: ToolPalette_1.ID, visible: !this.editorContext.isReadonly }));
                }
            });
        }
        else if (action.kind === sprotty_1.EnableDefaultToolsAction.KIND) {
            this.changeActiveButton();
            this.restoreFocus();
        }
    }
    editModeChanged(_oldValue, _newValue) {
        this.actionDispatcher.dispatch(sprotty_1.SetUIExtensionVisibilityAction.create({ extensionId: ToolPalette_1.ID, visible: !this.editorContext.isReadonly }));
    }
    clearOnEscape(event) {
        if ((0, keyboard_1.matchesKeystroke)(event, 'Escape')) {
            this.searchField.value = '';
            this.requestFilterUpdate('');
        }
    }
    clearToolOnEscape(event) {
        if ((0, keyboard_1.matchesKeystroke)(event, 'Escape')) {
            this.actionDispatcher.dispatch(sprotty_1.EnableDefaultToolsAction.create());
        }
    }
    handleSetContextActions(action) {
        this.paletteItems = action.actions.map(e => e);
        this.createBody();
    }
    requestFilterUpdate(filter) {
        // Initialize the copy if it's empty
        if (this.paletteItemsCopy.length === 0) {
            // Creating deep copy
            this.paletteItemsCopy = JSON.parse(JSON.stringify(this.paletteItems));
        }
        // Reset the paletteItems before searching
        this.paletteItems = JSON.parse(JSON.stringify(this.paletteItemsCopy));
        // Filter the entries
        const filteredPaletteItems = [];
        for (const itemGroup of this.paletteItems) {
            if (itemGroup.children) {
                // Fetch the labels according to the filter
                const matchingChildren = itemGroup.children.filter(child => child.label.toLowerCase().includes(filter.toLowerCase()));
                // Add the itemgroup containing the correct entries
                if (matchingChildren.length > 0) {
                    // Clear existing children
                    itemGroup.children.splice(0, itemGroup.children.length);
                    // Push the matching children
                    matchingChildren.forEach(child => itemGroup.children.push(child));
                    filteredPaletteItems.push(itemGroup);
                }
            }
        }
        this.paletteItems = filteredPaletteItems;
        this.createBody();
    }
};
ToolPalette.ID = 'tool-palette';
__decorate([
    (0, inversify_1.inject)(sprotty_1.TYPES.IActionDispatcher),
    __metadata("design:type", action_dispatcher_1.GLSPActionDispatcher)
], ToolPalette.prototype, "actionDispatcher", void 0);
__decorate([
    (0, inversify_1.inject)(sprotty_1.TYPES.IToolManager),
    __metadata("design:type", Object)
], ToolPalette.prototype, "toolManager", void 0);
__decorate([
    (0, inversify_1.inject)(editor_context_service_1.EditorContextService),
    __metadata("design:type", editor_context_service_1.EditorContextService)
], ToolPalette.prototype, "editorContext", void 0);
__decorate([
    (0, inversify_1.postConstruct)(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], ToolPalette.prototype, "postConstruct", null);
ToolPalette = ToolPalette_1 = __decorate([
    (0, inversify_1.injectable)()
], ToolPalette);
exports.ToolPalette = ToolPalette;
function compare(a, b) {
    const sortStringBased = a.sortString.localeCompare(b.sortString);
    if (sortStringBased !== 0) {
        return sortStringBased;
    }
    return a.label.localeCompare(b.label);
}
exports.compare = compare;
function createIcon(codiconId) {
    const icon = document.createElement('i');
    icon.classList.add(...(0, codicon_1.codiconCSSClasses)(codiconId));
    return icon;
}
exports.createIcon = createIcon;
function createToolGroup(item) {
    const group = document.createElement('div');
    group.classList.add('tool-group');
    group.id = item.id;
    const header = document.createElement('div');
    header.classList.add('group-header');
    if (item.icon) {
        header.appendChild(createIcon(item.icon));
    }
    header.insertAdjacentText('beforeend', item.label);
    header.ondblclick = _ev => {
        const css = 'collapsed';
        changeCSSClass(group, css);
        Array.from(group.children).forEach(child => changeCSSClass(child, css));
        window.getSelection().removeAllRanges();
    };
    group.appendChild(header);
    return group;
}
exports.createToolGroup = createToolGroup;
function changeCSSClass(element, css) {
    // eslint-disable-next-line chai-friendly/no-unused-expressions
    element.classList.contains(css) ? element.classList.remove(css) : element.classList.add(css);
}
exports.changeCSSClass = changeCSSClass;
function changeCodiconClass(element, codiconId) {
    // eslint-disable-next-line chai-friendly/no-unused-expressions
    element.classList.contains((0, codicon_1.codiconCSSClasses)(codiconId)[1])
        ? element.classList.remove((0, codicon_1.codiconCSSClasses)(codiconId)[1])
        : element.classList.add((0, codicon_1.codiconCSSClasses)(codiconId)[1]);
}
exports.changeCodiconClass = changeCodiconClass;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/tools/base-glsp-tool.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/tools/base-glsp-tool.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BaseGLSPTool = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const editor_context_service_1 = __webpack_require__(/*! ../../base/editor-context-service */ "./node_modules/@eclipse-glsp/client/lib/base/editor-context-service.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/@eclipse-glsp/client/lib/base/types.js");
let BaseGLSPTool = class BaseGLSPTool {
    get isEditTool() {
        return true;
    }
    dispatchActions(actions) {
        this.actionDispatcher.dispatchAll(actions);
    }
    dispatchFeedback(actions, feedbackEmitter) {
        this.feedbackDispatcher.registerFeedback(feedbackEmitter !== null && feedbackEmitter !== void 0 ? feedbackEmitter : this, actions);
    }
    deregisterFeedback(actions, feedbackEmitter) {
        this.feedbackDispatcher.deregisterFeedback(feedbackEmitter !== null && feedbackEmitter !== void 0 ? feedbackEmitter : this, actions);
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.IFeedbackActionDispatcher),
    __metadata("design:type", Object)
], BaseGLSPTool.prototype, "feedbackDispatcher", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.IActionDispatcher),
    __metadata("design:type", Object)
], BaseGLSPTool.prototype, "actionDispatcher", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.MouseTool),
    __metadata("design:type", Object)
], BaseGLSPTool.prototype, "mouseTool", void 0);
__decorate([
    (0, inversify_1.inject)(sprotty_1.KeyTool),
    __metadata("design:type", sprotty_1.KeyTool)
], BaseGLSPTool.prototype, "keyTool", void 0);
__decorate([
    (0, inversify_1.inject)(editor_context_service_1.EditorContextService),
    __metadata("design:type", editor_context_service_1.EditorContextService)
], BaseGLSPTool.prototype, "editorContext", void 0);
BaseGLSPTool = __decorate([
    (0, inversify_1.injectable)()
], BaseGLSPTool);
exports.BaseGLSPTool = BaseGLSPTool;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/tools/change-bounds-tool.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/tools/change-bounds-tool.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var ChangeBoundsTool_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ChangeBoundsListener = exports.ChangeBoundsTool = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const drag_aware_mouse_listener_1 = __webpack_require__(/*! ../../base/drag-aware-mouse-listener */ "./node_modules/@eclipse-glsp/client/lib/base/drag-aware-mouse-listener.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/@eclipse-glsp/client/lib/base/types.js");
const layout_utils_1 = __webpack_require__(/*! ../../utils/layout-utils */ "./node_modules/@eclipse-glsp/client/lib/utils/layout-utils.js");
const smodel_util_1 = __webpack_require__(/*! ../../utils/smodel-util */ "./node_modules/@eclipse-glsp/client/lib/utils/smodel-util.js");
const model_1 = __webpack_require__(/*! ../change-bounds/model */ "./node_modules/@eclipse-glsp/client/lib/features/change-bounds/model.js");
const movement_restrictor_1 = __webpack_require__(/*! ../change-bounds/movement-restrictor */ "./node_modules/@eclipse-glsp/client/lib/features/change-bounds/movement-restrictor.js");
const snap_1 = __webpack_require__(/*! ../change-bounds/snap */ "./node_modules/@eclipse-glsp/client/lib/features/change-bounds/snap.js");
const selection_service_1 = __webpack_require__(/*! ../select/selection-service */ "./node_modules/@eclipse-glsp/client/lib/features/select/selection-service.js");
const change_bounds_tool_feedback_1 = __webpack_require__(/*! ../tool-feedback/change-bounds-tool-feedback */ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/change-bounds-tool-feedback.js");
const css_feedback_1 = __webpack_require__(/*! ../tool-feedback/css-feedback */ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/css-feedback.js");
const base_glsp_tool_1 = __webpack_require__(/*! ./base-glsp-tool */ "./node_modules/@eclipse-glsp/client/lib/features/tools/base-glsp-tool.js");
/**
 * The change bounds tool has the license to move multiple elements or resize a single element by implementing the ChangeBounds operation.
 * In contrast to Sprotty's implementation this tool only sends a `ChangeBoundsOperationAction` when an operation has finished and does not
 * provide client-side live updates to improve performance.
 *
 * | Operation | Client Update    | Server Update
 * +-----------+------------------+----------------------------
 * | Move      | MoveAction       | ChangeBoundsOperationAction
 * | Resize    | SetBoundsAction  | ChangeBoundsOperationAction
 *
 * To provide a visual client updates during move we install the `FeedbackMoveMouseListener` and to provide visual client updates during
 * resize and send the server updates we install the `ChangeBoundsListener`.
 */
let ChangeBoundsTool = ChangeBoundsTool_1 = class ChangeBoundsTool extends base_glsp_tool_1.BaseGLSPTool {
    get id() {
        return ChangeBoundsTool_1.ID;
    }
    enable() {
        // install feedback move mouse listener for client-side move updates
        this.feedbackMoveMouseListener = this.createMoveMouseListener();
        this.mouseTool.register(this.feedbackMoveMouseListener);
        // install change bounds listener for client-side resize updates and server-side updates
        this.changeBoundsListener = this.createChangeBoundsListener();
        this.mouseTool.register(this.changeBoundsListener);
        this.selectionService.register(this.changeBoundsListener);
    }
    createMoveMouseListener() {
        return new change_bounds_tool_feedback_1.FeedbackMoveMouseListener(this);
    }
    createChangeBoundsListener() {
        return new ChangeBoundsListener(this);
    }
    disable() {
        this.mouseTool.deregister(this.changeBoundsListener);
        this.selectionService.deregister(this.changeBoundsListener);
        this.mouseTool.deregister(this.feedbackMoveMouseListener);
        this.deregisterFeedback([], this.feedbackMoveMouseListener);
        this.deregisterFeedback([change_bounds_tool_feedback_1.HideChangeBoundsToolResizeFeedbackAction.create()], this.changeBoundsListener);
    }
};
ChangeBoundsTool.ID = 'glsp.change-bounds-tool';
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.SelectionService),
    __metadata("design:type", selection_service_1.SelectionService)
], ChangeBoundsTool.prototype, "selectionService", void 0);
__decorate([
    (0, inversify_1.inject)(sprotty_1.EdgeRouterRegistry),
    (0, inversify_1.optional)(),
    __metadata("design:type", sprotty_1.EdgeRouterRegistry)
], ChangeBoundsTool.prototype, "edgeRouterRegistry", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ISnapper),
    (0, inversify_1.optional)(),
    __metadata("design:type", Object)
], ChangeBoundsTool.prototype, "snapper", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.IMovementRestrictor),
    (0, inversify_1.optional)(),
    __metadata("design:type", Object)
], ChangeBoundsTool.prototype, "movementRestrictor", void 0);
ChangeBoundsTool = ChangeBoundsTool_1 = __decorate([
    (0, inversify_1.injectable)()
], ChangeBoundsTool);
exports.ChangeBoundsTool = ChangeBoundsTool;
class ChangeBoundsListener extends drag_aware_mouse_listener_1.DragAwareMouseListener {
    constructor(tool) {
        super();
        this.tool = tool;
        this.pointPositionUpdater = new snap_1.PointPositionUpdater(tool.snapper);
    }
    mouseDown(target, event) {
        super.mouseDown(target, event);
        // If another button than the left mouse button was clicked or we are
        // still on the root element we don't need to execute the tool behavior
        if (event.button !== 0 || target instanceof sprotty_1.SModelRoot) {
            return [];
        }
        // check if we have a resize handle (only single-selection)
        if (this.activeResizeElement && target instanceof model_1.SResizeHandle) {
            this.activeResizeHandle = target;
        }
        else {
            this.setActiveResizeElement(target);
        }
        if (this.activeResizeElement) {
            this.initPosition(event);
        }
        else {
            this.reset();
        }
        return [];
    }
    mouseMove(target, event) {
        super.mouseMove(target, event);
        if (this.isMouseDrag && this.activeResizeHandle) {
            // rely on the FeedbackMoveMouseListener to update the element bounds of selected elements
            // consider resize handles ourselves
            const actions = [
                (0, css_feedback_1.cursorFeedbackAction)(this.activeResizeHandle.isNwSeResize() ? css_feedback_1.CursorCSS.RESIZE_NWSE : css_feedback_1.CursorCSS.RESIZE_NESW),
                (0, css_feedback_1.applyCssClasses)(this.activeResizeHandle, ChangeBoundsListener.CSS_CLASS_ACTIVE)
            ];
            const positionUpdate = this.pointPositionUpdater.updatePosition(target, { x: event.pageX, y: event.pageY }, !event.altKey);
            if (positionUpdate) {
                const resizeActions = this.handleResizeOnClient(positionUpdate);
                actions.push(...resizeActions);
            }
            return actions;
        }
        return [];
    }
    draggingMouseUp(target, event) {
        if (this.pointPositionUpdater.isLastDragPositionUndefined()) {
            this.resetPosition();
            return [];
        }
        const actions = [];
        if (this.activeResizeHandle) {
            // Resize
            actions.push(...this.handleResize(this.activeResizeHandle));
        }
        else {
            // Move
            actions.push(...this.handleMoveOnServer(target));
        }
        this.resetPosition();
        return actions;
    }
    handleMoveOnServer(target) {
        const operations = [];
        operations.push(...this.handleMoveElementsOnServer(target));
        operations.push(...this.handleMoveRoutingPointsOnServer(target));
        if (operations.length > 0) {
            return [protocol_1.CompoundOperation.create(operations)];
        }
        return operations;
    }
    handleMoveElementsOnServer(target) {
        const result = [];
        const newBounds = [];
        const selectedElements = [];
        (0, smodel_util_1.forEachElement)(target.index, smodel_util_1.isNonRoutableSelectedMovableBoundsAware, element => {
            selectedElements.push(element);
        });
        const selectionSet = new Set(selectedElements);
        selectedElements
            .filter(element => !this.isChildOfSelected(selectionSet, element))
            .map(element => this.createElementAndBounds(element))
            .forEach(bounds => newBounds.push(...bounds));
        if (newBounds.length > 0) {
            result.push(protocol_1.ChangeBoundsOperation.create(newBounds));
        }
        return result;
    }
    isChildOfSelected(selectedElements, element) {
        while (element instanceof sprotty_1.SChildElement) {
            element = element.parent;
            if (selectedElements.has(element)) {
                return true;
            }
        }
        return false;
    }
    handleMoveRoutingPointsOnServer(target) {
        const newRoutingPoints = [];
        const routerRegistry = this.tool.edgeRouterRegistry;
        if (routerRegistry) {
            //  If client routing is enabled -> delegate routingpoints of connected edges to server
            (0, smodel_util_1.forEachElement)(target.index, smodel_util_1.isNonRoutableSelectedMovableBoundsAware, element => {
                if (element instanceof sprotty_1.SConnectableElement) {
                    element.incomingEdges
                        .map(connectable => (0, smodel_util_1.calcElementAndRoutingPoints)(connectable, routerRegistry))
                        .forEach(ear => newRoutingPoints.push(ear));
                    element.outgoingEdges
                        .map(connectable => (0, smodel_util_1.calcElementAndRoutingPoints)(connectable, routerRegistry))
                        .forEach(ear => newRoutingPoints.push(ear));
                }
            });
        }
        return newRoutingPoints.length > 0 ? [protocol_1.ChangeRoutingPointsOperation.create(newRoutingPoints)] : [];
    }
    handleResize(activeResizeHandle) {
        const actions = [];
        actions.push((0, css_feedback_1.cursorFeedbackAction)(css_feedback_1.CursorCSS.DEFAULT));
        actions.push((0, css_feedback_1.deleteCssClasses)(activeResizeHandle, ChangeBoundsListener.CSS_CLASS_ACTIVE));
        const resizeElement = (0, sprotty_1.findParentByFeature)(activeResizeHandle, model_1.isResizable);
        if (this.isActiveResizeElement(resizeElement)) {
            this.createChangeBoundsAction(resizeElement).forEach(action => actions.push(action));
        }
        return actions;
    }
    selectionChanged(root, selectedElements) {
        if (this.activeResizeElement) {
            if (selectedElements.includes(this.activeResizeElement.id)) {
                // our active element is still selected, nothing to do
                return;
            }
            // try to find some other selected element and mark that active
            for (const elementId of selectedElements.reverse()) {
                const element = root.index.getById(elementId);
                if (element && this.setActiveResizeElement(element)) {
                    return;
                }
            }
            this.reset();
        }
    }
    setActiveResizeElement(target) {
        // check if we have a selected, moveable element (multi-selection allowed)
        const moveableElement = (0, sprotty_1.findParentByFeature)(target, model_1.isBoundsAwareMoveable);
        if ((0, sprotty_1.isSelected)(moveableElement)) {
            // only allow one element to have the element resize handles
            this.activeResizeElement = moveableElement;
            if ((0, model_1.isResizable)(this.activeResizeElement)) {
                this.tool.dispatchFeedback([change_bounds_tool_feedback_1.ShowChangeBoundsToolResizeFeedbackAction.create(this.activeResizeElement.id)], this);
            }
            return true;
        }
        return false;
    }
    isActiveResizeElement(element) {
        return element !== undefined && this.activeResizeElement !== undefined && element.id === this.activeResizeElement.id;
    }
    initPosition(event) {
        this.pointPositionUpdater.updateLastDragPosition({ x: event.pageX, y: event.pageY });
        if (this.activeResizeHandle) {
            const resizeElement = (0, sprotty_1.findParentByFeature)(this.activeResizeHandle, model_1.isResizable);
            this.initialBounds = {
                x: resizeElement.bounds.x,
                y: resizeElement.bounds.y,
                width: resizeElement.bounds.width,
                height: resizeElement.bounds.height
            };
        }
    }
    reset() {
        if (this.activeResizeElement && (0, model_1.isResizable)(this.activeResizeElement)) {
            this.tool.dispatchFeedback([change_bounds_tool_feedback_1.HideChangeBoundsToolResizeFeedbackAction.create()], this);
        }
        this.tool.dispatchActions([(0, css_feedback_1.cursorFeedbackAction)(css_feedback_1.CursorCSS.DEFAULT)]);
        this.resetPosition();
    }
    resetPosition() {
        this.activeResizeHandle = undefined;
        this.pointPositionUpdater.resetPosition();
    }
    handleResizeOnClient(positionUpdate) {
        if (!this.activeResizeHandle) {
            return [];
        }
        const resizeElement = (0, sprotty_1.findParentByFeature)(this.activeResizeHandle, model_1.isResizable);
        if (this.isActiveResizeElement(resizeElement)) {
            switch (this.activeResizeHandle.location) {
                case model_1.ResizeHandleLocation.TopLeft:
                    return this.handleTopLeftResize(resizeElement, positionUpdate);
                case model_1.ResizeHandleLocation.TopRight:
                    return this.handleTopRightResize(resizeElement, positionUpdate);
                case model_1.ResizeHandleLocation.BottomLeft:
                    return this.handleBottomLeftResize(resizeElement, positionUpdate);
                case model_1.ResizeHandleLocation.BottomRight:
                    return this.handleBottomRightResize(resizeElement, positionUpdate);
            }
        }
        return [];
    }
    handleTopLeftResize(resizeElement, positionUpdate) {
        return this.createSetBoundsAction(resizeElement, resizeElement.bounds.x + positionUpdate.x, resizeElement.bounds.y + positionUpdate.y, resizeElement.bounds.width - positionUpdate.x, resizeElement.bounds.height - positionUpdate.y);
    }
    handleTopRightResize(resizeElement, positionUpdate) {
        return this.createSetBoundsAction(resizeElement, resizeElement.bounds.x, resizeElement.bounds.y + positionUpdate.y, resizeElement.bounds.width + positionUpdate.x, resizeElement.bounds.height - positionUpdate.y);
    }
    handleBottomLeftResize(resizeElement, positionUpdate) {
        return this.createSetBoundsAction(resizeElement, resizeElement.bounds.x + positionUpdate.x, resizeElement.bounds.y, resizeElement.bounds.width - positionUpdate.x, resizeElement.bounds.height + positionUpdate.y);
    }
    handleBottomRightResize(resizeElement, positionUpdate) {
        return this.createSetBoundsAction(resizeElement, resizeElement.bounds.x, resizeElement.bounds.y, resizeElement.bounds.width + positionUpdate.x, resizeElement.bounds.height + positionUpdate.y);
    }
    createChangeBoundsAction(element) {
        if (this.isValidBoundChange(element, element.bounds, element.bounds)) {
            return [protocol_1.ChangeBoundsOperation.create([(0, smodel_util_1.toElementAndBounds)(element)])];
        }
        else if (this.initialBounds) {
            const actions = [];
            if (this.tool.movementRestrictor) {
                actions.push((0, movement_restrictor_1.removeMovementRestrictionFeedback)(element, this.tool.movementRestrictor));
            }
            actions.push(protocol_1.SetBoundsAction.create([{ elementId: element.id, newPosition: this.initialBounds, newSize: this.initialBounds }]));
            return actions;
        }
        return [];
    }
    createElementAndBounds(element) {
        if (this.isValidBoundChange(element, element.bounds, element.bounds)) {
            return [(0, smodel_util_1.toElementAndBounds)(element)];
        }
        return [];
    }
    createSetBoundsAction(element, x, y, width, height) {
        const newPosition = { x, y };
        const newSize = { width, height };
        const result = [];
        if (this.isValidBoundChange(element, newPosition, newSize)) {
            if (this.tool.movementRestrictor) {
                result.push((0, movement_restrictor_1.removeMovementRestrictionFeedback)(element, this.tool.movementRestrictor));
            }
            result.push(protocol_1.SetBoundsAction.create([{ elementId: element.id, newPosition, newSize }]));
        }
        else if (this.isValidSize(element, newSize)) {
            if (this.tool.movementRestrictor) {
                result.push((0, movement_restrictor_1.createMovementRestrictionFeedback)(element, this.tool.movementRestrictor));
            }
            result.push(protocol_1.SetBoundsAction.create([{ elementId: element.id, newPosition, newSize }]));
        }
        return result;
    }
    snap(position, element, isSnap) {
        return isSnap && this.tool.snapper ? this.tool.snapper.snap(position, element) : { x: position.x, y: position.y };
    }
    isValidBoundChange(element, newPosition, newSize) {
        return this.isValidSize(element, newSize) && this.isValidMove(element, newPosition);
    }
    isValidSize(element, size) {
        return (0, layout_utils_1.isValidSize)(element, size);
    }
    isValidMove(element, newPosition) {
        return (0, layout_utils_1.isValidMove)(element, newPosition, this.tool.movementRestrictor);
    }
}
exports.ChangeBoundsListener = ChangeBoundsListener;
ChangeBoundsListener.CSS_CLASS_ACTIVE = 'active';


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/tools/delete-tool.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/tools/delete-tool.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var DelKeyDeleteTool_1, MouseDeleteTool_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DeleteToolMouseListener = exports.MouseDeleteTool = exports.DeleteKeyListener = exports.DelKeyDeleteTool = void 0;
/********************************************************************************
 * Copyright (c) 2019-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const keyboard_1 = __webpack_require__(/*! sprotty/lib/utils/keyboard */ "./node_modules/sprotty/lib/utils/keyboard.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/@eclipse-glsp/client/lib/base/types.js");
const css_feedback_1 = __webpack_require__(/*! ../tool-feedback/css-feedback */ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/css-feedback.js");
/**
 * Deletes selected elements when hitting the `Del` key.
 */
let DelKeyDeleteTool = DelKeyDeleteTool_1 = class DelKeyDeleteTool {
    constructor() {
        this.isEditTool = true;
        this.deleteKeyListener = new DeleteKeyListener();
    }
    get id() {
        return DelKeyDeleteTool_1.ID;
    }
    enable() {
        this.keytool.register(this.deleteKeyListener);
    }
    disable() {
        this.keytool.deregister(this.deleteKeyListener);
    }
};
DelKeyDeleteTool.ID = 'glsp.delete-keyboard';
__decorate([
    (0, inversify_1.inject)(sprotty_1.KeyTool),
    __metadata("design:type", sprotty_1.KeyTool)
], DelKeyDeleteTool.prototype, "keytool", void 0);
DelKeyDeleteTool = DelKeyDeleteTool_1 = __decorate([
    (0, inversify_1.injectable)()
], DelKeyDeleteTool);
exports.DelKeyDeleteTool = DelKeyDeleteTool;
let DeleteKeyListener = class DeleteKeyListener extends sprotty_1.KeyListener {
    keyDown(element, event) {
        if ((0, keyboard_1.matchesKeystroke)(event, 'Delete')) {
            const deleteElementIds = Array.from(element.root.index
                .all()
                .filter(e => (0, sprotty_1.isDeletable)(e) && (0, sprotty_1.isSelectable)(e) && e.selected)
                .filter(e => e.id !== e.root.id)
                .map(e => e.id));
            if (deleteElementIds.length > 0) {
                return [protocol_1.DeleteElementOperation.create(deleteElementIds)];
            }
        }
        return [];
    }
};
DeleteKeyListener = __decorate([
    (0, inversify_1.injectable)()
], DeleteKeyListener);
exports.DeleteKeyListener = DeleteKeyListener;
/**
 * Deletes selected elements when clicking on them.
 */
let MouseDeleteTool = MouseDeleteTool_1 = class MouseDeleteTool {
    constructor() {
        this.isEditTool = true;
        this.deleteToolMouseListener = new DeleteToolMouseListener();
    }
    get id() {
        return MouseDeleteTool_1.ID;
    }
    enable() {
        this.mouseTool.register(this.deleteToolMouseListener);
        this.feedbackDispatcher.registerFeedback(this, [(0, css_feedback_1.cursorFeedbackAction)(css_feedback_1.CursorCSS.ELEMENT_DELETION)]);
    }
    disable() {
        this.mouseTool.deregister(this.deleteToolMouseListener);
        this.feedbackDispatcher.registerFeedback(this, [(0, css_feedback_1.cursorFeedbackAction)()]);
    }
};
MouseDeleteTool.ID = 'glsp.delete-mouse';
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.MouseTool),
    __metadata("design:type", Object)
], MouseDeleteTool.prototype, "mouseTool", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.IFeedbackActionDispatcher),
    __metadata("design:type", Object)
], MouseDeleteTool.prototype, "feedbackDispatcher", void 0);
MouseDeleteTool = MouseDeleteTool_1 = __decorate([
    (0, inversify_1.injectable)()
], MouseDeleteTool);
exports.MouseDeleteTool = MouseDeleteTool;
let DeleteToolMouseListener = class DeleteToolMouseListener extends sprotty_1.MouseListener {
    mouseUp(target, event) {
        const deletableParent = (0, sprotty_1.findParentByFeature)(target, sprotty_1.isDeletable);
        if (deletableParent === undefined) {
            return [];
        }
        const result = [];
        result.push(protocol_1.DeleteElementOperation.create([deletableParent.id]));
        if (!(0, sprotty_1.isCtrlOrCmd)(event)) {
            result.push(sprotty_1.EnableDefaultToolsAction.create());
        }
        return result;
    }
};
DeleteToolMouseListener = __decorate([
    (0, inversify_1.injectable)()
], DeleteToolMouseListener);
exports.DeleteToolMouseListener = DeleteToolMouseListener;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/tools/di.config.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/tools/di.config.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.enableDefaultToolsOnFocusLossModule = exports.configureMarqueeTool = exports.toolsModule = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const focus_change_action_1 = __webpack_require__(/*! ../../base/actions/focus-change-action */ "./node_modules/@eclipse-glsp/client/lib/base/actions/focus-change-action.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/@eclipse-glsp/client/lib/base/types.js");
const marquee_tool_feedback_1 = __webpack_require__(/*! ../tool-feedback/marquee-tool-feedback */ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/marquee-tool-feedback.js");
const change_bounds_tool_1 = __webpack_require__(/*! ./change-bounds-tool */ "./node_modules/@eclipse-glsp/client/lib/features/tools/change-bounds-tool.js");
const delete_tool_1 = __webpack_require__(/*! ./delete-tool */ "./node_modules/@eclipse-glsp/client/lib/features/tools/delete-tool.js");
const edge_creation_tool_1 = __webpack_require__(/*! ./edge-creation-tool */ "./node_modules/@eclipse-glsp/client/lib/features/tools/edge-creation-tool.js");
const edge_edit_tool_1 = __webpack_require__(/*! ./edge-edit-tool */ "./node_modules/@eclipse-glsp/client/lib/features/tools/edge-edit-tool.js");
const enable_default_tools_on_focus_loss_1 = __webpack_require__(/*! ./enable-default-tools-on-focus-loss */ "./node_modules/@eclipse-glsp/client/lib/features/tools/enable-default-tools-on-focus-loss.js");
const glsp_manhattan_edge_router_1 = __webpack_require__(/*! ./glsp-manhattan-edge-router */ "./node_modules/@eclipse-glsp/client/lib/features/tools/glsp-manhattan-edge-router.js");
const marquee_mouse_tool_1 = __webpack_require__(/*! ./marquee-mouse-tool */ "./node_modules/@eclipse-glsp/client/lib/features/tools/marquee-mouse-tool.js");
const marquee_tool_1 = __webpack_require__(/*! ./marquee-tool */ "./node_modules/@eclipse-glsp/client/lib/features/tools/marquee-tool.js");
const model_1 = __webpack_require__(/*! ./model */ "./node_modules/@eclipse-glsp/client/lib/features/tools/model.js");
const node_creation_tool_1 = __webpack_require__(/*! ./node-creation-tool */ "./node_modules/@eclipse-glsp/client/lib/features/tools/node-creation-tool.js");
const view_1 = __webpack_require__(/*! ./view */ "./node_modules/@eclipse-glsp/client/lib/features/tools/view.js");
/**
 * Registers the default tools of GLSP (node and edge creation, changing bounds, edge editing, deletion)
 * and adds the marquee selection tool.
 */
exports.toolsModule = new inversify_1.ContainerModule((bind, _unbind, isBound, rebind) => {
    const context = { bind, isBound, rebind };
    // Register default tools
    (0, protocol_1.bindAsService)(context, types_1.TYPES.IDefaultTool, change_bounds_tool_1.ChangeBoundsTool);
    (0, protocol_1.bindAsService)(context, types_1.TYPES.IDefaultTool, edge_edit_tool_1.EdgeEditTool);
    (0, protocol_1.bindAsService)(context, types_1.TYPES.IDefaultTool, delete_tool_1.DelKeyDeleteTool);
    // Register  tools
    (0, protocol_1.bindAsService)(context, types_1.TYPES.ITool, delete_tool_1.MouseDeleteTool);
    (0, protocol_1.bindAsService)(context, types_1.TYPES.ITool, node_creation_tool_1.NodeCreationTool);
    (0, protocol_1.bindAsService)(context, types_1.TYPES.ITool, edge_creation_tool_1.EdgeCreationTool);
    configureMarqueeTool(context);
    (0, sprotty_1.configureActionHandler)(context, protocol_1.TriggerNodeCreationAction.KIND, node_creation_tool_1.NodeCreationTool);
    (0, sprotty_1.configureActionHandler)(context, protocol_1.TriggerEdgeCreationAction.KIND, edge_creation_tool_1.EdgeCreationTool);
    bind(glsp_manhattan_edge_router_1.GLSPManhattanEdgeRouter).toSelf().inSingletonScope();
    (0, protocol_1.bindOrRebind)(context, sprotty_1.ManhattanEdgeRouter).toService(glsp_manhattan_edge_router_1.GLSPManhattanEdgeRouter);
});
function configureMarqueeTool(context) {
    (0, sprotty_1.configureModelElement)(context, marquee_tool_feedback_1.MARQUEE, model_1.MarqueeNode, view_1.MarqueeView);
    (0, protocol_1.bindAsService)(context, types_1.TYPES.IDefaultTool, marquee_tool_1.MarqueeTool);
    (0, protocol_1.bindAsService)(context, types_1.TYPES.ITool, marquee_mouse_tool_1.MarqueeMouseTool);
}
exports.configureMarqueeTool = configureMarqueeTool;
/**
 * Enables the default tools in the tool manager if the diagram looses focus.
 */
exports.enableDefaultToolsOnFocusLossModule = new inversify_1.ContainerModule((bind, _unbind, isBound) => {
    (0, sprotty_1.configureActionHandler)({ bind, isBound }, focus_change_action_1.FocusStateChangedAction.KIND, enable_default_tools_on_focus_loss_1.EnableDefaultToolsOnFocusLossHandler);
});


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/tools/edge-creation-tool.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/tools/edge-creation-tool.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var EdgeCreationTool_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EdgeCreationToolMouseListener = exports.EdgeCreationTool = void 0;
/********************************************************************************
 * Copyright (c) 2019-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const drag_aware_mouse_listener_1 = __webpack_require__(/*! ../../base/drag-aware-mouse-listener */ "./node_modules/@eclipse-glsp/client/lib/base/drag-aware-mouse-listener.js");
const creation_tool_feedback_1 = __webpack_require__(/*! ../tool-feedback/creation-tool-feedback */ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/creation-tool-feedback.js");
const css_feedback_1 = __webpack_require__(/*! ../tool-feedback/css-feedback */ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/css-feedback.js");
const base_glsp_tool_1 = __webpack_require__(/*! ./base-glsp-tool */ "./node_modules/@eclipse-glsp/client/lib/features/tools/base-glsp-tool.js");
/**
 * Tool to create connections in a Diagram, by selecting a source and target node.
 */
let EdgeCreationTool = EdgeCreationTool_1 = class EdgeCreationTool extends base_glsp_tool_1.BaseGLSPTool {
    get id() {
        return EdgeCreationTool_1.ID;
    }
    enable() {
        if (this.triggerAction === undefined) {
            throw new TypeError(`Could not enable tool ${this.id}.The triggerAction cannot be undefined.`);
        }
        this.creationToolMouseListener = new EdgeCreationToolMouseListener(this.triggerAction, this);
        this.mouseTool.register(this.creationToolMouseListener);
        this.feedbackEndMovingMouseListener = new creation_tool_feedback_1.FeedbackEdgeEndMovingMouseListener(this.anchorRegistry);
        this.mouseTool.register(this.feedbackEndMovingMouseListener);
        this.dispatchFeedback([(0, css_feedback_1.cursorFeedbackAction)(css_feedback_1.CursorCSS.OPERATION_NOT_ALLOWED)]);
    }
    disable() {
        this.mouseTool.deregister(this.creationToolMouseListener);
        this.mouseTool.deregister(this.feedbackEndMovingMouseListener);
        this.deregisterFeedback([creation_tool_feedback_1.RemoveFeedbackEdgeAction.create(), (0, css_feedback_1.cursorFeedbackAction)()]);
    }
    handle(action) {
        if (protocol_1.TriggerEdgeCreationAction.is(action)) {
            this.triggerAction = action;
            return sprotty_1.EnableToolsAction.create([this.id]);
        }
    }
};
EdgeCreationTool.ID = 'tool_create_edge';
__decorate([
    (0, inversify_1.inject)(sprotty_1.AnchorComputerRegistry),
    __metadata("design:type", sprotty_1.AnchorComputerRegistry)
], EdgeCreationTool.prototype, "anchorRegistry", void 0);
EdgeCreationTool = EdgeCreationTool_1 = __decorate([
    (0, inversify_1.injectable)()
], EdgeCreationTool);
exports.EdgeCreationTool = EdgeCreationTool;
let EdgeCreationToolMouseListener = class EdgeCreationToolMouseListener extends drag_aware_mouse_listener_1.DragAwareMouseListener {
    constructor(triggerAction, tool) {
        super();
        this.triggerAction = triggerAction;
        this.tool = tool;
        this.allowedTarget = false;
        this.proxyEdge = new sprotty_1.SEdge();
        this.proxyEdge.type = triggerAction.elementTypeId;
    }
    reinitialize() {
        this.source = undefined;
        this.target = undefined;
        this.currentTarget = undefined;
        this.allowedTarget = false;
        this.tool.dispatchFeedback([creation_tool_feedback_1.RemoveFeedbackEdgeAction.create()]);
    }
    nonDraggingMouseUp(_element, event) {
        const result = [];
        if (event.button === 0) {
            if (!this.isSourceSelected()) {
                if (this.currentTarget && this.allowedTarget) {
                    this.source = this.currentTarget.id;
                    this.tool.dispatchFeedback([
                        creation_tool_feedback_1.DrawFeedbackEdgeAction.create({ elementTypeId: this.triggerAction.elementTypeId, sourceId: this.source })
                    ]);
                }
            }
            else {
                if (this.currentTarget && this.allowedTarget) {
                    this.target = this.currentTarget.id;
                }
            }
            if (this.source && this.target) {
                result.push(protocol_1.CreateEdgeOperation.create({
                    elementTypeId: this.triggerAction.elementTypeId,
                    sourceElementId: this.source,
                    targetElementId: this.target,
                    args: this.triggerAction.args
                }));
                if (!(0, sprotty_1.isCtrlOrCmd)(event)) {
                    result.push(sprotty_1.EnableDefaultToolsAction.create());
                }
                else {
                    this.reinitialize();
                }
            }
        }
        else if (event.button === 2) {
            result.push(sprotty_1.EnableDefaultToolsAction.create());
        }
        return result;
    }
    isSourceSelected() {
        return this.source !== undefined;
    }
    isTargetSelected() {
        return this.target !== undefined;
    }
    mouseOver(target, event) {
        const newCurrentTarget = (0, sprotty_1.findParentByFeature)(target, sprotty_1.isConnectable);
        if (newCurrentTarget !== this.currentTarget) {
            this.currentTarget = newCurrentTarget;
            if (this.currentTarget) {
                if (!this.isSourceSelected()) {
                    this.allowedTarget = this.isAllowedSource(newCurrentTarget);
                }
                else if (!this.isTargetSelected()) {
                    this.allowedTarget = this.isAllowedTarget(newCurrentTarget);
                }
                if (this.allowedTarget) {
                    const action = !this.isSourceSelected()
                        ? (0, css_feedback_1.cursorFeedbackAction)(css_feedback_1.CursorCSS.EDGE_CREATION_SOURCE)
                        : (0, css_feedback_1.cursorFeedbackAction)(css_feedback_1.CursorCSS.EDGE_CREATION_TARGET);
                    return [action];
                }
            }
            return [(0, css_feedback_1.cursorFeedbackAction)(css_feedback_1.CursorCSS.OPERATION_NOT_ALLOWED)];
        }
        return [];
    }
    isAllowedSource(element) {
        return element !== undefined && (0, sprotty_1.isConnectable)(element) && element.canConnect(this.proxyEdge, 'source');
    }
    isAllowedTarget(element) {
        return element !== undefined && (0, sprotty_1.isConnectable)(element) && element.canConnect(this.proxyEdge, 'target');
    }
};
EdgeCreationToolMouseListener = __decorate([
    (0, inversify_1.injectable)(),
    __metadata("design:paramtypes", [Object, EdgeCreationTool])
], EdgeCreationToolMouseListener);
exports.EdgeCreationToolMouseListener = EdgeCreationToolMouseListener;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/tools/edge-edit-tool.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/tools/edge-edit-tool.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var EdgeEditTool_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EdgeEditTool = void 0;
/********************************************************************************
 * Copyright (c) 2019-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const drag_aware_mouse_listener_1 = __webpack_require__(/*! ../../base/drag-aware-mouse-listener */ "./node_modules/@eclipse-glsp/client/lib/base/drag-aware-mouse-listener.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/@eclipse-glsp/client/lib/base/types.js");
const smodel_util_1 = __webpack_require__(/*! ../../utils/smodel-util */ "./node_modules/@eclipse-glsp/client/lib/utils/smodel-util.js");
const model_1 = __webpack_require__(/*! ../reconnect/model */ "./node_modules/@eclipse-glsp/client/lib/features/reconnect/model.js");
const selection_service_1 = __webpack_require__(/*! ../select/selection-service */ "./node_modules/@eclipse-glsp/client/lib/features/select/selection-service.js");
const creation_tool_feedback_1 = __webpack_require__(/*! ../tool-feedback/creation-tool-feedback */ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/creation-tool-feedback.js");
const css_feedback_1 = __webpack_require__(/*! ../tool-feedback/css-feedback */ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/css-feedback.js");
const edge_edit_tool_feedback_1 = __webpack_require__(/*! ../tool-feedback/edge-edit-tool-feedback */ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/edge-edit-tool-feedback.js");
const base_glsp_tool_1 = __webpack_require__(/*! ./base-glsp-tool */ "./node_modules/@eclipse-glsp/client/lib/features/tools/base-glsp-tool.js");
let EdgeEditTool = EdgeEditTool_1 = class EdgeEditTool extends base_glsp_tool_1.BaseGLSPTool {
    get id() {
        return EdgeEditTool_1.ID;
    }
    enable() {
        this.edgeEditListener = new EdgeEditListener(this);
        this.mouseTool.register(this.edgeEditListener);
        this.selectionService.register(this.edgeEditListener);
        // install feedback move mouse listener for client-side move updates
        this.feedbackEdgeSourceMovingListener = new edge_edit_tool_feedback_1.FeedbackEdgeSourceMovingMouseListener(this.anchorRegistry);
        this.feedbackEdgeTargetMovingListener = new edge_edit_tool_feedback_1.FeedbackEdgeTargetMovingMouseListener(this.anchorRegistry);
        this.feedbackMovingListener = new edge_edit_tool_feedback_1.FeedbackEdgeRouteMovingMouseListener(this.edgeRouterRegistry, this.snapper);
    }
    registerFeedbackListeners() {
        this.mouseTool.register(this.feedbackMovingListener);
        this.mouseTool.register(this.feedbackEdgeSourceMovingListener);
        this.mouseTool.register(this.feedbackEdgeTargetMovingListener);
    }
    deregisterFeedbackListeners() {
        this.mouseTool.deregister(this.feedbackEdgeSourceMovingListener);
        this.mouseTool.deregister(this.feedbackEdgeTargetMovingListener);
        this.mouseTool.deregister(this.feedbackMovingListener);
    }
    disable() {
        this.edgeEditListener.reset();
        this.selectionService.deregister(this.edgeEditListener);
        this.deregisterFeedbackListeners();
        this.mouseTool.deregister(this.edgeEditListener);
    }
};
EdgeEditTool.ID = 'glsp.edge-edit-tool';
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.SelectionService),
    __metadata("design:type", selection_service_1.SelectionService)
], EdgeEditTool.prototype, "selectionService", void 0);
__decorate([
    (0, inversify_1.inject)(sprotty_1.AnchorComputerRegistry),
    __metadata("design:type", sprotty_1.AnchorComputerRegistry)
], EdgeEditTool.prototype, "anchorRegistry", void 0);
__decorate([
    (0, inversify_1.inject)(sprotty_1.EdgeRouterRegistry),
    (0, inversify_1.optional)(),
    __metadata("design:type", sprotty_1.EdgeRouterRegistry)
], EdgeEditTool.prototype, "edgeRouterRegistry", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.ISnapper),
    (0, inversify_1.optional)(),
    __metadata("design:type", Object)
], EdgeEditTool.prototype, "snapper", void 0);
EdgeEditTool = EdgeEditTool_1 = __decorate([
    (0, inversify_1.injectable)()
], EdgeEditTool);
exports.EdgeEditTool = EdgeEditTool;
class EdgeEditListener extends drag_aware_mouse_listener_1.DragAwareMouseListener {
    constructor(tool) {
        super();
        this.tool = tool;
    }
    isValidEdge(edge) {
        return edge !== undefined && edge.id !== (0, creation_tool_feedback_1.feedbackEdgeId)(edge.root) && (0, sprotty_1.isSelected)(edge);
    }
    setEdgeSelected(edge) {
        if (this.edge && this.edge.id !== edge.id) {
            // reset from a previously selected edge
            this.reset();
        }
        this.edge = edge;
        // note: order is important here as we want the reconnect handles to cover the routing handles
        const feedbackActions = [];
        if ((0, sprotty_1.canEditRouting)(edge)) {
            feedbackActions.push(edge_edit_tool_feedback_1.SwitchRoutingModeAction.create({ elementsToActivate: [this.edge.id] }));
        }
        if ((0, model_1.isReconnectable)(edge)) {
            feedbackActions.push(edge_edit_tool_feedback_1.ShowEdgeReconnectHandlesFeedbackAction.create(this.edge.id));
        }
        this.tool.dispatchFeedback(feedbackActions);
    }
    isEdgeSelected() {
        return this.edge !== undefined && (0, sprotty_1.isSelected)(this.edge);
    }
    setReconnectHandleSelected(edge, reconnectHandle) {
        if (this.edge && this.edge.target && this.edge.source) {
            if ((0, model_1.isSourceRoutingHandle)(edge, reconnectHandle)) {
                this.tool.dispatchFeedback([
                    edge_edit_tool_feedback_1.HideEdgeReconnectHandlesFeedbackAction.create(),
                    (0, css_feedback_1.cursorFeedbackAction)(css_feedback_1.CursorCSS.EDGE_RECONNECT),
                    edge_edit_tool_feedback_1.DrawFeedbackEdgeSourceAction.create({ elementTypeId: this.edge.type, targetId: this.edge.targetId })
                ]);
                this.reconnectMode = 'NEW_SOURCE';
            }
            else if ((0, model_1.isTargetRoutingHandle)(edge, reconnectHandle)) {
                this.tool.dispatchFeedback([
                    edge_edit_tool_feedback_1.HideEdgeReconnectHandlesFeedbackAction.create(),
                    (0, css_feedback_1.cursorFeedbackAction)(css_feedback_1.CursorCSS.EDGE_CREATION_TARGET),
                    creation_tool_feedback_1.DrawFeedbackEdgeAction.create({ elementTypeId: this.edge.type, sourceId: this.edge.sourceId })
                ]);
                this.reconnectMode = 'NEW_TARGET';
            }
        }
    }
    isReconnecting() {
        return this.reconnectMode !== undefined;
    }
    isReconnectingNewSource() {
        return this.reconnectMode === 'NEW_SOURCE';
    }
    setRoutingHandleSelected(edge, routingHandle) {
        if (this.edge && this.edge.target && this.edge.source) {
            this.routingHandle = routingHandle;
        }
    }
    requiresReconnect(sourceId, targetId) {
        return this.edge !== undefined && (this.edge.sourceId !== sourceId || this.edge.targetId !== targetId);
    }
    setNewConnectable(connectable) {
        this.newConnectable = connectable;
    }
    isReadyToReconnect() {
        return this.edge && this.isReconnecting() && this.newConnectable !== undefined;
    }
    isReadyToReroute() {
        return this.routingHandle !== undefined;
    }
    mouseDown(target, event) {
        const result = super.mouseDown(target, event);
        if (event.button === 0) {
            const reconnectHandle = (0, sprotty_1.findParentByFeature)(target, model_1.isReconnectHandle);
            const routingHandle = !reconnectHandle ? (0, sprotty_1.findParentByFeature)(target, smodel_util_1.isRoutingHandle) : undefined;
            const edge = (0, sprotty_1.findParentByFeature)(target, smodel_util_1.isRoutable);
            if (this.isEdgeSelected() && edge && reconnectHandle) {
                // PHASE 2 Reconnect: Select reconnect handle on selected edge
                this.setReconnectHandleSelected(edge, reconnectHandle);
            }
            else if (this.isEdgeSelected() && edge && routingHandle) {
                // PHASE 2 Reroute: Select routing handle on selected edge
                this.setRoutingHandleSelected(edge, routingHandle);
            }
            else if (this.isValidEdge(edge)) {
                // PHASE 1: Select edge
                this.tool.registerFeedbackListeners();
                this.setEdgeSelected(edge);
            }
        }
        else if (event.button === 2) {
            this.reset();
        }
        return result;
    }
    mouseMove(target, event) {
        const result = super.mouseMove(target, event);
        if (this.isMouseDrag) {
            // reset any selected connectables when we are dragging, maybe the user is just panning
            this.setNewConnectable(undefined);
        }
        return result;
    }
    mouseUp(target, event) {
        const result = super.mouseUp(target, event);
        if (!this.isReadyToReconnect() && !this.isReadyToReroute()) {
            return result;
        }
        if (this.edge && this.newConnectable) {
            const sourceElementId = this.isReconnectingNewSource() ? this.newConnectable.id : this.edge.sourceId;
            const targetElementId = this.isReconnectingNewSource() ? this.edge.targetId : this.newConnectable.id;
            if (this.requiresReconnect(sourceElementId, targetElementId)) {
                result.push(protocol_1.ReconnectEdgeOperation.create({ edgeElementId: this.edge.id, sourceElementId, targetElementId }));
            }
            this.reset();
        }
        else if (this.edge && this.routingHandle) {
            // we need to re-retrieve the edge as it might have changed due to a server update since we do not reset the state between
            // reroute actions
            const latestEdge = target.index.getById(this.edge.id);
            if (latestEdge && (0, smodel_util_1.isRoutable)(latestEdge)) {
                const newRoutingPoints = (0, smodel_util_1.calcElementAndRoutingPoints)(latestEdge, this.tool.edgeRouterRegistry);
                result.push(protocol_1.ChangeRoutingPointsOperation.create([newRoutingPoints]));
                this.routingHandle = undefined;
            }
        }
        return result;
    }
    mouseOver(target, _event) {
        if (this.edge && this.isReconnecting()) {
            const currentTarget = (0, sprotty_1.findParentByFeature)(target, sprotty_1.isConnectable);
            if (!this.newConnectable || currentTarget !== this.newConnectable) {
                this.setNewConnectable(currentTarget);
                if (currentTarget) {
                    if ((this.reconnectMode === 'NEW_SOURCE' && currentTarget.canConnect(this.edge, 'source')) ||
                        (this.reconnectMode === 'NEW_TARGET' && currentTarget.canConnect(this.edge, 'target'))) {
                        this.tool.dispatchFeedback([(0, css_feedback_1.cursorFeedbackAction)(css_feedback_1.CursorCSS.EDGE_RECONNECT)]);
                        return [];
                    }
                }
                this.tool.dispatchFeedback([(0, css_feedback_1.cursorFeedbackAction)(css_feedback_1.CursorCSS.OPERATION_NOT_ALLOWED)]);
            }
        }
        return [];
    }
    selectionChanged(root, selectedElements) {
        if (this.edge) {
            if (selectedElements.indexOf(this.edge.id) > -1) {
                // our active edge is still selected, nothing to do
                return;
            }
            if (this.isReconnecting()) {
                // we are reconnecting, so we may have clicked on a potential target
                return;
            }
            // try to find some other selected element and mark that active
            for (const elementId of selectedElements.reverse()) {
                const element = root.index.getById(elementId);
                if (element) {
                    const edge = (0, sprotty_1.findParentByFeature)(element, smodel_util_1.isRoutable);
                    if (this.isValidEdge(edge)) {
                        // PHASE 1: Select edge
                        this.setEdgeSelected(edge);
                        return;
                    }
                }
            }
            this.reset();
        }
    }
    reset() {
        this.resetFeedback();
        this.resetData();
    }
    resetData() {
        this.edge = undefined;
        this.reconnectMode = undefined;
        this.newConnectable = undefined;
        this.routingHandle = undefined;
    }
    resetFeedback() {
        const result = [];
        if (this.edge) {
            result.push(edge_edit_tool_feedback_1.SwitchRoutingModeAction.create({ elementsToDeactivate: [this.edge.id] }));
        }
        result.push(...[edge_edit_tool_feedback_1.HideEdgeReconnectHandlesFeedbackAction.create(), (0, css_feedback_1.cursorFeedbackAction)(), creation_tool_feedback_1.RemoveFeedbackEdgeAction.create()]);
        this.tool.deregisterFeedback(result);
        this.tool.deregisterFeedbackListeners();
    }
}


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/tools/enable-default-tools-on-focus-loss.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/tools/enable-default-tools-on-focus-loss.js ***!
  \****************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EnableDefaultToolsOnFocusLossHandler = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const focus_change_action_1 = __webpack_require__(/*! ../../base/actions/focus-change-action */ "./node_modules/@eclipse-glsp/client/lib/base/actions/focus-change-action.js");
/**
 * Action handler that enables the default tools when the diagram lost focus.
 * @see FocusTracker
 * @see FocusStateChangedAction
 */
let EnableDefaultToolsOnFocusLossHandler = class EnableDefaultToolsOnFocusLossHandler {
    handle(action) {
        if (focus_change_action_1.FocusStateChangedAction.is(action) && !action.hasFocus) {
            return sprotty_1.EnableDefaultToolsAction.create();
        }
    }
};
EnableDefaultToolsOnFocusLossHandler = __decorate([
    (0, inversify_1.injectable)()
], EnableDefaultToolsOnFocusLossHandler);
exports.EnableDefaultToolsOnFocusLossHandler = EnableDefaultToolsOnFocusLossHandler;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/tools/glsp-manhattan-edge-router.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/tools/glsp-manhattan-edge-router.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2022-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GLSPManhattanEdgeRouter = void 0;
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
class GLSPManhattanEdgeRouter extends sprotty_1.ManhattanEdgeRouter {
    applyInnerHandleMoves(edge, moves) {
        const route = this.route(edge);
        const routingPoints = edge.routingPoints;
        const minimalPointDistance = this.getOptions(edge).minimalPointDistance;
        moves.forEach(move => {
            const handle = move.handle;
            const index = handle.pointIndex;
            const correctedX = this.correctX(routingPoints, index, move.toPosition.x, minimalPointDistance);
            const correctedY = this.correctY(routingPoints, index, move.toPosition.y, minimalPointDistance);
            switch (handle.kind) {
                case 'manhattan-50%':
                    if (index < 0) {
                        if (routingPoints.length === 0) {
                            routingPoints.push({ x: correctedX, y: correctedY });
                            move.handle.pointIndex = 0;
                        }
                        else if ((0, protocol_1.almostEquals)(route[0].x, route[1].x)) {
                            this.alignX(routingPoints, 0, correctedX);
                        }
                        else {
                            this.alignY(routingPoints, 0, correctedY);
                        }
                    }
                    else if (index < routingPoints.length - 1) {
                        if ((0, protocol_1.almostEquals)(routingPoints[index].x, routingPoints[index + 1].x)) {
                            this.alignX(routingPoints, index, correctedX);
                            this.alignX(routingPoints, index + 1, correctedX);
                        }
                        else {
                            this.alignY(routingPoints, index, correctedY);
                            this.alignY(routingPoints, index + 1, correctedY);
                        }
                    }
                    else {
                        if ((0, protocol_1.almostEquals)(route[route.length - 2].x, route[route.length - 1].x)) {
                            this.alignX(routingPoints, routingPoints.length - 1, correctedX);
                        }
                        else {
                            this.alignY(routingPoints, routingPoints.length - 1, correctedY);
                        }
                    }
                    break;
            }
        });
    }
}
exports.GLSPManhattanEdgeRouter = GLSPManhattanEdgeRouter;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/tools/marquee-behavior.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/tools/marquee-behavior.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2021-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MarqueeUtil = void 0;
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const marquee_tool_feedback_1 = __webpack_require__(/*! ../tool-feedback/marquee-tool-feedback */ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/marquee-tool-feedback.js");
class MarqueeUtil {
    constructor(marqueeBehavior) {
        if (marqueeBehavior) {
            this.marqueeBehavior = marqueeBehavior;
        }
        else {
            this.marqueeBehavior = { entireElement: false, entireEdge: false };
        }
    }
    updateStartPoint(position) {
        this.startPoint = position;
    }
    updateCurrentPoint(position) {
        this.currentPoint = position;
    }
    drawMarqueeAction() {
        return marquee_tool_feedback_1.DrawMarqueeAction.create({ startPoint: this.startPoint, endPoint: this.currentPoint });
    }
    isEdgePathMarked(path) {
        if (!path) {
            return false;
        }
        const points = path
            .split(/M|L/)
            .filter(p => p)
            .map(p => {
            const coord = p.split(',');
            return { x: parseInt(coord[0], 10), y: parseInt(coord[1], 10) };
        });
        return this.isEdgeMarked(points);
    }
    isEdgeMarked(points) {
        return this.marqueeBehavior.entireEdge ? this.isEntireEdgeMarked(points) : this.isPartOfEdgeMarked(points);
    }
    isNodeMarked(elementBounds) {
        const horizontallyIn = this.startPoint.x < this.currentPoint.x
            ? this.isElementBetweenXAxis(elementBounds, this.startPoint.x, this.currentPoint.x)
            : this.isElementBetweenXAxis(elementBounds, this.currentPoint.x, this.startPoint.x);
        const verticallyIn = this.startPoint.y < this.currentPoint.y
            ? this.isElementBetweenYAxis(elementBounds, this.startPoint.y, this.currentPoint.y)
            : this.isElementBetweenYAxis(elementBounds, this.currentPoint.y, this.startPoint.y);
        return horizontallyIn && verticallyIn;
    }
    isEntireEdgeMarked(points) {
        for (let i = 0; i < points.length; i++) {
            if (!this.pointInRect(points[i])) {
                return false;
            }
        }
        return true;
    }
    isPartOfEdgeMarked(points) {
        for (let i = 0; i < points.length - 1; i++) {
            if (this.isLineMarked(points[i], points[i + 1])) {
                return true;
            }
        }
        return false;
    }
    isLineMarked(point1, point2) {
        const line = new sprotty_1.PointToPointLine(point1, point2);
        return (this.pointInRect(point1) ||
            this.pointInRect(point2) ||
            this.lineIntersect(line, this.startPoint, { x: this.startPoint.x, y: this.currentPoint.y }) ||
            this.lineIntersect(line, this.startPoint, { x: this.currentPoint.x, y: this.startPoint.y }) ||
            this.lineIntersect(line, { x: this.currentPoint.x, y: this.startPoint.y }, this.currentPoint) ||
            this.lineIntersect(line, { x: this.startPoint.x, y: this.currentPoint.y }, this.currentPoint));
    }
    lineIntersect(line, p1, p2) {
        return line.intersection(new sprotty_1.PointToPointLine(p1, p2)) !== undefined;
    }
    pointInRect(point) {
        const boolX = this.startPoint.x <= this.currentPoint.x
            ? this.isBetween(point.x, this.startPoint.x, this.currentPoint.x)
            : this.isBetween(point.x, this.currentPoint.x, this.startPoint.x);
        const boolY = this.startPoint.y <= this.currentPoint.y
            ? this.isBetween(point.y, this.startPoint.y, this.currentPoint.y)
            : this.isBetween(point.y, this.currentPoint.y, this.startPoint.y);
        return boolX && boolY;
    }
    isElementBetweenXAxis(elementBounds, marqueeLeft, marqueeRight) {
        const leftEdge = this.isBetween(elementBounds.x, marqueeLeft, marqueeRight);
        const rightEdge = this.isBetween(elementBounds.x + elementBounds.width, marqueeLeft, marqueeRight);
        if (this.marqueeBehavior.entireElement) {
            return leftEdge && rightEdge;
        }
        return (leftEdge ||
            rightEdge ||
            this.isBetween(marqueeLeft, elementBounds.x, elementBounds.x + elementBounds.width) ||
            this.isBetween(marqueeRight, elementBounds.x, elementBounds.x + elementBounds.width));
    }
    isElementBetweenYAxis(elementBounds, marqueeTop, marqueeBottom) {
        const topEdge = this.isBetween(elementBounds.y, marqueeTop, marqueeBottom);
        const bottomEdge = this.isBetween(elementBounds.y + elementBounds.height, marqueeTop, marqueeBottom);
        if (this.marqueeBehavior.entireElement) {
            return topEdge && bottomEdge;
        }
        return (topEdge ||
            bottomEdge ||
            this.isBetween(marqueeTop, elementBounds.y, elementBounds.y + elementBounds.height) ||
            this.isBetween(marqueeBottom, elementBounds.y, elementBounds.y + elementBounds.height));
    }
    isBetween(x, lower, upper) {
        return lower <= x && x <= upper;
    }
}
exports.MarqueeUtil = MarqueeUtil;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/tools/marquee-mouse-tool.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/tools/marquee-mouse-tool.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var MarqueeMouseTool_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ShiftKeyListener = exports.MarqueeMouseListener = exports.MarqueeMouseTool = void 0;
/********************************************************************************
 * Copyright (c) 2021-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const dom_helper_1 = __webpack_require__(/*! sprotty/lib/base/views/dom-helper */ "./node_modules/sprotty/lib/base/views/dom-helper.js");
const drag_aware_mouse_listener_1 = __webpack_require__(/*! ../../base/drag-aware-mouse-listener */ "./node_modules/@eclipse-glsp/client/lib/base/drag-aware-mouse-listener.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/@eclipse-glsp/client/lib/base/types.js");
const viewpoint_util_1 = __webpack_require__(/*! ../../utils/viewpoint-util */ "./node_modules/@eclipse-glsp/client/lib/utils/viewpoint-util.js");
const css_feedback_1 = __webpack_require__(/*! ../tool-feedback/css-feedback */ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/css-feedback.js");
const marquee_tool_feedback_1 = __webpack_require__(/*! ../tool-feedback/marquee-tool-feedback */ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/marquee-tool-feedback.js");
const base_glsp_tool_1 = __webpack_require__(/*! ./base-glsp-tool */ "./node_modules/@eclipse-glsp/client/lib/features/tools/base-glsp-tool.js");
const marquee_behavior_1 = __webpack_require__(/*! ./marquee-behavior */ "./node_modules/@eclipse-glsp/client/lib/features/tools/marquee-behavior.js");
let MarqueeMouseTool = MarqueeMouseTool_1 = class MarqueeMouseTool extends base_glsp_tool_1.BaseGLSPTool {
    constructor() {
        super(...arguments);
        this.shiftKeyListener = new ShiftKeyListener();
    }
    get id() {
        return MarqueeMouseTool_1.ID;
    }
    enable() {
        this.marqueeMouseListener = new MarqueeMouseListener(this.domHelper, this.editorContext.modelRoot, this.marqueeBehavior);
        this.mouseTool.register(this.marqueeMouseListener);
        this.keyTool.register(this.shiftKeyListener);
        this.dispatchFeedback([(0, css_feedback_1.cursorFeedbackAction)(css_feedback_1.CursorCSS.MARQUEE)]);
    }
    disable() {
        this.mouseTool.deregister(this.marqueeMouseListener);
        this.keyTool.deregister(this.shiftKeyListener);
        this.deregisterFeedback([(0, css_feedback_1.cursorFeedbackAction)()]);
    }
};
MarqueeMouseTool.ID = 'glsp.marquee-mouse-tool';
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.DOMHelper),
    __metadata("design:type", dom_helper_1.DOMHelper)
], MarqueeMouseTool.prototype, "domHelper", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.IMarqueeBehavior),
    (0, inversify_1.optional)(),
    __metadata("design:type", Object)
], MarqueeMouseTool.prototype, "marqueeBehavior", void 0);
MarqueeMouseTool = MarqueeMouseTool_1 = __decorate([
    (0, inversify_1.injectable)()
], MarqueeMouseTool);
exports.MarqueeMouseTool = MarqueeMouseTool;
class MarqueeMouseListener extends drag_aware_mouse_listener_1.DragAwareMouseListener {
    constructor(domHelper, root, marqueeBehavior) {
        super();
        this.isActive = false;
        this.domHelper = domHelper;
        this.marqueeUtil = new marquee_behavior_1.MarqueeUtil(marqueeBehavior);
        this.nodes = Array.from(root.index
            .all()
            .map(e => e)
            .filter(e => (0, sprotty_1.isSelectable)(e))
            .filter(e => e instanceof sprotty_1.SNode));
        const sEdges = Array.from(root.index
            .all()
            .filter(e => e instanceof sprotty_1.SEdge)
            .filter(e => (0, sprotty_1.isSelectable)(e))
            .map(e => e.id));
        this.edges = Array.from(document.querySelectorAll('g')).filter(e => sEdges.includes(this.domHelper.findSModelIdByDOMElement(e)));
    }
    mouseDown(target, event) {
        this.isActive = true;
        this.marqueeUtil.updateStartPoint((0, viewpoint_util_1.getAbsolutePosition)(target, event));
        if (event.ctrlKey) {
            this.previouslySelected = Array.from(target.root.index
                .all()
                .map(e => e)
                .filter(e => (0, sprotty_1.isSelected)(e))
                .map(e => e.id));
        }
        return [];
    }
    mouseMove(target, event) {
        this.marqueeUtil.updateCurrentPoint((0, viewpoint_util_1.getAbsolutePosition)(target, event));
        if (this.isActive) {
            const nodeIdsSelected = this.nodes.filter(e => this.marqueeUtil.isNodeMarked((0, viewpoint_util_1.toAbsoluteBounds)(e))).map(e => e.id);
            const edgeIdsSelected = this.edges.filter(e => this.isEdgeMarked(e)).map(e => this.domHelper.findSModelIdByDOMElement(e));
            const selected = nodeIdsSelected.concat(edgeIdsSelected);
            return [
                protocol_1.SelectAction.create({ deselectedElementsIDs: Array.from(target.root.index.all().map(e => e.id)) }),
                protocol_1.SelectAction.create({ selectedElementsIDs: selected.concat(this.previouslySelected) }),
                this.marqueeUtil.drawMarqueeAction()
            ];
        }
        return [];
    }
    mouseUp(target, event) {
        this.isActive = false;
        if (event.shiftKey) {
            return [marquee_tool_feedback_1.RemoveMarqueeAction.create()];
        }
        return [marquee_tool_feedback_1.RemoveMarqueeAction.create(), sprotty_1.EnableDefaultToolsAction.create()];
    }
    isEdgeMarked(element) {
        if (!element.getAttribute('transform')) {
            if (element.children[0]) {
                const path = element.children[0].getAttribute('d');
                return this.marqueeUtil.isEdgePathMarked(path);
            }
        }
        return false;
    }
}
exports.MarqueeMouseListener = MarqueeMouseListener;
let ShiftKeyListener = class ShiftKeyListener extends sprotty_1.KeyListener {
    keyUp(element, event) {
        if (event.shiftKey) {
            return [];
        }
        return [marquee_tool_feedback_1.RemoveMarqueeAction.create(), sprotty_1.EnableDefaultToolsAction.create()];
    }
};
ShiftKeyListener = __decorate([
    (0, inversify_1.injectable)()
], ShiftKeyListener);
exports.ShiftKeyListener = ShiftKeyListener;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/tools/marquee-tool.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/tools/marquee-tool.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var MarqueeTool_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MarqueeKeyListener = exports.MarqueeTool = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const base_glsp_tool_1 = __webpack_require__(/*! ../tools/base-glsp-tool */ "./node_modules/@eclipse-glsp/client/lib/features/tools/base-glsp-tool.js");
const marquee_mouse_tool_1 = __webpack_require__(/*! ./marquee-mouse-tool */ "./node_modules/@eclipse-glsp/client/lib/features/tools/marquee-mouse-tool.js");
let MarqueeTool = MarqueeTool_1 = class MarqueeTool extends base_glsp_tool_1.BaseGLSPTool {
    constructor() {
        super(...arguments);
        this.marqueeKeyListener = new MarqueeKeyListener();
    }
    get id() {
        return MarqueeTool_1.ID;
    }
    enable() {
        this.keyTool.register(this.marqueeKeyListener);
    }
    disable() {
        this.keyTool.deregister(this.marqueeKeyListener);
    }
};
MarqueeTool.ID = 'glsp.marquee-tool';
__decorate([
    (0, inversify_1.inject)(sprotty_1.KeyTool),
    __metadata("design:type", sprotty_1.KeyTool)
], MarqueeTool.prototype, "keytool", void 0);
MarqueeTool = MarqueeTool_1 = __decorate([
    (0, inversify_1.injectable)()
], MarqueeTool);
exports.MarqueeTool = MarqueeTool;
let MarqueeKeyListener = class MarqueeKeyListener extends sprotty_1.KeyListener {
    keyDown(element, event) {
        if (event.shiftKey) {
            return [sprotty_1.EnableToolsAction.create([marquee_mouse_tool_1.MarqueeMouseTool.ID])];
        }
        return [];
    }
};
MarqueeKeyListener = __decorate([
    (0, inversify_1.injectable)()
], MarqueeKeyListener);
exports.MarqueeKeyListener = MarqueeKeyListener;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/tools/model.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/tools/model.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MarqueeNode = void 0;
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
class MarqueeNode extends sprotty_1.RectangularNode {
}
exports.MarqueeNode = MarqueeNode;
MarqueeNode.DEFAULT_FEATURES = [sprotty_1.boundsFeature];


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/tools/node-creation-tool.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/tools/node-creation-tool.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var NodeCreationTool_1;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.NodeCreationToolMouseListener = exports.NodeCreationTool = void 0;
/********************************************************************************
 * Copyright (c) 2020-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const drag_aware_mouse_listener_1 = __webpack_require__(/*! ../../base/drag-aware-mouse-listener */ "./node_modules/@eclipse-glsp/client/lib/base/drag-aware-mouse-listener.js");
const viewpoint_util_1 = __webpack_require__(/*! ../../utils/viewpoint-util */ "./node_modules/@eclipse-glsp/client/lib/utils/viewpoint-util.js");
const model_1 = __webpack_require__(/*! ../hints/model */ "./node_modules/@eclipse-glsp/client/lib/features/hints/model.js");
const css_feedback_1 = __webpack_require__(/*! ../tool-feedback/css-feedback */ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/css-feedback.js");
const base_glsp_tool_1 = __webpack_require__(/*! ./base-glsp-tool */ "./node_modules/@eclipse-glsp/client/lib/features/tools/base-glsp-tool.js");
let NodeCreationTool = NodeCreationTool_1 = class NodeCreationTool extends base_glsp_tool_1.BaseGLSPTool {
    get id() {
        return NodeCreationTool_1.ID;
    }
    enable() {
        if (this.triggerAction === undefined) {
            throw new TypeError(`Could not enable tool ${this.id}.The triggerAction cannot be undefined.`);
        }
        this.creationToolMouseListener = new NodeCreationToolMouseListener(this.triggerAction, this);
        this.mouseTool.register(this.creationToolMouseListener);
        this.dispatchFeedback([(0, css_feedback_1.cursorFeedbackAction)(css_feedback_1.CursorCSS.NODE_CREATION)]);
    }
    disable() {
        this.mouseTool.deregister(this.creationToolMouseListener);
        this.deregisterFeedback([(0, css_feedback_1.cursorFeedbackAction)()]);
    }
    handle(action) {
        if (protocol_1.TriggerNodeCreationAction.is(action)) {
            this.triggerAction = action;
            return sprotty_1.EnableToolsAction.create([this.id]);
        }
    }
};
NodeCreationTool.ID = 'tool_create_node';
__decorate([
    (0, inversify_1.inject)(sprotty_1.TYPES.ISnapper),
    (0, inversify_1.optional)(),
    __metadata("design:type", Object)
], NodeCreationTool.prototype, "snapper", void 0);
NodeCreationTool = NodeCreationTool_1 = __decorate([
    (0, inversify_1.injectable)()
], NodeCreationTool);
exports.NodeCreationTool = NodeCreationTool;
let NodeCreationToolMouseListener = class NodeCreationToolMouseListener extends drag_aware_mouse_listener_1.DragAwareMouseListener {
    constructor(triggerAction, tool) {
        super();
        this.triggerAction = triggerAction;
        this.tool = tool;
    }
    creationAllowed(elementTypeId) {
        return this.container && this.container.isContainableElement(elementTypeId);
    }
    get elementTypeId() {
        return this.triggerAction.elementTypeId;
    }
    nonDraggingMouseUp(target, event) {
        const result = [];
        if (this.creationAllowed(this.elementTypeId)) {
            const containerId = this.container ? this.container.id : undefined;
            let location = (0, viewpoint_util_1.getAbsolutePosition)(target, event);
            if (this.tool.snapper) {
                // Create a 0-bounds proxy element for snapping
                const elementProxy = new sprotty_1.SNode();
                elementProxy.size = { width: 0, height: 0 };
                location = this.tool.snapper.snap(location, elementProxy);
            }
            result.push(protocol_1.CreateNodeOperation.create(this.elementTypeId, { location, containerId, args: this.triggerAction.args }));
            if (!(0, sprotty_1.isCtrlOrCmd)(event)) {
                result.push(sprotty_1.EnableDefaultToolsAction.create());
            }
        }
        return result;
    }
    mouseOver(target, event) {
        const currentContainer = (0, sprotty_1.findParentByFeature)(target, model_1.isContainable);
        if (!this.container || currentContainer !== this.container) {
            this.container = currentContainer;
            const feedback = this.creationAllowed(this.elementTypeId)
                ? (0, css_feedback_1.cursorFeedbackAction)(css_feedback_1.CursorCSS.NODE_CREATION)
                : (0, css_feedback_1.cursorFeedbackAction)(css_feedback_1.CursorCSS.OPERATION_NOT_ALLOWED);
            this.tool.dispatchFeedback([feedback]);
        }
        return [];
    }
};
NodeCreationToolMouseListener = __decorate([
    (0, inversify_1.injectable)(),
    __metadata("design:paramtypes", [Object, NodeCreationTool])
], NodeCreationToolMouseListener);
exports.NodeCreationToolMouseListener = NodeCreationToolMouseListener;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/tools/view.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/tools/view.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MarqueeView = void 0;
/********************************************************************************
 * Copyright (c) 2021-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
// eslint-disable-next-line @typescript-eslint/no-unused-vars
const JSX = { createElement: sprotty_1.svg };
let MarqueeView = class MarqueeView extends sprotty_1.RectangularNodeView {
    render(node, context) {
        const graph = (JSX.createElement("g", null,
            JSX.createElement("rect", { "class-sprotty-node": true, "class-marquee": true, x: node.startPoint.x - node.endPoint.x <= 0 ? node.startPoint.x : node.endPoint.x, y: node.startPoint.y - node.endPoint.y <= 0 ? node.startPoint.y : node.endPoint.y, rx: 0, ry: 0, width: Math.abs(node.startPoint.x - node.endPoint.x), height: Math.abs(node.startPoint.y - node.endPoint.y) })));
        return graph;
    }
};
MarqueeView = __decorate([
    (0, inversify_1.injectable)()
], MarqueeView);
exports.MarqueeView = MarqueeView;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/validation/di.config.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/validation/di.config.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.markerNavigatorContextMenuModule = exports.markerNavigatorModule = exports.validationModule = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/@eclipse-glsp/client/lib/base/types.js");
const marker_navigator_1 = __webpack_require__(/*! ./marker-navigator */ "./node_modules/@eclipse-glsp/client/lib/features/validation/marker-navigator.js");
const validate_1 = __webpack_require__(/*! ./validate */ "./node_modules/@eclipse-glsp/client/lib/features/validation/validate.js");
exports.validationModule = new inversify_1.ContainerModule((bind, _unbind, isBound) => {
    const context = { bind, isBound };
    (0, sprotty_1.configureActionHandler)(context, protocol_1.SetMarkersAction.KIND, validate_1.SetMarkersActionHandler);
    (0, sprotty_1.configureCommand)(context, validate_1.ApplyMarkersCommand);
    (0, sprotty_1.configureCommand)(context, validate_1.DeleteMarkersCommand);
    bind(validate_1.ValidationFeedbackEmitter).toSelf().inSingletonScope();
});
exports.markerNavigatorModule = new inversify_1.ContainerModule((bind, _unbind, isBound) => {
    bind(marker_navigator_1.SModelElementComparator).to(marker_navigator_1.LeftToRightTopToBottomComparator).inSingletonScope();
    bind(marker_navigator_1.MarkerNavigator).toSelf().inSingletonScope();
    (0, sprotty_1.configureActionHandler)({ bind, isBound }, marker_navigator_1.NavigateToMarkerAction.KIND, marker_navigator_1.NavigateToMarkerActionHandler);
});
/**
 * This module is not required if the diagram is deployed in Theia but only intended to be used
 * in a standalone deployment of GLSP. If the GLSP diagram is in Theia use the Theia-native
 * `registerMarkerNavigationCommands()` in `glsp-theia-integration` instead.
 */
exports.markerNavigatorContextMenuModule = new inversify_1.ContainerModule(bind => {
    (0, protocol_1.bindAsService)(bind, types_1.TYPES.IContextMenuProvider, marker_navigator_1.MarkerNavigatorContextMenuItemProvider);
    (0, protocol_1.bindAsService)(bind, types_1.TYPES.KeyListener, marker_navigator_1.MarkerNavigatorKeyListener);
});


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/validation/issue-marker.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/validation/issue-marker.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getSeverity = exports.createSIssue = exports.getSIssueMarker = exports.getOrCreateSIssueMarker = exports.GIssueMarker = void 0;
/********************************************************************************
 * Copyright (c) 2019-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
class GIssueMarker extends sprotty_1.SIssueMarker {
    constructor() {
        super();
        this.issues = [];
        this.type = 'marker';
        this.features = new Set(sprotty_1.SDecoration.DEFAULT_FEATURES);
    }
    computeProjectionCssClasses() {
        const severityCss = getSeverity(this);
        this.projectionCssClasses = ['sprotty-issue', 'sprotty-' + severityCss];
    }
}
exports.GIssueMarker = GIssueMarker;
/**
 * Retrieves the `SIssueMarker` contained by the provided model element as
 * direct child or a newly instantiated `SIssueMarker` if no child
 * `SIssueMarker` exists.
 * @param modelElement for which the `SIssueMarker` should be retrieved or created.
 * @returns the child `SIssueMarker` or a new `SIssueMarker` if no such child exists.
 */
function getOrCreateSIssueMarker(modelElement) {
    let issueMarker;
    issueMarker = getSIssueMarker(modelElement);
    if (issueMarker === undefined) {
        issueMarker = new GIssueMarker();
        if ((0, sprotty_1.isBoundsAware)(modelElement)) {
            issueMarker.projectedBounds = modelElement.parentToLocal(modelElement.bounds);
        }
        modelElement.add(issueMarker);
    }
    return issueMarker;
}
exports.getOrCreateSIssueMarker = getOrCreateSIssueMarker;
/**
 * Retrieves the `SIssueMarker` contained by the provided model element as
 * direct child or `undefined` if such an `SIssueMarker` does not exist.
 * @param modelElement for which the `SIssueMarker` should be retrieved.
 * @returns the child `SIssueMarker` or `undefined` if no such child exists.
 */
function getSIssueMarker(modelElement) {
    let issueMarker;
    for (const child of modelElement.children) {
        if (child instanceof GIssueMarker) {
            issueMarker = child;
        }
    }
    return issueMarker;
}
exports.getSIssueMarker = getSIssueMarker;
/**
 * Creates an `SIssue` with `severity` and `message` set according to
 * the `kind` and `description` of the provided `Marker`.
 * @param marker `Marker` for that an `SIssue` should be created.
 * @returns the created `SIssue`.
 */
function createSIssue(marker, parent) {
    const issue = new sprotty_1.SIssue();
    issue.message = marker.description;
    switch (marker.kind) {
        case protocol_1.MarkerKind.ERROR: {
            issue.severity = 'error';
            break;
        }
        case protocol_1.MarkerKind.INFO: {
            issue.severity = 'info';
            break;
        }
        case protocol_1.MarkerKind.WARNING: {
            issue.severity = 'warning';
            break;
        }
    }
    return issue;
}
exports.createSIssue = createSIssue;
function getSeverity(marker) {
    let currentSeverity = 'info';
    for (const severity of marker.issues.map(s => s.severity)) {
        if (severity === 'error') {
            return severity;
        }
        if (severity === 'warning' && currentSeverity === 'info') {
            currentSeverity = severity;
        }
    }
    return currentSeverity;
}
exports.getSeverity = getSeverity;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/validation/marker-navigator.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/validation/marker-navigator.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MarkerNavigatorKeyListener = exports.MarkerNavigatorContextMenuItemProvider = exports.NavigateToMarkerActionHandler = exports.MarkerNavigator = exports.LeftToRightTopToBottomComparator = exports.SModelElementComparator = exports.NavigateToMarkerAction = void 0;
/********************************************************************************
 * Copyright (c) 2020-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const keyboard_1 = __webpack_require__(/*! sprotty/lib/utils/keyboard */ "./node_modules/sprotty/lib/utils/keyboard.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/@eclipse-glsp/client/lib/base/types.js");
const marker_1 = __webpack_require__(/*! ../../utils/marker */ "./node_modules/@eclipse-glsp/client/lib/utils/marker.js");
const smodel_util_1 = __webpack_require__(/*! ../../utils/smodel-util */ "./node_modules/@eclipse-glsp/client/lib/utils/smodel-util.js");
const selection_service_1 = __webpack_require__(/*! ../select/selection-service */ "./node_modules/@eclipse-glsp/client/lib/features/select/selection-service.js");
var NavigateToMarkerAction;
(function (NavigateToMarkerAction) {
    NavigateToMarkerAction.KIND = 'navigateToMarker';
    function is(object) {
        return protocol_1.Action.hasKind(object, NavigateToMarkerAction.KIND) && (0, protocol_1.hasStringProp)(object, 'direction') && (0, protocol_1.hasArrayProp)(object, 'severities');
    }
    NavigateToMarkerAction.is = is;
    function create(options) {
        return Object.assign({ kind: NavigateToMarkerAction.KIND, direction: 'next', severities: MarkerNavigator.ALL_SEVERITIES }, options);
    }
    NavigateToMarkerAction.create = create;
})(NavigateToMarkerAction = exports.NavigateToMarkerAction || (exports.NavigateToMarkerAction = {}));
class SModelElementComparator {
    compare(_one, _other) {
        return 0;
    }
}
exports.SModelElementComparator = SModelElementComparator;
/** Specifies the order of two selectable and bounds-aware elements left-to-right and top-to-bottom. */
let LeftToRightTopToBottomComparator = class LeftToRightTopToBottomComparator {
    compare(one, other) {
        const boundsOne = (0, sprotty_1.findParentByFeature)(one, smodel_util_1.isSelectableAndBoundsAware);
        const boundsOther = (0, sprotty_1.findParentByFeature)(other, smodel_util_1.isSelectableAndBoundsAware);
        if (boundsOne && boundsOther) {
            if (boundsOne.bounds.y !== boundsOther.bounds.y) {
                return boundsOne.bounds.y - boundsOther.bounds.y;
            }
            if (boundsOne.bounds.x !== boundsOther.bounds.x) {
                return boundsOne.bounds.x - boundsOther.bounds.x;
            }
        }
        return 0;
    }
};
LeftToRightTopToBottomComparator = __decorate([
    (0, inversify_1.injectable)()
], LeftToRightTopToBottomComparator);
exports.LeftToRightTopToBottomComparator = LeftToRightTopToBottomComparator;
/**
 * Specifies the next/previous marker in a graph model.
 *
 * This navigator uses a `MarkerComparator` to determine the order of markers. It can also return next/previous
 */
let MarkerNavigator = class MarkerNavigator {
    next(root, current, predicate = marker_1.MarkerPredicates.ALL) {
        const markers = this.getMarkers(root, predicate);
        if (current === undefined) {
            return markers.length > 0 ? markers[0] : undefined;
        }
        return markers[this.getNextIndex(current, markers) % markers.length];
    }
    previous(root, current, predicate = marker_1.MarkerPredicates.ALL) {
        const markers = this.getMarkers(root, predicate);
        if (current === undefined) {
            return markers.length > 0 ? markers[0] : undefined;
        }
        return markers[this.getPreviousIndex(current, markers) % markers.length];
    }
    getMarkers(root, predicate) {
        const markers = (0, marker_1.collectIssueMarkers)(root);
        return markers.filter(predicate).sort(this.markerComparator.compare);
    }
    getNextIndex(current, markers) {
        for (let index = 0; index < markers.length; index++) {
            if (this.markerComparator.compare(markers[index], current) > 0) {
                return index;
            }
        }
        return 0;
    }
    getPreviousIndex(current, markers) {
        for (let index = markers.length - 1; index >= 0; index--) {
            if (this.markerComparator.compare(markers[index], current) < 0) {
                return index;
            }
        }
        return markers.length - 1;
    }
};
MarkerNavigator.ALL_SEVERITIES = ['error', 'warning', 'info'];
__decorate([
    (0, inversify_1.inject)(SModelElementComparator),
    __metadata("design:type", SModelElementComparator)
], MarkerNavigator.prototype, "markerComparator", void 0);
MarkerNavigator = __decorate([
    (0, inversify_1.injectable)()
], MarkerNavigator);
exports.MarkerNavigator = MarkerNavigator;
let NavigateToMarkerActionHandler = class NavigateToMarkerActionHandler {
    handle(action) {
        const selected = this.getSelectedElements(action);
        const target = this.getTarget(action, selected);
        const selectableTarget = target ? (0, sprotty_1.findParentByFeature)(target, sprotty_1.isSelectable) : undefined;
        if (selectableTarget) {
            const deselectedElementsIDs = selected.map(e => e.id).filter(id => id !== selectableTarget.id);
            this.actionDispatcher.dispatch(protocol_1.SelectAction.create({ selectedElementsIDs: [selectableTarget.id], deselectedElementsIDs }));
            this.actionDispatcher.dispatch(protocol_1.CenterAction.create([selectableTarget.id]));
        }
    }
    getSelectedElements(action) {
        if (action.selectedElementIds && action.selectedElementIds.length > 0) {
            return (0, smodel_util_1.getElements)(this.selectionService.getModelRoot().index, action.selectedElementIds, sprotty_1.isSelectable);
        }
        return this.selectionService.getSelectedElements();
    }
    getTarget(action, selected) {
        const root = this.selectionService.getModelRoot();
        const target = selected.sort(this.markerComparator.compare).find(sprotty_1.isBoundsAware);
        if (action.direction === 'previous') {
            return this.markerNavigator.previous(root, target, marker => this.matchesSeverities(action, marker));
        }
        else {
            return this.markerNavigator.next(root, target, marker => this.matchesSeverities(action, marker));
        }
    }
    matchesSeverities(action, marker) {
        return marker.issues.find(issue => action.severities.includes(issue.severity)) !== undefined;
    }
};
__decorate([
    (0, inversify_1.inject)(SModelElementComparator),
    __metadata("design:type", SModelElementComparator)
], NavigateToMarkerActionHandler.prototype, "markerComparator", void 0);
__decorate([
    (0, inversify_1.inject)(MarkerNavigator),
    __metadata("design:type", MarkerNavigator)
], NavigateToMarkerActionHandler.prototype, "markerNavigator", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.SelectionService),
    __metadata("design:type", selection_service_1.SelectionService)
], NavigateToMarkerActionHandler.prototype, "selectionService", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.IActionDispatcher),
    __metadata("design:type", sprotty_1.ActionDispatcher)
], NavigateToMarkerActionHandler.prototype, "actionDispatcher", void 0);
NavigateToMarkerActionHandler = __decorate([
    (0, inversify_1.injectable)()
], NavigateToMarkerActionHandler);
exports.NavigateToMarkerActionHandler = NavigateToMarkerActionHandler;
let MarkerNavigatorContextMenuItemProvider = class MarkerNavigatorContextMenuItemProvider {
    getItems(root, lastMousePosition) {
        const selectedElementIds = Array.from(this.selectionService.getSelectedElementIDs());
        const hasMarkers = (0, marker_1.collectIssueMarkers)(root).length > 0;
        return Promise.resolve([
            {
                id: 'navigate',
                label: 'Go to',
                group: 'navigate',
                actions: [],
                children: [
                    {
                        id: 'next-marker',
                        label: 'Next marker',
                        group: 'marker',
                        actions: [NavigateToMarkerAction.create({ direction: 'next', selectedElementIds })],
                        isEnabled: () => hasMarkers
                    },
                    {
                        id: 'previous-marker',
                        label: 'Previous marker',
                        group: 'marker',
                        actions: [NavigateToMarkerAction.create({ direction: 'previous', selectedElementIds })],
                        isEnabled: () => hasMarkers
                    }
                ]
            }
        ]);
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.SelectionService),
    __metadata("design:type", selection_service_1.SelectionService)
], MarkerNavigatorContextMenuItemProvider.prototype, "selectionService", void 0);
MarkerNavigatorContextMenuItemProvider = __decorate([
    (0, inversify_1.injectable)()
], MarkerNavigatorContextMenuItemProvider);
exports.MarkerNavigatorContextMenuItemProvider = MarkerNavigatorContextMenuItemProvider;
let MarkerNavigatorKeyListener = class MarkerNavigatorKeyListener extends sprotty_1.KeyListener {
    keyDown(_element, event) {
        if ((0, keyboard_1.matchesKeystroke)(event, 'Period', 'ctrl')) {
            return [NavigateToMarkerAction.create({ direction: 'next' })];
        }
        else if ((0, keyboard_1.matchesKeystroke)(event, 'Comma', 'ctrl')) {
            return [NavigateToMarkerAction.create({ direction: 'previous' })];
        }
        return [];
    }
};
MarkerNavigatorKeyListener = __decorate([
    (0, inversify_1.injectable)()
], MarkerNavigatorKeyListener);
exports.MarkerNavigatorKeyListener = MarkerNavigatorKeyListener;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/validation/validate.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/validation/validate.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DeleteMarkersCommand = exports.ApplyMarkersCommand = exports.ApplyMarkersAction = exports.SetMarkersActionHandler = exports.ExternalMarkerManager = exports.ValidationFeedbackEmitter = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const editor_context_service_1 = __webpack_require__(/*! ../../base/editor-context-service */ "./node_modules/@eclipse-glsp/client/lib/base/editor-context-service.js");
const types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/@eclipse-glsp/client/lib/base/types.js");
const smodel_util_1 = __webpack_require__(/*! ../../utils/smodel-util */ "./node_modules/@eclipse-glsp/client/lib/utils/smodel-util.js");
const model_1 = __webpack_require__(/*! ../tool-feedback/model */ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/model.js");
const issue_marker_1 = __webpack_require__(/*! ./issue-marker */ "./node_modules/@eclipse-glsp/client/lib/features/validation/issue-marker.js");
/**
 * Feedback emitter sending actions for visualizing model validation feedback and
 * re-establishing this feedback visualization after the model has been updated.
 */
let ValidationFeedbackEmitter = class ValidationFeedbackEmitter {
    constructor() {
        this.registeredFeedbackByReason = new Map();
    }
    /**
     * Register the action that should be emitted for visualizing validation feedback.
     * @param action the action that should be emitted when the model is updated and that will visualize the model validation feedback.
     * @param reason the reason for this validation feedback.
     */
    registerValidationFeedbackAction(action, reason = '') {
        // De-register feedback and clear existing markers with the same reason
        const previousFeedbackWithSameReason = this.registeredFeedbackByReason.get(reason);
        if (previousFeedbackWithSameReason) {
            this.feedbackActionDispatcher.deregisterFeedback(this, [previousFeedbackWithSameReason]);
            const deleteMarkersAction = protocol_1.DeleteMarkersAction.create(previousFeedbackWithSameReason.markers);
            this.actionDispatcher().then(dispatcher => dispatcher.dispatch(deleteMarkersAction));
        }
        // Register new action responsible for applying markers and re-applying them when the model is updated
        this.registeredFeedbackByReason.set(reason, action);
        this.feedbackActionDispatcher.registerFeedback(this, [...this.registeredFeedbackByReason.values()]);
    }
};
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.IFeedbackActionDispatcher),
    __metadata("design:type", Object)
], ValidationFeedbackEmitter.prototype, "feedbackActionDispatcher", void 0);
__decorate([
    (0, inversify_1.inject)(types_1.TYPES.IActionDispatcherProvider),
    __metadata("design:type", Function)
], ValidationFeedbackEmitter.prototype, "actionDispatcher", void 0);
ValidationFeedbackEmitter = __decorate([
    (0, inversify_1.injectable)()
], ValidationFeedbackEmitter);
exports.ValidationFeedbackEmitter = ValidationFeedbackEmitter;
/**
 * Manages current markers for the outside of the GLSP.
 *
 * Typically this is rebound by the surrounding tool, e.g. Theia, to be aware of
 * and propagate current markers.
 */
let ExternalMarkerManager = class ExternalMarkerManager {
    connect(actionDispatcher) {
        this.actionDispatcher = actionDispatcher;
    }
    removeMarkers(markers) {
        if (this.actionDispatcher) {
            this.actionDispatcher.dispatch(protocol_1.DeleteMarkersAction.create(markers));
        }
    }
};
ExternalMarkerManager = __decorate([
    (0, inversify_1.injectable)()
], ExternalMarkerManager);
exports.ExternalMarkerManager = ExternalMarkerManager;
let SetMarkersActionHandler = class SetMarkersActionHandler {
    handle(action) {
        const markers = action.markers;
        this.setMarkers(markers, action.reason);
    }
    async setMarkers(markers, reason) {
        var _a;
        const uri = await this.editorContextService.getSourceUri();
        (_a = this.externalMarkerManager) === null || _a === void 0 ? void 0 : _a.setMarkers(markers, reason, uri);
        const applyMarkersAction = ApplyMarkersAction.create(markers);
        this.validationFeedbackEmitter.registerValidationFeedbackAction(applyMarkersAction, reason);
    }
};
__decorate([
    (0, inversify_1.inject)(ValidationFeedbackEmitter),
    __metadata("design:type", ValidationFeedbackEmitter)
], SetMarkersActionHandler.prototype, "validationFeedbackEmitter", void 0);
__decorate([
    (0, inversify_1.inject)(ExternalMarkerManager),
    (0, inversify_1.optional)(),
    __metadata("design:type", ExternalMarkerManager)
], SetMarkersActionHandler.prototype, "externalMarkerManager", void 0);
__decorate([
    (0, inversify_1.inject)(editor_context_service_1.EditorContextService),
    __metadata("design:type", editor_context_service_1.EditorContextService)
], SetMarkersActionHandler.prototype, "editorContextService", void 0);
SetMarkersActionHandler = __decorate([
    (0, inversify_1.injectable)()
], SetMarkersActionHandler);
exports.SetMarkersActionHandler = SetMarkersActionHandler;
var ApplyMarkersAction;
(function (ApplyMarkersAction) {
    ApplyMarkersAction.KIND = 'applyMarkers';
    function is(object) {
        return protocol_1.Action.hasKind(object, ApplyMarkersAction.KIND) && (0, protocol_1.hasArrayProp)(object, 'markers');
    }
    ApplyMarkersAction.is = is;
    function create(markers) {
        return {
            kind: ApplyMarkersAction.KIND,
            markers
        };
    }
    ApplyMarkersAction.create = create;
})(ApplyMarkersAction = exports.ApplyMarkersAction || (exports.ApplyMarkersAction = {}));
/**
 * Handles {@link ApplyMarkersAction}s by creating the corresponding {@link SIssueMarker}s and
 * adding them to the graphical model.
 */
let ApplyMarkersCommand = class ApplyMarkersCommand extends model_1.FeedbackCommand {
    constructor(action) {
        super();
        this.action = action;
    }
    execute(context) {
        this.action.markers.forEach(marker => {
            const modelElement = context.root.index.getById(marker.elementId);
            if (modelElement instanceof sprotty_1.SParentElement) {
                const issueMarker = (0, issue_marker_1.getOrCreateSIssueMarker)(modelElement);
                const issue = (0, issue_marker_1.createSIssue)(marker);
                issueMarker.issues.push(issue);
                if (issueMarker instanceof issue_marker_1.GIssueMarker) {
                    issueMarker.computeProjectionCssClasses();
                }
                addMaxSeverityCSSClassToIssueParent(modelElement, issueMarker);
            }
        });
        return context.root;
    }
};
ApplyMarkersCommand.KIND = ApplyMarkersAction.KIND;
ApplyMarkersCommand = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
    __metadata("design:paramtypes", [Object])
], ApplyMarkersCommand);
exports.ApplyMarkersCommand = ApplyMarkersCommand;
function addMaxSeverityCSSClassToIssueParent(modelElement, issueMarker) {
    const maxSeverityCSSClass = (0, issue_marker_1.getSeverity)(issueMarker);
    if (!modelElement.cssClasses) {
        modelElement.cssClasses = [maxSeverityCSSClass];
    }
    else {
        modelElement.cssClasses = modelElement.cssClasses.filter((value) => !value.match('info|warning|error'));
        modelElement.cssClasses.push(maxSeverityCSSClass);
    }
}
function removeCSSClassFromIssueParent(modelElement, issueMarker) {
    const severity = (0, issue_marker_1.getSeverity)(issueMarker);
    (0, smodel_util_1.removeCssClasses)(modelElement, [severity]);
}
/**
 * Command for handling `DeleteMarkersAction`
 */
let DeleteMarkersCommand = class DeleteMarkersCommand extends model_1.FeedbackCommand {
    constructor(action) {
        super();
        this.action = action;
    }
    execute(context) {
        this.action.markers.forEach(marker => {
            const modelElement = context.root.index.getById(marker.elementId);
            if (modelElement instanceof sprotty_1.SParentElement) {
                const issueMarker = (0, issue_marker_1.getSIssueMarker)(modelElement);
                if (issueMarker) {
                    removeCSSClassFromIssueParent(modelElement, issueMarker);
                    for (let index = 0; index < issueMarker.issues.length; ++index) {
                        const issue = issueMarker.issues[index];
                        if (issue.message === marker.description) {
                            issueMarker.issues.splice(index--, 1);
                        }
                    }
                    if (issueMarker.issues.length === 0) {
                        modelElement.remove(issueMarker);
                    }
                    else {
                        addMaxSeverityCSSClassToIssueParent(modelElement, issueMarker);
                    }
                }
            }
        });
        return context.root;
    }
};
DeleteMarkersCommand.KIND = protocol_1.DeleteMarkersAction.KIND;
DeleteMarkersCommand = __decorate([
    (0, inversify_1.injectable)(),
    __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
    __metadata("design:paramtypes", [Object])
], DeleteMarkersCommand);
exports.DeleteMarkersCommand = DeleteMarkersCommand;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/viewport/di.config.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/viewport/di.config.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2021-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const glsp_scroll_mouse_listener_1 = __webpack_require__(/*! ./glsp-scroll-mouse-listener */ "./node_modules/@eclipse-glsp/client/lib/features/viewport/glsp-scroll-mouse-listener.js");
const glspViewportModule = new inversify_1.ContainerModule((bind, _unbind, isBound) => {
    const context = { bind, isBound };
    (0, sprotty_1.configureCommand)(context, sprotty_1.CenterCommand);
    (0, sprotty_1.configureCommand)(context, sprotty_1.FitToScreenCommand);
    (0, sprotty_1.configureCommand)(context, sprotty_1.GetViewportCommand);
    (0, sprotty_1.configureCommand)(context, sprotty_1.SetViewportCommand);
    (0, protocol_1.bindAsService)(context, sprotty_1.TYPES.KeyListener, sprotty_1.CenterKeyboardListener);
    (0, protocol_1.bindAsService)(context, sprotty_1.TYPES.MouseListener, sprotty_1.ZoomMouseListener);
    (0, protocol_1.bindAsService)(context, sprotty_1.TYPES.MouseListener, glsp_scroll_mouse_listener_1.GLSPScrollMouseListener);
    (0, sprotty_1.configureActionHandler)(context, sprotty_1.EnableToolsAction.KIND, glsp_scroll_mouse_listener_1.GLSPScrollMouseListener);
    (0, sprotty_1.configureActionHandler)(context, sprotty_1.EnableDefaultToolsAction.KIND, glsp_scroll_mouse_listener_1.GLSPScrollMouseListener);
});
exports["default"] = glspViewportModule;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/features/viewport/glsp-scroll-mouse-listener.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/features/viewport/glsp-scroll-mouse-listener.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GLSPScrollMouseListener = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const marquee_mouse_tool_1 = __webpack_require__(/*! ../tools/marquee-mouse-tool */ "./node_modules/@eclipse-glsp/client/lib/features/tools/marquee-mouse-tool.js");
let GLSPScrollMouseListener = class GLSPScrollMouseListener extends sprotty_1.ScrollMouseListener {
    constructor() {
        super(...arguments);
        this.preventScrolling = false;
    }
    handle(action) {
        if (action.kind === sprotty_1.EnableToolsAction.KIND) {
            if (action.toolIds.includes(marquee_mouse_tool_1.MarqueeMouseTool.ID)) {
                this.preventScrolling = true;
            }
        }
        else if (action.kind === sprotty_1.EnableDefaultToolsAction.KIND) {
            this.preventScrolling = false;
        }
    }
    mouseDown(target, event) {
        if (this.preventScrolling) {
            return [];
        }
        return super.mouseDown(target, event);
    }
};
GLSPScrollMouseListener = __decorate([
    (0, inversify_1.injectable)()
], GLSPScrollMouseListener);
exports.GLSPScrollMouseListener = GLSPScrollMouseListener;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/index.js":
/*!********************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/index.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.svgMetadataModule = exports.glspViewportModule = exports.markerNavigatorContextMenuModule = exports.sourceModelWatcherModule = exports.glspDecorationModule = exports.markerNavigatorModule = exports.navigationModule = exports.enableDefaultToolsOnFocusLossModule = exports.toolsModule = exports.glspHoverModule = exports.glspEditLabelModule = exports.layoutModule = exports.glspMouseToolModule = exports.glspSelectModule = exports.copyPasteContextMenuModule = exports.glspServerCopyPasteModule = exports.glspContextMenuModule = exports.glspCommandPaletteModule = exports.modelHintsModule = exports.defaultGLSPModule = exports.toolFeedbackModule = exports.paletteModule = exports.saveModule = exports.validationModule = exports.configureMarqueeTool = exports.configureServerActions = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const di_config_1 = __webpack_require__(/*! ./base/di.config */ "./node_modules/@eclipse-glsp/client/lib/base/di.config.js");
exports.defaultGLSPModule = di_config_1.default;
const di_config_2 = __webpack_require__(/*! ./features/command-palette/di.config */ "./node_modules/@eclipse-glsp/client/lib/features/command-palette/di.config.js");
exports.glspCommandPaletteModule = di_config_2.default;
const di_config_3 = __webpack_require__(/*! ./features/context-menu/di.config */ "./node_modules/@eclipse-glsp/client/lib/features/context-menu/di.config.js");
exports.glspContextMenuModule = di_config_3.default;
const di_config_4 = __webpack_require__(/*! ./features/copy-paste/di.config */ "./node_modules/@eclipse-glsp/client/lib/features/copy-paste/di.config.js");
Object.defineProperty(exports, "copyPasteContextMenuModule", ({ enumerable: true, get: function () { return di_config_4.copyPasteContextMenuModule; } }));
Object.defineProperty(exports, "glspServerCopyPasteModule", ({ enumerable: true, get: function () { return di_config_4.glspServerCopyPasteModule; } }));
const di_config_5 = __webpack_require__(/*! ./features/decoration/di.config */ "./node_modules/@eclipse-glsp/client/lib/features/decoration/di.config.js");
exports.glspDecorationModule = di_config_5.default;
const di_config_6 = __webpack_require__(/*! ./features/svg-metadata/di.config */ "./node_modules/@eclipse-glsp/client/lib/features/svg-metadata/di.config.js");
exports.svgMetadataModule = di_config_6.default;
const di_config_7 = __webpack_require__(/*! ./features/edit-label/di.config */ "./node_modules/@eclipse-glsp/client/lib/features/edit-label/di.config.js");
exports.glspEditLabelModule = di_config_7.default;
const di_config_8 = __webpack_require__(/*! ./features/hints/di.config */ "./node_modules/@eclipse-glsp/client/lib/features/hints/di.config.js");
exports.modelHintsModule = di_config_8.default;
const di_config_9 = __webpack_require__(/*! ./features/hover/di.config */ "./node_modules/@eclipse-glsp/client/lib/features/hover/di.config.js");
exports.glspHoverModule = di_config_9.default;
const di_config_10 = __webpack_require__(/*! ./features/layout/di.config */ "./node_modules/@eclipse-glsp/client/lib/features/layout/di.config.js");
exports.layoutModule = di_config_10.default;
const di_config_11 = __webpack_require__(/*! ./features/mouse-tool/di.config */ "./node_modules/@eclipse-glsp/client/lib/features/mouse-tool/di.config.js");
exports.glspMouseToolModule = di_config_11.default;
const di_config_12 = __webpack_require__(/*! ./features/navigation/di.config */ "./node_modules/@eclipse-glsp/client/lib/features/navigation/di.config.js");
exports.navigationModule = di_config_12.default;
const di_config_13 = __webpack_require__(/*! ./features/save/di.config */ "./node_modules/@eclipse-glsp/client/lib/features/save/di.config.js");
exports.saveModule = di_config_13.default;
const di_config_14 = __webpack_require__(/*! ./features/select/di.config */ "./node_modules/@eclipse-glsp/client/lib/features/select/di.config.js");
exports.glspSelectModule = di_config_14.default;
const di_config_15 = __webpack_require__(/*! ./features/source-model-watcher/di.config */ "./node_modules/@eclipse-glsp/client/lib/features/source-model-watcher/di.config.js");
exports.sourceModelWatcherModule = di_config_15.default;
const di_config_16 = __webpack_require__(/*! ./features/tool-feedback/di.config */ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/di.config.js");
exports.toolFeedbackModule = di_config_16.default;
const di_config_17 = __webpack_require__(/*! ./features/tool-palette/di.config */ "./node_modules/@eclipse-glsp/client/lib/features/tool-palette/di.config.js");
exports.paletteModule = di_config_17.default;
const di_config_18 = __webpack_require__(/*! ./features/tools/di.config */ "./node_modules/@eclipse-glsp/client/lib/features/tools/di.config.js");
Object.defineProperty(exports, "enableDefaultToolsOnFocusLossModule", ({ enumerable: true, get: function () { return di_config_18.enableDefaultToolsOnFocusLossModule; } }));
Object.defineProperty(exports, "toolsModule", ({ enumerable: true, get: function () { return di_config_18.toolsModule; } }));
const di_config_19 = __webpack_require__(/*! ./features/validation/di.config */ "./node_modules/@eclipse-glsp/client/lib/features/validation/di.config.js");
Object.defineProperty(exports, "markerNavigatorContextMenuModule", ({ enumerable: true, get: function () { return di_config_19.markerNavigatorContextMenuModule; } }));
Object.defineProperty(exports, "markerNavigatorModule", ({ enumerable: true, get: function () { return di_config_19.markerNavigatorModule; } }));
Object.defineProperty(exports, "validationModule", ({ enumerable: true, get: function () { return di_config_19.validationModule; } }));
const di_config_20 = __webpack_require__(/*! ./features/viewport/di.config */ "./node_modules/@eclipse-glsp/client/lib/features/viewport/di.config.js");
exports.glspViewportModule = di_config_20.default;
// ------------------ Base ------------------
__exportStar(__webpack_require__(/*! ./base/action-dispatcher */ "./node_modules/@eclipse-glsp/client/lib/base/action-dispatcher.js"), exports);
__exportStar(__webpack_require__(/*! ./base/actions/focus-change-action */ "./node_modules/@eclipse-glsp/client/lib/base/actions/focus-change-action.js"), exports);
__exportStar(__webpack_require__(/*! ./base/argumentable */ "./node_modules/@eclipse-glsp/client/lib/base/argumentable.js"), exports);
__exportStar(__webpack_require__(/*! ./base/auto-complete/auto-complete-actions */ "./node_modules/@eclipse-glsp/client/lib/base/auto-complete/auto-complete-actions.js"), exports);
__exportStar(__webpack_require__(/*! ./base/auto-complete/auto-complete-widget */ "./node_modules/@eclipse-glsp/client/lib/base/auto-complete/auto-complete-widget.js"), exports);
__exportStar(__webpack_require__(/*! ./base/auto-complete/validation-decorator */ "./node_modules/@eclipse-glsp/client/lib/base/auto-complete/validation-decorator.js"), exports);
__exportStar(__webpack_require__(/*! ./base/command-stack */ "./node_modules/@eclipse-glsp/client/lib/base/command-stack.js"), exports);
__exportStar(__webpack_require__(/*! ./base/container-modules */ "./node_modules/@eclipse-glsp/client/lib/base/container-modules.js"), exports);
var di_config_21 = __webpack_require__(/*! ./base/di.config */ "./node_modules/@eclipse-glsp/client/lib/base/di.config.js");
Object.defineProperty(exports, "configureServerActions", ({ enumerable: true, get: function () { return di_config_21.configureServerActions; } }));
__exportStar(__webpack_require__(/*! ./base/drag-aware-mouse-listener */ "./node_modules/@eclipse-glsp/client/lib/base/drag-aware-mouse-listener.js"), exports);
__exportStar(__webpack_require__(/*! ./base/editor-context-service */ "./node_modules/@eclipse-glsp/client/lib/base/editor-context-service.js"), exports);
__exportStar(__webpack_require__(/*! ./base/focus-tracker */ "./node_modules/@eclipse-glsp/client/lib/base/focus-tracker.js"), exports);
__exportStar(__webpack_require__(/*! ./base/model-initialization-constraint */ "./node_modules/@eclipse-glsp/client/lib/base/model-initialization-constraint.js"), exports);
__exportStar(__webpack_require__(/*! ./base/model/model-registry */ "./node_modules/@eclipse-glsp/client/lib/base/model/model-registry.js"), exports);
__exportStar(__webpack_require__(/*! ./base/model/update-model-command */ "./node_modules/@eclipse-glsp/client/lib/base/model/update-model-command.js"), exports);
__exportStar(__webpack_require__(/*! ./base/selection-clearing-mouse-listener */ "./node_modules/@eclipse-glsp/client/lib/base/selection-clearing-mouse-listener.js"), exports);
__exportStar(__webpack_require__(/*! ./base/source-uri-aware */ "./node_modules/@eclipse-glsp/client/lib/base/source-uri-aware.js"), exports);
__exportStar(__webpack_require__(/*! ./base/tool-manager/glsp-tool-manager */ "./node_modules/@eclipse-glsp/client/lib/base/tool-manager/glsp-tool-manager.js"), exports);
__exportStar(__webpack_require__(/*! ./base/tool-manager/tool-actions */ "./node_modules/@eclipse-glsp/client/lib/base/tool-manager/tool-actions.js"), exports);
__exportStar(__webpack_require__(/*! ./base/types */ "./node_modules/@eclipse-glsp/client/lib/base/types.js"), exports);
__exportStar(__webpack_require__(/*! ./base/view/view-registry */ "./node_modules/@eclipse-glsp/client/lib/base/view/view-registry.js"), exports);
//
// ------------------ Features ------------------
__exportStar(__webpack_require__(/*! ./features/bounds/freeform-layout */ "./node_modules/@eclipse-glsp/client/lib/features/bounds/freeform-layout.js"), exports);
__exportStar(__webpack_require__(/*! ./features/bounds/glsp-hidden-bounds-updater */ "./node_modules/@eclipse-glsp/client/lib/features/bounds/glsp-hidden-bounds-updater.js"), exports);
__exportStar(__webpack_require__(/*! ./features/bounds/hbox-layout */ "./node_modules/@eclipse-glsp/client/lib/features/bounds/hbox-layout.js"), exports);
__exportStar(__webpack_require__(/*! ./features/bounds/layouter */ "./node_modules/@eclipse-glsp/client/lib/features/bounds/layouter.js"), exports);
__exportStar(__webpack_require__(/*! ./features/bounds/vbox-layout */ "./node_modules/@eclipse-glsp/client/lib/features/bounds/vbox-layout.js"), exports);
__exportStar(__webpack_require__(/*! ./features/change-bounds/model */ "./node_modules/@eclipse-glsp/client/lib/features/change-bounds/model.js"), exports);
__exportStar(__webpack_require__(/*! ./features/change-bounds/movement-restrictor */ "./node_modules/@eclipse-glsp/client/lib/features/change-bounds/movement-restrictor.js"), exports);
__exportStar(__webpack_require__(/*! ./features/change-bounds/snap */ "./node_modules/@eclipse-glsp/client/lib/features/change-bounds/snap.js"), exports);
__exportStar(__webpack_require__(/*! ./features/command-palette/command-palette-tool */ "./node_modules/@eclipse-glsp/client/lib/features/command-palette/command-palette-tool.js"), exports);
__exportStar(__webpack_require__(/*! ./features/command-palette/server-command-palette-provider */ "./node_modules/@eclipse-glsp/client/lib/features/command-palette/server-command-palette-provider.js"), exports);
__exportStar(__webpack_require__(/*! ./features/context-menu/delete-element-context-menu */ "./node_modules/@eclipse-glsp/client/lib/features/context-menu/delete-element-context-menu.js"), exports);
__exportStar(__webpack_require__(/*! ./features/context-menu/selection-service-aware-context-menu-mouse-listener */ "./node_modules/@eclipse-glsp/client/lib/features/context-menu/selection-service-aware-context-menu-mouse-listener.js"), exports);
__exportStar(__webpack_require__(/*! ./features/context-menu/server-context-menu-provider */ "./node_modules/@eclipse-glsp/client/lib/features/context-menu/server-context-menu-provider.js"), exports);
__exportStar(__webpack_require__(/*! ./features/copy-paste/copy-paste-context-menu */ "./node_modules/@eclipse-glsp/client/lib/features/copy-paste/copy-paste-context-menu.js"), exports);
__exportStar(__webpack_require__(/*! ./features/copy-paste/copy-paste-handler */ "./node_modules/@eclipse-glsp/client/lib/features/copy-paste/copy-paste-handler.js"), exports);
__exportStar(__webpack_require__(/*! ./features/decoration/decoration-placer */ "./node_modules/@eclipse-glsp/client/lib/features/decoration/decoration-placer.js"), exports);
__exportStar(__webpack_require__(/*! ./features/svg-metadata/metadata-placer */ "./node_modules/@eclipse-glsp/client/lib/features/svg-metadata/metadata-placer.js"), exports);
__exportStar(__webpack_require__(/*! ./features/edit-label/edit-label-tool */ "./node_modules/@eclipse-glsp/client/lib/features/edit-label/edit-label-tool.js"), exports);
__exportStar(__webpack_require__(/*! ./features/edit-label/edit-label-validator */ "./node_modules/@eclipse-glsp/client/lib/features/edit-label/edit-label-validator.js"), exports);
__exportStar(__webpack_require__(/*! ./features/export/glsp-svg-exporter */ "./node_modules/@eclipse-glsp/client/lib/features/export/glsp-svg-exporter.js"), exports);
__exportStar(__webpack_require__(/*! ./features/hints/model */ "./node_modules/@eclipse-glsp/client/lib/features/hints/model.js"), exports);
__exportStar(__webpack_require__(/*! ./features/hints/type-hints */ "./node_modules/@eclipse-glsp/client/lib/features/hints/type-hints.js"), exports);
__exportStar(__webpack_require__(/*! ./features/hover/hover */ "./node_modules/@eclipse-glsp/client/lib/features/hover/hover.js"), exports);
__exportStar(__webpack_require__(/*! ./features/layout/layout-elements-action */ "./node_modules/@eclipse-glsp/client/lib/features/layout/layout-elements-action.js"), exports);
__exportStar(__webpack_require__(/*! ./features/mouse-tool/mouse-tool */ "./node_modules/@eclipse-glsp/client/lib/features/mouse-tool/mouse-tool.js"), exports);
__exportStar(__webpack_require__(/*! ./features/navigation/navigation-action-handler */ "./node_modules/@eclipse-glsp/client/lib/features/navigation/navigation-action-handler.js"), exports);
__exportStar(__webpack_require__(/*! ./features/navigation/navigation-target-resolver */ "./node_modules/@eclipse-glsp/client/lib/features/navigation/navigation-target-resolver.js"), exports);
__exportStar(__webpack_require__(/*! ./features/rank/model */ "./node_modules/@eclipse-glsp/client/lib/features/rank/model.js"), exports);
__exportStar(__webpack_require__(/*! ./features/reconnect/model */ "./node_modules/@eclipse-glsp/client/lib/features/reconnect/model.js"), exports);
__exportStar(__webpack_require__(/*! ./features/save/model */ "./node_modules/@eclipse-glsp/client/lib/features/save/model.js"), exports);
__exportStar(__webpack_require__(/*! ./features/save/save-keylistener */ "./node_modules/@eclipse-glsp/client/lib/features/save/save-keylistener.js"), exports);
__exportStar(__webpack_require__(/*! ./features/select/select-feedback-action */ "./node_modules/@eclipse-glsp/client/lib/features/select/select-feedback-action.js"), exports);
__exportStar(__webpack_require__(/*! ./features/select/select-mouse-listener */ "./node_modules/@eclipse-glsp/client/lib/features/select/select-mouse-listener.js"), exports);
__exportStar(__webpack_require__(/*! ./features/select/selection-service */ "./node_modules/@eclipse-glsp/client/lib/features/select/selection-service.js"), exports);
__exportStar(__webpack_require__(/*! ./features/source-model-watcher/source-model-changed-action-handler */ "./node_modules/@eclipse-glsp/client/lib/features/source-model-watcher/source-model-changed-action-handler.js"), exports);
__exportStar(__webpack_require__(/*! ./features/tool-feedback/change-bounds-tool-feedback */ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/change-bounds-tool-feedback.js"), exports);
__exportStar(__webpack_require__(/*! ./features/tool-feedback/creation-tool-feedback */ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/creation-tool-feedback.js"), exports);
__exportStar(__webpack_require__(/*! ./features/tool-feedback/css-feedback */ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/css-feedback.js"), exports);
__exportStar(__webpack_require__(/*! ./features/tool-feedback/edge-edit-tool-feedback */ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/edge-edit-tool-feedback.js"), exports);
__exportStar(__webpack_require__(/*! ./features/tool-feedback/feedback-action-dispatcher */ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/feedback-action-dispatcher.js"), exports);
__exportStar(__webpack_require__(/*! ./features/tool-feedback/marquee-tool-feedback */ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/marquee-tool-feedback.js"), exports);
__exportStar(__webpack_require__(/*! ./features/tool-feedback/model */ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/model.js"), exports);
__exportStar(__webpack_require__(/*! ./features/tool-feedback/view */ "./node_modules/@eclipse-glsp/client/lib/features/tool-feedback/view.js"), exports);
__exportStar(__webpack_require__(/*! ./features/tool-palette/tool-palette */ "./node_modules/@eclipse-glsp/client/lib/features/tool-palette/tool-palette.js"), exports);
__exportStar(__webpack_require__(/*! ./features/tools/base-glsp-tool */ "./node_modules/@eclipse-glsp/client/lib/features/tools/base-glsp-tool.js"), exports);
__exportStar(__webpack_require__(/*! ./features/tools/change-bounds-tool */ "./node_modules/@eclipse-glsp/client/lib/features/tools/change-bounds-tool.js"), exports);
__exportStar(__webpack_require__(/*! ./features/tools/delete-tool */ "./node_modules/@eclipse-glsp/client/lib/features/tools/delete-tool.js"), exports);
var di_config_22 = __webpack_require__(/*! ./features/tools/di.config */ "./node_modules/@eclipse-glsp/client/lib/features/tools/di.config.js");
Object.defineProperty(exports, "configureMarqueeTool", ({ enumerable: true, get: function () { return di_config_22.configureMarqueeTool; } }));
__exportStar(__webpack_require__(/*! ./features/tools/edge-creation-tool */ "./node_modules/@eclipse-glsp/client/lib/features/tools/edge-creation-tool.js"), exports);
__exportStar(__webpack_require__(/*! ./features/tools/edge-edit-tool */ "./node_modules/@eclipse-glsp/client/lib/features/tools/edge-edit-tool.js"), exports);
__exportStar(__webpack_require__(/*! ./features/tools/enable-default-tools-on-focus-loss */ "./node_modules/@eclipse-glsp/client/lib/features/tools/enable-default-tools-on-focus-loss.js"), exports);
__exportStar(__webpack_require__(/*! ./features/tools/glsp-manhattan-edge-router */ "./node_modules/@eclipse-glsp/client/lib/features/tools/glsp-manhattan-edge-router.js"), exports);
__exportStar(__webpack_require__(/*! ./features/tools/marquee-behavior */ "./node_modules/@eclipse-glsp/client/lib/features/tools/marquee-behavior.js"), exports);
__exportStar(__webpack_require__(/*! ./features/tools/model */ "./node_modules/@eclipse-glsp/client/lib/features/tools/model.js"), exports);
__exportStar(__webpack_require__(/*! ./features/tools/node-creation-tool */ "./node_modules/@eclipse-glsp/client/lib/features/tools/node-creation-tool.js"), exports);
__exportStar(__webpack_require__(/*! ./features/validation/issue-marker */ "./node_modules/@eclipse-glsp/client/lib/features/validation/issue-marker.js"), exports);
__exportStar(__webpack_require__(/*! ./features/validation/marker-navigator */ "./node_modules/@eclipse-glsp/client/lib/features/validation/marker-navigator.js"), exports);
__exportStar(__webpack_require__(/*! ./features/validation/validate */ "./node_modules/@eclipse-glsp/client/lib/features/validation/validate.js"), exports);
__exportStar(__webpack_require__(/*! ./features/viewport/glsp-scroll-mouse-listener */ "./node_modules/@eclipse-glsp/client/lib/features/viewport/glsp-scroll-mouse-listener.js"), exports);
//
// ------------------ Misc ------------------
__exportStar(__webpack_require__(/*! ./lib/model */ "./node_modules/@eclipse-glsp/client/lib/lib/model.js"), exports);
__exportStar(__webpack_require__(/*! ./model-source/glsp-diagram-server */ "./node_modules/@eclipse-glsp/client/lib/model-source/glsp-diagram-server.js"), exports);
__exportStar(__webpack_require__(/*! ./sprotty-reexport */ "./node_modules/@eclipse-glsp/client/lib/sprotty-reexport.js"), exports);
__exportStar(__webpack_require__(/*! ./utils/argument-utils */ "./node_modules/@eclipse-glsp/client/lib/utils/argument-utils.js"), exports);
__exportStar(__webpack_require__(/*! ./utils/html-utils */ "./node_modules/@eclipse-glsp/client/lib/utils/html-utils.js"), exports);
__exportStar(__webpack_require__(/*! ./utils/layout-utils */ "./node_modules/@eclipse-glsp/client/lib/utils/layout-utils.js"), exports);
__exportStar(__webpack_require__(/*! ./utils/marker */ "./node_modules/@eclipse-glsp/client/lib/utils/marker.js"), exports);
__exportStar(__webpack_require__(/*! ./utils/smodel-util */ "./node_modules/@eclipse-glsp/client/lib/utils/smodel-util.js"), exports);
__exportStar(__webpack_require__(/*! ./utils/viewpoint-util */ "./node_modules/@eclipse-glsp/client/lib/utils/viewpoint-util.js"), exports);
__exportStar(__webpack_require__(/*! ./views */ "./node_modules/@eclipse-glsp/client/lib/views/index.js"), exports);


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/lib/model.js":
/*!************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/lib/model.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GEdge = exports.GLSPGraph = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const model_1 = __webpack_require__(/*! ../features/hints/model */ "./node_modules/@eclipse-glsp/client/lib/features/hints/model.js");
const model_2 = __webpack_require__(/*! ../features/save/model */ "./node_modules/@eclipse-glsp/client/lib/features/save/model.js");
class GLSPGraph extends sprotty_1.SGraph {
    constructor() {
        super(...arguments);
        this.dirty = false;
    }
    isContainableElement(input) {
        return true;
    }
}
exports.GLSPGraph = GLSPGraph;
GLSPGraph.DEFAULT_FEATURES = [sprotty_1.viewportFeature, sprotty_1.exportFeature, model_2.saveFeature, model_1.containerFeature];
class GEdge extends sprotty_1.SEdge {
    localToParent(point) {
        const bounds = (0, sprotty_1.getRouteBounds)(this.routingPoints);
        const result = {
            x: point.x + bounds.x,
            y: point.y + bounds.y,
            width: -1,
            height: -1
        };
        if ((0, protocol_1.isBounds)(point)) {
            result.width = point.width;
            result.height = point.height;
        }
        return result;
    }
    parentToLocal(point) {
        const bounds = (0, sprotty_1.getRouteBounds)(this.routingPoints);
        const result = {
            x: point.x - bounds.x,
            y: point.y - bounds.y,
            width: -1,
            height: -1
        };
        if ((0, protocol_1.isBounds)(point)) {
            result.width = point.width;
            result.height = point.height;
        }
        return result;
    }
}
exports.GEdge = GEdge;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/model-source/glsp-diagram-server.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/model-source/glsp-diagram-server.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.registerDefaultGLSPServerActions = exports.isReceivedFromServer = exports.GLSPDiagramServer = void 0;
/********************************************************************************
 * Copyright (c) 2019-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const receivedFromServerProperty = '__receivedFromServer';
let GLSPDiagramServer = class GLSPDiagramServer extends sprotty_1.DiagramServerProxy {
    constructor() {
        super(...arguments);
        this.ready = false;
    }
    async connect(client) {
        await client.start();
        client.onActionMessage(message => this.messageReceived(message));
        this._glspClient = client;
        return this._glspClient;
    }
    get glspClient() {
        return this._glspClient;
    }
    sendMessage(message) {
        if (this.glspClient) {
            this.glspClient.sendActionMessage(message);
        }
        else {
            throw new Error('GLSPClient is not connected');
        }
    }
    initialize(registry) {
        registerDefaultGLSPServerActions(registry, this);
        if (!this.clientId) {
            this.clientId = this.viewerOptions.baseDiv;
        }
    }
    handle(action) {
        if (protocol_1.RequestModelAction.is(action) && action.options) {
            this._sourceUri = action.options.sourceUri;
        }
        return super.handle(action);
    }
    handleLocally(action) {
        if (protocol_1.ServerMessageAction.is(action)) {
            return this.handleServerMessageAction(action);
        }
        if (protocol_1.SetEditModeAction.is(action)) {
            return this.handleSetEditModeAction(action);
        }
        return super.handleLocally(action);
    }
    handleServerMessageAction(action) {
        this.logger.log('GLSPDiagramServer', `[${action.severity}] -${action.message}`);
        return false;
    }
    handleComputedBounds(_action) {
        return true;
    }
    handleSetEditModeAction(action) {
        return !isReceivedFromServer(action);
    }
    get sourceURI() {
        return this._sourceUri;
    }
};
GLSPDiagramServer = __decorate([
    (0, inversify_1.injectable)()
], GLSPDiagramServer);
exports.GLSPDiagramServer = GLSPDiagramServer;
function isReceivedFromServer(action) {
    return action[receivedFromServerProperty] === true;
}
exports.isReceivedFromServer = isReceivedFromServer;
function registerDefaultGLSPServerActions(registry, diagramServer) {
    registry.register(protocol_1.ServerMessageAction.KIND, diagramServer);
    registry.register(sprotty_1.ServerStatusAction.KIND, diagramServer);
    registry.register(sprotty_1.ExportSvgAction.KIND, diagramServer);
    // Register an empty handler for SwitchEditMode, to avoid runtime exceptions.
    // We don't support SwitchEditMode, but Sprotty still sends those actions, so ignore them.
    registry.register(sprotty_1.SwitchEditModeCommand.KIND, { handle: action => undefined });
}
exports.registerDefaultGLSPServerActions = registerDefaultGLSPServerActions;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/sprotty-reexport.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/sprotty-reexport.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2022-2023 STMicroelectronics and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
/**
 * Sprotty still keeps the old class based action definitions as deprecated API.
 * This causes name clashes with the GLSP protocol actions when reexport sprotty.
 * The deprecated definitions are planned to be removed with Sprotty 1.0.0.
 * Until then we have to manually reexport the sprotty main index and exclude the clashing types.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LocationPostprocessor = exports.SetPopupModelCommand = exports.PopupHoverMouseListener = exports.HoverMouseListener = exports.HoverKeyListener = exports.HoverFeedbackCommand = exports.ClosePopupActionHandler = exports.AbstractHoverMouseListener = exports.SvgExporter = exports.RequestExportSvgAction = exports.ExportSvgPostprocessor = exports.ExportSvgKeyListener = exports.ExportSvgCommand = exports.configureButtonHandler = exports.ButtonHandlerRegistry = exports.SShapeElement = exports.layoutContainerFeature = exports.layoutableChildFeature = exports.isSizeable = exports.isLayoutContainer = exports.isLayoutableChild = exports.isBoundsAware = exports.isAlignable = exports.getAbsoluteClientBounds = exports.getAbsoluteBounds = exports.findChildrenAtPosition = exports.boundsFeature = exports.alignFeature = exports.SetBoundsCommand = exports.RequestBoundsCommand = exports.translatePoint = exports.translateBounds = exports.registerModelElement = exports.findParentByFeature = exports.findParent = exports.containsSome = exports.SParentElement = exports.SModelRoot = exports.SModelElement = exports.SChildElement = exports.ModelIndexImpl = exports.isParent = exports.createRandomId = exports.SetModelCommand = exports.SetBoundsAction = exports.MoveAction = exports.HoverFeedbackAction = exports.CollapseExpandAllAction = exports.CollapseExpandAction = exports.BringToFrontAction = void 0;
exports.decorationModule = exports.contextMenuModule = exports.commandPaletteModule = exports.buttonModule = exports.boundsModule = exports.graphModule = exports.defaultModule = exports.PointToPointLine = exports.intersection = exports.Diamond = exports.DiagramServerProxy = exports.ShapedPreRenderedElement = exports.RectangularPort = exports.RectangularNode = exports.PreRenderedElement = exports.HtmlRoot = exports.ForeignObjectElement = exports.DiamondNode = exports.CircularPort = exports.CircularNode = exports.SPort = exports.SNode = exports.SLabel = exports.SGraphIndex = exports.SGraph = exports.SEdge = exports.SCompartment = exports.BringToFrontCommand = exports.ViewportResult = exports.ViewportAnimation = exports.SetViewportCommand = exports.GetViewportCommand = exports.GetViewportAction = exports.FitToScreenCommand = exports.CenterKeyboardListener = exports.CenterCommand = exports.BoundsAwareViewportCommand = exports.UpdateModelCommand = exports.UndoRedoKeyListener = exports.SelectMouseListener = exports.SelectKeyboardListener = exports.SelectionResult = exports.SprottySelectCommand = exports.SprottySelectAllCommand = exports.GetSelectionCommand = exports.GetSelectionAction = exports.MoveMouseListener = exports.MoveCommand = exports.MoveAnimation = exports.MorphEdgesAnimation = void 0;
exports.modelSourceModule = exports.zorderModule = exports.viewportModule = exports.updateModule = exports.undoRedoModule = exports.selectModule = exports.routingModule = exports.openModule = exports.moveModule = exports.hoverModule = exports.fadeModule = exports.exportModule = exports.expandModule = exports.edgeLayoutModule = exports.edgeIntersectionModule = void 0;
__exportStar(__webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js"), exports);
// sprotty-protocol
var actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "./node_modules/sprotty-protocol/lib/actions.js");
Object.defineProperty(exports, "BringToFrontAction", ({ enumerable: true, get: function () { return actions_1.BringToFrontAction; } }));
Object.defineProperty(exports, "CollapseExpandAction", ({ enumerable: true, get: function () { return actions_1.CollapseExpandAction; } }));
Object.defineProperty(exports, "CollapseExpandAllAction", ({ enumerable: true, get: function () { return actions_1.CollapseExpandAllAction; } }));
Object.defineProperty(exports, "HoverFeedbackAction", ({ enumerable: true, get: function () { return actions_1.HoverFeedbackAction; } }));
Object.defineProperty(exports, "MoveAction", ({ enumerable: true, get: function () { return actions_1.MoveAction; } }));
Object.defineProperty(exports, "SetBoundsAction", ({ enumerable: true, get: function () { return actions_1.SetBoundsAction; } }));
// ------------------ Base ------------------
__exportStar(__webpack_require__(/*! sprotty/lib/base/actions/action-dispatcher */ "./node_modules/sprotty/lib/base/actions/action-dispatcher.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/base/actions/action-handler */ "./node_modules/sprotty/lib/base/actions/action-handler.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/base/actions/diagram-locker */ "./node_modules/sprotty/lib/base/actions/diagram-locker.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/base/animations/animation */ "./node_modules/sprotty/lib/base/animations/animation.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/base/animations/animation-frame-syncer */ "./node_modules/sprotty/lib/base/animations/animation-frame-syncer.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/base/animations/easing */ "./node_modules/sprotty/lib/base/animations/easing.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/base/commands/command */ "./node_modules/sprotty/lib/base/commands/command.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/base/commands/command-registration */ "./node_modules/sprotty/lib/base/commands/command-registration.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/base/commands/command-stack */ "./node_modules/sprotty/lib/base/commands/command-stack.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/base/commands/command-stack-options */ "./node_modules/sprotty/lib/base/commands/command-stack-options.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/base/features/initialize-canvas */ "./node_modules/sprotty/lib/base/features/initialize-canvas.js"), exports);
var set_model_1 = __webpack_require__(/*! sprotty/lib/base/features/set-model */ "./node_modules/sprotty/lib/base/features/set-model.js");
Object.defineProperty(exports, "SetModelCommand", ({ enumerable: true, get: function () { return set_model_1.SetModelCommand; } }));
var smodel_1 = __webpack_require__(/*! sprotty/lib/base/model/smodel */ "./node_modules/sprotty/lib/base/model/smodel.js");
Object.defineProperty(exports, "createRandomId", ({ enumerable: true, get: function () { return smodel_1.createRandomId; } }));
Object.defineProperty(exports, "isParent", ({ enumerable: true, get: function () { return smodel_1.isParent; } }));
Object.defineProperty(exports, "ModelIndexImpl", ({ enumerable: true, get: function () { return smodel_1.ModelIndexImpl; } }));
Object.defineProperty(exports, "SChildElement", ({ enumerable: true, get: function () { return smodel_1.SChildElement; } }));
Object.defineProperty(exports, "SModelElement", ({ enumerable: true, get: function () { return smodel_1.SModelElement; } }));
Object.defineProperty(exports, "SModelRoot", ({ enumerable: true, get: function () { return smodel_1.SModelRoot; } }));
Object.defineProperty(exports, "SParentElement", ({ enumerable: true, get: function () { return smodel_1.SParentElement; } }));
__exportStar(__webpack_require__(/*! sprotty/lib/base/model/smodel-extension */ "./node_modules/sprotty/lib/base/model/smodel-extension.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/base/model/smodel-factory */ "./node_modules/sprotty/lib/base/model/smodel-factory.js"), exports);
var smodel_utils_1 = __webpack_require__(/*! sprotty/lib/base/model/smodel-utils */ "./node_modules/sprotty/lib/base/model/smodel-utils.js");
Object.defineProperty(exports, "containsSome", ({ enumerable: true, get: function () { return smodel_utils_1.containsSome; } }));
Object.defineProperty(exports, "findParent", ({ enumerable: true, get: function () { return smodel_utils_1.findParent; } }));
Object.defineProperty(exports, "findParentByFeature", ({ enumerable: true, get: function () { return smodel_utils_1.findParentByFeature; } }));
Object.defineProperty(exports, "registerModelElement", ({ enumerable: true, get: function () { return smodel_utils_1.registerModelElement; } }));
Object.defineProperty(exports, "translateBounds", ({ enumerable: true, get: function () { return smodel_utils_1.translateBounds; } }));
Object.defineProperty(exports, "translatePoint", ({ enumerable: true, get: function () { return smodel_utils_1.translatePoint; } }));
__exportStar(__webpack_require__(/*! sprotty/lib/base/tool-manager/tool */ "./node_modules/sprotty/lib/base/tool-manager/tool.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/base/tool-manager/tool-manager */ "./node_modules/sprotty/lib/base/tool-manager/tool-manager.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/base/ui-extensions/ui-extension */ "./node_modules/sprotty/lib/base/ui-extensions/ui-extension.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/base/ui-extensions/ui-extension-registry */ "./node_modules/sprotty/lib/base/ui-extensions/ui-extension-registry.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/base/views/key-tool */ "./node_modules/sprotty/lib/base/views/key-tool.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/base/views/mouse-tool */ "./node_modules/sprotty/lib/base/views/mouse-tool.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/base/views/thunk-view */ "./node_modules/sprotty/lib/base/views/thunk-view.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/base/views/view */ "./node_modules/sprotty/lib/base/views/view.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/base/views/viewer */ "./node_modules/sprotty/lib/base/views/viewer.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/base/views/viewer-cache */ "./node_modules/sprotty/lib/base/views/viewer-cache.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/base/views/viewer-options */ "./node_modules/sprotty/lib/base/views/viewer-options.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/base/views/vnode-postprocessor */ "./node_modules/sprotty/lib/base/views/vnode-postprocessor.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/base/views/vnode-utils */ "./node_modules/sprotty/lib/base/views/vnode-utils.js"), exports);
// ------------------ Features ------------------
var bounds_manipulation_1 = __webpack_require__(/*! sprotty/lib/features/bounds/bounds-manipulation */ "./node_modules/sprotty/lib/features/bounds/bounds-manipulation.js");
Object.defineProperty(exports, "RequestBoundsCommand", ({ enumerable: true, get: function () { return bounds_manipulation_1.RequestBoundsCommand; } }));
Object.defineProperty(exports, "SetBoundsCommand", ({ enumerable: true, get: function () { return bounds_manipulation_1.SetBoundsCommand; } }));
__exportStar(__webpack_require__(/*! sprotty/lib/features/bounds/hbox-layout */ "./node_modules/sprotty/lib/features/bounds/hbox-layout.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/bounds/hidden-bounds-updater */ "./node_modules/sprotty/lib/features/bounds/hidden-bounds-updater.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/bounds/layout */ "./node_modules/sprotty/lib/features/bounds/layout.js"), exports);
var model_1 = __webpack_require__(/*! sprotty/lib/features/bounds/model */ "./node_modules/sprotty/lib/features/bounds/model.js");
Object.defineProperty(exports, "alignFeature", ({ enumerable: true, get: function () { return model_1.alignFeature; } }));
Object.defineProperty(exports, "boundsFeature", ({ enumerable: true, get: function () { return model_1.boundsFeature; } }));
Object.defineProperty(exports, "findChildrenAtPosition", ({ enumerable: true, get: function () { return model_1.findChildrenAtPosition; } }));
Object.defineProperty(exports, "getAbsoluteBounds", ({ enumerable: true, get: function () { return model_1.getAbsoluteBounds; } }));
Object.defineProperty(exports, "getAbsoluteClientBounds", ({ enumerable: true, get: function () { return model_1.getAbsoluteClientBounds; } }));
Object.defineProperty(exports, "isAlignable", ({ enumerable: true, get: function () { return model_1.isAlignable; } }));
Object.defineProperty(exports, "isBoundsAware", ({ enumerable: true, get: function () { return model_1.isBoundsAware; } }));
Object.defineProperty(exports, "isLayoutableChild", ({ enumerable: true, get: function () { return model_1.isLayoutableChild; } }));
Object.defineProperty(exports, "isLayoutContainer", ({ enumerable: true, get: function () { return model_1.isLayoutContainer; } }));
Object.defineProperty(exports, "isSizeable", ({ enumerable: true, get: function () { return model_1.isSizeable; } }));
Object.defineProperty(exports, "layoutableChildFeature", ({ enumerable: true, get: function () { return model_1.layoutableChildFeature; } }));
Object.defineProperty(exports, "layoutContainerFeature", ({ enumerable: true, get: function () { return model_1.layoutContainerFeature; } }));
Object.defineProperty(exports, "SShapeElement", ({ enumerable: true, get: function () { return model_1.SShapeElement; } }));
__exportStar(__webpack_require__(/*! sprotty/lib/features/bounds/stack-layout */ "./node_modules/sprotty/lib/features/bounds/stack-layout.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/bounds/vbox-layout */ "./node_modules/sprotty/lib/features/bounds/vbox-layout.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/bounds/views */ "./node_modules/sprotty/lib/features/bounds/views.js"), exports);
var button_handler_1 = __webpack_require__(/*! sprotty/lib/features/button/button-handler */ "./node_modules/sprotty/lib/features/button/button-handler.js");
Object.defineProperty(exports, "ButtonHandlerRegistry", ({ enumerable: true, get: function () { return button_handler_1.ButtonHandlerRegistry; } }));
Object.defineProperty(exports, "configureButtonHandler", ({ enumerable: true, get: function () { return button_handler_1.configureButtonHandler; } }));
__exportStar(__webpack_require__(/*! sprotty/lib/features/button/model */ "./node_modules/sprotty/lib/features/button/model.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/command-palette/action-providers */ "./node_modules/sprotty/lib/features/command-palette/action-providers.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/command-palette/command-palette */ "./node_modules/sprotty/lib/features/command-palette/command-palette.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/context-menu/menu-providers */ "./node_modules/sprotty/lib/features/context-menu/menu-providers.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/context-menu/mouse-listener */ "./node_modules/sprotty/lib/features/context-menu/mouse-listener.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/decoration/decoration-placer */ "./node_modules/sprotty/lib/features/decoration/decoration-placer.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/decoration/model */ "./node_modules/sprotty/lib/features/decoration/model.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/decoration/views */ "./node_modules/sprotty/lib/features/decoration/views.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/edge-intersection/intersection-finder */ "./node_modules/sprotty/lib/features/edge-intersection/intersection-finder.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/edge-intersection/sweepline */ "./node_modules/sprotty/lib/features/edge-intersection/sweepline.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/edge-layout/di.config */ "./node_modules/sprotty/lib/features/edge-layout/di.config.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/edge-layout/edge-layout */ "./node_modules/sprotty/lib/features/edge-layout/edge-layout.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/edge-layout/model */ "./node_modules/sprotty/lib/features/edge-layout/model.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/edit/create */ "./node_modules/sprotty/lib/features/edit/create.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/edit/create-on-drag */ "./node_modules/sprotty/lib/features/edit/create-on-drag.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/edit/delete */ "./node_modules/sprotty/lib/features/edit/delete.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/edit/di.config */ "./node_modules/sprotty/lib/features/edit/di.config.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/edit/edit-label */ "./node_modules/sprotty/lib/features/edit/edit-label.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/edit/edit-label-ui */ "./node_modules/sprotty/lib/features/edit/edit-label-ui.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/edit/edit-routing */ "./node_modules/sprotty/lib/features/edit/edit-routing.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/edit/model */ "./node_modules/sprotty/lib/features/edit/model.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/edit/reconnect */ "./node_modules/sprotty/lib/features/edit/reconnect.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/expand/expand */ "./node_modules/sprotty/lib/features/expand/expand.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/expand/model */ "./node_modules/sprotty/lib/features/expand/model.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/expand/views */ "./node_modules/sprotty/lib/features/expand/views.js"), exports);
var export_1 = __webpack_require__(/*! sprotty/lib/features/export/export */ "./node_modules/sprotty/lib/features/export/export.js");
Object.defineProperty(exports, "ExportSvgCommand", ({ enumerable: true, get: function () { return export_1.ExportSvgCommand; } }));
Object.defineProperty(exports, "ExportSvgKeyListener", ({ enumerable: true, get: function () { return export_1.ExportSvgKeyListener; } }));
Object.defineProperty(exports, "ExportSvgPostprocessor", ({ enumerable: true, get: function () { return export_1.ExportSvgPostprocessor; } }));
Object.defineProperty(exports, "RequestExportSvgAction", ({ enumerable: true, get: function () { return export_1.RequestExportSvgAction; } }));
__exportStar(__webpack_require__(/*! sprotty/lib/features/export/model */ "./node_modules/sprotty/lib/features/export/model.js"), exports);
var svg_exporter_1 = __webpack_require__(/*! sprotty/lib/features/export/svg-exporter */ "./node_modules/sprotty/lib/features/export/svg-exporter.js");
Object.defineProperty(exports, "SvgExporter", ({ enumerable: true, get: function () { return svg_exporter_1.SvgExporter; } }));
__exportStar(__webpack_require__(/*! sprotty/lib/features/fade/fade */ "./node_modules/sprotty/lib/features/fade/fade.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/fade/model */ "./node_modules/sprotty/lib/features/fade/model.js"), exports);
var hover_1 = __webpack_require__(/*! sprotty/lib/features/hover/hover */ "./node_modules/sprotty/lib/features/hover/hover.js");
Object.defineProperty(exports, "AbstractHoverMouseListener", ({ enumerable: true, get: function () { return hover_1.AbstractHoverMouseListener; } }));
Object.defineProperty(exports, "ClosePopupActionHandler", ({ enumerable: true, get: function () { return hover_1.ClosePopupActionHandler; } }));
Object.defineProperty(exports, "HoverFeedbackCommand", ({ enumerable: true, get: function () { return hover_1.HoverFeedbackCommand; } }));
Object.defineProperty(exports, "HoverKeyListener", ({ enumerable: true, get: function () { return hover_1.HoverKeyListener; } }));
Object.defineProperty(exports, "HoverMouseListener", ({ enumerable: true, get: function () { return hover_1.HoverMouseListener; } }));
Object.defineProperty(exports, "PopupHoverMouseListener", ({ enumerable: true, get: function () { return hover_1.PopupHoverMouseListener; } }));
Object.defineProperty(exports, "SetPopupModelCommand", ({ enumerable: true, get: function () { return hover_1.SetPopupModelCommand; } }));
__exportStar(__webpack_require__(/*! sprotty/lib/features/hover/model */ "./node_modules/sprotty/lib/features/hover/model.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/move/model */ "./node_modules/sprotty/lib/features/move/model.js"), exports);
var move_1 = __webpack_require__(/*! sprotty/lib/features/move/move */ "./node_modules/sprotty/lib/features/move/move.js");
Object.defineProperty(exports, "LocationPostprocessor", ({ enumerable: true, get: function () { return move_1.LocationPostprocessor; } }));
Object.defineProperty(exports, "MorphEdgesAnimation", ({ enumerable: true, get: function () { return move_1.MorphEdgesAnimation; } }));
Object.defineProperty(exports, "MoveAnimation", ({ enumerable: true, get: function () { return move_1.MoveAnimation; } }));
Object.defineProperty(exports, "MoveCommand", ({ enumerable: true, get: function () { return move_1.MoveCommand; } }));
Object.defineProperty(exports, "MoveMouseListener", ({ enumerable: true, get: function () { return move_1.MoveMouseListener; } }));
__exportStar(__webpack_require__(/*! sprotty/lib/features/move/snap */ "./node_modules/sprotty/lib/features/move/snap.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/nameable/model */ "./node_modules/sprotty/lib/features/nameable/model.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/open/model */ "./node_modules/sprotty/lib/features/open/model.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/open/open */ "./node_modules/sprotty/lib/features/open/open.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/projection/model */ "./node_modules/sprotty/lib/features/projection/model.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/projection/views */ "./node_modules/sprotty/lib/features/projection/views.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/routing/abstract-edge-router */ "./node_modules/sprotty/lib/features/routing/abstract-edge-router.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/routing/anchor */ "./node_modules/sprotty/lib/features/routing/anchor.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/routing/bezier-anchors */ "./node_modules/sprotty/lib/features/routing/bezier-anchors.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/routing/bezier-edge-router */ "./node_modules/sprotty/lib/features/routing/bezier-edge-router.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/routing/manhattan-anchors */ "./node_modules/sprotty/lib/features/routing/manhattan-anchors.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/routing/manhattan-edge-router */ "./node_modules/sprotty/lib/features/routing/manhattan-edge-router.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/routing/model */ "./node_modules/sprotty/lib/features/routing/model.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/routing/polyline-anchors */ "./node_modules/sprotty/lib/features/routing/polyline-anchors.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/routing/polyline-edge-router */ "./node_modules/sprotty/lib/features/routing/polyline-edge-router.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/routing/routing */ "./node_modules/sprotty/lib/features/routing/routing.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/routing/views */ "./node_modules/sprotty/lib/features/routing/views.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/select/model */ "./node_modules/sprotty/lib/features/select/model.js"), exports);
var select_1 = __webpack_require__(/*! sprotty/lib/features/select/select */ "./node_modules/sprotty/lib/features/select/select.js");
Object.defineProperty(exports, "GetSelectionAction", ({ enumerable: true, get: function () { return select_1.GetSelectionAction; } }));
Object.defineProperty(exports, "GetSelectionCommand", ({ enumerable: true, get: function () { return select_1.GetSelectionCommand; } }));
Object.defineProperty(exports, "SprottySelectAllCommand", ({ enumerable: true, get: function () { return select_1.SelectAllCommand; } }));
Object.defineProperty(exports, "SprottySelectCommand", ({ enumerable: true, get: function () { return select_1.SelectCommand; } }));
Object.defineProperty(exports, "SelectionResult", ({ enumerable: true, get: function () { return select_1.SelectionResult; } }));
Object.defineProperty(exports, "SelectKeyboardListener", ({ enumerable: true, get: function () { return select_1.SelectKeyboardListener; } }));
Object.defineProperty(exports, "SelectMouseListener", ({ enumerable: true, get: function () { return select_1.SelectMouseListener; } }));
var undo_redo_1 = __webpack_require__(/*! sprotty/lib/features/undo-redo/undo-redo */ "./node_modules/sprotty/lib/features/undo-redo/undo-redo.js");
Object.defineProperty(exports, "UndoRedoKeyListener", ({ enumerable: true, get: function () { return undo_redo_1.UndoRedoKeyListener; } }));
__exportStar(__webpack_require__(/*! sprotty/lib/features/update/model-matching */ "./node_modules/sprotty/lib/features/update/model-matching.js"), exports);
var update_model_1 = __webpack_require__(/*! sprotty/lib/features/update/update-model */ "./node_modules/sprotty/lib/features/update/update-model.js");
Object.defineProperty(exports, "UpdateModelCommand", ({ enumerable: true, get: function () { return update_model_1.UpdateModelCommand; } }));
var center_fit_1 = __webpack_require__(/*! sprotty/lib/features/viewport/center-fit */ "./node_modules/sprotty/lib/features/viewport/center-fit.js");
Object.defineProperty(exports, "BoundsAwareViewportCommand", ({ enumerable: true, get: function () { return center_fit_1.BoundsAwareViewportCommand; } }));
Object.defineProperty(exports, "CenterCommand", ({ enumerable: true, get: function () { return center_fit_1.CenterCommand; } }));
Object.defineProperty(exports, "CenterKeyboardListener", ({ enumerable: true, get: function () { return center_fit_1.CenterKeyboardListener; } }));
Object.defineProperty(exports, "FitToScreenCommand", ({ enumerable: true, get: function () { return center_fit_1.FitToScreenCommand; } }));
__exportStar(__webpack_require__(/*! sprotty/lib/features/viewport/model */ "./node_modules/sprotty/lib/features/viewport/model.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/viewport/scroll */ "./node_modules/sprotty/lib/features/viewport/scroll.js"), exports);
var viewport_1 = __webpack_require__(/*! sprotty/lib/features/viewport/viewport */ "./node_modules/sprotty/lib/features/viewport/viewport.js");
Object.defineProperty(exports, "GetViewportAction", ({ enumerable: true, get: function () { return viewport_1.GetViewportAction; } }));
Object.defineProperty(exports, "GetViewportCommand", ({ enumerable: true, get: function () { return viewport_1.GetViewportCommand; } }));
Object.defineProperty(exports, "SetViewportCommand", ({ enumerable: true, get: function () { return viewport_1.SetViewportCommand; } }));
Object.defineProperty(exports, "ViewportAnimation", ({ enumerable: true, get: function () { return viewport_1.ViewportAnimation; } }));
Object.defineProperty(exports, "ViewportResult", ({ enumerable: true, get: function () { return viewport_1.ViewportResult; } }));
__exportStar(__webpack_require__(/*! sprotty/lib/features/viewport/viewport-root */ "./node_modules/sprotty/lib/features/viewport/viewport-root.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/features/viewport/zoom */ "./node_modules/sprotty/lib/features/viewport/zoom.js"), exports);
var zorder_1 = __webpack_require__(/*! sprotty/lib/features/zorder/zorder */ "./node_modules/sprotty/lib/features/zorder/zorder.js");
Object.defineProperty(exports, "BringToFrontCommand", ({ enumerable: true, get: function () { return zorder_1.BringToFrontCommand; } }));
var sgraph_1 = __webpack_require__(/*! sprotty/lib/graph/sgraph */ "./node_modules/sprotty/lib/graph/sgraph.js");
Object.defineProperty(exports, "SCompartment", ({ enumerable: true, get: function () { return sgraph_1.SCompartment; } }));
Object.defineProperty(exports, "SEdge", ({ enumerable: true, get: function () { return sgraph_1.SEdge; } }));
Object.defineProperty(exports, "SGraph", ({ enumerable: true, get: function () { return sgraph_1.SGraph; } }));
Object.defineProperty(exports, "SGraphIndex", ({ enumerable: true, get: function () { return sgraph_1.SGraphIndex; } }));
Object.defineProperty(exports, "SLabel", ({ enumerable: true, get: function () { return sgraph_1.SLabel; } }));
Object.defineProperty(exports, "SNode", ({ enumerable: true, get: function () { return sgraph_1.SNode; } }));
Object.defineProperty(exports, "SPort", ({ enumerable: true, get: function () { return sgraph_1.SPort; } }));
// ------------------ Graph ------------------
__exportStar(__webpack_require__(/*! sprotty/lib/graph/sgraph-factory */ "./node_modules/sprotty/lib/graph/sgraph-factory.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/graph/views */ "./node_modules/sprotty/lib/graph/views.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/lib/generic-views */ "./node_modules/sprotty/lib/lib/generic-views.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/lib/html-views */ "./node_modules/sprotty/lib/lib/html-views.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/lib/jsx */ "./node_modules/sprotty/lib/lib/jsx.js"), exports);
var model_2 = __webpack_require__(/*! sprotty/lib/lib/model */ "./node_modules/sprotty/lib/lib/model.js");
Object.defineProperty(exports, "CircularNode", ({ enumerable: true, get: function () { return model_2.CircularNode; } }));
Object.defineProperty(exports, "CircularPort", ({ enumerable: true, get: function () { return model_2.CircularPort; } }));
Object.defineProperty(exports, "DiamondNode", ({ enumerable: true, get: function () { return model_2.DiamondNode; } }));
Object.defineProperty(exports, "ForeignObjectElement", ({ enumerable: true, get: function () { return model_2.ForeignObjectElement; } }));
Object.defineProperty(exports, "HtmlRoot", ({ enumerable: true, get: function () { return model_2.HtmlRoot; } }));
Object.defineProperty(exports, "PreRenderedElement", ({ enumerable: true, get: function () { return model_2.PreRenderedElement; } }));
Object.defineProperty(exports, "RectangularNode", ({ enumerable: true, get: function () { return model_2.RectangularNode; } }));
Object.defineProperty(exports, "RectangularPort", ({ enumerable: true, get: function () { return model_2.RectangularPort; } }));
Object.defineProperty(exports, "ShapedPreRenderedElement", ({ enumerable: true, get: function () { return model_2.ShapedPreRenderedElement; } }));
// ------------------ Library ------------------
__exportStar(__webpack_require__(/*! sprotty/lib/lib/modules */ "./node_modules/sprotty/lib/lib/modules.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/lib/svg-views */ "./node_modules/sprotty/lib/lib/svg-views.js"), exports);
// ------------------ Model Source ------------------
__exportStar(__webpack_require__(/*! sprotty/lib/model-source/commit-model */ "./node_modules/sprotty/lib/model-source/commit-model.js"), exports);
var diagram_server_1 = __webpack_require__(/*! sprotty/lib/model-source/diagram-server */ "./node_modules/sprotty/lib/model-source/diagram-server.js");
Object.defineProperty(exports, "DiagramServerProxy", ({ enumerable: true, get: function () { return diagram_server_1.DiagramServerProxy; } }));
__exportStar(__webpack_require__(/*! sprotty/lib/model-source/local-model-source */ "./node_modules/sprotty/lib/model-source/local-model-source.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/model-source/logging */ "./node_modules/sprotty/lib/model-source/logging.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/model-source/model-source */ "./node_modules/sprotty/lib/model-source/model-source.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/model-source/websocket */ "./node_modules/sprotty/lib/model-source/websocket.js"), exports);
// ------------------ Utilities ------------------
__exportStar(__webpack_require__(/*! sprotty/lib/utils/browser */ "./node_modules/sprotty/lib/utils/browser.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/utils/codicon */ "./node_modules/sprotty/lib/utils/codicon.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/utils/color */ "./node_modules/sprotty/lib/utils/color.js"), exports);
var geometry_1 = __webpack_require__(/*! sprotty/lib/utils/geometry */ "./node_modules/sprotty/lib/utils/geometry.js");
Object.defineProperty(exports, "Diamond", ({ enumerable: true, get: function () { return geometry_1.Diamond; } }));
Object.defineProperty(exports, "intersection", ({ enumerable: true, get: function () { return geometry_1.intersection; } }));
Object.defineProperty(exports, "PointToPointLine", ({ enumerable: true, get: function () { return geometry_1.PointToPointLine; } }));
__exportStar(__webpack_require__(/*! sprotty/lib/utils/inversify */ "./node_modules/sprotty/lib/utils/inversify.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/utils/logging */ "./node_modules/sprotty/lib/utils/logging.js"), exports);
__exportStar(__webpack_require__(/*! sprotty/lib/utils/registry */ "./node_modules/sprotty/lib/utils/registry.js"), exports);
const di_config_1 = __webpack_require__(/*! sprotty/lib/base/di.config */ "./node_modules/sprotty/lib/base/di.config.js");
exports.defaultModule = di_config_1.default;
const di_config_2 = __webpack_require__(/*! sprotty/lib/features/bounds/di.config */ "./node_modules/sprotty/lib/features/bounds/di.config.js");
exports.boundsModule = di_config_2.default;
const di_config_3 = __webpack_require__(/*! sprotty/lib/features/button/di.config */ "./node_modules/sprotty/lib/features/button/di.config.js");
exports.buttonModule = di_config_3.default;
const di_config_4 = __webpack_require__(/*! sprotty/lib/features/command-palette/di.config */ "./node_modules/sprotty/lib/features/command-palette/di.config.js");
exports.commandPaletteModule = di_config_4.default;
const di_config_5 = __webpack_require__(/*! sprotty/lib/features/context-menu/di.config */ "./node_modules/sprotty/lib/features/context-menu/di.config.js");
exports.contextMenuModule = di_config_5.default;
const di_config_6 = __webpack_require__(/*! sprotty/lib/features/decoration/di.config */ "./node_modules/sprotty/lib/features/decoration/di.config.js");
exports.decorationModule = di_config_6.default;
const di_config_7 = __webpack_require__(/*! sprotty/lib/features/edge-intersection/di.config */ "./node_modules/sprotty/lib/features/edge-intersection/di.config.js");
exports.edgeIntersectionModule = di_config_7.default;
const di_config_8 = __webpack_require__(/*! sprotty/lib/features/edge-layout/di.config */ "./node_modules/sprotty/lib/features/edge-layout/di.config.js");
exports.edgeLayoutModule = di_config_8.default;
const di_config_9 = __webpack_require__(/*! sprotty/lib/features/expand/di.config */ "./node_modules/sprotty/lib/features/expand/di.config.js");
exports.expandModule = di_config_9.default;
const di_config_10 = __webpack_require__(/*! sprotty/lib/features/export/di.config */ "./node_modules/sprotty/lib/features/export/di.config.js");
exports.exportModule = di_config_10.default;
const di_config_11 = __webpack_require__(/*! sprotty/lib/features/fade/di.config */ "./node_modules/sprotty/lib/features/fade/di.config.js");
exports.fadeModule = di_config_11.default;
const di_config_12 = __webpack_require__(/*! sprotty/lib/features/hover/di.config */ "./node_modules/sprotty/lib/features/hover/di.config.js");
exports.hoverModule = di_config_12.default;
const di_config_13 = __webpack_require__(/*! sprotty/lib/features/move/di.config */ "./node_modules/sprotty/lib/features/move/di.config.js");
exports.moveModule = di_config_13.default;
const di_config_14 = __webpack_require__(/*! sprotty/lib/features/open/di.config */ "./node_modules/sprotty/lib/features/open/di.config.js");
exports.openModule = di_config_14.default;
const di_config_15 = __webpack_require__(/*! sprotty/lib/features/routing/di.config */ "./node_modules/sprotty/lib/features/routing/di.config.js");
exports.routingModule = di_config_15.default;
const di_config_16 = __webpack_require__(/*! sprotty/lib/features/select/di.config */ "./node_modules/sprotty/lib/features/select/di.config.js");
exports.selectModule = di_config_16.default;
const di_config_17 = __webpack_require__(/*! sprotty/lib/features/undo-redo/di.config */ "./node_modules/sprotty/lib/features/undo-redo/di.config.js");
exports.undoRedoModule = di_config_17.default;
const di_config_18 = __webpack_require__(/*! sprotty/lib/features/update/di.config */ "./node_modules/sprotty/lib/features/update/di.config.js");
exports.updateModule = di_config_18.default;
const di_config_19 = __webpack_require__(/*! sprotty/lib/features/viewport/di.config */ "./node_modules/sprotty/lib/features/viewport/di.config.js");
exports.viewportModule = di_config_19.default;
const di_config_20 = __webpack_require__(/*! sprotty/lib/features/zorder/di.config */ "./node_modules/sprotty/lib/features/zorder/di.config.js");
exports.zorderModule = di_config_20.default;
const di_config_21 = __webpack_require__(/*! sprotty/lib/graph/di.config */ "./node_modules/sprotty/lib/graph/di.config.js");
exports.graphModule = di_config_21.default;
const di_config_22 = __webpack_require__(/*! sprotty/lib/model-source/di.config */ "./node_modules/sprotty/lib/model-source/di.config.js");
exports.modelSourceModule = di_config_22.default;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/utils/argument-utils.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/utils/argument-utils.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CornerRadius = exports.EdgePadding = exports.GArgument = void 0;
const argumentable_1 = __webpack_require__(/*! ../base/argumentable */ "./node_modules/@eclipse-glsp/client/lib/base/argumentable.js");
var GArgument;
(function (GArgument) {
    function asNumber(argValue) {
        return typeof argValue === 'number' ? argValue : undefined;
    }
    GArgument.asNumber = asNumber;
    function asNumbers(argValues) {
        return argValues.map(asNumber);
    }
    GArgument.asNumbers = asNumbers;
    function asString(argValue) {
        return typeof argValue === 'string' ? argValue : undefined;
    }
    GArgument.asString = asString;
    function asStrings(argValues) {
        return argValues.map(asString);
    }
    GArgument.asStrings = asStrings;
    function asBoolean(argValue) {
        return typeof argValue === 'boolean' ? argValue : undefined;
    }
    GArgument.asBoolean = asBoolean;
    function asBooleans(argValues) {
        return argValues.map(asBoolean);
    }
    GArgument.asBooleans = asBooleans;
    function getArgument(element, key) {
        return (0, argumentable_1.hasArguments)(element) ? element.args[key] : undefined;
    }
    GArgument.getArgument = getArgument;
    function getNumber(element, key) {
        return (0, argumentable_1.hasArguments)(element) ? asNumber(element.args[key]) : undefined;
    }
    GArgument.getNumber = getNumber;
    function getString(element, key) {
        return (0, argumentable_1.hasArguments)(element) ? asString(element.args[key]) : undefined;
    }
    GArgument.getString = getString;
    function getBoolean(element, key) {
        return (0, argumentable_1.hasArguments)(element) ? asBoolean(element.args[key]) : undefined;
    }
    GArgument.getBoolean = getBoolean;
    function getArguments(element, ...keys) {
        if (!(0, argumentable_1.hasArguments)(element)) {
            return undefined;
        }
        const values = [];
        for (const key of keys) {
            const value = element.args[key];
            if (value) {
                values.push(value);
            }
        }
        return values;
    }
    GArgument.getArguments = getArguments;
    function getNumbers(element, ...keys) {
        const values = getArguments(element, ...keys);
        return values ? asNumbers(values) : undefined;
    }
    GArgument.getNumbers = getNumbers;
    function getStrings(element, ...keys) {
        const values = getArguments(element, ...keys);
        return values ? asStrings(values) : undefined;
    }
    GArgument.getStrings = getStrings;
    function getBooleans(element, ...keys) {
        const values = getArguments(element, ...keys);
        return values ? asBooleans(values) : undefined;
    }
    GArgument.getBooleans = getBooleans;
    function hasNValues(values, length) {
        return values.length === length && values.filter(e => e === undefined).length === 0;
    }
    GArgument.hasNValues = hasNValues;
})(GArgument = exports.GArgument || (exports.GArgument = {}));
var EdgePadding;
(function (EdgePadding) {
    const KEY = 'edgePadding';
    function from(element) {
        return GArgument.getNumber(element, KEY);
    }
    EdgePadding.from = from;
})(EdgePadding = exports.EdgePadding || (exports.EdgePadding = {}));
class CornerRadius {
    constructor(topLeft = 0, topRight = topLeft, bottomRight = topLeft, bottomLeft = topRight) {
        this.topLeft = topLeft;
        this.topRight = topRight;
        this.bottomRight = bottomRight;
        this.bottomLeft = bottomLeft;
    }
    static from(element) {
        const radius = GArgument.getNumbers(element, this.KEY_RADIUS_TOP_LEFT, this.KEY_RADIUS_TOP_RIGHT, this.KEY_RADIUS_BOTTOM_RIGHT, this.KEY_RADIUS_BOTTOM_LEFT);
        if (radius === undefined || radius[0] === undefined) {
            return undefined;
        }
        return GArgument.hasNValues(radius, 4) ? new CornerRadius(radius[0], radius[1], radius[2], radius[3]) : new CornerRadius(radius[0]);
    }
}
exports.CornerRadius = CornerRadius;
CornerRadius.NO_RADIUS = new CornerRadius(0);
CornerRadius.KEY_RADIUS_TOP_LEFT = 'radiusTopLeft';
CornerRadius.KEY_RADIUS_TOP_RIGHT = 'radiusTopRight';
CornerRadius.KEY_RADIUS_BOTTOM_RIGHT = 'radiusBottomRight';
CornerRadius.KEY_RADIUS_BOTTOM_LEFT = 'radiusBottomLeft';


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/utils/html-utils.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/utils/html-utils.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createElementFromHTML = void 0;
/********************************************************************************
 * Copyright (c) 2019-2020 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
function createElementFromHTML(html) {
    const template = document.createElement('template');
    html = html.trim(); // Never return a text node of whitespace as the result
    template.innerHTML = html;
    const node = template.content.firstChild;
    if (node && node instanceof HTMLElement) {
        return node;
    }
    return undefined;
}
exports.createElementFromHTML = createElementFromHTML;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/utils/layout-utils.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/utils/layout-utils.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toValidElementAndBounds = exports.toValidElementMove = exports.isValidMove = exports.isValidSize = exports.getLayoutOptions = exports.minHeight = exports.minWidth = void 0;
function minWidth(element) {
    const layoutOptions = getLayoutOptions(element);
    if (layoutOptions !== undefined && typeof layoutOptions.minWidth === 'number') {
        return layoutOptions.minWidth;
    }
    return 1;
}
exports.minWidth = minWidth;
function minHeight(element) {
    const layoutOptions = getLayoutOptions(element);
    if (layoutOptions !== undefined && typeof layoutOptions.minHeight === 'number') {
        return layoutOptions.minHeight;
    }
    return 1;
}
exports.minHeight = minHeight;
function getLayoutOptions(element) {
    const layoutOptions = element.layoutOptions;
    if (layoutOptions !== undefined) {
        return layoutOptions;
    }
    return undefined;
}
exports.getLayoutOptions = getLayoutOptions;
function isValidSize(element, size) {
    return size.width >= minWidth(element) && size.height >= minHeight(element);
}
exports.isValidSize = isValidSize;
function isValidMove(element, newPosition, movementRestrictor) {
    if (movementRestrictor) {
        return movementRestrictor.validate(element, newPosition);
    }
    return true;
}
exports.isValidMove = isValidMove;
function toValidElementMove(element, move, movementRestrictor) {
    if (!isValidMove(element, move.toPosition, movementRestrictor)) {
        return;
    }
    return move;
}
exports.toValidElementMove = toValidElementMove;
function toValidElementAndBounds(element, bounds, movementRestrictor) {
    if (!isValidMove(element, bounds.newPosition, movementRestrictor)) {
        return;
    }
    const elementMinWidth = minWidth(element);
    if (bounds.newSize.width < elementMinWidth) {
        bounds.newSize.width = elementMinWidth;
    }
    const elementMinHeight = minHeight(element);
    if (bounds.newSize.height < elementMinHeight) {
        bounds.newSize.height = elementMinHeight;
    }
    return bounds;
}
exports.toValidElementAndBounds = toValidElementAndBounds;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/utils/marker.js":
/*!***************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/utils/marker.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.collectIssueMarkers = exports.MarkerPredicates = void 0;
/********************************************************************************
 * Copyright (c) 2019-2021 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
var MarkerPredicates;
(function (MarkerPredicates) {
    MarkerPredicates.ALL = () => true;
    MarkerPredicates.ERRORS = (marker) => hasIssueWithSeverity(marker, protocol_1.MarkerKind.ERROR);
    MarkerPredicates.WARNINGS = (marker) => hasIssueWithSeverity(marker, protocol_1.MarkerKind.WARNING);
    MarkerPredicates.INFOS = (marker) => hasIssueWithSeverity(marker, protocol_1.MarkerKind.INFO);
    function hasIssueWithSeverity(marker, severity) {
        return marker.issues.find(issue => issue.severity === severity) !== undefined;
    }
    MarkerPredicates.hasIssueWithSeverity = hasIssueWithSeverity;
})(MarkerPredicates = exports.MarkerPredicates || (exports.MarkerPredicates = {}));
function collectIssueMarkers(root) {
    const markers = [];
    for (const child of root.children) {
        if (child instanceof sprotty_1.SIssueMarker) {
            markers.push(child);
        }
        markers.push(...collectIssueMarkers(child));
    }
    return markers;
}
exports.collectIssueMarkers = collectIssueMarkers;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/utils/smodel-util.js":
/*!********************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/utils/smodel-util.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getElementTypeId = exports.hasCompatibleType = exports.calcRoute = exports.calcElementAndRoute = exports.calcElementAndRoutingPoints = exports.ROUTE_KINDS = exports.ROUTING_POINT_KINDS = exports.toElementAndRoutingPoints = exports.toElementAndBounds = exports.isSelectableAndBoundsAware = exports.isRoutingHandle = exports.isRoutable = exports.isNonRoutableSelectedBoundsAware = exports.isNonRoutableSelectedMovableBoundsAware = exports.removeCssClasses = exports.addCssClasses = exports.isNotUndefined = exports.hasSelectedElements = exports.getSelectedElementCount = exports.getElements = exports.getMatchingElements = exports.forEachElement = exports.filter = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
/**
 * Retrieves all elements from the given {@link ModelIndexImpl} that match the given {@link ModelFilterPredicate}
 * @param index The {@link ModelIndexImpl}.
 * @param predicate The {@link ModelFilterPredicate} that should be used.
 * @returns A {@link FluentIterable} of all indexed element that match the predicate
 * (correctly casted to also include the additional type of the predicate).
 */
function filter(index, predicate) {
    return index.all().filter(predicate);
}
exports.filter = filter;
/**
 * Retrieves all elements from the given {@link ModelIndexImpl} that match the given {@link ModelFilterPredicate} and executes
 * the given runnable for each element of the result set.
 * @param index The {@link ModelIndexImpl}.
 * @param predicate The {@link ModelFilterPredicate} that should be used.
 * @param runnable The runnable that should be executed for each matching element.
 */
function forEachElement(index, predicate, runnable) {
    filter(index, predicate).forEach(runnable);
}
exports.forEachElement = forEachElement;
/**
 * Retrieves an array of all elements that match the given {@link ModelFilterPredicate} from the given {@link ModelIndexImpl}.
 * @param index The {@link ModelIndexImpl}.
 * @param predicate The {@link ModelFilterPredicate} that should be used.
 * @returns An array of all indexed element that match the predicate
 * (correctly casted to also include the additional type of the predicate).
 */
function getMatchingElements(index, predicate) {
    return Array.from(filter(index, predicate));
}
exports.getMatchingElements = getMatchingElements;
/**
 * Invokes the given model index to retrieve the corresponding model elements for the given set of ids. Ids that
 * have no corresponding element in the index will be ignored.
 * @param index THe model index.
 * @param elementsIDs The element ids.
 * @param guard Optional typeguard. If defined only elements that match the guard will be returned.
 * @returns An array of the model elements that correspond to the given ids and filter predicate.
 */
function getElements(index, elementsIDs, guard) {
    // Internal filter function that filters out undefined model elements and runs an optional typeguard check.
    const filterFn = (element) => {
        if (element !== undefined) {
            return guard ? guard(element) : true;
        }
        return false;
    };
    return elementsIDs.map(id => index.getById(id)).filter(filterFn);
}
exports.getElements = getElements;
/**
 * Retrieves the amount of currently selected elements in the given {@link ModelIndexImpl}.
 * @param index The {@link ModelIndexImpl}.
 * @returns The amount of selected elements.
 */
function getSelectedElementCount(index) {
    let selected = 0;
    forEachElement(index, sprotty_1.isSelected, element => selected++);
    return selected;
}
exports.getSelectedElementCount = getSelectedElementCount;
/**
 * Helper function to check wether an any element is selected in the given {@link ModelIndexImpl}.
 * @param index The {@link ModelIndexImpl}.
 * @returns `true` if at least one element is selected, `false` otherwise.
 */
function hasSelectedElements(index) {
    return getSelectedElementCount(index) > 0;
}
exports.hasSelectedElements = hasSelectedElements;
/**
 * Helper function to check wether an element is defined. Can be used as {@link ModelFilterPredicate}.
 * @param element The element that should be checked.
 * @returns the type predicate for `T`
 */
function isNotUndefined(element) {
    return element !== undefined;
}
exports.isNotUndefined = isNotUndefined;
/**
 * Adds a set of css classes to the given {@link SModelElement}.
 * @param element The element to which the css classes should be added.
 * @param cssClasses The set of css classes as string array.
 */
function addCssClasses(element, cssClasses) {
    var _a;
    const elementCssClasses = (_a = element.cssClasses) !== null && _a !== void 0 ? _a : [];
    (0, protocol_1.distinctAdd)(elementCssClasses, ...cssClasses);
    element.cssClasses = elementCssClasses;
}
exports.addCssClasses = addCssClasses;
/**
 * Removes a set of css classes from the given {@link SModelElement}.
 * @param element The element from which the css classes should be removed.
 * @param cssClasses The set of css classes as string array.
 */
function removeCssClasses(root, cssClasses) {
    if (!root.cssClasses || root.cssClasses.length === 0) {
        return;
    }
    (0, protocol_1.remove)(root.cssClasses, ...cssClasses);
}
exports.removeCssClasses = removeCssClasses;
function isNonRoutableSelectedMovableBoundsAware(element) {
    return isNonRoutableSelectedBoundsAware(element) && (0, sprotty_1.isMoveable)(element);
}
exports.isNonRoutableSelectedMovableBoundsAware = isNonRoutableSelectedMovableBoundsAware;
/**
 * A typeguard function to check wether a given {@link SModelElement} implements the {@link BoundsAware} model feature,
 * the {@link Selectable} model feature and is actually selected. In addition, the element must not be a {@link SRoutableElement}.
 * @param element The element to check.
 * @returns A type predicate indicating wether the element is of type {@link SelectableBoundsAware}.
 */
function isNonRoutableSelectedBoundsAware(element) {
    return (0, sprotty_1.isBoundsAware)(element) && (0, sprotty_1.isSelected)(element) && !isRoutable(element);
}
exports.isNonRoutableSelectedBoundsAware = isNonRoutableSelectedBoundsAware;
/**
 * A type guard function to check wether a given {@link SModelElement} is a {@link SRoutableElement}.
 * @param element The element to check.
 * @returns A type predicate indicating wether the element is a {@link SRoutableElement}.
 */
function isRoutable(element) {
    return element instanceof sprotty_1.SRoutableElement && element.routingPoints !== undefined;
}
exports.isRoutable = isRoutable;
/**
 * A typeguard function to check wether a given {@link SModelElement} is a {@link SRoutingHandle}.
 * @param element The element to check.
 * @returns A type predicate indicating wether the element is a {@link SRoutingHandle}
 */
function isRoutingHandle(element) {
    return element !== undefined && element instanceof sprotty_1.SRoutingHandle;
}
exports.isRoutingHandle = isRoutingHandle;
/**
 * A typeguard function to check wether a given {@link SModelElement} implements the {@link Selectable} model feature and
 * the {@link BoundsAware} model feature.
 * @returns A type predicate indicating wether the element is of type {@link SelectableBoundsAware}.
 */
function isSelectableAndBoundsAware(element) {
    return (0, sprotty_1.isSelectable)(element) && (0, sprotty_1.isBoundsAware)(element);
}
exports.isSelectableAndBoundsAware = isSelectableAndBoundsAware;
/**
 * Helper function to translate a given {@link SModelElement} into its corresponding {@link ElementAndBounds} representation.
 * @param element The element to translate.
 * @returns The corresponding {@link ElementAndBounds} for the given element.
 */
function toElementAndBounds(element) {
    return {
        elementId: element.id,
        newPosition: {
            x: element.bounds.x,
            y: element.bounds.y
        },
        newSize: {
            width: element.bounds.width,
            height: element.bounds.height
        }
    };
}
exports.toElementAndBounds = toElementAndBounds;
/**
 * Helper function to translate a given {@link SRoutableElement} into its corresponding
 * {@link ElementAndRoutingPoints} representation.
 * @param element The element to translate.
 * @returns The corresponding {@link ElementAndRoutingPoints} for the given element.
 */
function toElementAndRoutingPoints(element) {
    return {
        elementId: element.id,
        newRoutingPoints: element.routingPoints
    };
}
exports.toElementAndRoutingPoints = toElementAndRoutingPoints;
/** Pure routing point data kinds. */
exports.ROUTING_POINT_KINDS = ['linear', 'bezier-junction'];
/** Pure route data kinds. */
exports.ROUTE_KINDS = [...exports.ROUTING_POINT_KINDS, 'source', 'target'];
/**
 * Helper function to calculate the {@link ElementAndRoutingPoints} for a given {@link SRoutableElement}.
 * If client layout is activated, i.e., the edge routing registry is given and has a router for the element, then the routing
 * points from the calculated route are used, otherwise we use the already specified routing points of the {@link SRoutableElement}.
 * @param element The element to translate.
 * @param routerRegistry the edge router registry.
 * @returns The corresponding {@link ElementAndRoutingPoints} for the given element.
 */
function calcElementAndRoutingPoints(element, routerRegistry) {
    const newRoutingPoints = routerRegistry ? calcRoute(element, routerRegistry, exports.ROUTING_POINT_KINDS) : element.routingPoints;
    return { elementId: element.id, newRoutingPoints };
}
exports.calcElementAndRoutingPoints = calcElementAndRoutingPoints;
/**
 * Helper function to calculate the route for a given {@link SRoutableElement}.
 * If client layout is activated, i.e., the edge routing registry is given and has a router for the element, then the points
 * from the calculated route are used, otherwise we use the already specified routing points of the {@link SRoutableElement}.
 * @param element The element to translate.
 * @param routerRegistry the edge router registry.
 * @returns The corresponding route for the given element.
 */
function calcElementAndRoute(element, routerRegistry) {
    var _a, _b;
    let route = routerRegistry ? calcRoute(element, routerRegistry, exports.ROUTE_KINDS) : undefined;
    if (!route) {
        // add source and target to the routing points
        route = [...element.routingPoints];
        route.splice(0, 0, ((_a = element.source) === null || _a === void 0 ? void 0 : _a.position) || protocol_1.Point.ORIGIN);
        route.push(((_b = element.target) === null || _b === void 0 ? void 0 : _b.position) || protocol_1.Point.ORIGIN);
    }
    return { elementId: element.id, newRoutingPoints: route };
}
exports.calcElementAndRoute = calcElementAndRoute;
/**
 * Helper function to calculate the route for a given {@link SRoutableElement}.
 * @param element The element to translate.
 * @param routerRegistry the edge router registry.
 * @param pointKinds the routing point kinds that should be considered.
 * @returns The corresponding route for the given element.
 */
function calcRoute(element, routerRegistry, pointKinds) {
    return routerRegistry === null || routerRegistry === void 0 ? void 0 : routerRegistry.get(element.routerKind).route(element).filter((point, idx, fullRoute) => idx === fullRoute.findIndex(otherPoint => otherPoint.x === point.x && otherPoint.y === point.y)).filter(point => !pointKinds || pointKinds.includes(point.kind));
}
exports.calcRoute = calcRoute;
/**
 * Checks if the model is compatible with the passed type string.
 * (either has the same type or a subtype of this type)
 */
function hasCompatibleType(input, type) {
    const inputType = getElementTypeId(input);
    return inputType === type ? true : inputType.split(':').includes(type);
}
exports.hasCompatibleType = hasCompatibleType;
/**
 * Convenience function to retrieve the model element type from a given input. The input
 * can either be a {@link SModelElement}, {@link SModelElementSchema} or a string.
 * @param input The type input.
 * @returns The corresponding model type as string.
 */
function getElementTypeId(input) {
    if (typeof input === 'string') {
        return input;
    }
    else {
        return input['type'];
    }
}
exports.getElementTypeId = getElementTypeId;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/utils/viewpoint-util.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/utils/viewpoint-util.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2019-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toAbsoluteSize = exports.toAbsolutePosition = exports.toAbsoluteBounds = exports.getAbsolutePosition = void 0;
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
/**
 * Return the position corresponding to this mouse event (Browser coordinates)
 * in the diagram coordinates system (i.e. relative to the Diagram's 0;0 point)
 *
 * This functions takes into account the following transformations:
 * - Location of the Diagram Canvas inside of the browser's page
 * - Current viewport Scroll and Zoom
 *
 * @param target
 *  An element from the diagram
 * @param mouseEvent
 *  A mouseEvent
 */
function getAbsolutePosition(target, mouseEvent) {
    let xPos = mouseEvent.pageX;
    let yPos = mouseEvent.pageY;
    const canvasBounds = target.root.canvasBounds;
    xPos -= canvasBounds.x;
    yPos -= canvasBounds.y;
    const viewport = (0, sprotty_1.findParentByFeature)(target, sprotty_1.isViewport);
    const zoom = viewport ? viewport.zoom : 1;
    if (viewport) {
        const scroll = { x: viewport.scroll.x, y: viewport.scroll.y };
        xPos += scroll.x * zoom;
        yPos += scroll.y * zoom;
        xPos /= zoom;
        yPos /= zoom;
    }
    return {
        x: xPos,
        y: yPos
    };
}
exports.getAbsolutePosition = getAbsolutePosition;
/**
 * Translates the bounds of the diagram element (local coordinates) into the diagram coordinates system
 * (i.e. relative to the Diagram's 0;0 point)
 *
 * @param target  A bounds-aware element from the diagram
 */
function toAbsoluteBounds(element) {
    const location = (0, sprotty_1.isAlignable)(element) ? element.alignment : protocol_1.Point.ORIGIN;
    const x = location.x;
    const y = location.y;
    const width = element.bounds.width;
    const height = element.bounds.height;
    return (0, sprotty_1.translateBounds)({ x, y, width, height }, element, element.root);
}
exports.toAbsoluteBounds = toAbsoluteBounds;
/**
 * Translates the position of the diagram element (local coordinates) into the diagram coordinates system
 * (i.e. relative to the Diagram's 0;0 point)
 *
 * @param target  A bounds-aware element from the diagram
 */
function toAbsolutePosition(target) {
    return toAbsoluteBounds(target);
}
exports.toAbsolutePosition = toAbsolutePosition;
/**
 * Translates the size of the diagram element (local coordinates) into the diagram coordinates system
 * (i.e. relative to the Diagram's 0;0 point)
 *
 * @param target  A bounds-aware element from the diagram
 */
function toAbsoluteSize(target) {
    return toAbsoluteBounds(target);
}
exports.toAbsoluteSize = toAbsoluteSize;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/views/base-view-module.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/views/base-view-module.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.configureDefaultModelElements = void 0;
/********************************************************************************
 * Copyright (c) 2021-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const protocol_1 = __webpack_require__(/*! @eclipse-glsp/protocol */ "./node_modules/@eclipse-glsp/protocol/lib/index.js");
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const model_1 = __webpack_require__(/*! ../lib/model */ "./node_modules/@eclipse-glsp/client/lib/lib/model.js");
const glsp_edge_view_1 = __webpack_require__(/*! ./glsp-edge-view */ "./node_modules/@eclipse-glsp/client/lib/views/glsp-edge-view.js");
const issue_marker_view_1 = __webpack_require__(/*! ./issue-marker-view */ "./node_modules/@eclipse-glsp/client/lib/views/issue-marker-view.js");
const rounded_corner_view_1 = __webpack_require__(/*! ./rounded-corner-view */ "./node_modules/@eclipse-glsp/client/lib/views/rounded-corner-view.js");
const baseViewModule = new inversify_1.ContainerModule((bind, unbind, isBound, rebind) => {
    const context = { bind, unbind, isBound, rebind };
    configureDefaultModelElements(context);
});
function configureDefaultModelElements(context) {
    // HTML elements
    (0, sprotty_1.configureModelElement)(context, protocol_1.DefaultTypes.HTML, sprotty_1.HtmlRoot, sprotty_1.HtmlRootView);
    // generic elements
    (0, sprotty_1.configureModelElement)(context, protocol_1.DefaultTypes.FOREIGN_OBJECT, sprotty_1.ForeignObjectElement, sprotty_1.ForeignObjectView, {
        disable: [sprotty_1.selectFeature, sprotty_1.moveFeature]
    });
    (0, sprotty_1.configureModelElement)(context, protocol_1.DefaultTypes.PRE_RENDERED, sprotty_1.PreRenderedElement, sprotty_1.PreRenderedView);
    (0, sprotty_1.configureModelElement)(context, protocol_1.DefaultTypes.SHAPE_PRE_RENDERED, sprotty_1.ShapedPreRenderedElement, sprotty_1.PreRenderedView);
    // SVG elements
    (0, sprotty_1.configureModelElement)(context, protocol_1.DefaultTypes.SVG, sprotty_1.ViewportRootElement, sprotty_1.SvgViewportView);
    // graph elements
    (0, sprotty_1.configureModelElement)(context, protocol_1.DefaultTypes.GRAPH, model_1.GLSPGraph, sprotty_1.SGraphView);
    (0, sprotty_1.configureModelElement)(context, protocol_1.DefaultTypes.NODE, sprotty_1.SNode, rounded_corner_view_1.RoundedCornerNodeView);
    (0, sprotty_1.configureModelElement)(context, protocol_1.DefaultTypes.COMPARTMENT, sprotty_1.SCompartment, sprotty_1.SCompartmentView);
    (0, sprotty_1.configureModelElement)(context, protocol_1.DefaultTypes.COMPARTMENT_HEADER, sprotty_1.SCompartment, sprotty_1.SCompartmentView);
    (0, sprotty_1.configureModelElement)(context, protocol_1.DefaultTypes.EDGE, sprotty_1.SEdge, glsp_edge_view_1.GEdgeView);
    (0, sprotty_1.configureModelElement)(context, protocol_1.DefaultTypes.PORT, sprotty_1.SPort, sprotty_1.RectangularNodeView);
    (0, sprotty_1.configureModelElement)(context, protocol_1.DefaultTypes.ROUTING_POINT, sprotty_1.SRoutingHandle, sprotty_1.SRoutingHandleView);
    (0, sprotty_1.configureModelElement)(context, protocol_1.DefaultTypes.VOLATILE_ROUTING_POINT, sprotty_1.SRoutingHandle, sprotty_1.SRoutingHandleView);
    (0, sprotty_1.configureModelElement)(context, protocol_1.DefaultTypes.LABEL, sprotty_1.SLabel, sprotty_1.SLabelView);
    // UI elements
    (0, sprotty_1.configureModelElement)(context, protocol_1.DefaultTypes.BUTTON_EXPAND, sprotty_1.SButton, sprotty_1.ExpandButtonView);
    (0, sprotty_1.configureModelElement)(context, protocol_1.DefaultTypes.ISSUE_MARKER, sprotty_1.SIssueMarker, issue_marker_view_1.GIssueMarkerView);
    // shapes
    (0, sprotty_1.configureModelElement)(context, protocol_1.DefaultTypes.NODE_CIRCLE, sprotty_1.CircularNode, sprotty_1.CircularNodeView);
    (0, sprotty_1.configureModelElement)(context, protocol_1.DefaultTypes.NODE_DIAMOND, sprotty_1.DiamondNode, sprotty_1.DiamondNodeView);
    (0, sprotty_1.configureModelElement)(context, protocol_1.DefaultTypes.NODE_RECTANGLE, sprotty_1.RectangularNode, sprotty_1.RectangularNodeView);
}
exports.configureDefaultModelElements = configureDefaultModelElements;
exports["default"] = baseViewModule;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/views/compartments.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/views/compartments.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.StructureCompartmentView = void 0;
/********************************************************************************
 * Copyright (c) 2021 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const lib_1 = __webpack_require__(/*! sprotty/lib */ "./node_modules/sprotty/lib/index.js");
// eslint-disable-next-line @typescript-eslint/no-unused-vars
const JSX = { createElement: lib_1.svg };
let StructureCompartmentView = class StructureCompartmentView extends lib_1.ShapeView {
    render(model, context) {
        if (!this.isVisible(model, context)) {
            return undefined;
        }
        return (JSX.createElement("g", null,
            JSX.createElement("rect", { "class-sprotty-comp": true, "class-debug": false, x: '0', y: '0', width: model.size.width, height: model.size.height }),
            context.renderChildren(model)));
    }
};
StructureCompartmentView = __decorate([
    (0, inversify_1.injectable)()
], StructureCompartmentView);
exports.StructureCompartmentView = StructureCompartmentView;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/views/glsp-edge-view.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/views/glsp-edge-view.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GEdgeView = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const argument_utils_1 = __webpack_require__(/*! ../utils/argument-utils */ "./node_modules/@eclipse-glsp/client/lib/utils/argument-utils.js");
// eslint-disable-next-line @typescript-eslint/no-unused-vars
const JSX = { createElement: sprotty_1.svg };
let GEdgeView = class GEdgeView extends sprotty_1.PolylineEdgeView {
    render(edge, context) {
        const router = this.edgeRouterRegistry.get(edge.routerKind);
        const route = router.route(edge);
        if (route.length === 0) {
            return this.renderDanglingEdge('Cannot compute route', edge, context);
        }
        return (JSX.createElement("g", Object.assign({ "class-sprotty-edge": true, "class-mouseover": edge.hoverFeedback }, this.additionalClasses(edge, context)),
            this.renderLine(edge, route, context),
            this.renderAdditionals(edge, route, context),
            context.renderChildren(edge, { route })));
    }
    additionalClasses(_edge, _context) {
        return {};
    }
    renderLine(_edge, segments, _context) {
        return JSX.createElement("path", { d: this.createPathForSegments(segments) });
    }
    renderAdditionals(edge, segments, _context) {
        // for additional padding we draw another transparent path with larger stroke width
        const edgePadding = argument_utils_1.EdgePadding.from(edge);
        return edgePadding ? [this.renderMouseHandle(segments, edgePadding)] : [];
    }
    renderMouseHandle(segments, padding) {
        return (JSX.createElement("path", { "class-mouse-handle": true, d: this.createPathForSegments(segments), "style-stroke-width": padding * 2, "style-stroke": 'transparent', "style-stroke-dasharray": 'none', "style-stroke-dashoffset": '0' }));
    }
    createPathForSegments(segments) {
        const firstPoint = segments[0];
        let path = `M ${firstPoint.x},${firstPoint.y}`;
        for (let i = 1; i < segments.length; i++) {
            const p = segments[i];
            path += ` L ${p.x},${p.y}`;
        }
        return path;
    }
};
GEdgeView = __decorate([
    (0, inversify_1.injectable)()
], GEdgeView);
exports.GEdgeView = GEdgeView;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/views/glsp-projection-view.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/views/glsp-projection-view.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2022 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GLSPProjectionView = void 0;
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const snabbdom_1 = __webpack_require__(/*! snabbdom */ "./node_modules/snabbdom/build/index.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
/**
 * Special viewport root view that renders horizontal and vertical projection bars for quick navigation.
 */
let GLSPProjectionView = class GLSPProjectionView extends sprotty_1.ProjectedViewportView {
    render(model, context, args) {
        const svgElem = this.renderSvg(model, context, args);
        if (svgElem.data) {
            svgElem.data.class = { 'sprotty-graph': true };
        }
        const rootNode = ((0, sprotty_1.html)("div", { "class-sprotty-graph": false, style: { width: '100%', height: '100%' } },
            svgElem,
            this.renderProjections(model, context, args)));
        (0, sprotty_1.setAttr)(rootNode, 'tabindex', 0);
        return rootNode;
    }
    renderSvg(model, context, args) {
        const transform = `scale(${model.zoom}) translate(${-model.scroll.x},${-model.scroll.y})`;
        const ns = 'http://www.w3.org/2000/svg';
        const svg = (0, snabbdom_1.h)('svg', { ns, style: { height: '100%' } }, (0, snabbdom_1.h)('g', { ns, attrs: { transform } }, context.renderChildren(model)));
        return svg;
    }
    renderProjectionBar(projections, model, modelBounds, orientation) {
        const params = { modelBounds, orientation };
        // NOTE: Here we assume that the projection bars have the same size as the diagram canvas,
        // i.e. they are drawn as overlay above the canvas.
        params.factor =
            orientation === 'horizontal' ? model.canvasBounds.width / modelBounds.width : model.canvasBounds.height / modelBounds.height;
        params.zoomedFactor = params.factor / model.zoom;
        return ((0, sprotty_1.html)("div", { "class-sprotty-projection-bar": true, "class-horizontal": orientation === 'horizontal', "class-vertical": orientation === 'vertical', "class-bordered-projection-bar": true },
            this.renderViewport(model, params),
            projections.map(p => this.renderProjection(p, model, params))));
    }
    renderViewport(model, params) {
        let canvasSize;
        let viewportPos;
        if (params.orientation === 'horizontal') {
            canvasSize = model.canvasBounds.width;
            viewportPos = (model.scroll.x - params.modelBounds.x) * params.factor;
        }
        else {
            canvasSize = model.canvasBounds.height;
            viewportPos = (model.scroll.y - params.modelBounds.y) * params.factor;
        }
        let viewportSize = canvasSize * params.zoomedFactor;
        if (viewportPos < 0) {
            viewportSize += viewportPos;
            viewportPos = 0;
        }
        else if (viewportPos > canvasSize) {
            viewportPos = canvasSize;
        }
        if (viewportSize < 0) {
            viewportSize = 0;
        }
        else if (viewportPos + viewportSize > canvasSize) {
            viewportSize = canvasSize - viewportPos;
        }
        if (Math.abs(viewportSize - canvasSize) < 1) {
            viewportSize = 0;
        }
        const style = params.orientation === 'horizontal'
            ? {
                left: `${viewportPos}px`,
                width: `${viewportSize}px`,
                border: 'none'
            }
            : {
                top: `${viewportPos}px`,
                height: `${viewportSize}px`,
                border: 'none'
            };
        return (0, sprotty_1.html)("div", { "class-sprotty-viewport": viewportSize !== 0, "class-projection-scroll-bar": true, style: style });
    }
    renderProjection(projection, model, params) {
        let canvasSize;
        let projPos;
        let projSize;
        if (params.orientation === 'horizontal') {
            canvasSize = model.canvasBounds.width;
            projPos = (projection.projectedBounds.x - params.modelBounds.x) * params.factor;
            projSize = projection.projectedBounds.width * params.factor;
        }
        else {
            canvasSize = model.canvasBounds.height;
            projPos = (projection.projectedBounds.y - params.modelBounds.y) * params.factor;
            projSize = projection.projectedBounds.height * params.factor;
        }
        if (projPos < 0) {
            projSize += projPos;
            projPos = 0;
        }
        else if (projPos > canvasSize) {
            projPos = canvasSize;
        }
        if (projSize < 0) {
            projSize = 0;
        }
        else if (projPos + projSize > canvasSize) {
            projSize = canvasSize - projPos;
        }
        const style = params.orientation === 'horizontal'
            ? {
                left: `${projPos}px`,
                width: `${projSize}px`,
                height: '60%'
            }
            : {
                top: `${projPos}px`,
                height: `${projSize}px`,
                width: '60%'
            };
        const result = ((0, sprotty_1.html)("div", { id: `${params.orientation}-projection:${projection.elementId}`, "class-sprotty-projection": true, "class-glsp-projection": true, style: style }));
        projection.cssClasses.forEach(cl => (0, sprotty_1.setClass)(result, cl, true));
        return result;
    }
};
GLSPProjectionView = __decorate([
    (0, inversify_1.injectable)()
], GLSPProjectionView);
exports.GLSPProjectionView = GLSPProjectionView;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/views/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/views/index.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
__exportStar(__webpack_require__(/*! ./base-view-module */ "./node_modules/@eclipse-glsp/client/lib/views/base-view-module.js"), exports);
__exportStar(__webpack_require__(/*! ./compartments */ "./node_modules/@eclipse-glsp/client/lib/views/compartments.js"), exports);
__exportStar(__webpack_require__(/*! ./glsp-edge-view */ "./node_modules/@eclipse-glsp/client/lib/views/glsp-edge-view.js"), exports);
__exportStar(__webpack_require__(/*! ./glsp-projection-view */ "./node_modules/@eclipse-glsp/client/lib/views/glsp-projection-view.js"), exports);
__exportStar(__webpack_require__(/*! ./issue-marker-view */ "./node_modules/@eclipse-glsp/client/lib/views/issue-marker-view.js"), exports);
__exportStar(__webpack_require__(/*! ./rounded-corner */ "./node_modules/@eclipse-glsp/client/lib/views/rounded-corner.js"), exports);
__exportStar(__webpack_require__(/*! ./rounded-corner-view */ "./node_modules/@eclipse-glsp/client/lib/views/rounded-corner-view.js"), exports);


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/views/issue-marker-view.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/views/issue-marker-view.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GIssueMarkerView = void 0;
/********************************************************************************
 * Copyright (c) 2020-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
/* eslint-disable max-len */
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
// eslint-disable-next-line @typescript-eslint/no-unused-vars
const JSX = { createElement: sprotty_1.svg };
let GIssueMarkerView = class GIssueMarkerView extends sprotty_1.IssueMarkerView {
    render(marker, _context) {
        const maxSeverity = super.getMaxSeverity(marker);
        const group = (JSX.createElement("g", { "class-sprotty-issue": true },
            JSX.createElement("g", null,
                this.getGlspIssueMarkerBackground(maxSeverity),
                JSX.createElement("path", { d: this.getGlspIssueMarkerPath(maxSeverity) }))));
        (0, sprotty_1.setClass)(group, 'sprotty-' + maxSeverity, true);
        return group;
    }
    getGlspIssueMarkerBackground(severity) {
        switch (severity) {
            case 'warning':
                return JSX.createElement("polygon", { "class-sprotty-issue-background": true, points: '8 2, 15.9 14.9, 0.2 14.9' });
            case 'error':
            case 'info':
                return JSX.createElement("circle", { "class-sprotty-issue-background": true, r: this.radius, cx: this.radius, cy: this.radius });
        }
    }
    get radius() {
        return 8; // var(--theia-icon-size)=16px => 16/2=8
    }
    getGlspIssueMarkerPath(severity) {
        switch (severity) {
            // paths used here are svg versions of codicons, resized to var(--theia-icon-size) 16px
            case 'error': // 'codicon-error'
                return 'm 8.8527788,0.00699568 c 1.8523692,0.115773 3.5889642,1.04195762 4.8624692,2.31546152 1.505048,1.620823 2.31546,3.5889653 2.31546,5.9044268 0,1.852369 -0.694637,3.588965 -1.852367,5.094015 -1.157733,1.389277 -2.778554,2.431235 -4.6309235,2.778554 C 7.6950478,16.446772 5.8426784,16.215226 4.2218552,15.289042 2.6010319,14.362857 1.3275281,12.97358 0.63288942,11.236984 -0.06174907,9.5003878 -0.17752216,7.5322456 0.4013433,5.7956494 0.98020876,3.9432802 2.0221665,2.4382302 3.6429898,1.3962725 5.14804,0.35431486 7.0004094,-0.10877742 8.8527788,0.00699568 Z M 9.4316445,14.941722 c 1.5050505,-0.347319 2.8943275,-1.15773 3.9362845,-2.431234 0.926185,-1.273504 1.50505,-2.778554 1.389277,-4.3993771 0,-1.8523692 -0.69464,-3.7047384 -1.968142,-4.9782422 C 11.631331,1.9751379 10.242054,1.2804995 8.6212324,1.1647264 7.1161824,1.0489533 5.4953592,1.3962725 4.2218552,2.3224572 2.9483511,3.2486418 2.0221665,4.5221456 1.5590742,6.1429686 c -0.4630923,1.50505 -0.4630923,3.1258731 0.2315462,4.6309234 0.6946384,1.50505 1.7365963,2.66278 3.1258734,3.473192 1.3892769,0.810411 3.0101002,1.041958 4.5151507,0.694638 z M 8.042367,7.5322456 10.82092,4.6379187 11.631331,5.4483302 8.8527788,8.3426571 11.631331,11.236984 10.82092,12.047395 8.042367,9.1530686 5.2638128,12.047395 4.4534013,11.236984 7.2319555,8.3426571 4.4534013,5.4483302 5.2638128,4.6379187 Z';
            case 'warning': // 'codicon-warning'
                return 'M 7.5587159,0.61312771 H 8.565869 L 16.050847,14.644601 15.54727,15.491525 H 0.55442396 L 0.05084746,14.644601 Z M 8.0622924,2.0780776 1.5157974,14.347033 H 14.585897 Z M 8.7776,13.202541 V 12.058049 H 7.3469848 v 1.144492 z M 7.3469848,10.913557 V 6.3355883 H 8.7776 v 4.5779687 z';
            case 'info': // 'codicon-info'
                return 'M 8.7624795,0.01729008 A 7.8878137,7.8878137 0 0 1 13.625085,2.3592747 8.1894066,8.1894066 0 0 1 14.158672,13.251418 7.9458123,7.9458123 0 0 1 4.2061071,15.26977 8.1198082,8.1198082 0 0 1 0.58699265,11.209866 8.259005,8.259005 0 0 1 0.32019895,5.7463948 8.1198082,8.1198082 0 0 1 3.533323,1.3500986 7.8878137,7.8878137 0 0 1 8.7624795,0.01729008 Z M 9.3099868,14.921778 A 6.8322386,6.8322386 0 0 0 13.265493,12.520635 7.0410337,7.0410337 0 0 0 12.801504,3.1712556 6.7510406,6.7510406 0 0 0 4.1829077,2.3128758 7.029434,7.029434 0 0 0 4.762894,14.248994 6.7394408,6.7394408 0 0 0 9.3099868,14.921778 Z M 7.3786322,5.7811939 H 8.8285979 V 4.6212213 H 7.3786322 Z M 8.8285979,6.9411665 V 11.581057 H 7.3786322 V 6.9411665 Z';
        }
    }
};
GIssueMarkerView = __decorate([
    (0, inversify_1.injectable)()
], GIssueMarkerView);
exports.GIssueMarkerView = GIssueMarkerView;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/views/rounded-corner-view.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/views/rounded-corner-view.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toClipPathId = exports.RoundedCornerNodeView = void 0;
/********************************************************************************
 * Copyright (c) 2021-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const sprotty_1 = __webpack_require__(/*! sprotty */ "./node_modules/sprotty/lib/index.js");
const argument_utils_1 = __webpack_require__(/*! ../utils/argument-utils */ "./node_modules/@eclipse-glsp/client/lib/utils/argument-utils.js");
const rounded_corner_1 = __webpack_require__(/*! ./rounded-corner */ "./node_modules/@eclipse-glsp/client/lib/views/rounded-corner.js");
// eslint-disable-next-line @typescript-eslint/no-unused-vars
const JSX = { createElement: sprotty_1.svg };
let RoundedCornerNodeView = class RoundedCornerNodeView extends sprotty_1.RectangularNodeView {
    render(node, context) {
        const cornerRadius = argument_utils_1.CornerRadius.from(node);
        if (!cornerRadius) {
            return this.renderWithoutRadius(node, context);
        }
        const wrapper = new rounded_corner_1.RoundedCornerWrapper(node, cornerRadius);
        return (JSX.createElement("g", { "class-node": true },
            JSX.createElement("defs", null,
                JSX.createElement("clipPath", { id: toClipPathId(node) },
                    JSX.createElement("path", { d: this.renderPath(wrapper, context, this.getClipPathInsets() || 0) }))),
            this.renderPathNode(wrapper, context),
            context.renderChildren(node)));
    }
    renderWithoutRadius(node, context) {
        return super.render(node, context);
    }
    getClipPathInsets() {
        return 2;
    }
    renderPathNode(wrapper, context) {
        return (JSX.createElement("path", Object.assign({ d: this.renderPath(wrapper, context, 0), "class-sprotty-node": wrapper.element instanceof sprotty_1.SNode, "class-sprotty-port": wrapper.element instanceof sprotty_1.SPort, "class-mouseover": wrapper.element.hoverFeedback, "class-selected": wrapper.element.selected }, this.additionalClasses(wrapper.element, context))));
    }
    additionalClasses(_node, _context) {
        return {};
    }
    renderPath(wrapper, _context, inset) {
        // Calculate length of straight line segments
        const topLineLength = Math.max(0, wrapper.size.width - wrapper.cornerRadius.topLeft - wrapper.cornerRadius.topRight);
        const rightLineLength = Math.max(0, wrapper.size.height - wrapper.cornerRadius.topRight - wrapper.cornerRadius.bottomRight);
        const bottomLineLength = Math.max(0, wrapper.size.width - wrapper.cornerRadius.bottomLeft - wrapper.cornerRadius.bottomRight);
        const path = `M${0 + inset},${0 + wrapper.topLeftCorner.radiusY}` +
            `q${0},${-(wrapper.topLeftCorner.radiusY - inset)} ${wrapper.topLeftCorner.radiusX - inset},${-(wrapper.topLeftCorner.radiusY - inset)}` +
            `h${topLineLength}` +
            `q${wrapper.topRightCorner.radiusX - inset},0 ${wrapper.topRightCorner.radiusX - inset},${wrapper.topRightCorner.radiusY - inset}` +
            `v${rightLineLength}` +
            `q0,${wrapper.bottomRightCorner.radiusY - inset} ${-(wrapper.bottomRightCorner.radiusX - inset)},${wrapper.bottomRightCorner.radiusY - inset}` +
            `h${-bottomLineLength}` +
            `q${-(wrapper.bottomLeftCorner.radiusX - inset)},0 ${-(wrapper.bottomLeftCorner.radiusX - inset)},${-(wrapper.bottomLeftCorner.radiusY - inset)}` +
            'z ';
        return path;
    }
};
RoundedCornerNodeView = __decorate([
    (0, inversify_1.injectable)()
], RoundedCornerNodeView);
exports.RoundedCornerNodeView = RoundedCornerNodeView;
function toClipPathId(node) {
    return `${node.id}_clip_path`;
}
exports.toClipPathId = toClipPathId;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/lib/views/rounded-corner.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/lib/views/rounded-corner.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.scaledRadius = exports.RoundedCornerWrapper = void 0;
class RoundedCornerWrapper {
    constructor(element, cornerRadius) {
        this.element = element;
        this.cornerRadius = cornerRadius;
    }
    get size() {
        return this.element.size;
    }
    get topLeftCorner() {
        if (!this._topLeftCorner) {
            this._topLeftCorner = {
                radiusX: scaledRadius(this.cornerRadius.topLeft, this.element.size.width / 2),
                radiusY: scaledRadius(this.cornerRadius.topLeft, this.element.size.height / 2)
            };
        }
        return this._topLeftCorner;
    }
    get topRightCorner() {
        if (!this._topRightCorner) {
            this._topRightCorner = {
                radiusX: scaledRadius(this.cornerRadius.topRight, this.element.size.width / 2),
                radiusY: scaledRadius(this.cornerRadius.topRight, this.element.size.height / 2)
            };
        }
        return this._topRightCorner;
    }
    get bottomRightCorner() {
        if (!this._bottomRightCorner) {
            this._bottomRightCorner = {
                radiusX: scaledRadius(this.cornerRadius.bottomRight, this.element.size.width / 2),
                radiusY: scaledRadius(this.cornerRadius.bottomRight, this.element.size.height / 2)
            };
        }
        return this._bottomRightCorner;
    }
    get bottomLeftCorner() {
        if (!this._bottomLeftCorner) {
            this._bottomLeftCorner = {
                radiusX: scaledRadius(this.cornerRadius.bottomLeft, this.element.size.width / 2),
                radiusY: scaledRadius(this.cornerRadius.bottomLeft, this.element.size.height / 2)
            };
        }
        return this._bottomLeftCorner;
    }
}
exports.RoundedCornerWrapper = RoundedCornerWrapper;
/*
 * Scales the radius if necessary. (Percentile down scaling if the radius is bigger then the maximal allowed length)
 */
function scaledRadius(radius, maximalLength) {
    if (radius <= maximalLength) {
        return radius;
    }
    else {
        return radius * (maximalLength / radius);
    }
}
exports.scaledRadius = scaledRadius;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/base-protocol.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/protocol/lib/action-protocol/base-protocol.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CompoundOperation = exports.Operation = exports.RejectAction = exports.ResponseAction = exports.RequestAction = exports.ActionMessage = exports.Action = void 0;
const sprotty = __webpack_require__(/*! sprotty-protocol/lib/actions */ "./node_modules/sprotty-protocol/lib/actions.js");
const type_util_1 = __webpack_require__(/*! ../utils/type-util */ "./node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js");
var Action;
(function (Action) {
    function is(object) {
        return type_util_1.AnyObject.is(object) && (0, type_util_1.hasStringProp)(object, 'kind');
    }
    Action.is = is;
    /**
     * Typeguard function to check wether the given object is an {@link Action} with the given `kind`.
     * @param object The object to check.
     * @param kind  The expected action kind.
     * @returns A type literal indicating wether the given object is an action with the given kind.
     */
    function hasKind(object, kind) {
        return Action.is(object) && object.kind === kind;
    }
    Action.hasKind = hasKind;
})(Action = exports.Action || (exports.Action = {}));
var ActionMessage;
(function (ActionMessage) {
    function is(object, typeguard) {
        const actionGuard = typeguard !== null && typeguard !== void 0 ? typeguard : Action.is;
        return type_util_1.AnyObject.is(object) && (0, type_util_1.hasStringProp)(object, 'clientId') && 'action' in object && actionGuard(object.action);
    }
    ActionMessage.is = is;
})(ActionMessage = exports.ActionMessage || (exports.ActionMessage = {}));
var RequestAction;
(function (RequestAction) {
    function is(object) {
        return Action.is(object) && (0, type_util_1.hasStringProp)(object, 'requestId');
    }
    RequestAction.is = is;
    /**
     * Typeguard function to check wether the given object is an {@link RequestAction} with the given `kind`.
     * @param object The object to check.
     * @param kind  The expected action kind.
     * @returns A type literal indicating wether the given object is a request action with the given kind.
     */
    function hasKind(object, kind) {
        return RequestAction.is(object) && object.kind === kind;
    }
    RequestAction.hasKind = hasKind;
    function generateRequestId() {
        return sprotty.generateRequestId();
    }
    RequestAction.generateRequestId = generateRequestId;
})(RequestAction = exports.RequestAction || (exports.RequestAction = {}));
var ResponseAction;
(function (ResponseAction) {
    function is(object) {
        return Action.is(object) && (0, type_util_1.hasStringProp)(object, 'responseId');
    }
    ResponseAction.is = is;
    /**
     * Typeguard function to check wether the given object is an {@link ResponseAction} with a non-empty response id.
     * @param object The object to check.
     * @returns A type literal indicating wether the given object is a response action with a non-empty response id.
     */
    function hasValidResponseId(object) {
        return ResponseAction.is(object) && object.responseId !== '';
    }
    ResponseAction.hasValidResponseId = hasValidResponseId;
})(ResponseAction = exports.ResponseAction || (exports.ResponseAction = {}));
var RejectAction;
(function (RejectAction) {
    RejectAction.KIND = 'rejectRequest';
    function is(object) {
        return Action.hasKind(object, RejectAction.KIND) && (0, type_util_1.hasStringProp)(object, 'message');
    }
    RejectAction.is = is;
    function create(message, options = {}) {
        return Object.assign({ kind: RejectAction.KIND, responseId: '', message }, options);
    }
    RejectAction.create = create;
})(RejectAction = exports.RejectAction || (exports.RejectAction = {}));
var Operation;
(function (Operation) {
    function is(object) {
        return Action.is(object) && object.isOperation === true;
    }
    Operation.is = is;
    /**
     * Typeguard function to check wether the given object is an {@link Operation} with the given `kind`.
     * @param object The object to check.
     * @param kind  The expected operation kind.
     * @returns A type literal indicating wether the given object is an operation with the given kind.
     */
    function hasKind(object, kind) {
        return Operation.is(object) && object.kind === kind;
    }
    Operation.hasKind = hasKind;
})(Operation = exports.Operation || (exports.Operation = {}));
var CompoundOperation;
(function (CompoundOperation) {
    CompoundOperation.KIND = 'compound';
    function is(object) {
        return Operation.hasKind(object, CompoundOperation.KIND) && (0, type_util_1.hasArrayProp)(object, 'operationList');
    }
    CompoundOperation.is = is;
    function create(operationList) {
        return {
            kind: CompoundOperation.KIND,
            isOperation: true,
            operationList
        };
    }
    CompoundOperation.create = create;
})(CompoundOperation = exports.CompoundOperation || (exports.CompoundOperation = {}));


/***/ }),

/***/ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/client-notification.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/protocol/lib/action-protocol/client-notification.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ServerMessageAction = exports.ServerStatusAction = void 0;
/********************************************************************************
 * Copyright (c) 2021-2022 STMicroelectronics and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const type_util_1 = __webpack_require__(/*! ../utils/type-util */ "./node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js");
const base_protocol_1 = __webpack_require__(/*! ./base-protocol */ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/base-protocol.js");
var ServerStatusAction;
(function (ServerStatusAction) {
    ServerStatusAction.KIND = 'serverStatus';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, ServerStatusAction.KIND) && (0, type_util_1.hasStringProp)(object, 'severity') && (0, type_util_1.hasStringProp)(object, 'message');
    }
    ServerStatusAction.is = is;
    function create(message, options = {}) {
        return Object.assign({ kind: ServerStatusAction.KIND, severity: 'INFO', message }, options);
    }
    ServerStatusAction.create = create;
})(ServerStatusAction = exports.ServerStatusAction || (exports.ServerStatusAction = {}));
var ServerMessageAction;
(function (ServerMessageAction) {
    ServerMessageAction.KIND = 'serverMessage';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, ServerMessageAction.KIND) && (0, type_util_1.hasStringProp)(object, 'message') && (0, type_util_1.hasStringProp)(object, 'severity');
    }
    ServerMessageAction.is = is;
    function create(message, options = {}) {
        return Object.assign({ kind: ServerMessageAction.KIND, message, severity: 'INFO' }, options);
    }
    ServerMessageAction.create = create;
})(ServerMessageAction = exports.ServerMessageAction || (exports.ServerMessageAction = {}));


/***/ }),

/***/ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/clipboard.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/protocol/lib/action-protocol/clipboard.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2021-2022 STMicroelectronics and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PasteOperation = exports.CutOperation = exports.SetClipboardDataAction = exports.RequestClipboardDataAction = void 0;
const type_util_1 = __webpack_require__(/*! ../utils/type-util */ "./node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js");
const base_protocol_1 = __webpack_require__(/*! ./base-protocol */ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/base-protocol.js");
var RequestClipboardDataAction;
(function (RequestClipboardDataAction) {
    RequestClipboardDataAction.KIND = 'requestClipboardData';
    function is(object) {
        return base_protocol_1.RequestAction.hasKind(object, RequestClipboardDataAction.KIND) && (0, type_util_1.hasObjectProp)(object, 'editorContext');
    }
    RequestClipboardDataAction.is = is;
    function create(editorContext, options = {}) {
        return Object.assign({ kind: RequestClipboardDataAction.KIND, requestId: '', editorContext }, options);
    }
    RequestClipboardDataAction.create = create;
})(RequestClipboardDataAction = exports.RequestClipboardDataAction || (exports.RequestClipboardDataAction = {}));
var SetClipboardDataAction;
(function (SetClipboardDataAction) {
    SetClipboardDataAction.KIND = 'setClipboardData';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, SetClipboardDataAction.KIND) && (0, type_util_1.hasObjectProp)(object, 'clipboardData');
    }
    SetClipboardDataAction.is = is;
    function create(clipboardData, options = {}) {
        return Object.assign({ kind: SetClipboardDataAction.KIND, responseId: '', clipboardData }, options);
    }
    SetClipboardDataAction.create = create;
})(SetClipboardDataAction = exports.SetClipboardDataAction || (exports.SetClipboardDataAction = {}));
var CutOperation;
(function (CutOperation) {
    CutOperation.KIND = 'cut';
    function is(object) {
        return base_protocol_1.Operation.hasKind(object, CutOperation.KIND) && (0, type_util_1.hasObjectProp)(object, 'editorContext');
    }
    CutOperation.is = is;
    function create(editorContext) {
        return {
            kind: CutOperation.KIND,
            isOperation: true,
            editorContext
        };
    }
    CutOperation.create = create;
})(CutOperation = exports.CutOperation || (exports.CutOperation = {}));
var PasteOperation;
(function (PasteOperation) {
    PasteOperation.KIND = 'paste';
    function is(object) {
        return base_protocol_1.Operation.hasKind(object, PasteOperation.KIND) && (0, type_util_1.hasObjectProp)(object, 'clipboardData') && (0, type_util_1.hasObjectProp)(object, 'editorContext');
    }
    PasteOperation.is = is;
    function create(options) {
        return Object.assign({ kind: PasteOperation.KIND, isOperation: true }, options);
    }
    PasteOperation.create = create;
})(PasteOperation = exports.PasteOperation || (exports.PasteOperation = {}));


/***/ }),

/***/ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/contexts.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/protocol/lib/action-protocol/contexts.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2021-2022 STMicroelectronics and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SetContextActions = exports.RequestContextActions = void 0;
const type_util_1 = __webpack_require__(/*! ../utils/type-util */ "./node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js");
const base_protocol_1 = __webpack_require__(/*! ./base-protocol */ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/base-protocol.js");
var RequestContextActions;
(function (RequestContextActions) {
    RequestContextActions.KIND = 'requestContextActions';
    function is(object) {
        return base_protocol_1.RequestAction.hasKind(object, RequestContextActions.KIND) && (0, type_util_1.hasStringProp)(object, 'contextId') && (0, type_util_1.hasObjectProp)(object, 'editorContext');
    }
    RequestContextActions.is = is;
    function create(options) {
        return Object.assign({ kind: RequestContextActions.KIND, requestId: '' }, options);
    }
    RequestContextActions.create = create;
})(RequestContextActions = exports.RequestContextActions || (exports.RequestContextActions = {}));
var SetContextActions;
(function (SetContextActions) {
    SetContextActions.KIND = 'setContextActions';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, SetContextActions.KIND) && (0, type_util_1.hasArrayProp)(object, 'actions');
    }
    SetContextActions.is = is;
    function create(actions, options = {}) {
        return Object.assign({ kind: SetContextActions.KIND, responseId: '', actions }, options);
    }
    SetContextActions.create = create;
})(SetContextActions = exports.SetContextActions || (exports.SetContextActions = {}));


/***/ }),

/***/ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/edge-modification.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/protocol/lib/action-protocol/edge-modification.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2021-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ChangeRoutingPointsOperation = exports.ReconnectEdgeOperation = void 0;
const type_util_1 = __webpack_require__(/*! ../utils/type-util */ "./node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js");
const base_protocol_1 = __webpack_require__(/*! ./base-protocol */ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/base-protocol.js");
var ReconnectEdgeOperation;
(function (ReconnectEdgeOperation) {
    ReconnectEdgeOperation.KIND = 'reconnectEdge';
    function is(object) {
        return (base_protocol_1.Operation.hasKind(object, ReconnectEdgeOperation.KIND) &&
            (0, type_util_1.hasStringProp)(object, 'edgeElementId') &&
            (0, type_util_1.hasStringProp)(object, 'sourceElementId') &&
            (0, type_util_1.hasStringProp)(object, 'targetElementId'));
    }
    ReconnectEdgeOperation.is = is;
    function create(options) {
        return Object.assign({ kind: ReconnectEdgeOperation.KIND, isOperation: true }, options);
    }
    ReconnectEdgeOperation.create = create;
})(ReconnectEdgeOperation = exports.ReconnectEdgeOperation || (exports.ReconnectEdgeOperation = {}));
var ChangeRoutingPointsOperation;
(function (ChangeRoutingPointsOperation) {
    ChangeRoutingPointsOperation.KIND = 'changeRoutingPoints';
    function is(object) {
        return base_protocol_1.Operation.hasKind(object, ChangeRoutingPointsOperation.KIND) && (0, type_util_1.hasArrayProp)(object, 'newRoutingPoints');
    }
    ChangeRoutingPointsOperation.is = is;
    function create(newRoutingPoints) {
        return {
            kind: ChangeRoutingPointsOperation.KIND,
            isOperation: true,
            newRoutingPoints
        };
    }
    ChangeRoutingPointsOperation.create = create;
})(ChangeRoutingPointsOperation = exports.ChangeRoutingPointsOperation || (exports.ChangeRoutingPointsOperation = {}));


/***/ }),

/***/ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/element-creation.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/protocol/lib/action-protocol/element-creation.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2021-2022 STMicroelectronics and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DeleteElementOperation = exports.CreateEdgeOperation = exports.CreateNodeOperation = exports.CreateOperation = void 0;
const type_util_1 = __webpack_require__(/*! ../utils/type-util */ "./node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js");
const base_protocol_1 = __webpack_require__(/*! ./base-protocol */ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/base-protocol.js");
var CreateOperation;
(function (CreateOperation) {
    function is(object) {
        return base_protocol_1.Operation.is(object) && (0, type_util_1.hasStringProp)(object, 'elementTypeId');
    }
    CreateOperation.is = is;
    /**
     * Typeguard function to check wether the given object is a {@link CreateOperation} with the given `kind`.
     * @param object The object to check.
     * @param kind  The expected operation kind.
     * @returns A type literal indicating wether the given object is a create operation with the given kind.
     */
    function hasKind(object, kind) {
        return CreateOperation.is(object) && object.kind === kind;
    }
    CreateOperation.hasKind = hasKind;
})(CreateOperation = exports.CreateOperation || (exports.CreateOperation = {}));
var CreateNodeOperation;
(function (CreateNodeOperation) {
    CreateNodeOperation.KIND = 'createNode';
    function is(object) {
        return CreateOperation.hasKind(object, CreateNodeOperation.KIND);
    }
    CreateNodeOperation.is = is;
    function create(elementTypeId, options = {}) {
        return Object.assign({ kind: CreateNodeOperation.KIND, isOperation: true, elementTypeId }, options);
    }
    CreateNodeOperation.create = create;
})(CreateNodeOperation = exports.CreateNodeOperation || (exports.CreateNodeOperation = {}));
var CreateEdgeOperation;
(function (CreateEdgeOperation) {
    CreateEdgeOperation.KIND = 'createEdge';
    function is(object) {
        return (CreateOperation.hasKind(object, CreateEdgeOperation.KIND) && (0, type_util_1.hasStringProp)(object, 'sourceElementId') && (0, type_util_1.hasStringProp)(object, 'targetElementId'));
    }
    CreateEdgeOperation.is = is;
    function create(options) {
        return Object.assign({ kind: CreateEdgeOperation.KIND, isOperation: true }, options);
    }
    CreateEdgeOperation.create = create;
})(CreateEdgeOperation = exports.CreateEdgeOperation || (exports.CreateEdgeOperation = {}));
var DeleteElementOperation;
(function (DeleteElementOperation) {
    DeleteElementOperation.KIND = 'deleteElement';
    function is(object) {
        return base_protocol_1.Operation.hasKind(object, DeleteElementOperation.KIND) && (0, type_util_1.hasArrayProp)(object, 'elementIds');
    }
    DeleteElementOperation.is = is;
    function create(elementIds) {
        return {
            kind: DeleteElementOperation.KIND,
            isOperation: true,
            elementIds
        };
    }
    DeleteElementOperation.create = create;
})(DeleteElementOperation = exports.DeleteElementOperation || (exports.DeleteElementOperation = {}));


/***/ }),

/***/ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/element-hover.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/protocol/lib/action-protocol/element-hover.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SetPopupModelAction = exports.RequestPopupModelAction = void 0;
const type_util_1 = __webpack_require__(/*! ../utils/type-util */ "./node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js");
const base_protocol_1 = __webpack_require__(/*! ./base-protocol */ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/base-protocol.js");
var RequestPopupModelAction;
(function (RequestPopupModelAction) {
    RequestPopupModelAction.KIND = 'requestPopupModel';
    function is(object) {
        return base_protocol_1.RequestAction.hasKind(object, RequestPopupModelAction.KIND) && (0, type_util_1.hasStringProp)(object, 'elementId') && (0, type_util_1.hasObjectProp)(object, 'bounds');
    }
    RequestPopupModelAction.is = is;
    function create(options) {
        return Object.assign({ kind: RequestPopupModelAction.KIND, requestId: '' }, options);
    }
    RequestPopupModelAction.create = create;
})(RequestPopupModelAction = exports.RequestPopupModelAction || (exports.RequestPopupModelAction = {}));
var SetPopupModelAction;
(function (SetPopupModelAction) {
    SetPopupModelAction.KIND = 'setPopupModel';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, SetPopupModelAction.KIND) && (0, type_util_1.hasObjectProp)(object, 'newRoot');
    }
    SetPopupModelAction.is = is;
    function create(newRoot, options = {}) {
        return Object.assign({ kind: SetPopupModelAction.KIND, responseId: '', newRoot }, options);
    }
    SetPopupModelAction.create = create;
})(SetPopupModelAction = exports.SetPopupModelAction || (exports.SetPopupModelAction = {}));


/***/ }),

/***/ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/element-navigation.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/protocol/lib/action-protocol/element-navigation.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.NavigateToExternalTargetAction = exports.SetResolvedNavigationTargetAction = exports.ResolveNavigationTargetAction = exports.NavigateToTargetAction = exports.SetNavigationTargetsAction = exports.RequestNavigationTargetsAction = exports.NavigationTarget = void 0;
const type_util_1 = __webpack_require__(/*! ../utils/type-util */ "./node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js");
const base_protocol_1 = __webpack_require__(/*! ./base-protocol */ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/base-protocol.js");
var NavigationTarget;
(function (NavigationTarget) {
    function is(object) {
        return object !== undefined && (0, type_util_1.hasStringProp)(object, 'uri');
    }
    NavigationTarget.is = is;
    /**
     *  Generic key to store element ids as additional argument
     */
    NavigationTarget.ELEMENT_IDS = 'elementIds';
    /**
     * The separator that is used to store he values for the {@link ELEMENT_IDS} as a single string.
     */
    NavigationTarget.ELEMENT_IDS_SEPARATOR = '&';
    /**
     *  Generic key ot store the line property of a {@link TextPosition} as additional argument.
     */
    NavigationTarget.TEXT_LINE = 'line';
    /**
     *  Generic key ot store the character property of a {@link TextPosition} as additional argument.
     */
    NavigationTarget.TEXT_COLUMN = 'column';
    /**
     * Utility function to check wether the given {@link NavigationTarget} has additional arguments defined.
     * @param target The navigation target to check.
     * @returns `true` if the navigation target has a non-empty `args` property, `false`
     */
    function hasArguments(target) {
        return target.args !== undefined && Object.keys(target.args).length > 0;
    }
    NavigationTarget.hasArguments = hasArguments;
    /**
     * Adds a new key-value pair to the additional arguments of the given {@link NavigationTarget}.
     * @param target The navigation target.
     * @param key The key of the new argument.
     * @param value The (primitive) value of the new argument.
     */
    function addArgument(target, key, value) {
        if (!target.args) {
            target.args = {};
        }
        target.args[key] = value;
    }
    NavigationTarget.addArgument = addArgument;
    /**
     * Retrieves the element ids that have been stored with the generic {@link ELEMENT_IDS} key from the args of the
     * given target.
     * @param target The navigation target.
     * @returns An array with the parsed element ids. The array is empty if no {@link ELEMENT_IDS} key is present in the args
     * of the navigation target.
     */
    function getElementIds(target) {
        var _a;
        if (!((_a = target === null || target === void 0 ? void 0 : target.args) === null || _a === void 0 ? void 0 : _a[NavigationTarget.ELEMENT_IDS])) {
            return [];
        }
        const elementIdsValue = target.args[NavigationTarget.ELEMENT_IDS].toString();
        return elementIdsValue.split(NavigationTarget.ELEMENT_IDS_SEPARATOR);
    }
    NavigationTarget.getElementIds = getElementIds;
    /**
     * Stores the given element ids in the given {@link NavigationTarget} as additional arguments using the generic {@link ELEMENT_IDS} key.
     * @param target The navigation target.
     * @param elementIds The element ids that should be stored.
     * @returns the value of the {@link ELEMENT_IDS} key after storing the given element ids.
     */
    function setElementIds(target, ...elementIds) {
        if (target.args === undefined) {
            target.args = {};
        }
        return (target.args[NavigationTarget.ELEMENT_IDS] = elementIds.join(NavigationTarget.ELEMENT_IDS_SEPARATOR));
    }
    NavigationTarget.setElementIds = setElementIds;
    /**
     * Stores the given {@link TextPosition} in the given {@link NavigationTarget} as additional arguments using
     * the generic {@link TEXT_LINE} & {@link TEXT_COLUMN} keys.
     * @param target The navigation target.
     * @param position The text position that should be stored.
     */
    function setTextPosition(target, position) {
        if (position) {
            if (target.args === undefined) {
                target.args = {};
            }
            target.args[NavigationTarget.TEXT_LINE] = position.line;
            target.args[NavigationTarget.TEXT_COLUMN] = position.character;
        }
    }
    NavigationTarget.setTextPosition = setTextPosition;
    /**
     * Retrieves the {@link TextPosition} that have been stored with the generic {@link TEXT_LINE} & {@link TEXT_COLUMN} keys
     * from the args of the given target.
     * @param target The navigation target.
     * @returns The parsed text position or `undefined` if one of the generic text keys is not present in the args
     * of the navigation target.
     */
    function getTextPosition(target) {
        if (!target.args || !target.args[NavigationTarget.TEXT_LINE] || !target.args[NavigationTarget.TEXT_COLUMN]) {
            return undefined;
        }
        return {
            line: Number(target.args[NavigationTarget.TEXT_LINE]),
            character: Number(target.args[NavigationTarget.TEXT_COLUMN])
        };
    }
    NavigationTarget.getTextPosition = getTextPosition;
})(NavigationTarget = exports.NavigationTarget || (exports.NavigationTarget = {}));
var RequestNavigationTargetsAction;
(function (RequestNavigationTargetsAction) {
    RequestNavigationTargetsAction.KIND = 'requestNavigationTargets';
    function is(object) {
        return base_protocol_1.RequestAction.hasKind(object, RequestNavigationTargetsAction.KIND) && (0, type_util_1.hasStringProp)(object, 'targetTypeId') && (0, type_util_1.hasObjectProp)(object, 'editorContext');
    }
    RequestNavigationTargetsAction.is = is;
    function create(options) {
        return Object.assign({ kind: RequestNavigationTargetsAction.KIND, requestId: '' }, options);
    }
    RequestNavigationTargetsAction.create = create;
})(RequestNavigationTargetsAction = exports.RequestNavigationTargetsAction || (exports.RequestNavigationTargetsAction = {}));
var SetNavigationTargetsAction;
(function (SetNavigationTargetsAction) {
    SetNavigationTargetsAction.KIND = 'setNavigationTargets';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, SetNavigationTargetsAction.KIND) && (0, type_util_1.hasArrayProp)(object, 'targets');
    }
    SetNavigationTargetsAction.is = is;
    function create(targets, options = {}) {
        return Object.assign({ kind: SetNavigationTargetsAction.KIND, responseId: '', targets }, options);
    }
    SetNavigationTargetsAction.create = create;
})(SetNavigationTargetsAction = exports.SetNavigationTargetsAction || (exports.SetNavigationTargetsAction = {}));
var NavigateToTargetAction;
(function (NavigateToTargetAction) {
    NavigateToTargetAction.KIND = 'navigateToTarget';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, NavigateToTargetAction.KIND) && (0, type_util_1.hasObjectProp)(object, 'target');
    }
    NavigateToTargetAction.is = is;
    function create(target) {
        return {
            kind: NavigateToTargetAction.KIND,
            target
        };
    }
    NavigateToTargetAction.create = create;
})(NavigateToTargetAction = exports.NavigateToTargetAction || (exports.NavigateToTargetAction = {}));
var ResolveNavigationTargetAction;
(function (ResolveNavigationTargetAction) {
    ResolveNavigationTargetAction.KIND = 'resolveNavigationTarget';
    function is(object) {
        return base_protocol_1.RequestAction.hasKind(object, ResolveNavigationTargetAction.KIND) && (0, type_util_1.hasObjectProp)(object, 'navigationTarget');
    }
    ResolveNavigationTargetAction.is = is;
    function create(navigationTarget, options = {}) {
        return Object.assign({ kind: ResolveNavigationTargetAction.KIND, requestId: '', navigationTarget }, options);
    }
    ResolveNavigationTargetAction.create = create;
})(ResolveNavigationTargetAction = exports.ResolveNavigationTargetAction || (exports.ResolveNavigationTargetAction = {}));
var SetResolvedNavigationTargetAction;
(function (SetResolvedNavigationTargetAction) {
    SetResolvedNavigationTargetAction.KIND = 'setResolvedNavigationTarget';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, SetResolvedNavigationTargetAction.KIND) && (0, type_util_1.hasArrayProp)(object, 'elementIds');
    }
    SetResolvedNavigationTargetAction.is = is;
    function create(elementIds, options = {}) {
        return Object.assign({ kind: SetResolvedNavigationTargetAction.KIND, responseId: '', elementIds }, options);
    }
    SetResolvedNavigationTargetAction.create = create;
})(SetResolvedNavigationTargetAction = exports.SetResolvedNavigationTargetAction || (exports.SetResolvedNavigationTargetAction = {}));
var NavigateToExternalTargetAction;
(function (NavigateToExternalTargetAction) {
    NavigateToExternalTargetAction.KIND = 'navigateToExternalTarget';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, NavigateToExternalTargetAction.KIND) && (0, type_util_1.hasObjectProp)(object, 'target');
    }
    NavigateToExternalTargetAction.is = is;
    function create(target) {
        return {
            kind: NavigateToExternalTargetAction.KIND,
            target
        };
    }
    NavigateToExternalTargetAction.create = create;
})(NavigateToExternalTargetAction = exports.NavigateToExternalTargetAction || (exports.NavigateToExternalTargetAction = {}));


/***/ }),

/***/ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/element-selection.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/protocol/lib/action-protocol/element-selection.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SelectAllAction = exports.SelectAction = void 0;
const type_util_1 = __webpack_require__(/*! ../utils/type-util */ "./node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js");
const base_protocol_1 = __webpack_require__(/*! ./base-protocol */ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/base-protocol.js");
var SelectAction;
(function (SelectAction) {
    SelectAction.KIND = 'elementSelected';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, SelectAction.KIND) && (0, type_util_1.hasArrayProp)(object, 'selectedElementsIDs') && (0, type_util_1.hasArrayProp)(object, 'deselectedElementsIDs');
    }
    SelectAction.is = is;
    function create(options = {}) {
        return Object.assign({ kind: SelectAction.KIND, selectedElementsIDs: [], deselectedElementsIDs: [] }, options);
    }
    SelectAction.create = create;
})(SelectAction = exports.SelectAction || (exports.SelectAction = {}));
var SelectAllAction;
(function (SelectAllAction) {
    SelectAllAction.KIND = 'allSelected';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, SelectAllAction.KIND) && (0, type_util_1.hasBooleanProp)(object, 'select');
    }
    SelectAllAction.is = is;
    function create(select = true) {
        return {
            kind: SelectAllAction.KIND,
            select
        };
    }
    SelectAllAction.create = create;
})(SelectAllAction = exports.SelectAllAction || (exports.SelectAllAction = {}));


/***/ }),

/***/ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/element-text-editing.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/protocol/lib/action-protocol/element-text-editing.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ValidationStatus = exports.ApplyLabelEditOperation = exports.SetEditValidationResultAction = exports.RequestEditValidationAction = void 0;
const type_util_1 = __webpack_require__(/*! ../utils/type-util */ "./node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js");
const base_protocol_1 = __webpack_require__(/*! ./base-protocol */ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/base-protocol.js");
var RequestEditValidationAction;
(function (RequestEditValidationAction) {
    RequestEditValidationAction.KIND = 'requestEditValidation';
    function is(object) {
        return (base_protocol_1.RequestAction.hasKind(object, RequestEditValidationAction.KIND) &&
            (0, type_util_1.hasStringProp)(object, 'contextId') &&
            (0, type_util_1.hasStringProp)(object, 'modelElementId') &&
            (0, type_util_1.hasStringProp)(object, 'text'));
    }
    RequestEditValidationAction.is = is;
    function create(options) {
        return Object.assign({ kind: RequestEditValidationAction.KIND, requestId: '' }, options);
    }
    RequestEditValidationAction.create = create;
})(RequestEditValidationAction = exports.RequestEditValidationAction || (exports.RequestEditValidationAction = {}));
var SetEditValidationResultAction;
(function (SetEditValidationResultAction) {
    SetEditValidationResultAction.KIND = 'setEditValidationResult';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, SetEditValidationResultAction.KIND) && (0, type_util_1.hasObjectProp)(object, 'status');
    }
    SetEditValidationResultAction.is = is;
    function create(status, options = {}) {
        return Object.assign({ kind: SetEditValidationResultAction.KIND, responseId: '', status }, options);
    }
    SetEditValidationResultAction.create = create;
})(SetEditValidationResultAction = exports.SetEditValidationResultAction || (exports.SetEditValidationResultAction = {}));
var ApplyLabelEditOperation;
(function (ApplyLabelEditOperation) {
    ApplyLabelEditOperation.KIND = 'applyLabelEdit';
    function is(object) {
        return base_protocol_1.Operation.hasKind(object, ApplyLabelEditOperation.KIND) && (0, type_util_1.hasStringProp)(object, 'labelId') && (0, type_util_1.hasStringProp)(object, 'text');
    }
    ApplyLabelEditOperation.is = is;
    function create(options) {
        return Object.assign({ kind: ApplyLabelEditOperation.KIND, isOperation: true }, options);
    }
    ApplyLabelEditOperation.create = create;
})(ApplyLabelEditOperation = exports.ApplyLabelEditOperation || (exports.ApplyLabelEditOperation = {}));
var ValidationStatus;
(function (ValidationStatus) {
    /**
     * The default {@link ValidationStatus} severity levels used in GLSP.
     */
    // eslint-disable-next-line no-shadow
    let Severity;
    (function (Severity) {
        Severity[Severity["FATAL"] = 0] = "FATAL";
        Severity[Severity["ERROR"] = 1] = "ERROR";
        Severity[Severity["WARNING"] = 2] = "WARNING";
        Severity[Severity["INFO"] = 3] = "INFO";
        Severity[Severity["OK"] = 4] = "OK";
        // eslint-disable-next-line no-shadow
        Severity[Severity["NONE"] = 5] = "NONE";
    })(Severity = ValidationStatus.Severity || (ValidationStatus.Severity = {}));
    /**
     * An empty {@link ValidationStatus}.
     */
    ValidationStatus.NONE = {
        severity: Severity.NONE,
        message: '',
        error: { code: -1, message: '', data: {} }
    };
    /**
     * Utility function to check wether the given {@link ValidationStatus} has
     * a severity that is considered to be OK.
     * @param validationStatus The validation status to check.
     * @returns `true` if the given status has a non critical severity, `false` otherwise.
     */
    function isOk(validationStatus) {
        return (validationStatus.severity === Severity.OK ||
            validationStatus.severity === Severity.INFO ||
            validationStatus.severity === Severity.NONE);
    }
    ValidationStatus.isOk = isOk;
    /**
     * Utility function to check wether the given {@link ValidationStatus} has
     * a `warning` severity.
     * @param validationStatus The validation status to check.
     * @returns `true` if the given status has a `warning` severity, `false` otherwise.
     */
    function isWarning(validationStatus) {
        return validationStatus.severity === Severity.WARNING;
    }
    ValidationStatus.isWarning = isWarning;
    /**
     * Utility function to check wether the given {@link ValidationStatus} has
     * an `error` or `fatal` severity.
     * @param validationStatus The validation status to check.
     * @returns `true` if the given status has a `error` or `fatal` severity, `false` otherwise.
     */
    function isError(validationStatus) {
        return validationStatus.severity === Severity.ERROR || validationStatus.severity === Severity.FATAL;
    }
    ValidationStatus.isError = isError;
})(ValidationStatus = exports.ValidationStatus || (exports.ValidationStatus = {}));


/***/ }),

/***/ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/element-type-hints.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/protocol/lib/action-protocol/element-type-hints.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2019-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SetTypeHintsAction = exports.RequestTypeHintsAction = void 0;
const type_util_1 = __webpack_require__(/*! ../utils/type-util */ "./node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js");
const base_protocol_1 = __webpack_require__(/*! ./base-protocol */ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/base-protocol.js");
var RequestTypeHintsAction;
(function (RequestTypeHintsAction) {
    RequestTypeHintsAction.KIND = 'requestTypeHints';
    function is(object) {
        return base_protocol_1.RequestAction.hasKind(object, RequestTypeHintsAction.KIND);
    }
    RequestTypeHintsAction.is = is;
    function create(options = {}) {
        return Object.assign({ kind: RequestTypeHintsAction.KIND, requestId: '' }, options);
    }
    RequestTypeHintsAction.create = create;
})(RequestTypeHintsAction = exports.RequestTypeHintsAction || (exports.RequestTypeHintsAction = {}));
var SetTypeHintsAction;
(function (SetTypeHintsAction) {
    SetTypeHintsAction.KIND = 'setTypeHints';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, SetTypeHintsAction.KIND) && (0, type_util_1.hasArrayProp)(object, 'shapeHints') && (0, type_util_1.hasArrayProp)(object, 'edgeHints');
    }
    SetTypeHintsAction.is = is;
    function create(options) {
        return Object.assign({ kind: SetTypeHintsAction.KIND, responseId: '' }, options);
    }
    SetTypeHintsAction.create = create;
})(SetTypeHintsAction = exports.SetTypeHintsAction || (exports.SetTypeHintsAction = {}));


/***/ }),

/***/ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/element-validation.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/protocol/lib/action-protocol/element-validation.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DeleteMarkersAction = exports.SetMarkersAction = exports.RequestMarkersAction = exports.MarkersReason = exports.MarkerKind = void 0;
/********************************************************************************
 * Copyright (c) 2021-2023 STMicroelectronics and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const type_util_1 = __webpack_require__(/*! ../utils/type-util */ "./node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js");
const base_protocol_1 = __webpack_require__(/*! ./base-protocol */ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/base-protocol.js");
/**
 * The default marker kinds used in GLSP
 */
var MarkerKind;
(function (MarkerKind) {
    MarkerKind.INFO = 'info';
    MarkerKind.WARNING = 'warning';
    MarkerKind.ERROR = 'error';
})(MarkerKind = exports.MarkerKind || (exports.MarkerKind = {}));
/**
 * The default reasons for markers.
 */
var MarkersReason;
(function (MarkersReason) {
    /** Markers resulting from a batch validation */
    MarkersReason.BATCH = 'batch';
    /** Markers resulting from a live validation */
    MarkersReason.LIVE = 'live';
})(MarkersReason = exports.MarkersReason || (exports.MarkersReason = {}));
var RequestMarkersAction;
(function (RequestMarkersAction) {
    RequestMarkersAction.KIND = 'requestMarkers';
    function is(object) {
        return base_protocol_1.RequestAction.hasKind(object, RequestMarkersAction.KIND) && (0, type_util_1.hasArrayProp)(object, 'elementsIDs');
    }
    RequestMarkersAction.is = is;
    function create(elementsIDs, options = {}) {
        return Object.assign({ kind: RequestMarkersAction.KIND, requestId: '', elementsIDs, reason: MarkersReason.BATCH }, options);
    }
    RequestMarkersAction.create = create;
})(RequestMarkersAction = exports.RequestMarkersAction || (exports.RequestMarkersAction = {}));
var SetMarkersAction;
(function (SetMarkersAction) {
    SetMarkersAction.KIND = 'setMarkers';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, SetMarkersAction.KIND) && (0, type_util_1.hasArrayProp)(object, 'markers');
    }
    SetMarkersAction.is = is;
    function create(markers, options = {}) {
        return Object.assign({ kind: SetMarkersAction.KIND, responseId: '', markers, reason: MarkersReason.BATCH }, options);
    }
    SetMarkersAction.create = create;
})(SetMarkersAction = exports.SetMarkersAction || (exports.SetMarkersAction = {}));
var DeleteMarkersAction;
(function (DeleteMarkersAction) {
    DeleteMarkersAction.KIND = 'deleteMarkers';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, DeleteMarkersAction.KIND) && (0, type_util_1.hasArrayProp)(object, 'markers');
    }
    DeleteMarkersAction.is = is;
    function create(markers) {
        return {
            kind: DeleteMarkersAction.KIND,
            markers
        };
    }
    DeleteMarkersAction.create = create;
})(DeleteMarkersAction = exports.DeleteMarkersAction || (exports.DeleteMarkersAction = {}));


/***/ }),

/***/ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/index.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/protocol/lib/action-protocol/index.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2021-2022 STMicroelectronics and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
__exportStar(__webpack_require__(/*! ./base-protocol */ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/base-protocol.js"), exports);
__exportStar(__webpack_require__(/*! ./client-notification */ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/client-notification.js"), exports);
__exportStar(__webpack_require__(/*! ./clipboard */ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/clipboard.js"), exports);
__exportStar(__webpack_require__(/*! ./contexts */ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/contexts.js"), exports);
__exportStar(__webpack_require__(/*! ./edge-modification */ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/edge-modification.js"), exports);
__exportStar(__webpack_require__(/*! ./element-creation */ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/element-creation.js"), exports);
__exportStar(__webpack_require__(/*! ./element-hover */ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/element-hover.js"), exports);
__exportStar(__webpack_require__(/*! ./element-navigation */ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/element-navigation.js"), exports);
__exportStar(__webpack_require__(/*! ./element-selection */ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/element-selection.js"), exports);
__exportStar(__webpack_require__(/*! ./element-text-editing */ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/element-text-editing.js"), exports);
__exportStar(__webpack_require__(/*! ./element-type-hints */ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/element-type-hints.js"), exports);
__exportStar(__webpack_require__(/*! ./element-validation */ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/element-validation.js"), exports);
__exportStar(__webpack_require__(/*! ./model-data */ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/model-data.js"), exports);
__exportStar(__webpack_require__(/*! ./model-edit-mode */ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/model-edit-mode.js"), exports);
__exportStar(__webpack_require__(/*! ./model-layout */ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/model-layout.js"), exports);
__exportStar(__webpack_require__(/*! ./model-saving */ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/model-saving.js"), exports);
__exportStar(__webpack_require__(/*! ./model-structure */ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/model-structure.js"), exports);
__exportStar(__webpack_require__(/*! ./node-modification */ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/node-modification.js"), exports);
__exportStar(__webpack_require__(/*! ./tool-palette */ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/tool-palette.js"), exports);
__exportStar(__webpack_require__(/*! ./types */ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/types.js"), exports);
__exportStar(__webpack_require__(/*! ./undo-redo */ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/undo-redo.js"), exports);
__exportStar(__webpack_require__(/*! ./viewport */ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/viewport.js"), exports);


/***/ }),

/***/ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/model-data.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/protocol/lib/action-protocol/model-data.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SourceModelChangedAction = exports.UpdateModelAction = exports.SetModelAction = exports.RequestModelAction = void 0;
const type_util_1 = __webpack_require__(/*! ../utils/type-util */ "./node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js");
const base_protocol_1 = __webpack_require__(/*! ./base-protocol */ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/base-protocol.js");
var RequestModelAction;
(function (RequestModelAction) {
    RequestModelAction.KIND = 'requestModel';
    function is(object) {
        return base_protocol_1.RequestAction.hasKind(object, RequestModelAction.KIND);
    }
    RequestModelAction.is = is;
    function create(options = {}) {
        return Object.assign({ kind: RequestModelAction.KIND, requestId: '' }, options);
    }
    RequestModelAction.create = create;
})(RequestModelAction = exports.RequestModelAction || (exports.RequestModelAction = {}));
var SetModelAction;
(function (SetModelAction) {
    SetModelAction.KIND = 'setModel';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, SetModelAction.KIND) && (0, type_util_1.hasObjectProp)(object, 'newRoot');
    }
    SetModelAction.is = is;
    function create(newRoot, options = {}) {
        return Object.assign({ kind: SetModelAction.KIND, responseId: '', newRoot }, options);
    }
    SetModelAction.create = create;
})(SetModelAction = exports.SetModelAction || (exports.SetModelAction = {}));
var UpdateModelAction;
(function (UpdateModelAction) {
    UpdateModelAction.KIND = 'updateModel';
    function is(action) {
        return base_protocol_1.Action.hasKind(action, UpdateModelAction.KIND) && (0, type_util_1.hasObjectProp)(action, 'newRoot');
    }
    UpdateModelAction.is = is;
    function create(newRoot, options = {}) {
        return Object.assign({ kind: UpdateModelAction.KIND, newRoot, animate: true }, options);
    }
    UpdateModelAction.create = create;
})(UpdateModelAction = exports.UpdateModelAction || (exports.UpdateModelAction = {}));
var SourceModelChangedAction;
(function (SourceModelChangedAction) {
    SourceModelChangedAction.KIND = 'sourceModelChanged';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, SourceModelChangedAction.KIND) && (0, type_util_1.hasStringProp)(object, 'sourceModelName');
    }
    SourceModelChangedAction.is = is;
    function create(sourceModelName) {
        return {
            kind: SourceModelChangedAction.KIND,
            sourceModelName: sourceModelName
        };
    }
    SourceModelChangedAction.create = create;
})(SourceModelChangedAction = exports.SourceModelChangedAction || (exports.SourceModelChangedAction = {}));


/***/ }),

/***/ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/model-edit-mode.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/protocol/lib/action-protocol/model-edit-mode.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EditMode = exports.SetEditModeAction = void 0;
/********************************************************************************
 * Copyright (c) 2020-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const type_util_1 = __webpack_require__(/*! ../utils/type-util */ "./node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js");
const base_protocol_1 = __webpack_require__(/*! ./base-protocol */ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/base-protocol.js");
var SetEditModeAction;
(function (SetEditModeAction) {
    SetEditModeAction.KIND = 'setEditMode';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, SetEditModeAction.KIND) && (0, type_util_1.hasStringProp)(object, 'editMode');
    }
    SetEditModeAction.is = is;
    function create(editMode) {
        return {
            kind: SetEditModeAction.KIND,
            editMode
        };
    }
    SetEditModeAction.create = create;
})(SetEditModeAction = exports.SetEditModeAction || (exports.SetEditModeAction = {}));
/**
 * The potential default values for the `editMode` property of  a {@link SetEditModeAction}.
 */
var EditMode;
(function (EditMode) {
    EditMode.READONLY = 'readonly';
    EditMode.EDITABLE = 'editable';
})(EditMode = exports.EditMode || (exports.EditMode = {}));


/***/ }),

/***/ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/model-layout.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/protocol/lib/action-protocol/model-layout.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LayoutOperation = exports.ComputedBoundsAction = exports.RequestBoundsAction = void 0;
const type_util_1 = __webpack_require__(/*! ../utils/type-util */ "./node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js");
const base_protocol_1 = __webpack_require__(/*! ./base-protocol */ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/base-protocol.js");
var RequestBoundsAction;
(function (RequestBoundsAction) {
    RequestBoundsAction.KIND = 'requestBounds';
    function is(object) {
        return base_protocol_1.RequestAction.hasKind(object, RequestBoundsAction.KIND) && (0, type_util_1.hasObjectProp)(object, 'newRoot');
    }
    RequestBoundsAction.is = is;
    function create(newRoot, options = {}) {
        return Object.assign({ kind: RequestBoundsAction.KIND, requestId: '', newRoot }, options);
    }
    RequestBoundsAction.create = create;
})(RequestBoundsAction = exports.RequestBoundsAction || (exports.RequestBoundsAction = {}));
var ComputedBoundsAction;
(function (ComputedBoundsAction) {
    ComputedBoundsAction.KIND = 'computedBounds';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, ComputedBoundsAction.KIND) && (0, type_util_1.hasArrayProp)(object, 'bounds');
    }
    ComputedBoundsAction.is = is;
    function create(bounds, options = {}) {
        return Object.assign({ kind: ComputedBoundsAction.KIND, responseId: '', bounds }, options);
    }
    ComputedBoundsAction.create = create;
})(ComputedBoundsAction = exports.ComputedBoundsAction || (exports.ComputedBoundsAction = {}));
var LayoutOperation;
(function (LayoutOperation) {
    LayoutOperation.KIND = 'layout';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, LayoutOperation.KIND) && (0, type_util_1.hasArrayProp)(object, 'elementIds');
    }
    LayoutOperation.is = is;
    function create(elementIds) {
        return {
            kind: LayoutOperation.KIND,
            isOperation: true,
            elementIds
        };
    }
    LayoutOperation.create = create;
})(LayoutOperation = exports.LayoutOperation || (exports.LayoutOperation = {}));


/***/ }),

/***/ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/model-saving.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/protocol/lib/action-protocol/model-saving.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ExportSvgAction = exports.RequestExportSvgAction = exports.SetDirtyStateAction = exports.SaveModelAction = void 0;
/********************************************************************************
 * Copyright (c) 2021-2022 STMicroelectronics and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const type_util_1 = __webpack_require__(/*! ../utils/type-util */ "./node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js");
const base_protocol_1 = __webpack_require__(/*! ./base-protocol */ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/base-protocol.js");
var SaveModelAction;
(function (SaveModelAction) {
    SaveModelAction.KIND = 'saveModel';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, SaveModelAction.KIND);
    }
    SaveModelAction.is = is;
    function create(options = {}) {
        return Object.assign({ kind: SaveModelAction.KIND }, options);
    }
    SaveModelAction.create = create;
})(SaveModelAction = exports.SaveModelAction || (exports.SaveModelAction = {}));
var SetDirtyStateAction;
(function (SetDirtyStateAction) {
    SetDirtyStateAction.KIND = 'setDirtyState';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, SetDirtyStateAction.KIND) && (0, type_util_1.hasBooleanProp)(object, 'isDirty');
    }
    SetDirtyStateAction.is = is;
    function create(isDirty, options = {}) {
        return Object.assign({ kind: SetDirtyStateAction.KIND, isDirty }, options);
    }
    SetDirtyStateAction.create = create;
})(SetDirtyStateAction = exports.SetDirtyStateAction || (exports.SetDirtyStateAction = {}));
var RequestExportSvgAction;
(function (RequestExportSvgAction) {
    RequestExportSvgAction.KIND = 'requestExportSvg';
    function is(object) {
        return base_protocol_1.RequestAction.hasKind(object, RequestExportSvgAction.KIND);
    }
    RequestExportSvgAction.is = is;
    function create(options = {}) {
        return Object.assign({ kind: RequestExportSvgAction.KIND, requestId: '' }, options);
    }
    RequestExportSvgAction.create = create;
})(RequestExportSvgAction = exports.RequestExportSvgAction || (exports.RequestExportSvgAction = {}));
var ExportSvgAction;
(function (ExportSvgAction) {
    ExportSvgAction.KIND = 'exportSvg';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, ExportSvgAction.KIND) && (0, type_util_1.hasStringProp)(object, 'svg');
    }
    ExportSvgAction.is = is;
    function create(svg, options = {}) {
        return Object.assign({ kind: ExportSvgAction.KIND, svg, responseId: '' }, options);
    }
    ExportSvgAction.create = create;
})(ExportSvgAction = exports.ExportSvgAction || (exports.ExportSvgAction = {}));


/***/ }),

/***/ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/model-structure.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/protocol/lib/action-protocol/model-structure.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SModelElementSchema = void 0;
const type_util_1 = __webpack_require__(/*! ../utils/type-util */ "./node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js");
var SModelElementSchema;
(function (SModelElementSchema) {
    /**
     * Typeguard function to check wether the given object is an {@link SModelElementSchema}.
     * @param object The object to check.
     * @returns A type literal indicating wether the given object is of type {@link SModelElementSchema}.
     */
    function is(object) {
        return typeof object === 'object' && (0, type_util_1.hasStringProp)(object, 'type') && (0, type_util_1.hasStringProp)(object, 'id');
    }
    SModelElementSchema.is = is;
})(SModelElementSchema = exports.SModelElementSchema || (exports.SModelElementSchema = {}));


/***/ }),

/***/ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/node-modification.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/protocol/lib/action-protocol/node-modification.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2021-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ChangeContainerOperation = exports.ChangeBoundsOperation = void 0;
const type_util_1 = __webpack_require__(/*! ../utils/type-util */ "./node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js");
const base_protocol_1 = __webpack_require__(/*! ./base-protocol */ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/base-protocol.js");
var ChangeBoundsOperation;
(function (ChangeBoundsOperation) {
    ChangeBoundsOperation.KIND = 'changeBounds';
    function is(object) {
        return base_protocol_1.Operation.hasKind(object, ChangeBoundsOperation.KIND) && (0, type_util_1.hasArrayProp)(object, 'newBounds');
    }
    ChangeBoundsOperation.is = is;
    function create(newBounds) {
        return {
            kind: ChangeBoundsOperation.KIND,
            isOperation: true,
            newBounds
        };
    }
    ChangeBoundsOperation.create = create;
})(ChangeBoundsOperation = exports.ChangeBoundsOperation || (exports.ChangeBoundsOperation = {}));
var ChangeContainerOperation;
(function (ChangeContainerOperation) {
    ChangeContainerOperation.KIND = 'changeContainer';
    function is(object) {
        return base_protocol_1.Operation.hasKind(object, ChangeContainerOperation.KIND) && (0, type_util_1.hasStringProp)(object, 'elementId') && (0, type_util_1.hasStringProp)(object, 'targetContainerId');
    }
    ChangeContainerOperation.is = is;
    function create(options) {
        return Object.assign({ kind: ChangeContainerOperation.KIND, isOperation: true }, options);
    }
    ChangeContainerOperation.create = create;
})(ChangeContainerOperation = exports.ChangeContainerOperation || (exports.ChangeContainerOperation = {}));


/***/ }),

/***/ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/tool-palette.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/protocol/lib/action-protocol/tool-palette.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2021-2022 STMicroelectronics and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TriggerEdgeCreationAction = exports.TriggerNodeCreationAction = void 0;
const type_util_1 = __webpack_require__(/*! ../utils/type-util */ "./node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js");
const base_protocol_1 = __webpack_require__(/*! ./base-protocol */ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/base-protocol.js");
var TriggerNodeCreationAction;
(function (TriggerNodeCreationAction) {
    TriggerNodeCreationAction.KIND = 'triggerNodeCreation';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, TriggerNodeCreationAction.KIND) && (0, type_util_1.hasStringProp)(object, 'elementTypeId');
    }
    TriggerNodeCreationAction.is = is;
    function create(elementTypeId, options = {}) {
        return Object.assign({ kind: TriggerNodeCreationAction.KIND, elementTypeId }, options);
    }
    TriggerNodeCreationAction.create = create;
})(TriggerNodeCreationAction = exports.TriggerNodeCreationAction || (exports.TriggerNodeCreationAction = {}));
var TriggerEdgeCreationAction;
(function (TriggerEdgeCreationAction) {
    TriggerEdgeCreationAction.KIND = 'triggerEdgeCreation';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, TriggerEdgeCreationAction.KIND) && (0, type_util_1.hasStringProp)(object, 'elementTypeId');
    }
    TriggerEdgeCreationAction.is = is;
    function create(elementTypeId, options = {}) {
        return Object.assign({ kind: TriggerEdgeCreationAction.KIND, elementTypeId }, options);
    }
    TriggerEdgeCreationAction.create = create;
})(TriggerEdgeCreationAction = exports.TriggerEdgeCreationAction || (exports.TriggerEdgeCreationAction = {}));


/***/ }),

/***/ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/types.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/protocol/lib/action-protocol/types.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MenuItem = exports.PaletteItem = exports.LabeledAction = exports.EditorContext = void 0;
const type_util_1 = __webpack_require__(/*! ../utils/type-util */ "./node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js");
const tool_palette_1 = __webpack_require__(/*! ./tool-palette */ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/tool-palette.js");
var EditorContext;
(function (EditorContext) {
    function is(object) {
        return object !== undefined && (0, type_util_1.hasArrayProp)(object, 'selectedElementIds');
    }
    EditorContext.is = is;
})(EditorContext = exports.EditorContext || (exports.EditorContext = {}));
var LabeledAction;
(function (LabeledAction) {
    function is(object) {
        return type_util_1.AnyObject.is(object) && (0, type_util_1.hasStringProp)(object, 'label') && (0, type_util_1.hasArrayProp)(object, 'actions');
    }
    LabeledAction.is = is;
    function toActionArray(input) {
        if (Array.isArray(input)) {
            return input;
        }
        else if (LabeledAction.is(input)) {
            return input.actions;
        }
        return [input];
    }
    LabeledAction.toActionArray = toActionArray;
})(LabeledAction = exports.LabeledAction || (exports.LabeledAction = {}));
var PaletteItem;
(function (PaletteItem) {
    function is(object) {
        return LabeledAction.is(object) && (0, type_util_1.hasStringProp)(object, 'id') && (0, type_util_1.hasStringProp)(object, 'sortString');
    }
    PaletteItem.is = is;
    function getTriggerAction(item) {
        if (item) {
            const initialActions = item.actions
                .filter(a => isTriggerElementCreationAction(a))
                .map(action => action);
            return initialActions.length > 0 ? initialActions[0] : undefined;
        }
        return undefined;
    }
    PaletteItem.getTriggerAction = getTriggerAction;
    function isTriggerElementCreationAction(object) {
        return tool_palette_1.TriggerNodeCreationAction.is(object) || tool_palette_1.TriggerEdgeCreationAction.is(object);
    }
    PaletteItem.isTriggerElementCreationAction = isTriggerElementCreationAction;
})(PaletteItem = exports.PaletteItem || (exports.PaletteItem = {}));
var MenuItem;
(function (MenuItem) {
    function is(object) {
        return LabeledAction.is(object) && (0, type_util_1.hasStringProp)(object, 'id');
    }
    MenuItem.is = is;
})(MenuItem = exports.MenuItem || (exports.MenuItem = {}));


/***/ }),

/***/ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/undo-redo.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/protocol/lib/action-protocol/undo-redo.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2021-2022 STMicroelectronics and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RedoAction = exports.UndoAction = void 0;
const base_protocol_1 = __webpack_require__(/*! ./base-protocol */ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/base-protocol.js");
var UndoAction;
(function (UndoAction) {
    UndoAction.KIND = 'glspUndo';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, UndoAction.KIND);
    }
    UndoAction.is = is;
    function create() {
        return {
            kind: UndoAction.KIND
        };
    }
    UndoAction.create = create;
})(UndoAction = exports.UndoAction || (exports.UndoAction = {}));
var RedoAction;
(function (RedoAction) {
    RedoAction.KIND = 'glspRedo';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, RedoAction.KIND);
    }
    RedoAction.is = is;
    function create() {
        return {
            kind: RedoAction.KIND
        };
    }
    RedoAction.create = create;
})(RedoAction = exports.RedoAction || (exports.RedoAction = {}));


/***/ }),

/***/ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/viewport.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/protocol/lib/action-protocol/viewport.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FitToScreenAction = exports.CenterAction = void 0;
const type_util_1 = __webpack_require__(/*! ../utils/type-util */ "./node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js");
const base_protocol_1 = __webpack_require__(/*! ./base-protocol */ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/base-protocol.js");
var CenterAction;
(function (CenterAction) {
    CenterAction.KIND = 'center';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, CenterAction.KIND) && (0, type_util_1.hasBooleanProp)(object, 'animate') && (0, type_util_1.hasBooleanProp)(object, 'retainZoom');
    }
    CenterAction.is = is;
    function create(elementIds, options = {}) {
        return Object.assign({ kind: CenterAction.KIND, animate: true, retainZoom: false, elementIds }, options);
    }
    CenterAction.create = create;
})(CenterAction = exports.CenterAction || (exports.CenterAction = {}));
var FitToScreenAction;
(function (FitToScreenAction) {
    FitToScreenAction.KIND = 'fit';
    function is(object) {
        return base_protocol_1.Action.hasKind(object, FitToScreenAction.KIND) && (0, type_util_1.hasArrayProp)(object, 'elementIds') && (0, type_util_1.hasBooleanProp)(object, 'animate');
    }
    FitToScreenAction.is = is;
    function create(elementIds, options = {}) {
        return Object.assign({ kind: FitToScreenAction.KIND, animate: true, elementIds }, options);
    }
    FitToScreenAction.create = create;
})(FitToScreenAction = exports.FitToScreenAction || (exports.FitToScreenAction = {}));


/***/ }),

/***/ "./node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/base-glsp-client.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/base-glsp-client.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BaseGLSPClient = void 0;
const sprotty_protocol_1 = __webpack_require__(/*! sprotty-protocol */ "./node_modules/sprotty-protocol/lib/index.js");
const vscode_jsonrpc_1 = __webpack_require__(/*! vscode-jsonrpc */ "./node_modules/vscode-jsonrpc/lib/browser/main.js");
const array_util_1 = __webpack_require__(/*! ../utils/array-util */ "./node_modules/@eclipse-glsp/protocol/lib/utils/array-util.js");
const glsp_client_1 = __webpack_require__(/*! ./glsp-client */ "./node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/glsp-client.js");
/**
 * A simple {@link GLSPClient} implementation for use cases where the client & server are running
 * in the same context/process without a communication layer (like json-rpc) between. The client
 * directly communicates with a given {@link GLSPServer} instance.
 */
class BaseGLSPClient {
    constructor(options) {
        this.options = options;
        this.serverDeferred = new sprotty_protocol_1.Deferred();
        this.onStartDeferred = new sprotty_protocol_1.Deferred();
        this.onStopDeferred = new sprotty_protocol_1.Deferred();
        this.startupTimeout = 1500;
        this.actionMessageHandlers = [];
        this.state = glsp_client_1.ClientState.Initial;
        this.proxy = this.createProxy();
    }
    createProxy() {
        return {
            process: message => {
                if (this.actionMessageHandlers.length === 0) {
                    console.warn('No ActionMessageHandler is configured- Cannot process server message', message);
                    return;
                }
                [...this.actionMessageHandlers].forEach(handler => handler(message));
            }
        };
    }
    configureServer(server) {
        if (this.state === glsp_client_1.ClientState.Running) {
            throw new Error('Could not configure new server. The GLSPClient is already running');
        }
        this.serverDeferred.resolve(server);
    }
    start() {
        if (this.state !== glsp_client_1.ClientState.Initial) {
            return this.onStartDeferred.promise;
        }
        this.state = glsp_client_1.ClientState.Starting;
        const timeOut = new Promise((_, reject) => setTimeout(() => {
            reject(new Error('Could not start client. No server is configured'));
        }, this.startupTimeout));
        Promise.race([this.serverDeferred.promise, timeOut])
            .then(server => {
            this._server = server;
            this.state = glsp_client_1.ClientState.Running;
            this.onStartDeferred.resolve();
        })
            .catch(error => {
            this.state = glsp_client_1.ClientState.StartFailed;
            this.onStartDeferred.reject(error);
        });
        return this.onStartDeferred.promise;
    }
    initializeServer(params) {
        return this.checkedServer.initialize(params);
    }
    initializeClientSession(params) {
        return this.checkedServer.initializeClientSession(params);
    }
    disposeClientSession(params) {
        return this.checkedServer.disposeClientSession(params);
    }
    shutdownServer() {
        this.checkedServer.shutdown();
    }
    async stop() {
        if (this.state === glsp_client_1.ClientState.Stopped || this.state === glsp_client_1.ClientState.Stopping) {
            return this.onStop();
        }
        this.state = glsp_client_1.ClientState.Stopping;
        try {
            if (this._server) {
                this._server.shutdown();
            }
        }
        finally {
            this.state = glsp_client_1.ClientState.Stopped;
            this.onStopDeferred.resolve();
        }
    }
    sendActionMessage(message) {
        this.checkedServer.process(message);
    }
    onActionMessage(handler) {
        (0, array_util_1.distinctAdd)(this.actionMessageHandlers, handler);
        return vscode_jsonrpc_1.Disposable.create(() => (0, array_util_1.remove)(this.actionMessageHandlers, handler));
    }
    get currentState() {
        return this.state;
    }
    onStart() {
        return this.onStartDeferred.promise;
    }
    onStop() {
        return this.onStopDeferred.promise;
    }
    get id() {
        return this.options.id;
    }
    checkState() {
        if (this.state !== glsp_client_1.ClientState.Running) {
            throw new Error(`Client with id '${this.id}' is not in 'Running' state`);
        }
    }
    get checkedServer() {
        this.checkState();
        if (!this._server) {
            throw new Error(`No server is configured for GLSPClient with id '${this.id}'`);
        }
        return this._server;
    }
    setStartupTimeout(ms) {
        this.startupTimeout = ms;
    }
}
exports.BaseGLSPClient = BaseGLSPClient;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/glsp-client.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/glsp-client.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GLSPClient = exports.ClientState = exports.ApplicationIdProvider = void 0;
/********************************************************************************
 * Copyright (c) 2020-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const uuid = __webpack_require__(/*! uuid */ "./node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/index.js");
class ApplicationIdProvider {
    static get() {
        if (!ApplicationIdProvider._applicationId) {
            ApplicationIdProvider._applicationId = uuid.v4();
        }
        return ApplicationIdProvider._applicationId;
    }
}
exports.ApplicationIdProvider = ApplicationIdProvider;
// eslint-disable-next-line no-shadow
var ClientState;
(function (ClientState) {
    /**
     * The client has been created.
     */
    ClientState[ClientState["Initial"] = 0] = "Initial";
    /**
     * `Start` has been called on the client and the start process is still on-going.
     */
    ClientState[ClientState["Starting"] = 1] = "Starting";
    /**
     * The client failed to complete the start process.
     */
    ClientState[ClientState["StartFailed"] = 2] = "StartFailed";
    /**
     * The client was successfully started and is now running.
     */
    ClientState[ClientState["Running"] = 3] = "Running";
    /**
     * `Stop` has been called on the client and the stop process is still on-going.
     */
    ClientState[ClientState["Stopping"] = 4] = "Stopping";
    /**
     * The client stopped and disposed the server connection. Thus, action messages can no longer be sent.
     */
    ClientState[ClientState["Stopped"] = 5] = "Stopped";
    /**
     * An error was encountered while connecting to the server. No action messages can be sent.
     */
    ClientState[ClientState["ServerError"] = 6] = "ServerError";
})(ClientState = exports.ClientState || (exports.ClientState = {}));
var GLSPClient;
(function (GLSPClient) {
    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types
    function isOptions(object) {
        return typeof object === 'object' && 'id' in object && typeof object['id'] === 'string';
    }
    GLSPClient.isOptions = isOptions;
    GLSPClient.protocolVersion = '1.0.0';
})(GLSPClient = exports.GLSPClient || (exports.GLSPClient = {}));


/***/ }),

/***/ "./node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/glsp-server.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/glsp-server.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2022-2023 STMicroelectronics and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GLSPClientProxy = exports.GLSPServerListener = exports.GLSPServer = void 0;
exports.GLSPServer = Symbol('GLSPServer');
exports.GLSPServerListener = Symbol('GLSPServerListener');
exports.GLSPClientProxy = Symbol('GLSPClientProxy');


/***/ }),

/***/ "./node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/jsonrpc/base-jsonrpc-glsp-client.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/jsonrpc/base-jsonrpc-glsp-client.js ***!
  \************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.JsonrpcClientProxy = exports.BaseJsonrpcGLSPClient = void 0;
/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
const glsp_client_1 = __webpack_require__(/*! ../glsp-client */ "./node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/glsp-client.js");
const glsp_jsonrpc_client_1 = __webpack_require__(/*! ./glsp-jsonrpc-client */ "./node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/jsonrpc/glsp-jsonrpc-client.js");
class BaseJsonrpcGLSPClient {
    constructor(options) {
        Object.assign(this, options);
        this.state = glsp_client_1.ClientState.Initial;
    }
    shutdownServer() {
        this.checkedConnection.sendNotification(glsp_jsonrpc_client_1.JsonrpcGLSPClient.ShutdownNotification);
    }
    initializeServer(params) {
        return this.checkedConnection.sendRequest(glsp_jsonrpc_client_1.JsonrpcGLSPClient.InitializeRequest, params);
    }
    initializeClientSession(params) {
        return this.checkedConnection.sendRequest(glsp_jsonrpc_client_1.JsonrpcGLSPClient.InitializeClientSessionRequest, params);
    }
    disposeClientSession(params) {
        return this.checkedConnection.sendRequest(glsp_jsonrpc_client_1.JsonrpcGLSPClient.DisposeClientSessionRequest, params);
    }
    onActionMessage(handler) {
        return this.checkedConnection.onNotification(glsp_jsonrpc_client_1.JsonrpcGLSPClient.ActionMessageNotification, handler);
    }
    sendActionMessage(message) {
        this.checkedConnection.sendNotification(glsp_jsonrpc_client_1.JsonrpcGLSPClient.ActionMessageNotification, message);
    }
    get checkedConnection() {
        if (!this.isConnectionActive()) {
            throw new Error(glsp_jsonrpc_client_1.JsonrpcGLSPClient.ClientNotReadyMsg);
        }
        return this.resolvedConnection;
    }
    /**
     * @Deprecated use {@link checkConnection} instead
     */
    checkConnectionState() {
        return this.checkedConnection !== undefined;
    }
    async start() {
        try {
            this.state = glsp_client_1.ClientState.Starting;
            const connection = await this.resolveConnection();
            connection.listen();
            this.resolvedConnection = connection;
            this.state = glsp_client_1.ClientState.Running;
        }
        catch (error) {
            glsp_jsonrpc_client_1.JsonrpcGLSPClient.error('Failed to start connection to server', error);
            this.state = glsp_client_1.ClientState.StartFailed;
        }
    }
    stop() {
        if (!this.connectionPromise) {
            this.state = glsp_client_1.ClientState.Stopped;
            return Promise.resolve();
        }
        if (this.state === glsp_client_1.ClientState.Stopping && this.onStop) {
            return this.onStop;
        }
        this.state = glsp_client_1.ClientState.Stopping;
        return (this.onStop = this.resolveConnection().then(connection => {
            connection.dispose();
            this.state = glsp_client_1.ClientState.Stopped;
            this.onStop = undefined;
            this.connectionPromise = undefined;
            this.resolvedConnection = undefined;
        }));
    }
    resolveConnection() {
        if (!this.connectionPromise) {
            this.connectionPromise = this.doCreateConnection();
        }
        return this.connectionPromise;
    }
    async doCreateConnection() {
        const connection = typeof this.connectionProvider === 'function' ? await this.connectionProvider() : this.connectionProvider;
        connection.onError(data => this.handleConnectionError(data[0], data[1], data[2]));
        connection.onClose(() => this.handleConnectionClosed());
        return connection;
    }
    handleConnectionError(error, message, count) {
        glsp_jsonrpc_client_1.JsonrpcGLSPClient.error('Connection to server is erroring. Shutting down server.', error);
        this.stop();
        this.state = glsp_client_1.ClientState.ServerError;
    }
    handleConnectionClosed() {
        if (this.state === glsp_client_1.ClientState.Stopping || this.state === glsp_client_1.ClientState.Stopped) {
            return;
        }
        try {
            if (this.resolvedConnection) {
                this.resolvedConnection.dispose();
                this.connectionPromise = undefined;
                this.resolvedConnection = undefined;
            }
        }
        catch (error) {
            // Disposing a connection could fail if error cases.
        }
        glsp_jsonrpc_client_1.JsonrpcGLSPClient.error('Connection to server got closed. Server will not be restarted.');
        this.state = glsp_client_1.ClientState.ServerError;
    }
    isConnectionActive() {
        return this.state === glsp_client_1.ClientState.Running && !!this.resolvedConnection;
    }
    get currentState() {
        return this.state;
    }
}
exports.BaseJsonrpcGLSPClient = BaseJsonrpcGLSPClient;
/**
 * Default {@link GLSPClientProxy} implementation for jsonrpc-based client-server communication with typescript based servers.
 */
let JsonrpcClientProxy = class JsonrpcClientProxy {
    initialize(clientConnection, enableLogging = true) {
        this.clientConnection = clientConnection;
        this.enableLogging = enableLogging;
    }
    process(message) {
        var _a;
        if (this.enableLogging) {
            console.log(`Send action '${message.action.kind}' to client '${message.clientId}'`);
        }
        (_a = this.clientConnection) === null || _a === void 0 ? void 0 : _a.sendNotification(glsp_jsonrpc_client_1.JsonrpcGLSPClient.ActionMessageNotification, message);
    }
};
JsonrpcClientProxy = __decorate([
    (0, inversify_1.injectable)()
], JsonrpcClientProxy);
exports.JsonrpcClientProxy = JsonrpcClientProxy;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/jsonrpc/glsp-jsonrpc-client.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/jsonrpc/glsp-jsonrpc-client.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.JsonrpcGLSPClient = void 0;
/********************************************************************************
 * Copyright (c) 2020-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const vscode_jsonrpc_1 = __webpack_require__(/*! vscode-jsonrpc */ "./node_modules/vscode-jsonrpc/lib/browser/main.js");
const glsp_client_1 = __webpack_require__(/*! ../glsp-client */ "./node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/glsp-client.js");
var JsonrpcGLSPClient;
(function (JsonrpcGLSPClient) {
    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types
    function isOptions(object) {
        return glsp_client_1.GLSPClient.isOptions(object) && 'connectionProvider' in object;
    }
    JsonrpcGLSPClient.isOptions = isOptions;
    JsonrpcGLSPClient.ActionMessageNotification = new vscode_jsonrpc_1.NotificationType('process');
    JsonrpcGLSPClient.InitializeRequest = new vscode_jsonrpc_1.RequestType('initialize');
    JsonrpcGLSPClient.InitializeClientSessionRequest = new vscode_jsonrpc_1.RequestType('initializeClientSession');
    JsonrpcGLSPClient.DisposeClientSessionRequest = new vscode_jsonrpc_1.RequestType('disposeClientSession');
    JsonrpcGLSPClient.ShutdownNotification = new vscode_jsonrpc_1.NotificationType0('shutdown');
    JsonrpcGLSPClient.ClientNotReadyMsg = 'JsonrpcGLSPClient is not ready yet';
    function error(message, ...optionalParams) {
        console.error(`[JsonrpcGLSPClient] ${message}`, optionalParams);
    }
    JsonrpcGLSPClient.error = error;
})(JsonrpcGLSPClient = exports.JsonrpcGLSPClient || (exports.JsonrpcGLSPClient = {}));


/***/ }),

/***/ "./node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/jsonrpc/glsp-jsonrpc-server.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/jsonrpc/glsp-jsonrpc-server.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2023 STMicroelectronics and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.configureClientConnection = void 0;
const glsp_jsonrpc_client_1 = __webpack_require__(/*! ./glsp-jsonrpc-client */ "./node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/jsonrpc/glsp-jsonrpc-client.js");
/**
 * Configure the given client connection to forward the requests and notifications to the given {@link GLSPServer} instance.
 * @param clientConnection JSON-RPC client connection.
 * @param glspServer The GLSP Server which should react to requests & notifications.
 */
function configureClientConnection(clientConnection, glspServer) {
    clientConnection.onRequest(glsp_jsonrpc_client_1.JsonrpcGLSPClient.InitializeRequest.method, (params) => glspServer.initialize(params));
    clientConnection.onRequest(glsp_jsonrpc_client_1.JsonrpcGLSPClient.InitializeClientSessionRequest, (params) => glspServer.initializeClientSession(params));
    clientConnection.onRequest(glsp_jsonrpc_client_1.JsonrpcGLSPClient.DisposeClientSessionRequest, (params) => glspServer.disposeClientSession(params));
    clientConnection.onNotification(glsp_jsonrpc_client_1.JsonrpcGLSPClient.ActionMessageNotification, message => glspServer.process(message));
    clientConnection.listen();
}
exports.configureClientConnection = configureClientConnection;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/jsonrpc/websocket-connection.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/jsonrpc/websocket-connection.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2023 STMicroelectronics and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.listen = exports.createWebSocketConnection = exports.WebSocketMessageWriter = exports.WebSocketMessageReader = exports.wrap = void 0;
// based on https://github.com/TypeFox/monaco-languageclient/blob/vwj-2.0.1/packages/vscode-ws-jsonrpc/src/socket/reader.ts
/* --------------------------------------------------------------------------------------------
 * Copyright (c) 2018-2022 TypeFox GmbH (http://www.typefox.io). All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
const vscode_jsonrpc_1 = __webpack_require__(/*! vscode-jsonrpc */ "./node_modules/vscode-jsonrpc/lib/browser/main.js");
/**
 * Creates a {@link WebSocketWrapper} for the given plain WebSocket
 * @param socket The socket to wrap
 */
function wrap(socket) {
    return {
        send: content => socket.send(content),
        onMessage: cb => (socket.onmessage = event => cb(event.data)),
        onClose: cb => (socket.onclose = event => cb(event.code, event.reason)),
        onError: cb => (socket.onerror = event => {
            if ('error' in event) {
                cb(event.error);
            }
        }),
        dispose: () => socket.close()
    };
}
exports.wrap = wrap;
/**
 * A `vscode-jsonrpc` {@link MessageReader} that reads messages from an underlying {@link WebSocketWrapper}.
 */
class WebSocketMessageReader extends vscode_jsonrpc_1.AbstractMessageReader {
    constructor(socket) {
        super();
        this.socket = socket;
        this.state = 'initial';
        this.eventQueue = [];
        this.socket.onMessage(message => this.handleMessage(message));
        this.socket.onError(error => this.fireError(error));
        this.socket.onClose(() => this.fireClose());
    }
    listen(callback) {
        if (this.state === 'initial') {
            this.state = 'listening';
            this.callback = callback;
            this.eventQueue.forEach(event => {
                if (event.message) {
                    this.handleMessage(event.message);
                }
                else if (event.error) {
                    this.fireError(event.error);
                }
                else {
                    this.fireClose();
                }
            });
            this.eventQueue = [];
        }
        return vscode_jsonrpc_1.Disposable.create(() => {
            this.callback = undefined;
            this.eventQueue = [];
        });
    }
    handleMessage(message) {
        if (this.state === 'initial') {
            this.eventQueue.push({ message });
        }
        else if (this.state === 'listening') {
            const data = JSON.parse(message);
            this.callback(data);
        }
    }
    fireError(error) {
        if (this.state === 'initial') {
            this.eventQueue.push({ error });
        }
        else if (this.state === 'listening') {
            super.fireError(error);
        }
    }
    fireClose() {
        if (this.state === 'initial') {
            this.eventQueue.push({});
        }
        else if (this.state === 'listening') {
            super.fireClose();
        }
        this.state = 'closed';
    }
}
exports.WebSocketMessageReader = WebSocketMessageReader;
/**
 * A `vscode-jsonrpc` {@link MessageReader} that writes messages to an underlying {@link WebSocketWrapper}.
 */
class WebSocketMessageWriter extends vscode_jsonrpc_1.AbstractMessageWriter {
    constructor(socket) {
        super();
        this.socket = socket;
        this.errorCount = 0;
    }
    end() {
        /** no-op */
    }
    async write(msg) {
        try {
            const content = JSON.stringify(msg);
            this.socket.send(content);
        }
        catch (e) {
            this.errorCount++;
            this.fireError(e, msg, this.errorCount);
        }
    }
}
exports.WebSocketMessageWriter = WebSocketMessageWriter;
/**
 * Create a `vscode-jsonrpc` {@link MessageConnection} on top of a given {@link WebSocketWrapper}.
 */
function createWebSocketConnection(socket, logger) {
    const reader = new WebSocketMessageReader(socket);
    const writer = new WebSocketMessageWriter(socket);
    return (0, vscode_jsonrpc_1.createMessageConnection)(reader, writer, logger);
}
exports.createWebSocketConnection = createWebSocketConnection;
/**
 * Creates a new {@link MessageConnection} on top of the given websocket on open.
 * @param webSocket The target webSocket
 * @param onConnection Optional callback that is invoked after the connection has been created
 * @param logger Optional connection logger
 * @returns A promise of the created connection
 */
function listen(webSocket, onConnection, logger) {
    return new Promise(resolve => {
        webSocket.onopen = () => {
            const socket = wrap(webSocket);
            const connection = createWebSocketConnection(socket, logger);
            onConnection === null || onConnection === void 0 ? void 0 : onConnection(connection);
            resolve(connection);
        };
    });
}
exports.listen = listen;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/types.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/types.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./node_modules/@eclipse-glsp/protocol/lib/disposable/disposable.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/protocol/lib/disposable/disposable.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DisposableCollection = exports.Disposable = void 0;
/********************************************************************************
 * Copyright (c) 2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const array_util_1 = __webpack_require__(/*! ../utils/array-util */ "./node_modules/@eclipse-glsp/protocol/lib/utils/array-util.js");
const type_util_1 = __webpack_require__(/*! ../utils/type-util */ "./node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js");
var Disposable;
(function (Disposable) {
    function is(value) {
        return type_util_1.AnyObject.is(value) && (0, type_util_1.hasFunctionProp)(value, 'dispose');
    }
    Disposable.is = is;
    /**
     * Creates a new empty i.e. no-op {@link Disposable}.
     * @returns the newly created disposable
     */
    function empty() {
        // eslint-disable-next-line @typescript-eslint/no-empty-function
        return { dispose: () => { } };
    }
    Disposable.empty = empty;
    /**
     * Creates a new {@link Disposable} that delegates to the given callback.
     * @param cb The callback that should be invoked on dispose
     * @returns the newly created disposable
     */
    function create(cb) {
        return { dispose: cb };
    }
    Disposable.create = create;
})(Disposable = exports.Disposable || (exports.Disposable = {}));
/**
 * Reusable base class to manage a collection of {@link Disposable}s.
 */
class DisposableCollection {
    constructor(...toDispose) {
        this.disposables = [];
        toDispose.forEach(d => this.push(d));
        this.errorHandler = err => console.error(err);
    }
    dispose() {
        var _a, _b;
        if (this.disposed) {
            return;
        }
        try {
            while (!this.disposed) {
                (_a = this.disposables.pop()) === null || _a === void 0 ? void 0 : _a.dispose();
            }
        }
        catch (err) {
            (_b = this.errorHandler) === null || _b === void 0 ? void 0 : _b.call(this, err);
        }
    }
    get disposed() {
        return this.disposables.length === 0;
    }
    /**
     * Pushes the given disposables to the collection.
     * @param disposables The disposables that should be added
     * @returns A disposable that removes the previously pushed values from the collection when invoked
     */
    push(...disposables) {
        this.disposables.push(...disposables);
        return Disposable.create(() => (0, array_util_1.remove)(this.disposables, ...disposables));
    }
    get isDisposed() {
        return this.disposed;
    }
}
exports.DisposableCollection = DisposableCollection;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/protocol/lib/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@eclipse-glsp/protocol/lib/index.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SetViewportAction = exports.SetBoundsAction = void 0;
/********************************************************************************
 * Copyright (c) 2020-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
const actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "./node_modules/sprotty-protocol/lib/actions.js");
Object.defineProperty(exports, "SetBoundsAction", ({ enumerable: true, get: function () { return actions_1.SetBoundsAction; } }));
Object.defineProperty(exports, "SetViewportAction", ({ enumerable: true, get: function () { return actions_1.SetViewportAction; } }));
const action_protocol_1 = __webpack_require__(/*! ./action-protocol */ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/index.js");
const type_util_1 = __webpack_require__(/*! ./utils/type-util */ "./node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js");
actions_1.SetViewportAction.is = (object) => action_protocol_1.Action.hasKind(object, actions_1.SetViewportAction.KIND) &&
    (0, type_util_1.hasStringProp)(object, 'elementId') &&
    (0, type_util_1.hasObjectProp)(object, 'newViewport') &&
    (0, type_util_1.hasBooleanProp)(object, 'animate');
actions_1.SetBoundsAction.is = (object) => action_protocol_1.Action.hasKind(object, actions_1.SetBoundsAction.KIND) && (0, type_util_1.hasObjectProp)(object, 'bounds');
__exportStar(__webpack_require__(/*! sprotty-protocol/lib/utils/async */ "./node_modules/sprotty-protocol/lib/utils/async.js"), exports);
__exportStar(__webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "./node_modules/sprotty-protocol/lib/utils/geometry.js"), exports);
__exportStar(__webpack_require__(/*! sprotty-protocol/lib/utils/json */ "./node_modules/sprotty-protocol/lib/utils/json.js"), exports);
__exportStar(__webpack_require__(/*! sprotty-protocol/lib/utils/model-utils */ "./node_modules/sprotty-protocol/lib/utils/model-utils.js"), exports);
// Default export of @eclipse-glsp/protocol
__exportStar(__webpack_require__(/*! ./action-protocol */ "./node_modules/@eclipse-glsp/protocol/lib/action-protocol/index.js"), exports);
__exportStar(__webpack_require__(/*! ./client-server-protocol/base-glsp-client */ "./node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/base-glsp-client.js"), exports);
__exportStar(__webpack_require__(/*! ./client-server-protocol/glsp-client */ "./node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/glsp-client.js"), exports);
__exportStar(__webpack_require__(/*! ./client-server-protocol/glsp-server */ "./node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/glsp-server.js"), exports);
__exportStar(__webpack_require__(/*! ./client-server-protocol/jsonrpc/base-jsonrpc-glsp-client */ "./node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/jsonrpc/base-jsonrpc-glsp-client.js"), exports);
__exportStar(__webpack_require__(/*! ./client-server-protocol/jsonrpc/glsp-jsonrpc-client */ "./node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/jsonrpc/glsp-jsonrpc-client.js"), exports);
__exportStar(__webpack_require__(/*! ./client-server-protocol/jsonrpc/glsp-jsonrpc-server */ "./node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/jsonrpc/glsp-jsonrpc-server.js"), exports);
__exportStar(__webpack_require__(/*! ./client-server-protocol/jsonrpc/websocket-connection */ "./node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/jsonrpc/websocket-connection.js"), exports);
__exportStar(__webpack_require__(/*! ./client-server-protocol/types */ "./node_modules/@eclipse-glsp/protocol/lib/client-server-protocol/types.js"), exports);
__exportStar(__webpack_require__(/*! ./disposable/disposable */ "./node_modules/@eclipse-glsp/protocol/lib/disposable/disposable.js"), exports);
__exportStar(__webpack_require__(/*! ./model/default-types */ "./node_modules/@eclipse-glsp/protocol/lib/model/default-types.js"), exports);
__exportStar(__webpack_require__(/*! ./model/model-schema */ "./node_modules/@eclipse-glsp/protocol/lib/model/model-schema.js"), exports);
__exportStar(__webpack_require__(/*! ./utils/array-util */ "./node_modules/@eclipse-glsp/protocol/lib/utils/array-util.js"), exports);
__exportStar(__webpack_require__(/*! ./utils/di-util */ "./node_modules/@eclipse-glsp/protocol/lib/utils/di-util.js"), exports);
__exportStar(__webpack_require__(/*! ./utils/type-util */ "./node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js"), exports);


/***/ }),

/***/ "./node_modules/@eclipse-glsp/protocol/lib/model/default-types.js":
/*!************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/protocol/lib/model/default-types.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2021-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DefaultTypes = void 0;
/**
 * The default types for graphical model elements available in GLSP.
 */
var DefaultTypes;
(function (DefaultTypes) {
    // HTML elements
    DefaultTypes.HTML = 'html';
    // generic types
    DefaultTypes.FOREIGN_OBJECT = 'foreign-object';
    DefaultTypes.PRE_RENDERED = 'pre-rendered';
    DefaultTypes.SHAPE_PRE_RENDERED = 'shape-pre-rendered';
    // SVG elements
    DefaultTypes.SVG = 'svg';
    // graph types
    DefaultTypes.GRAPH = 'graph';
    DefaultTypes.NODE = 'node';
    DefaultTypes.COMPARTMENT = 'comp';
    DefaultTypes.COMPARTMENT_HEADER = 'comp:header';
    DefaultTypes.EDGE = 'edge';
    DefaultTypes.PORT = 'port';
    DefaultTypes.ROUTING_POINT = 'routing-point';
    DefaultTypes.VOLATILE_ROUTING_POINT = `volatile-${DefaultTypes.ROUTING_POINT}`;
    DefaultTypes.LABEL = 'label';
    // UI elements
    DefaultTypes.BUTTON = 'button';
    DefaultTypes.BUTTON_EXPAND = 'button:expand';
    DefaultTypes.ISSUE_MARKER = 'marker';
    // shapes
    DefaultTypes.NODE_CIRCLE = 'node:circle';
    DefaultTypes.NODE_RECTANGLE = 'node:rectangle';
    DefaultTypes.NODE_DIAMOND = 'node:diamond';
})(DefaultTypes = exports.DefaultTypes || (exports.DefaultTypes = {}));


/***/ }),

/***/ "./node_modules/@eclipse-glsp/protocol/lib/model/model-schema.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/protocol/lib/model/model-schema.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./node_modules/@eclipse-glsp/protocol/lib/utils/array-util.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/protocol/lib/utils/array-util.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2019-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isArrayMatching = exports.isStringArray = exports.isArrayOfPrimitive = exports.isArrayOfClass = exports.isArrayOfType = exports.distinctAdd = exports.asArray = exports.flatPush = exports.remove = exports.pluck = exports.last = exports.first = void 0;
function first(array, n) {
    if (n) {
        return array.filter((_, index) => index < n);
    }
    return array[0];
}
exports.first = first;
function last(array, n) {
    if (n) {
        return array.filter((_, index) => array.length - index <= n);
    }
    return array[array.length - 1];
}
exports.last = last;
/**
 * Plucks (i.e. extracts) the property value that corresponds to the given key from all objects of the array.
 * @param array The array which should be plucked.
 * @param key  The key of the property that should be extracted.
 * @returns A new array containing the plugged property for each element of the array.
 */
function pluck(array, key) {
    return array.map(element => element[key]);
}
exports.pluck = pluck;
/**
 * Removes the given values from the given array (if present).
 * @param array The array to execute the remove operation on.
 * @param values The values that should be removed from the array.
 */
function remove(array, ...values) {
    values.forEach(value => {
        const index = array.indexOf(value);
        if (index >= 0) {
            array.splice(index, 1);
        }
    });
}
exports.remove = remove;
/**
 * Push an array of values to the given array. The values can either be single objects of a concrete type `T`
 * or can also be nested arrays of T. If nested arrays are passed the they will be destructured (i.e. flattened)
 * so that they can be pushed to the given array.
 * @param array The array to push to.
 * @param toPush The values of {@link MaybeArray}s that should be pushed.
 */
function flatPush(array, toPush) {
    toPush.forEach(value => (Array.isArray(value) ? array.push(...value) : array.push(value)));
}
exports.flatPush = flatPush;
/**
 * Helper function to convert a {@link MaybeArray} into an array.
 * @param maybe The MaybeArray to convert
 * @returns The corresponding array
 */
function asArray(maybe) {
    if (Array.isArray(maybe)) {
        return maybe;
    }
    return [maybe];
}
exports.asArray = asArray;
/**
 * Adds the given values to the given array. The add operation is executed distinct meaning
 * a value will not be pushed to the array if its already present in the array.
 * @param array The array to push to.
 * @param values The values that should be added distinctively.
 */
function distinctAdd(array, ...values) {
    values.forEach(value => {
        if (!array.includes(value)) {
            array.push(value);
        }
    });
}
exports.distinctAdd = distinctAdd;
/**
 * A typeguard function to check wether a given object is an array of a specific type `T`. As it checks the type of each individual
 * array element this guard check is expensive and should only be used in cases where complete type-safety is required.
 * @param object The object to check.
 * @param typeGuard A typeguard to check the type of the individual elements.
 * @param supportEmpty A flag to determine wether empty arrays should pass the typeguard check.
 * @returns A type predicate indicating wether the given object has passed the type guard check.
 */
function isArrayOfType(object, typeGuard, supportEmpty = false) {
    return isArrayMatching(object, element => typeGuard(element), supportEmpty);
}
exports.isArrayOfType = isArrayOfType;
/**
 * A typeguard function to check wether a given object is an array of a class`T`. As it checks the wether each individual element
 * is an instance of the given class this  guard check is expensive and should only be used in cases where complete type-safety is required.
 * @param object The object to check.
 * @param constructor The constructor for the class under test.
 * @param supportEmpty A flag to determine wether empty arrays should pass the typeguard check.
 * @returns A type predicate indicating wether the given object has passed the type guard check.
 */
function isArrayOfClass(object, constructor, supportEmpty = false) {
    return isArrayMatching(object, element => element instanceof constructor, supportEmpty);
}
exports.isArrayOfClass = isArrayOfClass;
/**
 * A typeguard function to check wether a given object is an array of a {@link PrimitiveType} `T. As it checks the type of each individual
 * array element this guard check is expensive and should only be used in cases where complete type-safety is required.
 * @param object The object to check.
 * @param primitiveType The expected primitive type of the elements.
 * @param supportEmpty A flag to determine wether empty arrays should pass the typeguard check.
 * @returns A type predicate indicating wether the given object has passed the type guard check.
 */
function isArrayOfPrimitive(object, primitiveType, supportEmpty = false) {
    return isArrayMatching(object, element => typeof element === primitiveType, supportEmpty);
}
exports.isArrayOfPrimitive = isArrayOfPrimitive;
/**
 * A typeguard function to check wether a given object is an array of a strings. As it checks the type of each individual
 * array element this guard check is expensive and should only be used in cases where complete type-safety is required.
 * @param object The object to check.
 * @param supportEmpty A flag to determine wether empty arrays should pass the typeguard check.
 * @returns A type predicate indicating wether the given object has passed the type guard check.
 */
function isStringArray(object, supportEmpty = false) {
    return isArrayOfPrimitive(object, 'string', supportEmpty);
}
exports.isStringArray = isStringArray;
/**
 * A typeguard function to check wether a given object is an array where each element matches the given predicate.
 * @param object The object to check.
 * @param predicate The predicate to test with.
 * @param supportEmpty A flag to determine wether empty arrays be matched by the predicate..
 * @returns `true` if the given object is an array and all elements match the given predicate. `false` otherwise.
 */
function isArrayMatching(object, predicate, supportEmpty = false) {
    return Array.isArray(object) && object.every(predicate) && (supportEmpty || object.length > 0);
}
exports.isArrayMatching = isArrayMatching;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/protocol/lib/utils/di-util.js":
/*!******************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/protocol/lib/utils/di-util.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.bindAsService = exports.lazyBind = exports.bindOrRebind = exports.initializeContainer = void 0;
const array_util_1 = __webpack_require__(/*! ./array-util */ "./node_modules/@eclipse-glsp/protocol/lib/utils/array-util.js");
const type_util_1 = __webpack_require__(/*! ./type-util */ "./node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js");
/**
 * Initializes a container with the given {@link ContainerConfiguration}. The container configuration
 * consists of the set of {@link ContainerModule}s that should be loaded in the container.
 * In addition, for more fine-grained control {@link ModuleConfiguration}s can be passed as part fo the container configuration
 * Module loading is distinct,this means each module will only get loaded once even if it is configured multiple times.
  @param containerConfiguration
 *          Custom modules to be loaded in addition to the default modules and/or default modules that should be excluded.
  @returns The initialized container.
 */
function initializeContainer(container, ...containerConfiguration) {
    const modules = [];
    containerConfiguration.forEach(config => {
        if (isContainerModule(config)) {
            (0, array_util_1.distinctAdd)(modules, config);
        }
        else {
            if (config.remove) {
                (0, array_util_1.remove)(modules, ...(0, array_util_1.asArray)(config.remove));
            }
            if (config.add) {
                (0, array_util_1.distinctAdd)(modules, ...(0, array_util_1.asArray)(config.add));
            }
        }
    });
    container.load(...modules);
    return container;
}
exports.initializeContainer = initializeContainer;
/**
 * The container modules might originate form different inversify contexts (e.g. `inversify` vs. `@theia/core/shared/inversify`).
 * If this is the case an instanceof check can return  false negative.
 * => use a simple typeguard instead.
 */
function isContainerModule(config) {
    return (0, type_util_1.hasNumberProp)(config, 'id') && (0, type_util_1.hasFunctionProp)(config, 'registry');
}
/**
 * Checks wether the given service identifier is already bound in the given context
 * then either calls  the `bind` or `rebind` function respectively.
 *
 * As this is just a convenience function
 * ```ts
 * bindOrRebind({bind,isBound,rebind}, MyService).to(SomeOtherService);
 * ```
 * is equivalent to:
 * ```
 * if (isBound(MyService)) {
 *    rebind(MyService).to(SomeOtherService);
 * } else {
 *    bind(MyService).to(SomeOtherService);
 * }
 * ```
 * @param context The binding context
 * @param serviceIdentifier The service identifier
 * @returns The result of the `bind` or `rebind` function
 */
function bindOrRebind(context, serviceIdentifier) {
    if (context.isBound(serviceIdentifier)) {
        return context.rebind(serviceIdentifier);
    }
    return context.bind(serviceIdentifier);
}
exports.bindOrRebind = bindOrRebind;
/**
 * Only binds the given service identifier if it's not already bound in the given context.
 *
 * As this is just a convenience function
 * ```ts
 * lazyBind({bind,isBound}, MyService)?.to(SomeOtherService);
 * ```
 * is equivalent to:
 * ```
 * if (!isBound(MyService)) {
 *    bind(MyService).to(SomeOtherService);
 * }
 * ```
 * @param context The binding context
 * @param serviceIdentifier The service identifier
 * @returns The result of the `bind` function or `undefined` if the service was already bound
 */
function lazyBind(context, serviceIdentifier) {
    if (context.isBound(serviceIdentifier)) {
        return undefined;
    }
    return context.bind(serviceIdentifier);
}
exports.lazyBind = lazyBind;
/**
 * Binds the given service identifier to the given target service in the given context.
 * In addition, the target service is bound to itself in singleton scope. This ensures
 * that services can be rebound individually even if they are multi-injected.
 *
 * As this is just a convenience function
 * ```ts
 * bindAsService(bind,SomeOtherService,MyServiceImpl);
 * ```
 * is equivalent to:
 * ```ts
 * bind(MyServiceImpl).toSelf.inSingletonScope():
 * bind(SomeOtherService).toService(MyServiceImpl);
 * ```
 * @param serviceIdentifier
 * @param toServiceIdentifier
 */
function bindAsService(context, serviceIdentifier, targetService) {
    const bind = typeof context === 'object' ? context.bind.bind(context) : context;
    bind(targetService).toSelf().inSingletonScope();
    bind(serviceIdentifier).toService(targetService);
}
exports.bindAsService = bindAsService;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js":
/*!********************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/protocol/lib/utils/type-util.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2021-2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.hasArrayProp = exports.hasFunctionProp = exports.hasObjectProp = exports.hasNumberProp = exports.hasBooleanProp = exports.hasStringProp = exports.toTypeGuard = exports.AnyObject = void 0;
var AnyObject;
(function (AnyObject) {
    /**
     * Type guard to check wether a given object is of type {@link AnyObject}.
     * @param object The object to check.
     * @returns The given object as {@link AnyObject} or `false`.
     */
    function is(object) {
        // eslint-disable-next-line no-null/no-null
        return object !== null && typeof object === 'object';
    }
    AnyObject.is = is;
})(AnyObject = exports.AnyObject || (exports.AnyObject = {}));
/**
 * Utility function that create a typeguard function for a given class constructor.
 * Essentially this wraps an instance of check as typeguard function.
 * @param constructor The constructor of the class for which the typeguard should be created.
 * @returns The typeguard for this class.
 */
function toTypeGuard(constructor) {
    return (element) => element instanceof constructor;
}
exports.toTypeGuard = toTypeGuard;
/**
 * Validates whether the given object has a property of type `string` with the given key.
 * @param object The object that should be validated
 * @param propertyKey The key of the property
 * @param optional Flag to indicate wether the property can be optional i.e. also return true if the given key is undefined
 * @returns `true` if the object has property with matching key of type `string`.
 */
function hasStringProp(object, propertyKey, optional = false) {
    return propertyKey in object ? typeof object[propertyKey] === 'string' : optional;
}
exports.hasStringProp = hasStringProp;
/**
 * Validates whether the given object has a property of type `boolean` with the given key.
 * @param object The object that should be validated
 * @param propertyKey The key of the property
 * @param optional Flag to indicate wether the property can be optional i.e. also return true if the given key is undefined
 * @returns `true` if the object has property with matching key of type `boolean`.
 */
function hasBooleanProp(object, propertyKey, optional = false) {
    return propertyKey in object ? typeof object[propertyKey] === 'boolean' : optional;
}
exports.hasBooleanProp = hasBooleanProp;
/**
 * Validates whether the given object has a property of type `number` with the given key.
 * @param object The object that should be validated
 * @param propertyKey The key of the property
 * @param optional Flag to indicate wether the property can be optional i.e. also return true if the given key is undefined
 * @returns `true` if the object has property with matching key of type `number`.
 */
function hasNumberProp(object, propertyKey, optional = false) {
    return propertyKey in object ? typeof object[propertyKey] === 'number' : optional;
}
exports.hasNumberProp = hasNumberProp;
/**
 * Validates whether the given object has a property of type `object` with the given key.
 * @param object The object that should be validated
 * @param propertyKey The key of the property
 * @param optional Flag to indicate wether the property can be optional i.e. also return true if the given key is undefined
 * @returns `true` if the object has property with matching key of type `object`.
 */
function hasObjectProp(object, propertyKey, optional = false) {
    return propertyKey in object ? AnyObject.is(object[propertyKey]) : optional;
}
exports.hasObjectProp = hasObjectProp;
/**
 * Validates whether the given object has a property of type `function` with the given key.
 * @param object The object that should be validated
 * @param propertyKey The key of the property
 * @param optional Flag to indicate wether the property can be optional i.e. also return true if the given key is undefined
 * @returns `true` if the object has property with matching key of type `function`.
 */
function hasFunctionProp(object, propertyKey, optional = false) {
    return propertyKey in object ? typeof object[propertyKey] === 'function' : optional;
}
exports.hasFunctionProp = hasFunctionProp;
/**
 * Validates whether the given object has a property of type `Array` with the given key.
 * @param object The object that should be validated
 * @param propertyKey The key of the property
 * @param optional Flag to indicate wether the property can be optional i.e. also return true if the given key is undefined
 * @returns `true` if the object has property with matching key of type `Array`.
 */
function hasArrayProp(object, propertyKey, optional = false) {
    return propertyKey in object ? Array.isArray(object[propertyKey]) : optional;
}
exports.hasArrayProp = hasArrayProp;


/***/ }),

/***/ "./node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/bytesToUuid.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/bytesToUuid.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * Convert array of 16 byte values to UUID string format of the form:
 * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
 */
var byteToHex = [];

for (var i = 0; i < 256; ++i) {
  byteToHex[i] = (i + 0x100).toString(16).substr(1);
}

function bytesToUuid(buf, offset) {
  var i = offset || 0;
  var bth = byteToHex; // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4

  return [bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]]].join('');
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (bytesToUuid);

/***/ }),

/***/ "./node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/index.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/index.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   v1: () => (/* reexport safe */ _v1_js__WEBPACK_IMPORTED_MODULE_0__["default"]),
/* harmony export */   v3: () => (/* reexport safe */ _v3_js__WEBPACK_IMPORTED_MODULE_1__["default"]),
/* harmony export */   v4: () => (/* reexport safe */ _v4_js__WEBPACK_IMPORTED_MODULE_2__["default"]),
/* harmony export */   v5: () => (/* reexport safe */ _v5_js__WEBPACK_IMPORTED_MODULE_3__["default"])
/* harmony export */ });
/* harmony import */ var _v1_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v1.js */ "./node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/v1.js");
/* harmony import */ var _v3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./v3.js */ "./node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/v3.js");
/* harmony import */ var _v4_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./v4.js */ "./node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/v4.js");
/* harmony import */ var _v5_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./v5.js */ "./node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/v5.js");





/***/ }),

/***/ "./node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/md5.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/md5.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/*
 * Browser-compatible JavaScript MD5
 *
 * Modification of JavaScript MD5
 * https://github.com/blueimp/JavaScript-MD5
 *
 * Copyright 2011, Sebastian Tschan
 * https://blueimp.net
 *
 * Licensed under the MIT license:
 * https://opensource.org/licenses/MIT
 *
 * Based on
 * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message
 * Digest Algorithm, as defined in RFC 1321.
 * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for more info.
 */
function md5(bytes) {
  if (typeof bytes == 'string') {
    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape

    bytes = new Array(msg.length);

    for (var i = 0; i < msg.length; i++) {
      bytes[i] = msg.charCodeAt(i);
    }
  }

  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));
}
/*
 * Convert an array of little-endian words to an array of bytes
 */


function md5ToHexEncodedArray(input) {
  var i;
  var x;
  var output = [];
  var length32 = input.length * 32;
  var hexTab = '0123456789abcdef';
  var hex;

  for (i = 0; i < length32; i += 8) {
    x = input[i >> 5] >>> i % 32 & 0xff;
    hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);
    output.push(hex);
  }

  return output;
}
/*
 * Calculate the MD5 of an array of little-endian words, and a bit length.
 */


function wordsToMd5(x, len) {
  /* append padding */
  x[len >> 5] |= 0x80 << len % 32;
  x[(len + 64 >>> 9 << 4) + 14] = len;
  var i;
  var olda;
  var oldb;
  var oldc;
  var oldd;
  var a = 1732584193;
  var b = -271733879;
  var c = -1732584194;
  var d = 271733878;

  for (i = 0; i < x.length; i += 16) {
    olda = a;
    oldb = b;
    oldc = c;
    oldd = d;
    a = md5ff(a, b, c, d, x[i], 7, -680876936);
    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);
    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);
    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);
    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);
    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);
    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);
    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);
    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);
    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);
    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);
    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);
    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);
    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);
    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);
    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);
    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);
    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);
    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);
    b = md5gg(b, c, d, a, x[i], 20, -373897302);
    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);
    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);
    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);
    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);
    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);
    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);
    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);
    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);
    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);
    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);
    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);
    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);
    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);
    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);
    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);
    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);
    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);
    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);
    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);
    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);
    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);
    d = md5hh(d, a, b, c, x[i], 11, -358537222);
    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);
    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);
    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);
    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);
    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);
    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);
    a = md5ii(a, b, c, d, x[i], 6, -198630844);
    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);
    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);
    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);
    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);
    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);
    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);
    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);
    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);
    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);
    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);
    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);
    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);
    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);
    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);
    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);
    a = safeAdd(a, olda);
    b = safeAdd(b, oldb);
    c = safeAdd(c, oldc);
    d = safeAdd(d, oldd);
  }

  return [a, b, c, d];
}
/*
 * Convert an array bytes to an array of little-endian words
 * Characters >255 have their high-byte silently ignored.
 */


function bytesToWords(input) {
  var i;
  var output = [];
  output[(input.length >> 2) - 1] = undefined;

  for (i = 0; i < output.length; i += 1) {
    output[i] = 0;
  }

  var length8 = input.length * 8;

  for (i = 0; i < length8; i += 8) {
    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;
  }

  return output;
}
/*
 * Add integers, wrapping at 2^32. This uses 16-bit operations internally
 * to work around bugs in some JS interpreters.
 */


function safeAdd(x, y) {
  var lsw = (x & 0xffff) + (y & 0xffff);
  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
  return msw << 16 | lsw & 0xffff;
}
/*
 * Bitwise rotate a 32-bit number to the left.
 */


function bitRotateLeft(num, cnt) {
  return num << cnt | num >>> 32 - cnt;
}
/*
 * These functions implement the four basic operations the algorithm uses.
 */


function md5cmn(q, a, b, x, s, t) {
  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);
}

function md5ff(a, b, c, d, x, s, t) {
  return md5cmn(b & c | ~b & d, a, b, x, s, t);
}

function md5gg(a, b, c, d, x, s, t) {
  return md5cmn(b & d | c & ~d, a, b, x, s, t);
}

function md5hh(a, b, c, d, x, s, t) {
  return md5cmn(b ^ c ^ d, a, b, x, s, t);
}

function md5ii(a, b, c, d, x, s, t) {
  return md5cmn(c ^ (b | ~d), a, b, x, s, t);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (md5);

/***/ }),

/***/ "./node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/rng.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/rng.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ rng)
/* harmony export */ });
// Unique ID creation requires a high quality random # generator. In the browser we therefore
// require the crypto API and do not support built-in fallback to lower quality random number
// generators (like Math.random()).
// getRandomValues needs to be invoked in a context where "this" is a Crypto implementation. Also,
// find the complete implementation of crypto (msCrypto) on IE11.
var getRandomValues = typeof crypto != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto != 'undefined' && typeof msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto);
var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef

function rng() {
  if (!getRandomValues) {
    throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');
  }

  return getRandomValues(rnds8);
}

/***/ }),

/***/ "./node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/sha1.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/sha1.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Adapted from Chris Veness' SHA1 code at
// http://www.movable-type.co.uk/scripts/sha1.html
function f(s, x, y, z) {
  switch (s) {
    case 0:
      return x & y ^ ~x & z;

    case 1:
      return x ^ y ^ z;

    case 2:
      return x & y ^ x & z ^ y & z;

    case 3:
      return x ^ y ^ z;
  }
}

function ROTL(x, n) {
  return x << n | x >>> 32 - n;
}

function sha1(bytes) {
  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];
  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];

  if (typeof bytes == 'string') {
    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape

    bytes = new Array(msg.length);

    for (var i = 0; i < msg.length; i++) {
      bytes[i] = msg.charCodeAt(i);
    }
  }

  bytes.push(0x80);
  var l = bytes.length / 4 + 2;
  var N = Math.ceil(l / 16);
  var M = new Array(N);

  for (var i = 0; i < N; i++) {
    M[i] = new Array(16);

    for (var j = 0; j < 16; j++) {
      M[i][j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];
    }
  }

  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);
  M[N - 1][14] = Math.floor(M[N - 1][14]);
  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;

  for (var i = 0; i < N; i++) {
    var W = new Array(80);

    for (var t = 0; t < 16; t++) {
      W[t] = M[i][t];
    }

    for (var t = 16; t < 80; t++) {
      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);
    }

    var a = H[0];
    var b = H[1];
    var c = H[2];
    var d = H[3];
    var e = H[4];

    for (var t = 0; t < 80; t++) {
      var s = Math.floor(t / 20);
      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;
      e = d;
      d = c;
      c = ROTL(b, 30) >>> 0;
      b = a;
      a = T;
    }

    H[0] = H[0] + a >>> 0;
    H[1] = H[1] + b >>> 0;
    H[2] = H[2] + c >>> 0;
    H[3] = H[3] + d >>> 0;
    H[4] = H[4] + e >>> 0;
  }

  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (sha1);

/***/ }),

/***/ "./node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/v1.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/v1.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rng.js */ "./node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/rng.js");
/* harmony import */ var _bytesToUuid_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bytesToUuid.js */ "./node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/bytesToUuid.js");

 // **`v1()` - Generate time-based UUID**
//
// Inspired by https://github.com/LiosK/UUID.js
// and http://docs.python.org/library/uuid.html

var _nodeId;

var _clockseq; // Previous uuid creation time


var _lastMSecs = 0;
var _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details

function v1(options, buf, offset) {
  var i = buf && offset || 0;
  var b = buf || [];
  options = options || {};
  var node = options.node || _nodeId;
  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not
  // specified.  We do this lazily to minimize issues related to insufficient
  // system entropy.  See #189

  if (node == null || clockseq == null) {
    var seedBytes = options.random || (options.rng || _rng_js__WEBPACK_IMPORTED_MODULE_0__["default"])();

    if (node == null) {
      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)
      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];
    }

    if (clockseq == null) {
      // Per 4.2.2, randomize (14 bit) clockseq
      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;
    }
  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,
  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so
  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'
  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.


  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime(); // Per 4.2.1.2, use count of uuid's generated during the current clock
  // cycle to simulate higher resolution clock

  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)

  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression

  if (dt < 0 && options.clockseq === undefined) {
    clockseq = clockseq + 1 & 0x3fff;
  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new
  // time interval


  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {
    nsecs = 0;
  } // Per 4.2.1.2 Throw error if too many uuids are requested


  if (nsecs >= 10000) {
    throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");
  }

  _lastMSecs = msecs;
  _lastNSecs = nsecs;
  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch

  msecs += 12219292800000; // `time_low`

  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;
  b[i++] = tl >>> 24 & 0xff;
  b[i++] = tl >>> 16 & 0xff;
  b[i++] = tl >>> 8 & 0xff;
  b[i++] = tl & 0xff; // `time_mid`

  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;
  b[i++] = tmh >>> 8 & 0xff;
  b[i++] = tmh & 0xff; // `time_high_and_version`

  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version

  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)

  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`

  b[i++] = clockseq & 0xff; // `node`

  for (var n = 0; n < 6; ++n) {
    b[i + n] = node[n];
  }

  return buf ? buf : (0,_bytesToUuid_js__WEBPACK_IMPORTED_MODULE_1__["default"])(b);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v1);

/***/ }),

/***/ "./node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/v3.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/v3.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _v35_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v35.js */ "./node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/v35.js");
/* harmony import */ var _md5_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./md5.js */ "./node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/md5.js");


var v3 = (0,_v35_js__WEBPACK_IMPORTED_MODULE_0__["default"])('v3', 0x30, _md5_js__WEBPACK_IMPORTED_MODULE_1__["default"]);
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v3);

/***/ }),

/***/ "./node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/v35.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/v35.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DNS: () => (/* binding */ DNS),
/* harmony export */   URL: () => (/* binding */ URL),
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _bytesToUuid_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bytesToUuid.js */ "./node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/bytesToUuid.js");


function uuidToBytes(uuid) {
  // Note: We assume we're being passed a valid uuid string
  var bytes = [];
  uuid.replace(/[a-fA-F0-9]{2}/g, function (hex) {
    bytes.push(parseInt(hex, 16));
  });
  return bytes;
}

function stringToBytes(str) {
  str = unescape(encodeURIComponent(str)); // UTF8 escape

  var bytes = new Array(str.length);

  for (var i = 0; i < str.length; i++) {
    bytes[i] = str.charCodeAt(i);
  }

  return bytes;
}

var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';
var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name, version, hashfunc) {
  var generateUUID = function generateUUID(value, namespace, buf, offset) {
    var off = buf && offset || 0;
    if (typeof value == 'string') value = stringToBytes(value);
    if (typeof namespace == 'string') namespace = uuidToBytes(namespace);
    if (!Array.isArray(value)) throw TypeError('value must be an array of bytes');
    if (!Array.isArray(namespace) || namespace.length !== 16) throw TypeError('namespace must be uuid string or an Array of 16 byte values'); // Per 4.3

    var bytes = hashfunc(namespace.concat(value));
    bytes[6] = bytes[6] & 0x0f | version;
    bytes[8] = bytes[8] & 0x3f | 0x80;

    if (buf) {
      for (var idx = 0; idx < 16; ++idx) {
        buf[off + idx] = bytes[idx];
      }
    }

    return buf || (0,_bytesToUuid_js__WEBPACK_IMPORTED_MODULE_0__["default"])(bytes);
  }; // Function#name is not settable on some platforms (#270)


  try {
    generateUUID.name = name;
  } catch (err) {} // For CommonJS default export support


  generateUUID.DNS = DNS;
  generateUUID.URL = URL;
  return generateUUID;
}

/***/ }),

/***/ "./node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/v4.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/v4.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rng.js */ "./node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/rng.js");
/* harmony import */ var _bytesToUuid_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bytesToUuid.js */ "./node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/bytesToUuid.js");



function v4(options, buf, offset) {
  var i = buf && offset || 0;

  if (typeof options == 'string') {
    buf = options === 'binary' ? new Array(16) : null;
    options = null;
  }

  options = options || {};
  var rnds = options.random || (options.rng || _rng_js__WEBPACK_IMPORTED_MODULE_0__["default"])(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`

  rnds[6] = rnds[6] & 0x0f | 0x40;
  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided

  if (buf) {
    for (var ii = 0; ii < 16; ++ii) {
      buf[i + ii] = rnds[ii];
    }
  }

  return buf || (0,_bytesToUuid_js__WEBPACK_IMPORTED_MODULE_1__["default"])(rnds);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v4);

/***/ }),

/***/ "./node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/v5.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/v5.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _v35_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v35.js */ "./node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/v35.js");
/* harmony import */ var _sha1_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sha1.js */ "./node_modules/@eclipse-glsp/protocol/node_modules/uuid/dist/esm-browser/sha1.js");


var v5 = (0,_v35_js__WEBPACK_IMPORTED_MODULE_0__["default"])('v5', 0x50, _sha1_js__WEBPACK_IMPORTED_MODULE_1__["default"]);
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v5);

/***/ }),

/***/ "./node_modules/autocompleter/autocomplete.js":
/*!****************************************************!*\
  !*** ./node_modules/autocompleter/autocomplete.js ***!
  \****************************************************/
/***/ (function(module) {

(function (global, factory) {
   true ? module.exports = factory() :
  0;
}(this, function () { 'use strict';

  /*
   * https://github.com/kraaden/autocomplete
   * Copyright (c) 2016 Denys Krasnoshchok
   * MIT License
   */
  function autocomplete(settings) {
      // just an alias to minimize JS file size
      var doc = document;
      var container = doc.createElement("div");
      var containerStyle = container.style;
      var userAgent = navigator.userAgent;
      var mobileFirefox = userAgent.indexOf("Firefox") !== -1 && userAgent.indexOf("Mobile") !== -1;
      var debounceWaitMs = settings.debounceWaitMs || 0;
      var preventSubmit = settings.preventSubmit || false;
      // 'keyup' event will not be fired on Mobile Firefox, so we have to use 'input' event instead
      var keyUpEventName = mobileFirefox ? "input" : "keyup";
      var items = [];
      var inputValue = "";
      var minLen = 2;
      var showOnFocus = settings.showOnFocus;
      var selected;
      var keypressCounter = 0;
      var debounceTimer;
      if (settings.minLength !== undefined) {
          minLen = settings.minLength;
      }
      if (!settings.input) {
          throw new Error("input undefined");
      }
      var input = settings.input;
      container.className = "autocomplete " + (settings.className || "");
      containerStyle.position = "fixed";
      /**
       * Detach the container from DOM
       */
      function detach() {
          var parent = container.parentNode;
          if (parent) {
              parent.removeChild(container);
          }
      }
      /**
       * Clear debouncing timer if assigned
       */
      function clearDebounceTimer() {
          if (debounceTimer) {
              window.clearTimeout(debounceTimer);
          }
      }
      /**
       * Attach the container to DOM
       */
      function attach() {
          if (!container.parentNode) {
              doc.body.appendChild(container);
          }
      }
      /**
       * Check if container for autocomplete is displayed
       */
      function containerDisplayed() {
          return !!container.parentNode;
      }
      /**
       * Clear autocomplete state and hide container
       */
      function clear() {
          keypressCounter++;
          items = [];
          inputValue = "";
          selected = undefined;
          detach();
      }
      /**
       * Update autocomplete position
       */
      function updatePosition() {
          if (!containerDisplayed()) {
              return;
          }
          containerStyle.height = "auto";
          containerStyle.width = input.offsetWidth + "px";
          var inputRect = input.getBoundingClientRect();
          var top = inputRect.top + input.offsetHeight;
          var maxHeight = window.innerHeight - top;
          if (maxHeight < 0) {
              maxHeight = 0;
          }
          containerStyle.top = top + "px";
          containerStyle.bottom = "";
          containerStyle.left = inputRect.left + "px";
          containerStyle.maxHeight = maxHeight + "px";
          if (settings.customize) {
              settings.customize(input, inputRect, container, maxHeight);
          }
      }
      /**
       * Redraw the autocomplete div element with suggestions
       */
      function update() {
          // delete all children from autocomplete DOM container
          while (container.firstChild) {
              container.removeChild(container.firstChild);
          }
          // function for rendering autocomplete suggestions
          var render = function (item, currentValue) {
              var itemElement = doc.createElement("div");
              itemElement.textContent = item.label || "";
              return itemElement;
          };
          if (settings.render) {
              render = settings.render;
          }
          // function to render autocomplete groups
          var renderGroup = function (groupName, currentValue) {
              var groupDiv = doc.createElement("div");
              groupDiv.textContent = groupName;
              return groupDiv;
          };
          if (settings.renderGroup) {
              renderGroup = settings.renderGroup;
          }
          var fragment = doc.createDocumentFragment();
          var prevGroup = "#9?$";
          items.forEach(function (item) {
              if (item.group && item.group !== prevGroup) {
                  prevGroup = item.group;
                  var groupDiv = renderGroup(item.group, inputValue);
                  if (groupDiv) {
                      groupDiv.className += " group";
                      fragment.appendChild(groupDiv);
                  }
              }
              var div = render(item, inputValue);
              if (div) {
                  div.addEventListener("click", function (ev) {
                      settings.onSelect(item, input);
                      clear();
                      ev.preventDefault();
                      ev.stopPropagation();
                  });
                  if (item === selected) {
                      div.className += " selected";
                  }
                  fragment.appendChild(div);
              }
          });
          container.appendChild(fragment);
          if (items.length < 1) {
              if (settings.emptyMsg) {
                  var empty = doc.createElement("div");
                  empty.className = "empty";
                  empty.textContent = settings.emptyMsg;
                  container.appendChild(empty);
              }
              else {
                  clear();
                  return;
              }
          }
          attach();
          updatePosition();
          updateScroll();
      }
      function updateIfDisplayed() {
          if (containerDisplayed()) {
              update();
          }
      }
      function resizeEventHandler() {
          updateIfDisplayed();
      }
      function scrollEventHandler(e) {
          if (e.target !== container) {
              updateIfDisplayed();
          }
          else {
              e.preventDefault();
          }
      }
      function keyupEventHandler(ev) {
          var keyCode = ev.which || ev.keyCode || 0;
          var ignore = [38 /* Up */, 13 /* Enter */, 27 /* Esc */, 39 /* Right */, 37 /* Left */, 16 /* Shift */, 17 /* Ctrl */, 18 /* Alt */, 20 /* CapsLock */, 91 /* WindowsKey */, 9 /* Tab */];
          for (var _i = 0, ignore_1 = ignore; _i < ignore_1.length; _i++) {
              var key = ignore_1[_i];
              if (keyCode === key) {
                  return;
              }
          }
          // the down key is used to open autocomplete
          if (keyCode === 40 /* Down */ && containerDisplayed()) {
              return;
          }
          startFetch(0 /* Keyboard */);
      }
      /**
       * Automatically move scroll bar if selected item is not visible
       */
      function updateScroll() {
          var elements = container.getElementsByClassName("selected");
          if (elements.length > 0) {
              var element = elements[0];
              // make group visible
              var previous = element.previousElementSibling;
              if (previous && previous.className.indexOf("group") !== -1 && !previous.previousElementSibling) {
                  element = previous;
              }
              if (element.offsetTop < container.scrollTop) {
                  container.scrollTop = element.offsetTop;
              }
              else {
                  var selectBottom = element.offsetTop + element.offsetHeight;
                  var containerBottom = container.scrollTop + container.offsetHeight;
                  if (selectBottom > containerBottom) {
                      container.scrollTop += selectBottom - containerBottom;
                  }
              }
          }
      }
      /**
       * Select the previous item in suggestions
       */
      function selectPrev() {
          if (items.length < 1) {
              selected = undefined;
          }
          else {
              if (selected === items[0]) {
                  selected = items[items.length - 1];
              }
              else {
                  for (var i = items.length - 1; i > 0; i--) {
                      if (selected === items[i] || i === 1) {
                          selected = items[i - 1];
                          break;
                      }
                  }
              }
          }
      }
      /**
       * Select the next item in suggestions
       */
      function selectNext() {
          if (items.length < 1) {
              selected = undefined;
          }
          if (!selected || selected === items[items.length - 1]) {
              selected = items[0];
              return;
          }
          for (var i = 0; i < (items.length - 1); i++) {
              if (selected === items[i]) {
                  selected = items[i + 1];
                  break;
              }
          }
      }
      function keydownEventHandler(ev) {
          var keyCode = ev.which || ev.keyCode || 0;
          if (keyCode === 38 /* Up */ || keyCode === 40 /* Down */ || keyCode === 27 /* Esc */) {
              var containerIsDisplayed = containerDisplayed();
              if (keyCode === 27 /* Esc */) {
                  clear();
              }
              else {
                  if (!containerDisplayed || items.length < 1) {
                      return;
                  }
                  keyCode === 38 /* Up */
                      ? selectPrev()
                      : selectNext();
                  update();
              }
              ev.preventDefault();
              if (containerIsDisplayed) {
                  ev.stopPropagation();
              }
              return;
          }
          if (keyCode === 13 /* Enter */) {
              if (selected) {
                  settings.onSelect(selected, input);
                  clear();
              }
              if (preventSubmit) {
                  ev.preventDefault();
              }
          }
      }
      function focusEventHandler() {
          if (showOnFocus) {
              startFetch(1 /* Focus */);
          }
      }
      function startFetch(trigger) {
          // if multiple keys were pressed, before we get update from server,
          // this may cause redrawing our autocomplete multiple times after the last key press.
          // to avoid this, the number of times keyboard was pressed will be
          // saved and checked before redraw our autocomplete box.
          var savedKeypressCounter = ++keypressCounter;
          var val = input.value;
          if (val.length >= minLen || trigger === 1 /* Focus */) {
              clearDebounceTimer();
              debounceTimer = window.setTimeout(function () {
                  settings.fetch(val, function (elements) {
                      if (keypressCounter === savedKeypressCounter && elements) {
                          items = elements;
                          inputValue = val;
                          selected = items.length > 0 ? items[0] : undefined;
                          update();
                      }
                  }, 0 /* Keyboard */);
              }, trigger === 0 /* Keyboard */ ? debounceWaitMs : 0);
          }
          else {
              clear();
          }
      }
      function blurEventHandler() {
          // we need to delay clear, because when we click on an item, blur will be called before click and remove items from DOM
          setTimeout(function () {
              if (doc.activeElement !== input) {
                  clear();
              }
          }, 200);
      }
      /**
       * Fixes #26: on long clicks focus will be lost and onSelect method will not be called
       */
      container.addEventListener("mousedown", function (evt) {
          evt.stopPropagation();
          evt.preventDefault();
      });
      /**
       * This function will remove DOM elements and clear event handlers
       */
      function destroy() {
          input.removeEventListener("focus", focusEventHandler);
          input.removeEventListener("keydown", keydownEventHandler);
          input.removeEventListener(keyUpEventName, keyupEventHandler);
          input.removeEventListener("blur", blurEventHandler);
          window.removeEventListener("resize", resizeEventHandler);
          doc.removeEventListener("scroll", scrollEventHandler, true);
          clearDebounceTimer();
          clear();
          // prevent the update call if there are pending AJAX requests
          keypressCounter++;
      }
      // setup event handlers
      input.addEventListener("keydown", keydownEventHandler);
      input.addEventListener(keyUpEventName, keyupEventHandler);
      input.addEventListener("blur", blurEventHandler);
      input.addEventListener("focus", focusEventHandler);
      window.addEventListener("resize", resizeEventHandler);
      doc.addEventListener("scroll", scrollEventHandler, true);
      return {
          destroy: destroy
      };
  }

  return autocomplete;

}));


/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";


/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
module.exports = function (cssWithMappingToString) {
  var list = [];

  // return the list of modules as css string
  list.toString = function toString() {
    return this.map(function (item) {
      var content = "";
      var needLayer = typeof item[5] !== "undefined";
      if (item[4]) {
        content += "@supports (".concat(item[4], ") {");
      }
      if (item[2]) {
        content += "@media ".concat(item[2], " {");
      }
      if (needLayer) {
        content += "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {");
      }
      content += cssWithMappingToString(item);
      if (needLayer) {
        content += "}";
      }
      if (item[2]) {
        content += "}";
      }
      if (item[4]) {
        content += "}";
      }
      return content;
    }).join("");
  };

  // import a list of modules into the list
  list.i = function i(modules, media, dedupe, supports, layer) {
    if (typeof modules === "string") {
      modules = [[null, modules, undefined]];
    }
    var alreadyImportedModules = {};
    if (dedupe) {
      for (var k = 0; k < this.length; k++) {
        var id = this[k][0];
        if (id != null) {
          alreadyImportedModules[id] = true;
        }
      }
    }
    for (var _k = 0; _k < modules.length; _k++) {
      var item = [].concat(modules[_k]);
      if (dedupe && alreadyImportedModules[item[0]]) {
        continue;
      }
      if (typeof layer !== "undefined") {
        if (typeof item[5] === "undefined") {
          item[5] = layer;
        } else {
          item[1] = "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {").concat(item[1], "}");
          item[5] = layer;
        }
      }
      if (media) {
        if (!item[2]) {
          item[2] = media;
        } else {
          item[1] = "@media ".concat(item[2], " {").concat(item[1], "}");
          item[2] = media;
        }
      }
      if (supports) {
        if (!item[4]) {
          item[4] = "".concat(supports);
        } else {
          item[1] = "@supports (".concat(item[4], ") {").concat(item[1], "}");
          item[4] = supports;
        }
      }
      list.push(item);
    }
  };
  return list;
};

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/getUrl.js":
/*!********************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/getUrl.js ***!
  \********************************************************/
/***/ ((module) => {

"use strict";


module.exports = function (url, options) {
  if (!options) {
    options = {};
  }
  if (!url) {
    return url;
  }
  url = String(url.__esModule ? url.default : url);

  // If url is already wrapped in quotes, remove them
  if (/^['"].*['"]$/.test(url)) {
    url = url.slice(1, -1);
  }
  if (options.hash) {
    url += options.hash;
  }

  // Should url be wrapped?
  // See https://drafts.csswg.org/css-values-3/#urls
  if (/["'() \t\n]|(%20)/.test(url) || options.needQuotes) {
    return "\"".concat(url.replace(/"/g, '\\"').replace(/\n/g, "\\n"), "\"");
  }
  return url;
};

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/sourceMaps.js":
/*!************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/sourceMaps.js ***!
  \************************************************************/
/***/ ((module) => {

"use strict";


module.exports = function (item) {
  var content = item[1];
  var cssMapping = item[3];
  if (!cssMapping) {
    return content;
  }
  if (typeof btoa === "function") {
    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));
    var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);
    var sourceMapping = "/*# ".concat(data, " */");
    return [content].concat([sourceMapping]).join("\n");
  }
  return [content].join("\n");
};

/***/ }),

/***/ "./node_modules/file-saver/dist/FileSaver.min.js":
/*!*******************************************************!*\
  !*** ./node_modules/file-saver/dist/FileSaver.min.js ***!
  \*******************************************************/
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(a,b){if(true)!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (b),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else {}})(this,function(){"use strict";function b(a,b){return"undefined"==typeof b?b={autoBom:!1}:"object"!=typeof b&&(console.warn("Deprecated: Expected third argument to be a object"),b={autoBom:!b}),b.autoBom&&/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(a.type)?new Blob(["\uFEFF",a],{type:a.type}):a}function c(a,b,c){var d=new XMLHttpRequest;d.open("GET",a),d.responseType="blob",d.onload=function(){g(d.response,b,c)},d.onerror=function(){console.error("could not download file")},d.send()}function d(a){var b=new XMLHttpRequest;b.open("HEAD",a,!1);try{b.send()}catch(a){}return 200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent("click"))}catch(c){var b=document.createEvent("MouseEvents");b.initMouseEvent("click",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f="object"==typeof window&&window.window===window?window:"object"==typeof self&&self.self===self?self:"object"==typeof __webpack_require__.g&&__webpack_require__.g.global===__webpack_require__.g?__webpack_require__.g:void 0,a=f.navigator&&/Macintosh/.test(navigator.userAgent)&&/AppleWebKit/.test(navigator.userAgent)&&!/Safari/.test(navigator.userAgent),g=f.saveAs||("object"!=typeof window||window!==f?function(){}:"download"in HTMLAnchorElement.prototype&&!a?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement("a");g=g||b.name||"download",j.download=g,j.rel="noopener","string"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target="_blank")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:"msSaveOrOpenBlob"in navigator?function(f,g,h){if(g=g||f.name||"download","string"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement("a");i.href=f,i.target="_blank",setTimeout(function(){e(i)})}}:function(b,d,e,g){if(g=g||open("","_blank"),g&&(g.document.title=g.document.body.innerText="downloading..."),"string"==typeof b)return c(b,d,e);var h="application/octet-stream"===b.type,i=/constructor/i.test(f.HTMLElement)||f.safari,j=/CriOS\/[\d]+/.test(navigator.userAgent);if((j||h&&i||a)&&"undefined"!=typeof FileReader){var k=new FileReader;k.onloadend=function(){var a=k.result;a=j?a:a.replace(/^data:[^;]*;/,"data:attachment/file;"),g?g.location.href=a:location=a,g=null},k.readAsDataURL(b)}else{var l=f.URL||f.webkitURL,m=l.createObjectURL(b);g?g.location=m:location.href=m,g=null,setTimeout(function(){l.revokeObjectURL(m)},4E4)}});f.saveAs=g.saveAs=g, true&&(module.exports=g)});



/***/ }),

/***/ "./node_modules/inversify/lib/annotation/decorator_utils.js":
/*!******************************************************************!*\
  !*** ./node_modules/inversify/lib/annotation/decorator_utils.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.tagProperty = exports.tagParameter = exports.decorate = void 0;
var ERROR_MSGS = __webpack_require__(/*! ../constants/error_msgs */ "./node_modules/inversify/lib/constants/error_msgs.js");
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "./node_modules/inversify/lib/constants/metadata_keys.js");
function tagParameter(annotationTarget, propertyName, parameterIndex, metadata) {
    var metadataKey = METADATA_KEY.TAGGED;
    _tagParameterOrProperty(metadataKey, annotationTarget, propertyName, metadata, parameterIndex);
}
exports.tagParameter = tagParameter;
function tagProperty(annotationTarget, propertyName, metadata) {
    var metadataKey = METADATA_KEY.TAGGED_PROP;
    _tagParameterOrProperty(metadataKey, annotationTarget.constructor, propertyName, metadata);
}
exports.tagProperty = tagProperty;
function _tagParameterOrProperty(metadataKey, annotationTarget, propertyName, metadata, parameterIndex) {
    var paramsOrPropertiesMetadata = {};
    var isParameterDecorator = (typeof parameterIndex === "number");
    var key = (parameterIndex !== undefined && isParameterDecorator) ? parameterIndex.toString() : propertyName;
    if (isParameterDecorator && propertyName !== undefined) {
        throw new Error(ERROR_MSGS.INVALID_DECORATOR_OPERATION);
    }
    if (Reflect.hasOwnMetadata(metadataKey, annotationTarget)) {
        paramsOrPropertiesMetadata = Reflect.getMetadata(metadataKey, annotationTarget);
    }
    var paramOrPropertyMetadata = paramsOrPropertiesMetadata[key];
    if (!Array.isArray(paramOrPropertyMetadata)) {
        paramOrPropertyMetadata = [];
    }
    else {
        for (var _i = 0, paramOrPropertyMetadata_1 = paramOrPropertyMetadata; _i < paramOrPropertyMetadata_1.length; _i++) {
            var m = paramOrPropertyMetadata_1[_i];
            if (m.key === metadata.key) {
                throw new Error(ERROR_MSGS.DUPLICATED_METADATA + " " + m.key.toString());
            }
        }
    }
    paramOrPropertyMetadata.push(metadata);
    paramsOrPropertiesMetadata[key] = paramOrPropertyMetadata;
    Reflect.defineMetadata(metadataKey, paramsOrPropertiesMetadata, annotationTarget);
}
function _decorate(decorators, target) {
    Reflect.decorate(decorators, target);
}
function _param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); };
}
function decorate(decorator, target, parameterIndex) {
    if (typeof parameterIndex === "number") {
        _decorate([_param(parameterIndex, decorator)], target);
    }
    else if (typeof parameterIndex === "string") {
        Reflect.decorate([decorator], target, parameterIndex);
    }
    else {
        _decorate([decorator], target);
    }
}
exports.decorate = decorate;


/***/ }),

/***/ "./node_modules/inversify/lib/annotation/inject.js":
/*!*********************************************************!*\
  !*** ./node_modules/inversify/lib/annotation/inject.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.inject = exports.LazyServiceIdentifer = void 0;
var error_msgs_1 = __webpack_require__(/*! ../constants/error_msgs */ "./node_modules/inversify/lib/constants/error_msgs.js");
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "./node_modules/inversify/lib/constants/metadata_keys.js");
var metadata_1 = __webpack_require__(/*! ../planning/metadata */ "./node_modules/inversify/lib/planning/metadata.js");
var decorator_utils_1 = __webpack_require__(/*! ./decorator_utils */ "./node_modules/inversify/lib/annotation/decorator_utils.js");
var LazyServiceIdentifer = (function () {
    function LazyServiceIdentifer(cb) {
        this._cb = cb;
    }
    LazyServiceIdentifer.prototype.unwrap = function () {
        return this._cb();
    };
    return LazyServiceIdentifer;
}());
exports.LazyServiceIdentifer = LazyServiceIdentifer;
function inject(serviceIdentifier) {
    return function (target, targetKey, index) {
        if (serviceIdentifier === undefined) {
            throw new Error(error_msgs_1.UNDEFINED_INJECT_ANNOTATION(target.name));
        }
        var metadata = new metadata_1.Metadata(METADATA_KEY.INJECT_TAG, serviceIdentifier);
        if (typeof index === "number") {
            decorator_utils_1.tagParameter(target, targetKey, index, metadata);
        }
        else {
            decorator_utils_1.tagProperty(target, targetKey, metadata);
        }
    };
}
exports.inject = inject;


/***/ }),

/***/ "./node_modules/inversify/lib/annotation/injectable.js":
/*!*************************************************************!*\
  !*** ./node_modules/inversify/lib/annotation/injectable.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.injectable = void 0;
var ERRORS_MSGS = __webpack_require__(/*! ../constants/error_msgs */ "./node_modules/inversify/lib/constants/error_msgs.js");
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "./node_modules/inversify/lib/constants/metadata_keys.js");
function injectable() {
    return function (target) {
        if (Reflect.hasOwnMetadata(METADATA_KEY.PARAM_TYPES, target)) {
            throw new Error(ERRORS_MSGS.DUPLICATED_INJECTABLE_DECORATOR);
        }
        var types = Reflect.getMetadata(METADATA_KEY.DESIGN_PARAM_TYPES, target) || [];
        Reflect.defineMetadata(METADATA_KEY.PARAM_TYPES, types, target);
        return target;
    };
}
exports.injectable = injectable;


/***/ }),

/***/ "./node_modules/inversify/lib/annotation/multi_inject.js":
/*!***************************************************************!*\
  !*** ./node_modules/inversify/lib/annotation/multi_inject.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.multiInject = void 0;
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "./node_modules/inversify/lib/constants/metadata_keys.js");
var metadata_1 = __webpack_require__(/*! ../planning/metadata */ "./node_modules/inversify/lib/planning/metadata.js");
var decorator_utils_1 = __webpack_require__(/*! ./decorator_utils */ "./node_modules/inversify/lib/annotation/decorator_utils.js");
function multiInject(serviceIdentifier) {
    return function (target, targetKey, index) {
        var metadata = new metadata_1.Metadata(METADATA_KEY.MULTI_INJECT_TAG, serviceIdentifier);
        if (typeof index === "number") {
            decorator_utils_1.tagParameter(target, targetKey, index, metadata);
        }
        else {
            decorator_utils_1.tagProperty(target, targetKey, metadata);
        }
    };
}
exports.multiInject = multiInject;


/***/ }),

/***/ "./node_modules/inversify/lib/annotation/named.js":
/*!********************************************************!*\
  !*** ./node_modules/inversify/lib/annotation/named.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.named = void 0;
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "./node_modules/inversify/lib/constants/metadata_keys.js");
var metadata_1 = __webpack_require__(/*! ../planning/metadata */ "./node_modules/inversify/lib/planning/metadata.js");
var decorator_utils_1 = __webpack_require__(/*! ./decorator_utils */ "./node_modules/inversify/lib/annotation/decorator_utils.js");
function named(name) {
    return function (target, targetKey, index) {
        var metadata = new metadata_1.Metadata(METADATA_KEY.NAMED_TAG, name);
        if (typeof index === "number") {
            decorator_utils_1.tagParameter(target, targetKey, index, metadata);
        }
        else {
            decorator_utils_1.tagProperty(target, targetKey, metadata);
        }
    };
}
exports.named = named;


/***/ }),

/***/ "./node_modules/inversify/lib/annotation/optional.js":
/*!***********************************************************!*\
  !*** ./node_modules/inversify/lib/annotation/optional.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.optional = void 0;
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "./node_modules/inversify/lib/constants/metadata_keys.js");
var metadata_1 = __webpack_require__(/*! ../planning/metadata */ "./node_modules/inversify/lib/planning/metadata.js");
var decorator_utils_1 = __webpack_require__(/*! ./decorator_utils */ "./node_modules/inversify/lib/annotation/decorator_utils.js");
function optional() {
    return function (target, targetKey, index) {
        var metadata = new metadata_1.Metadata(METADATA_KEY.OPTIONAL_TAG, true);
        if (typeof index === "number") {
            decorator_utils_1.tagParameter(target, targetKey, index, metadata);
        }
        else {
            decorator_utils_1.tagProperty(target, targetKey, metadata);
        }
    };
}
exports.optional = optional;


/***/ }),

/***/ "./node_modules/inversify/lib/annotation/post_construct.js":
/*!*****************************************************************!*\
  !*** ./node_modules/inversify/lib/annotation/post_construct.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.postConstruct = void 0;
var ERRORS_MSGS = __webpack_require__(/*! ../constants/error_msgs */ "./node_modules/inversify/lib/constants/error_msgs.js");
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "./node_modules/inversify/lib/constants/metadata_keys.js");
var metadata_1 = __webpack_require__(/*! ../planning/metadata */ "./node_modules/inversify/lib/planning/metadata.js");
function postConstruct() {
    return function (target, propertyKey, descriptor) {
        var metadata = new metadata_1.Metadata(METADATA_KEY.POST_CONSTRUCT, propertyKey);
        if (Reflect.hasOwnMetadata(METADATA_KEY.POST_CONSTRUCT, target.constructor)) {
            throw new Error(ERRORS_MSGS.MULTIPLE_POST_CONSTRUCT_METHODS);
        }
        Reflect.defineMetadata(METADATA_KEY.POST_CONSTRUCT, metadata, target.constructor);
    };
}
exports.postConstruct = postConstruct;


/***/ }),

/***/ "./node_modules/inversify/lib/annotation/tagged.js":
/*!*********************************************************!*\
  !*** ./node_modules/inversify/lib/annotation/tagged.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.tagged = void 0;
var metadata_1 = __webpack_require__(/*! ../planning/metadata */ "./node_modules/inversify/lib/planning/metadata.js");
var decorator_utils_1 = __webpack_require__(/*! ./decorator_utils */ "./node_modules/inversify/lib/annotation/decorator_utils.js");
function tagged(metadataKey, metadataValue) {
    return function (target, targetKey, index) {
        var metadata = new metadata_1.Metadata(metadataKey, metadataValue);
        if (typeof index === "number") {
            decorator_utils_1.tagParameter(target, targetKey, index, metadata);
        }
        else {
            decorator_utils_1.tagProperty(target, targetKey, metadata);
        }
    };
}
exports.tagged = tagged;


/***/ }),

/***/ "./node_modules/inversify/lib/annotation/target_name.js":
/*!**************************************************************!*\
  !*** ./node_modules/inversify/lib/annotation/target_name.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.targetName = void 0;
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "./node_modules/inversify/lib/constants/metadata_keys.js");
var metadata_1 = __webpack_require__(/*! ../planning/metadata */ "./node_modules/inversify/lib/planning/metadata.js");
var decorator_utils_1 = __webpack_require__(/*! ./decorator_utils */ "./node_modules/inversify/lib/annotation/decorator_utils.js");
function targetName(name) {
    return function (target, targetKey, index) {
        var metadata = new metadata_1.Metadata(METADATA_KEY.NAME_TAG, name);
        decorator_utils_1.tagParameter(target, targetKey, index, metadata);
    };
}
exports.targetName = targetName;


/***/ }),

/***/ "./node_modules/inversify/lib/annotation/unmanaged.js":
/*!************************************************************!*\
  !*** ./node_modules/inversify/lib/annotation/unmanaged.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.unmanaged = void 0;
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "./node_modules/inversify/lib/constants/metadata_keys.js");
var metadata_1 = __webpack_require__(/*! ../planning/metadata */ "./node_modules/inversify/lib/planning/metadata.js");
var decorator_utils_1 = __webpack_require__(/*! ./decorator_utils */ "./node_modules/inversify/lib/annotation/decorator_utils.js");
function unmanaged() {
    return function (target, targetKey, index) {
        var metadata = new metadata_1.Metadata(METADATA_KEY.UNMANAGED_TAG, true);
        decorator_utils_1.tagParameter(target, targetKey, index, metadata);
    };
}
exports.unmanaged = unmanaged;


/***/ }),

/***/ "./node_modules/inversify/lib/bindings/binding.js":
/*!********************************************************!*\
  !*** ./node_modules/inversify/lib/bindings/binding.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Binding = void 0;
var literal_types_1 = __webpack_require__(/*! ../constants/literal_types */ "./node_modules/inversify/lib/constants/literal_types.js");
var id_1 = __webpack_require__(/*! ../utils/id */ "./node_modules/inversify/lib/utils/id.js");
var Binding = (function () {
    function Binding(serviceIdentifier, scope) {
        this.id = id_1.id();
        this.activated = false;
        this.serviceIdentifier = serviceIdentifier;
        this.scope = scope;
        this.type = literal_types_1.BindingTypeEnum.Invalid;
        this.constraint = function (request) { return true; };
        this.implementationType = null;
        this.cache = null;
        this.factory = null;
        this.provider = null;
        this.onActivation = null;
        this.dynamicValue = null;
    }
    Binding.prototype.clone = function () {
        var clone = new Binding(this.serviceIdentifier, this.scope);
        clone.activated = (clone.scope === literal_types_1.BindingScopeEnum.Singleton) ? this.activated : false;
        clone.implementationType = this.implementationType;
        clone.dynamicValue = this.dynamicValue;
        clone.scope = this.scope;
        clone.type = this.type;
        clone.factory = this.factory;
        clone.provider = this.provider;
        clone.constraint = this.constraint;
        clone.onActivation = this.onActivation;
        clone.cache = this.cache;
        return clone;
    };
    return Binding;
}());
exports.Binding = Binding;


/***/ }),

/***/ "./node_modules/inversify/lib/bindings/binding_count.js":
/*!**************************************************************!*\
  !*** ./node_modules/inversify/lib/bindings/binding_count.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BindingCount = void 0;
var BindingCount = {
    MultipleBindingsAvailable: 2,
    NoBindingsAvailable: 0,
    OnlyOneBindingAvailable: 1
};
exports.BindingCount = BindingCount;


/***/ }),

/***/ "./node_modules/inversify/lib/constants/error_msgs.js":
/*!************************************************************!*\
  !*** ./node_modules/inversify/lib/constants/error_msgs.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.STACK_OVERFLOW = exports.CIRCULAR_DEPENDENCY_IN_FACTORY = exports.POST_CONSTRUCT_ERROR = exports.MULTIPLE_POST_CONSTRUCT_METHODS = exports.CONTAINER_OPTIONS_INVALID_SKIP_BASE_CHECK = exports.CONTAINER_OPTIONS_INVALID_AUTO_BIND_INJECTABLE = exports.CONTAINER_OPTIONS_INVALID_DEFAULT_SCOPE = exports.CONTAINER_OPTIONS_MUST_BE_AN_OBJECT = exports.ARGUMENTS_LENGTH_MISMATCH = exports.INVALID_DECORATOR_OPERATION = exports.INVALID_TO_SELF_VALUE = exports.INVALID_FUNCTION_BINDING = exports.INVALID_MIDDLEWARE_RETURN = exports.NO_MORE_SNAPSHOTS_AVAILABLE = exports.INVALID_BINDING_TYPE = exports.NOT_IMPLEMENTED = exports.CIRCULAR_DEPENDENCY = exports.UNDEFINED_INJECT_ANNOTATION = exports.MISSING_INJECT_ANNOTATION = exports.MISSING_INJECTABLE_ANNOTATION = exports.NOT_REGISTERED = exports.CANNOT_UNBIND = exports.AMBIGUOUS_MATCH = exports.KEY_NOT_FOUND = exports.NULL_ARGUMENT = exports.DUPLICATED_METADATA = exports.DUPLICATED_INJECTABLE_DECORATOR = void 0;
exports.DUPLICATED_INJECTABLE_DECORATOR = "Cannot apply @injectable decorator multiple times.";
exports.DUPLICATED_METADATA = "Metadata key was used more than once in a parameter:";
exports.NULL_ARGUMENT = "NULL argument";
exports.KEY_NOT_FOUND = "Key Not Found";
exports.AMBIGUOUS_MATCH = "Ambiguous match found for serviceIdentifier:";
exports.CANNOT_UNBIND = "Could not unbind serviceIdentifier:";
exports.NOT_REGISTERED = "No matching bindings found for serviceIdentifier:";
exports.MISSING_INJECTABLE_ANNOTATION = "Missing required @injectable annotation in:";
exports.MISSING_INJECT_ANNOTATION = "Missing required @inject or @multiInject annotation in:";
var UNDEFINED_INJECT_ANNOTATION = function (name) {
    return "@inject called with undefined this could mean that the class " + name + " has " +
        "a circular dependency problem. You can use a LazyServiceIdentifer to  " +
        "overcome this limitation.";
};
exports.UNDEFINED_INJECT_ANNOTATION = UNDEFINED_INJECT_ANNOTATION;
exports.CIRCULAR_DEPENDENCY = "Circular dependency found:";
exports.NOT_IMPLEMENTED = "Sorry, this feature is not fully implemented yet.";
exports.INVALID_BINDING_TYPE = "Invalid binding type:";
exports.NO_MORE_SNAPSHOTS_AVAILABLE = "No snapshot available to restore.";
exports.INVALID_MIDDLEWARE_RETURN = "Invalid return type in middleware. Middleware must return!";
exports.INVALID_FUNCTION_BINDING = "Value provided to function binding must be a function!";
exports.INVALID_TO_SELF_VALUE = "The toSelf function can only be applied when a constructor is " +
    "used as service identifier";
exports.INVALID_DECORATOR_OPERATION = "The @inject @multiInject @tagged and @named decorators " +
    "must be applied to the parameters of a class constructor or a class property.";
var ARGUMENTS_LENGTH_MISMATCH = function () {
    var values = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        values[_i] = arguments[_i];
    }
    return "The number of constructor arguments in the derived class " +
        (values[0] + " must be >= than the number of constructor arguments of its base class.");
};
exports.ARGUMENTS_LENGTH_MISMATCH = ARGUMENTS_LENGTH_MISMATCH;
exports.CONTAINER_OPTIONS_MUST_BE_AN_OBJECT = "Invalid Container constructor argument. Container options " +
    "must be an object.";
exports.CONTAINER_OPTIONS_INVALID_DEFAULT_SCOPE = "Invalid Container option. Default scope must " +
    "be a string ('singleton' or 'transient').";
exports.CONTAINER_OPTIONS_INVALID_AUTO_BIND_INJECTABLE = "Invalid Container option. Auto bind injectable must " +
    "be a boolean";
exports.CONTAINER_OPTIONS_INVALID_SKIP_BASE_CHECK = "Invalid Container option. Skip base check must " +
    "be a boolean";
exports.MULTIPLE_POST_CONSTRUCT_METHODS = "Cannot apply @postConstruct decorator multiple times in the same class";
var POST_CONSTRUCT_ERROR = function () {
    var values = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        values[_i] = arguments[_i];
    }
    return "@postConstruct error in class " + values[0] + ": " + values[1];
};
exports.POST_CONSTRUCT_ERROR = POST_CONSTRUCT_ERROR;
var CIRCULAR_DEPENDENCY_IN_FACTORY = function () {
    var values = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        values[_i] = arguments[_i];
    }
    return "It looks like there is a circular dependency " +
        ("in one of the '" + values[0] + "' bindings. Please investigate bindings with") +
        ("service identifier '" + values[1] + "'.");
};
exports.CIRCULAR_DEPENDENCY_IN_FACTORY = CIRCULAR_DEPENDENCY_IN_FACTORY;
exports.STACK_OVERFLOW = "Maximum call stack size exceeded";


/***/ }),

/***/ "./node_modules/inversify/lib/constants/literal_types.js":
/*!***************************************************************!*\
  !*** ./node_modules/inversify/lib/constants/literal_types.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TargetTypeEnum = exports.BindingTypeEnum = exports.BindingScopeEnum = void 0;
var BindingScopeEnum = {
    Request: "Request",
    Singleton: "Singleton",
    Transient: "Transient"
};
exports.BindingScopeEnum = BindingScopeEnum;
var BindingTypeEnum = {
    ConstantValue: "ConstantValue",
    Constructor: "Constructor",
    DynamicValue: "DynamicValue",
    Factory: "Factory",
    Function: "Function",
    Instance: "Instance",
    Invalid: "Invalid",
    Provider: "Provider"
};
exports.BindingTypeEnum = BindingTypeEnum;
var TargetTypeEnum = {
    ClassProperty: "ClassProperty",
    ConstructorArgument: "ConstructorArgument",
    Variable: "Variable"
};
exports.TargetTypeEnum = TargetTypeEnum;


/***/ }),

/***/ "./node_modules/inversify/lib/constants/metadata_keys.js":
/*!***************************************************************!*\
  !*** ./node_modules/inversify/lib/constants/metadata_keys.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.NON_CUSTOM_TAG_KEYS = exports.POST_CONSTRUCT = exports.DESIGN_PARAM_TYPES = exports.PARAM_TYPES = exports.TAGGED_PROP = exports.TAGGED = exports.MULTI_INJECT_TAG = exports.INJECT_TAG = exports.OPTIONAL_TAG = exports.UNMANAGED_TAG = exports.NAME_TAG = exports.NAMED_TAG = void 0;
exports.NAMED_TAG = "named";
exports.NAME_TAG = "name";
exports.UNMANAGED_TAG = "unmanaged";
exports.OPTIONAL_TAG = "optional";
exports.INJECT_TAG = "inject";
exports.MULTI_INJECT_TAG = "multi_inject";
exports.TAGGED = "inversify:tagged";
exports.TAGGED_PROP = "inversify:tagged_props";
exports.PARAM_TYPES = "inversify:paramtypes";
exports.DESIGN_PARAM_TYPES = "design:paramtypes";
exports.POST_CONSTRUCT = "post_construct";
function getNonCustomTagKeys() {
    return [
        exports.INJECT_TAG,
        exports.MULTI_INJECT_TAG,
        exports.NAME_TAG,
        exports.UNMANAGED_TAG,
        exports.NAMED_TAG,
        exports.OPTIONAL_TAG,
    ];
}
exports.NON_CUSTOM_TAG_KEYS = getNonCustomTagKeys();


/***/ }),

/***/ "./node_modules/inversify/lib/container/container.js":
/*!***********************************************************!*\
  !*** ./node_modules/inversify/lib/container/container.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Container = void 0;
var binding_1 = __webpack_require__(/*! ../bindings/binding */ "./node_modules/inversify/lib/bindings/binding.js");
var ERROR_MSGS = __webpack_require__(/*! ../constants/error_msgs */ "./node_modules/inversify/lib/constants/error_msgs.js");
var literal_types_1 = __webpack_require__(/*! ../constants/literal_types */ "./node_modules/inversify/lib/constants/literal_types.js");
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "./node_modules/inversify/lib/constants/metadata_keys.js");
var metadata_reader_1 = __webpack_require__(/*! ../planning/metadata_reader */ "./node_modules/inversify/lib/planning/metadata_reader.js");
var planner_1 = __webpack_require__(/*! ../planning/planner */ "./node_modules/inversify/lib/planning/planner.js");
var resolver_1 = __webpack_require__(/*! ../resolution/resolver */ "./node_modules/inversify/lib/resolution/resolver.js");
var binding_to_syntax_1 = __webpack_require__(/*! ../syntax/binding_to_syntax */ "./node_modules/inversify/lib/syntax/binding_to_syntax.js");
var id_1 = __webpack_require__(/*! ../utils/id */ "./node_modules/inversify/lib/utils/id.js");
var serialization_1 = __webpack_require__(/*! ../utils/serialization */ "./node_modules/inversify/lib/utils/serialization.js");
var container_snapshot_1 = __webpack_require__(/*! ./container_snapshot */ "./node_modules/inversify/lib/container/container_snapshot.js");
var lookup_1 = __webpack_require__(/*! ./lookup */ "./node_modules/inversify/lib/container/lookup.js");
var Container = (function () {
    function Container(containerOptions) {
        this._appliedMiddleware = [];
        var options = containerOptions || {};
        if (typeof options !== "object") {
            throw new Error("" + ERROR_MSGS.CONTAINER_OPTIONS_MUST_BE_AN_OBJECT);
        }
        if (options.defaultScope === undefined) {
            options.defaultScope = literal_types_1.BindingScopeEnum.Transient;
        }
        else if (options.defaultScope !== literal_types_1.BindingScopeEnum.Singleton &&
            options.defaultScope !== literal_types_1.BindingScopeEnum.Transient &&
            options.defaultScope !== literal_types_1.BindingScopeEnum.Request) {
            throw new Error("" + ERROR_MSGS.CONTAINER_OPTIONS_INVALID_DEFAULT_SCOPE);
        }
        if (options.autoBindInjectable === undefined) {
            options.autoBindInjectable = false;
        }
        else if (typeof options.autoBindInjectable !== "boolean") {
            throw new Error("" + ERROR_MSGS.CONTAINER_OPTIONS_INVALID_AUTO_BIND_INJECTABLE);
        }
        if (options.skipBaseClassChecks === undefined) {
            options.skipBaseClassChecks = false;
        }
        else if (typeof options.skipBaseClassChecks !== "boolean") {
            throw new Error("" + ERROR_MSGS.CONTAINER_OPTIONS_INVALID_SKIP_BASE_CHECK);
        }
        this.options = {
            autoBindInjectable: options.autoBindInjectable,
            defaultScope: options.defaultScope,
            skipBaseClassChecks: options.skipBaseClassChecks
        };
        this.id = id_1.id();
        this._bindingDictionary = new lookup_1.Lookup();
        this._snapshots = [];
        this._middleware = null;
        this.parent = null;
        this._metadataReader = new metadata_reader_1.MetadataReader();
    }
    Container.merge = function (container1, container2) {
        var container3 = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            container3[_i - 2] = arguments[_i];
        }
        var container = new Container();
        var targetContainers = __spreadArray([container1, container2], container3).map(function (targetContainer) { return planner_1.getBindingDictionary(targetContainer); });
        var bindingDictionary = planner_1.getBindingDictionary(container);
        function copyDictionary(origin, destination) {
            origin.traverse(function (key, value) {
                value.forEach(function (binding) {
                    destination.add(binding.serviceIdentifier, binding.clone());
                });
            });
        }
        targetContainers.forEach(function (targetBindingDictionary) {
            copyDictionary(targetBindingDictionary, bindingDictionary);
        });
        return container;
    };
    Container.prototype.load = function () {
        var modules = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            modules[_i] = arguments[_i];
        }
        var getHelpers = this._getContainerModuleHelpersFactory();
        for (var _a = 0, modules_1 = modules; _a < modules_1.length; _a++) {
            var currentModule = modules_1[_a];
            var containerModuleHelpers = getHelpers(currentModule.id);
            currentModule.registry(containerModuleHelpers.bindFunction, containerModuleHelpers.unbindFunction, containerModuleHelpers.isboundFunction, containerModuleHelpers.rebindFunction);
        }
    };
    Container.prototype.loadAsync = function () {
        var modules = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            modules[_i] = arguments[_i];
        }
        return __awaiter(this, void 0, void 0, function () {
            var getHelpers, _a, modules_2, currentModule, containerModuleHelpers;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        getHelpers = this._getContainerModuleHelpersFactory();
                        _a = 0, modules_2 = modules;
                        _b.label = 1;
                    case 1:
                        if (!(_a < modules_2.length)) return [3, 4];
                        currentModule = modules_2[_a];
                        containerModuleHelpers = getHelpers(currentModule.id);
                        return [4, currentModule.registry(containerModuleHelpers.bindFunction, containerModuleHelpers.unbindFunction, containerModuleHelpers.isboundFunction, containerModuleHelpers.rebindFunction)];
                    case 2:
                        _b.sent();
                        _b.label = 3;
                    case 3:
                        _a++;
                        return [3, 1];
                    case 4: return [2];
                }
            });
        });
    };
    Container.prototype.unload = function () {
        var _this = this;
        var modules = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            modules[_i] = arguments[_i];
        }
        var conditionFactory = function (expected) { return function (item) {
            return item.moduleId === expected;
        }; };
        modules.forEach(function (module) {
            var condition = conditionFactory(module.id);
            _this._bindingDictionary.removeByCondition(condition);
        });
    };
    Container.prototype.bind = function (serviceIdentifier) {
        var scope = this.options.defaultScope || literal_types_1.BindingScopeEnum.Transient;
        var binding = new binding_1.Binding(serviceIdentifier, scope);
        this._bindingDictionary.add(serviceIdentifier, binding);
        return new binding_to_syntax_1.BindingToSyntax(binding);
    };
    Container.prototype.rebind = function (serviceIdentifier) {
        this.unbind(serviceIdentifier);
        return this.bind(serviceIdentifier);
    };
    Container.prototype.unbind = function (serviceIdentifier) {
        try {
            this._bindingDictionary.remove(serviceIdentifier);
        }
        catch (e) {
            throw new Error(ERROR_MSGS.CANNOT_UNBIND + " " + serialization_1.getServiceIdentifierAsString(serviceIdentifier));
        }
    };
    Container.prototype.unbindAll = function () {
        this._bindingDictionary = new lookup_1.Lookup();
    };
    Container.prototype.isBound = function (serviceIdentifier) {
        var bound = this._bindingDictionary.hasKey(serviceIdentifier);
        if (!bound && this.parent) {
            bound = this.parent.isBound(serviceIdentifier);
        }
        return bound;
    };
    Container.prototype.isBoundNamed = function (serviceIdentifier, named) {
        return this.isBoundTagged(serviceIdentifier, METADATA_KEY.NAMED_TAG, named);
    };
    Container.prototype.isBoundTagged = function (serviceIdentifier, key, value) {
        var bound = false;
        if (this._bindingDictionary.hasKey(serviceIdentifier)) {
            var bindings = this._bindingDictionary.get(serviceIdentifier);
            var request_1 = planner_1.createMockRequest(this, serviceIdentifier, key, value);
            bound = bindings.some(function (b) { return b.constraint(request_1); });
        }
        if (!bound && this.parent) {
            bound = this.parent.isBoundTagged(serviceIdentifier, key, value);
        }
        return bound;
    };
    Container.prototype.snapshot = function () {
        this._snapshots.push(container_snapshot_1.ContainerSnapshot.of(this._bindingDictionary.clone(), this._middleware));
    };
    Container.prototype.restore = function () {
        var snapshot = this._snapshots.pop();
        if (snapshot === undefined) {
            throw new Error(ERROR_MSGS.NO_MORE_SNAPSHOTS_AVAILABLE);
        }
        this._bindingDictionary = snapshot.bindings;
        this._middleware = snapshot.middleware;
    };
    Container.prototype.createChild = function (containerOptions) {
        var child = new Container(containerOptions || this.options);
        child.parent = this;
        return child;
    };
    Container.prototype.applyMiddleware = function () {
        var middlewares = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            middlewares[_i] = arguments[_i];
        }
        this._appliedMiddleware = this._appliedMiddleware.concat(middlewares);
        var initial = (this._middleware) ? this._middleware : this._planAndResolve();
        this._middleware = middlewares.reduce(function (prev, curr) { return curr(prev); }, initial);
    };
    Container.prototype.applyCustomMetadataReader = function (metadataReader) {
        this._metadataReader = metadataReader;
    };
    Container.prototype.get = function (serviceIdentifier) {
        return this._get(false, false, literal_types_1.TargetTypeEnum.Variable, serviceIdentifier);
    };
    Container.prototype.getTagged = function (serviceIdentifier, key, value) {
        return this._get(false, false, literal_types_1.TargetTypeEnum.Variable, serviceIdentifier, key, value);
    };
    Container.prototype.getNamed = function (serviceIdentifier, named) {
        return this.getTagged(serviceIdentifier, METADATA_KEY.NAMED_TAG, named);
    };
    Container.prototype.getAll = function (serviceIdentifier) {
        return this._get(true, true, literal_types_1.TargetTypeEnum.Variable, serviceIdentifier);
    };
    Container.prototype.getAllTagged = function (serviceIdentifier, key, value) {
        return this._get(false, true, literal_types_1.TargetTypeEnum.Variable, serviceIdentifier, key, value);
    };
    Container.prototype.getAllNamed = function (serviceIdentifier, named) {
        return this.getAllTagged(serviceIdentifier, METADATA_KEY.NAMED_TAG, named);
    };
    Container.prototype.resolve = function (constructorFunction) {
        var tempContainer = this.createChild();
        tempContainer.bind(constructorFunction).toSelf();
        this._appliedMiddleware.forEach(function (m) {
            tempContainer.applyMiddleware(m);
        });
        return tempContainer.get(constructorFunction);
    };
    Container.prototype._getContainerModuleHelpersFactory = function () {
        var _this = this;
        var setModuleId = function (bindingToSyntax, moduleId) {
            bindingToSyntax._binding.moduleId = moduleId;
        };
        var getBindFunction = function (moduleId) {
            return function (serviceIdentifier) {
                var _bind = _this.bind.bind(_this);
                var bindingToSyntax = _bind(serviceIdentifier);
                setModuleId(bindingToSyntax, moduleId);
                return bindingToSyntax;
            };
        };
        var getUnbindFunction = function (moduleId) {
            return function (serviceIdentifier) {
                var _unbind = _this.unbind.bind(_this);
                _unbind(serviceIdentifier);
            };
        };
        var getIsboundFunction = function (moduleId) {
            return function (serviceIdentifier) {
                var _isBound = _this.isBound.bind(_this);
                return _isBound(serviceIdentifier);
            };
        };
        var getRebindFunction = function (moduleId) {
            return function (serviceIdentifier) {
                var _rebind = _this.rebind.bind(_this);
                var bindingToSyntax = _rebind(serviceIdentifier);
                setModuleId(bindingToSyntax, moduleId);
                return bindingToSyntax;
            };
        };
        return function (mId) { return ({
            bindFunction: getBindFunction(mId),
            isboundFunction: getIsboundFunction(mId),
            rebindFunction: getRebindFunction(mId),
            unbindFunction: getUnbindFunction(mId)
        }); };
    };
    Container.prototype._get = function (avoidConstraints, isMultiInject, targetType, serviceIdentifier, key, value) {
        var result = null;
        var defaultArgs = {
            avoidConstraints: avoidConstraints,
            contextInterceptor: function (context) { return context; },
            isMultiInject: isMultiInject,
            key: key,
            serviceIdentifier: serviceIdentifier,
            targetType: targetType,
            value: value
        };
        if (this._middleware) {
            result = this._middleware(defaultArgs);
            if (result === undefined || result === null) {
                throw new Error(ERROR_MSGS.INVALID_MIDDLEWARE_RETURN);
            }
        }
        else {
            result = this._planAndResolve()(defaultArgs);
        }
        return result;
    };
    Container.prototype._planAndResolve = function () {
        var _this = this;
        return function (args) {
            var context = planner_1.plan(_this._metadataReader, _this, args.isMultiInject, args.targetType, args.serviceIdentifier, args.key, args.value, args.avoidConstraints);
            context = args.contextInterceptor(context);
            var result = resolver_1.resolve(context);
            return result;
        };
    };
    return Container;
}());
exports.Container = Container;


/***/ }),

/***/ "./node_modules/inversify/lib/container/container_module.js":
/*!******************************************************************!*\
  !*** ./node_modules/inversify/lib/container/container_module.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AsyncContainerModule = exports.ContainerModule = void 0;
var id_1 = __webpack_require__(/*! ../utils/id */ "./node_modules/inversify/lib/utils/id.js");
var ContainerModule = (function () {
    function ContainerModule(registry) {
        this.id = id_1.id();
        this.registry = registry;
    }
    return ContainerModule;
}());
exports.ContainerModule = ContainerModule;
var AsyncContainerModule = (function () {
    function AsyncContainerModule(registry) {
        this.id = id_1.id();
        this.registry = registry;
    }
    return AsyncContainerModule;
}());
exports.AsyncContainerModule = AsyncContainerModule;


/***/ }),

/***/ "./node_modules/inversify/lib/container/container_snapshot.js":
/*!********************************************************************!*\
  !*** ./node_modules/inversify/lib/container/container_snapshot.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ContainerSnapshot = void 0;
var ContainerSnapshot = (function () {
    function ContainerSnapshot() {
    }
    ContainerSnapshot.of = function (bindings, middleware) {
        var snapshot = new ContainerSnapshot();
        snapshot.bindings = bindings;
        snapshot.middleware = middleware;
        return snapshot;
    };
    return ContainerSnapshot;
}());
exports.ContainerSnapshot = ContainerSnapshot;


/***/ }),

/***/ "./node_modules/inversify/lib/container/lookup.js":
/*!********************************************************!*\
  !*** ./node_modules/inversify/lib/container/lookup.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Lookup = void 0;
var ERROR_MSGS = __webpack_require__(/*! ../constants/error_msgs */ "./node_modules/inversify/lib/constants/error_msgs.js");
var Lookup = (function () {
    function Lookup() {
        this._map = new Map();
    }
    Lookup.prototype.getMap = function () {
        return this._map;
    };
    Lookup.prototype.add = function (serviceIdentifier, value) {
        if (serviceIdentifier === null || serviceIdentifier === undefined) {
            throw new Error(ERROR_MSGS.NULL_ARGUMENT);
        }
        if (value === null || value === undefined) {
            throw new Error(ERROR_MSGS.NULL_ARGUMENT);
        }
        var entry = this._map.get(serviceIdentifier);
        if (entry !== undefined) {
            entry.push(value);
            this._map.set(serviceIdentifier, entry);
        }
        else {
            this._map.set(serviceIdentifier, [value]);
        }
    };
    Lookup.prototype.get = function (serviceIdentifier) {
        if (serviceIdentifier === null || serviceIdentifier === undefined) {
            throw new Error(ERROR_MSGS.NULL_ARGUMENT);
        }
        var entry = this._map.get(serviceIdentifier);
        if (entry !== undefined) {
            return entry;
        }
        else {
            throw new Error(ERROR_MSGS.KEY_NOT_FOUND);
        }
    };
    Lookup.prototype.remove = function (serviceIdentifier) {
        if (serviceIdentifier === null || serviceIdentifier === undefined) {
            throw new Error(ERROR_MSGS.NULL_ARGUMENT);
        }
        if (!this._map.delete(serviceIdentifier)) {
            throw new Error(ERROR_MSGS.KEY_NOT_FOUND);
        }
    };
    Lookup.prototype.removeByCondition = function (condition) {
        var _this = this;
        this._map.forEach(function (entries, key) {
            var updatedEntries = entries.filter(function (entry) { return !condition(entry); });
            if (updatedEntries.length > 0) {
                _this._map.set(key, updatedEntries);
            }
            else {
                _this._map.delete(key);
            }
        });
    };
    Lookup.prototype.hasKey = function (serviceIdentifier) {
        if (serviceIdentifier === null || serviceIdentifier === undefined) {
            throw new Error(ERROR_MSGS.NULL_ARGUMENT);
        }
        return this._map.has(serviceIdentifier);
    };
    Lookup.prototype.clone = function () {
        var copy = new Lookup();
        this._map.forEach(function (value, key) {
            value.forEach(function (b) { return copy.add(key, b.clone()); });
        });
        return copy;
    };
    Lookup.prototype.traverse = function (func) {
        this._map.forEach(function (value, key) {
            func(key, value);
        });
    };
    return Lookup;
}());
exports.Lookup = Lookup;


/***/ }),

/***/ "./node_modules/inversify/lib/inversify.js":
/*!*************************************************!*\
  !*** ./node_modules/inversify/lib/inversify.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.multiBindToService = exports.getServiceIdentifierAsString = exports.typeConstraint = exports.namedConstraint = exports.taggedConstraint = exports.traverseAncerstors = exports.decorate = exports.id = exports.MetadataReader = exports.postConstruct = exports.targetName = exports.multiInject = exports.unmanaged = exports.optional = exports.LazyServiceIdentifer = exports.inject = exports.named = exports.tagged = exports.injectable = exports.ContainerModule = exports.AsyncContainerModule = exports.TargetTypeEnum = exports.BindingTypeEnum = exports.BindingScopeEnum = exports.Container = exports.METADATA_KEY = void 0;
var keys = __webpack_require__(/*! ./constants/metadata_keys */ "./node_modules/inversify/lib/constants/metadata_keys.js");
exports.METADATA_KEY = keys;
var container_1 = __webpack_require__(/*! ./container/container */ "./node_modules/inversify/lib/container/container.js");
Object.defineProperty(exports, "Container", ({ enumerable: true, get: function () { return container_1.Container; } }));
var literal_types_1 = __webpack_require__(/*! ./constants/literal_types */ "./node_modules/inversify/lib/constants/literal_types.js");
Object.defineProperty(exports, "BindingScopeEnum", ({ enumerable: true, get: function () { return literal_types_1.BindingScopeEnum; } }));
Object.defineProperty(exports, "BindingTypeEnum", ({ enumerable: true, get: function () { return literal_types_1.BindingTypeEnum; } }));
Object.defineProperty(exports, "TargetTypeEnum", ({ enumerable: true, get: function () { return literal_types_1.TargetTypeEnum; } }));
var container_module_1 = __webpack_require__(/*! ./container/container_module */ "./node_modules/inversify/lib/container/container_module.js");
Object.defineProperty(exports, "AsyncContainerModule", ({ enumerable: true, get: function () { return container_module_1.AsyncContainerModule; } }));
Object.defineProperty(exports, "ContainerModule", ({ enumerable: true, get: function () { return container_module_1.ContainerModule; } }));
var injectable_1 = __webpack_require__(/*! ./annotation/injectable */ "./node_modules/inversify/lib/annotation/injectable.js");
Object.defineProperty(exports, "injectable", ({ enumerable: true, get: function () { return injectable_1.injectable; } }));
var tagged_1 = __webpack_require__(/*! ./annotation/tagged */ "./node_modules/inversify/lib/annotation/tagged.js");
Object.defineProperty(exports, "tagged", ({ enumerable: true, get: function () { return tagged_1.tagged; } }));
var named_1 = __webpack_require__(/*! ./annotation/named */ "./node_modules/inversify/lib/annotation/named.js");
Object.defineProperty(exports, "named", ({ enumerable: true, get: function () { return named_1.named; } }));
var inject_1 = __webpack_require__(/*! ./annotation/inject */ "./node_modules/inversify/lib/annotation/inject.js");
Object.defineProperty(exports, "inject", ({ enumerable: true, get: function () { return inject_1.inject; } }));
Object.defineProperty(exports, "LazyServiceIdentifer", ({ enumerable: true, get: function () { return inject_1.LazyServiceIdentifer; } }));
var optional_1 = __webpack_require__(/*! ./annotation/optional */ "./node_modules/inversify/lib/annotation/optional.js");
Object.defineProperty(exports, "optional", ({ enumerable: true, get: function () { return optional_1.optional; } }));
var unmanaged_1 = __webpack_require__(/*! ./annotation/unmanaged */ "./node_modules/inversify/lib/annotation/unmanaged.js");
Object.defineProperty(exports, "unmanaged", ({ enumerable: true, get: function () { return unmanaged_1.unmanaged; } }));
var multi_inject_1 = __webpack_require__(/*! ./annotation/multi_inject */ "./node_modules/inversify/lib/annotation/multi_inject.js");
Object.defineProperty(exports, "multiInject", ({ enumerable: true, get: function () { return multi_inject_1.multiInject; } }));
var target_name_1 = __webpack_require__(/*! ./annotation/target_name */ "./node_modules/inversify/lib/annotation/target_name.js");
Object.defineProperty(exports, "targetName", ({ enumerable: true, get: function () { return target_name_1.targetName; } }));
var post_construct_1 = __webpack_require__(/*! ./annotation/post_construct */ "./node_modules/inversify/lib/annotation/post_construct.js");
Object.defineProperty(exports, "postConstruct", ({ enumerable: true, get: function () { return post_construct_1.postConstruct; } }));
var metadata_reader_1 = __webpack_require__(/*! ./planning/metadata_reader */ "./node_modules/inversify/lib/planning/metadata_reader.js");
Object.defineProperty(exports, "MetadataReader", ({ enumerable: true, get: function () { return metadata_reader_1.MetadataReader; } }));
var id_1 = __webpack_require__(/*! ./utils/id */ "./node_modules/inversify/lib/utils/id.js");
Object.defineProperty(exports, "id", ({ enumerable: true, get: function () { return id_1.id; } }));
var decorator_utils_1 = __webpack_require__(/*! ./annotation/decorator_utils */ "./node_modules/inversify/lib/annotation/decorator_utils.js");
Object.defineProperty(exports, "decorate", ({ enumerable: true, get: function () { return decorator_utils_1.decorate; } }));
var constraint_helpers_1 = __webpack_require__(/*! ./syntax/constraint_helpers */ "./node_modules/inversify/lib/syntax/constraint_helpers.js");
Object.defineProperty(exports, "traverseAncerstors", ({ enumerable: true, get: function () { return constraint_helpers_1.traverseAncerstors; } }));
Object.defineProperty(exports, "taggedConstraint", ({ enumerable: true, get: function () { return constraint_helpers_1.taggedConstraint; } }));
Object.defineProperty(exports, "namedConstraint", ({ enumerable: true, get: function () { return constraint_helpers_1.namedConstraint; } }));
Object.defineProperty(exports, "typeConstraint", ({ enumerable: true, get: function () { return constraint_helpers_1.typeConstraint; } }));
var serialization_1 = __webpack_require__(/*! ./utils/serialization */ "./node_modules/inversify/lib/utils/serialization.js");
Object.defineProperty(exports, "getServiceIdentifierAsString", ({ enumerable: true, get: function () { return serialization_1.getServiceIdentifierAsString; } }));
var binding_utils_1 = __webpack_require__(/*! ./utils/binding_utils */ "./node_modules/inversify/lib/utils/binding_utils.js");
Object.defineProperty(exports, "multiBindToService", ({ enumerable: true, get: function () { return binding_utils_1.multiBindToService; } }));


/***/ }),

/***/ "./node_modules/inversify/lib/planning/context.js":
/*!********************************************************!*\
  !*** ./node_modules/inversify/lib/planning/context.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Context = void 0;
var id_1 = __webpack_require__(/*! ../utils/id */ "./node_modules/inversify/lib/utils/id.js");
var Context = (function () {
    function Context(container) {
        this.id = id_1.id();
        this.container = container;
    }
    Context.prototype.addPlan = function (plan) {
        this.plan = plan;
    };
    Context.prototype.setCurrentRequest = function (currentRequest) {
        this.currentRequest = currentRequest;
    };
    return Context;
}());
exports.Context = Context;


/***/ }),

/***/ "./node_modules/inversify/lib/planning/metadata.js":
/*!*********************************************************!*\
  !*** ./node_modules/inversify/lib/planning/metadata.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Metadata = void 0;
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "./node_modules/inversify/lib/constants/metadata_keys.js");
var Metadata = (function () {
    function Metadata(key, value) {
        this.key = key;
        this.value = value;
    }
    Metadata.prototype.toString = function () {
        if (this.key === METADATA_KEY.NAMED_TAG) {
            return "named: " + this.value.toString() + " ";
        }
        else {
            return "tagged: { key:" + this.key.toString() + ", value: " + this.value + " }";
        }
    };
    return Metadata;
}());
exports.Metadata = Metadata;


/***/ }),

/***/ "./node_modules/inversify/lib/planning/metadata_reader.js":
/*!****************************************************************!*\
  !*** ./node_modules/inversify/lib/planning/metadata_reader.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MetadataReader = void 0;
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "./node_modules/inversify/lib/constants/metadata_keys.js");
var MetadataReader = (function () {
    function MetadataReader() {
    }
    MetadataReader.prototype.getConstructorMetadata = function (constructorFunc) {
        var compilerGeneratedMetadata = Reflect.getMetadata(METADATA_KEY.PARAM_TYPES, constructorFunc);
        var userGeneratedMetadata = Reflect.getMetadata(METADATA_KEY.TAGGED, constructorFunc);
        return {
            compilerGeneratedMetadata: compilerGeneratedMetadata,
            userGeneratedMetadata: userGeneratedMetadata || {}
        };
    };
    MetadataReader.prototype.getPropertiesMetadata = function (constructorFunc) {
        var userGeneratedMetadata = Reflect.getMetadata(METADATA_KEY.TAGGED_PROP, constructorFunc) || [];
        return userGeneratedMetadata;
    };
    return MetadataReader;
}());
exports.MetadataReader = MetadataReader;


/***/ }),

/***/ "./node_modules/inversify/lib/planning/plan.js":
/*!*****************************************************!*\
  !*** ./node_modules/inversify/lib/planning/plan.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Plan = void 0;
var Plan = (function () {
    function Plan(parentContext, rootRequest) {
        this.parentContext = parentContext;
        this.rootRequest = rootRequest;
    }
    return Plan;
}());
exports.Plan = Plan;


/***/ }),

/***/ "./node_modules/inversify/lib/planning/planner.js":
/*!********************************************************!*\
  !*** ./node_modules/inversify/lib/planning/planner.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getBindingDictionary = exports.createMockRequest = exports.plan = void 0;
var binding_count_1 = __webpack_require__(/*! ../bindings/binding_count */ "./node_modules/inversify/lib/bindings/binding_count.js");
var ERROR_MSGS = __webpack_require__(/*! ../constants/error_msgs */ "./node_modules/inversify/lib/constants/error_msgs.js");
var literal_types_1 = __webpack_require__(/*! ../constants/literal_types */ "./node_modules/inversify/lib/constants/literal_types.js");
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "./node_modules/inversify/lib/constants/metadata_keys.js");
var exceptions_1 = __webpack_require__(/*! ../utils/exceptions */ "./node_modules/inversify/lib/utils/exceptions.js");
var serialization_1 = __webpack_require__(/*! ../utils/serialization */ "./node_modules/inversify/lib/utils/serialization.js");
var context_1 = __webpack_require__(/*! ./context */ "./node_modules/inversify/lib/planning/context.js");
var metadata_1 = __webpack_require__(/*! ./metadata */ "./node_modules/inversify/lib/planning/metadata.js");
var plan_1 = __webpack_require__(/*! ./plan */ "./node_modules/inversify/lib/planning/plan.js");
var reflection_utils_1 = __webpack_require__(/*! ./reflection_utils */ "./node_modules/inversify/lib/planning/reflection_utils.js");
var request_1 = __webpack_require__(/*! ./request */ "./node_modules/inversify/lib/planning/request.js");
var target_1 = __webpack_require__(/*! ./target */ "./node_modules/inversify/lib/planning/target.js");
function getBindingDictionary(cntnr) {
    return cntnr._bindingDictionary;
}
exports.getBindingDictionary = getBindingDictionary;
function _createTarget(isMultiInject, targetType, serviceIdentifier, name, key, value) {
    var metadataKey = isMultiInject ? METADATA_KEY.MULTI_INJECT_TAG : METADATA_KEY.INJECT_TAG;
    var injectMetadata = new metadata_1.Metadata(metadataKey, serviceIdentifier);
    var target = new target_1.Target(targetType, name, serviceIdentifier, injectMetadata);
    if (key !== undefined) {
        var tagMetadata = new metadata_1.Metadata(key, value);
        target.metadata.push(tagMetadata);
    }
    return target;
}
function _getActiveBindings(metadataReader, avoidConstraints, context, parentRequest, target) {
    var bindings = getBindings(context.container, target.serviceIdentifier);
    var activeBindings = [];
    if (bindings.length === binding_count_1.BindingCount.NoBindingsAvailable &&
        context.container.options.autoBindInjectable &&
        typeof target.serviceIdentifier === "function" &&
        metadataReader.getConstructorMetadata(target.serviceIdentifier).compilerGeneratedMetadata) {
        context.container.bind(target.serviceIdentifier).toSelf();
        bindings = getBindings(context.container, target.serviceIdentifier);
    }
    if (!avoidConstraints) {
        activeBindings = bindings.filter(function (binding) {
            var request = new request_1.Request(binding.serviceIdentifier, context, parentRequest, binding, target);
            return binding.constraint(request);
        });
    }
    else {
        activeBindings = bindings;
    }
    _validateActiveBindingCount(target.serviceIdentifier, activeBindings, target, context.container);
    return activeBindings;
}
function _validateActiveBindingCount(serviceIdentifier, bindings, target, container) {
    switch (bindings.length) {
        case binding_count_1.BindingCount.NoBindingsAvailable:
            if (target.isOptional()) {
                return bindings;
            }
            else {
                var serviceIdentifierString = serialization_1.getServiceIdentifierAsString(serviceIdentifier);
                var msg = ERROR_MSGS.NOT_REGISTERED;
                msg += serialization_1.listMetadataForTarget(serviceIdentifierString, target);
                msg += serialization_1.listRegisteredBindingsForServiceIdentifier(container, serviceIdentifierString, getBindings);
                throw new Error(msg);
            }
        case binding_count_1.BindingCount.OnlyOneBindingAvailable:
            if (!target.isArray()) {
                return bindings;
            }
        case binding_count_1.BindingCount.MultipleBindingsAvailable:
        default:
            if (!target.isArray()) {
                var serviceIdentifierString = serialization_1.getServiceIdentifierAsString(serviceIdentifier);
                var msg = ERROR_MSGS.AMBIGUOUS_MATCH + " " + serviceIdentifierString;
                msg += serialization_1.listRegisteredBindingsForServiceIdentifier(container, serviceIdentifierString, getBindings);
                throw new Error(msg);
            }
            else {
                return bindings;
            }
    }
}
function _createSubRequests(metadataReader, avoidConstraints, serviceIdentifier, context, parentRequest, target) {
    var activeBindings;
    var childRequest;
    if (parentRequest === null) {
        activeBindings = _getActiveBindings(metadataReader, avoidConstraints, context, null, target);
        childRequest = new request_1.Request(serviceIdentifier, context, null, activeBindings, target);
        var thePlan = new plan_1.Plan(context, childRequest);
        context.addPlan(thePlan);
    }
    else {
        activeBindings = _getActiveBindings(metadataReader, avoidConstraints, context, parentRequest, target);
        childRequest = parentRequest.addChildRequest(target.serviceIdentifier, activeBindings, target);
    }
    activeBindings.forEach(function (binding) {
        var subChildRequest = null;
        if (target.isArray()) {
            subChildRequest = childRequest.addChildRequest(binding.serviceIdentifier, binding, target);
        }
        else {
            if (binding.cache) {
                return;
            }
            subChildRequest = childRequest;
        }
        if (binding.type === literal_types_1.BindingTypeEnum.Instance && binding.implementationType !== null) {
            var dependencies = reflection_utils_1.getDependencies(metadataReader, binding.implementationType);
            if (!context.container.options.skipBaseClassChecks) {
                var baseClassDependencyCount = reflection_utils_1.getBaseClassDependencyCount(metadataReader, binding.implementationType);
                if (dependencies.length < baseClassDependencyCount) {
                    var error = ERROR_MSGS.ARGUMENTS_LENGTH_MISMATCH(reflection_utils_1.getFunctionName(binding.implementationType));
                    throw new Error(error);
                }
            }
            dependencies.forEach(function (dependency) {
                _createSubRequests(metadataReader, false, dependency.serviceIdentifier, context, subChildRequest, dependency);
            });
        }
    });
}
function getBindings(container, serviceIdentifier) {
    var bindings = [];
    var bindingDictionary = getBindingDictionary(container);
    if (bindingDictionary.hasKey(serviceIdentifier)) {
        bindings = bindingDictionary.get(serviceIdentifier);
    }
    else if (container.parent !== null) {
        bindings = getBindings(container.parent, serviceIdentifier);
    }
    return bindings;
}
function plan(metadataReader, container, isMultiInject, targetType, serviceIdentifier, key, value, avoidConstraints) {
    if (avoidConstraints === void 0) { avoidConstraints = false; }
    var context = new context_1.Context(container);
    var target = _createTarget(isMultiInject, targetType, serviceIdentifier, "", key, value);
    try {
        _createSubRequests(metadataReader, avoidConstraints, serviceIdentifier, context, null, target);
        return context;
    }
    catch (error) {
        if (exceptions_1.isStackOverflowExeption(error)) {
            if (context.plan) {
                serialization_1.circularDependencyToException(context.plan.rootRequest);
            }
        }
        throw error;
    }
}
exports.plan = plan;
function createMockRequest(container, serviceIdentifier, key, value) {
    var target = new target_1.Target(literal_types_1.TargetTypeEnum.Variable, "", serviceIdentifier, new metadata_1.Metadata(key, value));
    var context = new context_1.Context(container);
    var request = new request_1.Request(serviceIdentifier, context, null, [], target);
    return request;
}
exports.createMockRequest = createMockRequest;


/***/ }),

/***/ "./node_modules/inversify/lib/planning/queryable_string.js":
/*!*****************************************************************!*\
  !*** ./node_modules/inversify/lib/planning/queryable_string.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.QueryableString = void 0;
var QueryableString = (function () {
    function QueryableString(str) {
        this.str = str;
    }
    QueryableString.prototype.startsWith = function (searchString) {
        return this.str.indexOf(searchString) === 0;
    };
    QueryableString.prototype.endsWith = function (searchString) {
        var reverseString = "";
        var reverseSearchString = searchString.split("").reverse().join("");
        reverseString = this.str.split("").reverse().join("");
        return this.startsWith.call({ str: reverseString }, reverseSearchString);
    };
    QueryableString.prototype.contains = function (searchString) {
        return (this.str.indexOf(searchString) !== -1);
    };
    QueryableString.prototype.equals = function (compareString) {
        return this.str === compareString;
    };
    QueryableString.prototype.value = function () {
        return this.str;
    };
    return QueryableString;
}());
exports.QueryableString = QueryableString;


/***/ }),

/***/ "./node_modules/inversify/lib/planning/reflection_utils.js":
/*!*****************************************************************!*\
  !*** ./node_modules/inversify/lib/planning/reflection_utils.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getFunctionName = exports.getBaseClassDependencyCount = exports.getDependencies = void 0;
var inject_1 = __webpack_require__(/*! ../annotation/inject */ "./node_modules/inversify/lib/annotation/inject.js");
var ERROR_MSGS = __webpack_require__(/*! ../constants/error_msgs */ "./node_modules/inversify/lib/constants/error_msgs.js");
var literal_types_1 = __webpack_require__(/*! ../constants/literal_types */ "./node_modules/inversify/lib/constants/literal_types.js");
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "./node_modules/inversify/lib/constants/metadata_keys.js");
var serialization_1 = __webpack_require__(/*! ../utils/serialization */ "./node_modules/inversify/lib/utils/serialization.js");
Object.defineProperty(exports, "getFunctionName", ({ enumerable: true, get: function () { return serialization_1.getFunctionName; } }));
var target_1 = __webpack_require__(/*! ./target */ "./node_modules/inversify/lib/planning/target.js");
function getDependencies(metadataReader, func) {
    var constructorName = serialization_1.getFunctionName(func);
    var targets = getTargets(metadataReader, constructorName, func, false);
    return targets;
}
exports.getDependencies = getDependencies;
function getTargets(metadataReader, constructorName, func, isBaseClass) {
    var metadata = metadataReader.getConstructorMetadata(func);
    var serviceIdentifiers = metadata.compilerGeneratedMetadata;
    if (serviceIdentifiers === undefined) {
        var msg = ERROR_MSGS.MISSING_INJECTABLE_ANNOTATION + " " + constructorName + ".";
        throw new Error(msg);
    }
    var constructorArgsMetadata = metadata.userGeneratedMetadata;
    var keys = Object.keys(constructorArgsMetadata);
    var hasUserDeclaredUnknownInjections = (func.length === 0 && keys.length > 0);
    var hasOptionalParameters = keys.length > func.length;
    var iterations = (hasUserDeclaredUnknownInjections || hasOptionalParameters) ? keys.length : func.length;
    var constructorTargets = getConstructorArgsAsTargets(isBaseClass, constructorName, serviceIdentifiers, constructorArgsMetadata, iterations);
    var propertyTargets = getClassPropsAsTargets(metadataReader, func);
    var targets = __spreadArray(__spreadArray([], constructorTargets), propertyTargets);
    return targets;
}
function getConstructorArgsAsTarget(index, isBaseClass, constructorName, serviceIdentifiers, constructorArgsMetadata) {
    var targetMetadata = constructorArgsMetadata[index.toString()] || [];
    var metadata = formatTargetMetadata(targetMetadata);
    var isManaged = metadata.unmanaged !== true;
    var serviceIdentifier = serviceIdentifiers[index];
    var injectIdentifier = (metadata.inject || metadata.multiInject);
    serviceIdentifier = (injectIdentifier) ? (injectIdentifier) : serviceIdentifier;
    if (serviceIdentifier instanceof inject_1.LazyServiceIdentifer) {
        serviceIdentifier = serviceIdentifier.unwrap();
    }
    if (isManaged) {
        var isObject = serviceIdentifier === Object;
        var isFunction = serviceIdentifier === Function;
        var isUndefined = serviceIdentifier === undefined;
        var isUnknownType = (isObject || isFunction || isUndefined);
        if (!isBaseClass && isUnknownType) {
            var msg = ERROR_MSGS.MISSING_INJECT_ANNOTATION + " argument " + index + " in class " + constructorName + ".";
            throw new Error(msg);
        }
        var target = new target_1.Target(literal_types_1.TargetTypeEnum.ConstructorArgument, metadata.targetName, serviceIdentifier);
        target.metadata = targetMetadata;
        return target;
    }
    return null;
}
function getConstructorArgsAsTargets(isBaseClass, constructorName, serviceIdentifiers, constructorArgsMetadata, iterations) {
    var targets = [];
    for (var i = 0; i < iterations; i++) {
        var index = i;
        var target = getConstructorArgsAsTarget(index, isBaseClass, constructorName, serviceIdentifiers, constructorArgsMetadata);
        if (target !== null) {
            targets.push(target);
        }
    }
    return targets;
}
function getClassPropsAsTargets(metadataReader, constructorFunc) {
    var classPropsMetadata = metadataReader.getPropertiesMetadata(constructorFunc);
    var targets = [];
    var keys = Object.keys(classPropsMetadata);
    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
        var key = keys_1[_i];
        var targetMetadata = classPropsMetadata[key];
        var metadata = formatTargetMetadata(classPropsMetadata[key]);
        var targetName = metadata.targetName || key;
        var serviceIdentifier = (metadata.inject || metadata.multiInject);
        var target = new target_1.Target(literal_types_1.TargetTypeEnum.ClassProperty, targetName, serviceIdentifier);
        target.metadata = targetMetadata;
        targets.push(target);
    }
    var baseConstructor = Object.getPrototypeOf(constructorFunc.prototype).constructor;
    if (baseConstructor !== Object) {
        var baseTargets = getClassPropsAsTargets(metadataReader, baseConstructor);
        targets = __spreadArray(__spreadArray([], targets), baseTargets);
    }
    return targets;
}
function getBaseClassDependencyCount(metadataReader, func) {
    var baseConstructor = Object.getPrototypeOf(func.prototype).constructor;
    if (baseConstructor !== Object) {
        var baseConstructorName = serialization_1.getFunctionName(baseConstructor);
        var targets = getTargets(metadataReader, baseConstructorName, baseConstructor, true);
        var metadata = targets.map(function (t) {
            return t.metadata.filter(function (m) {
                return m.key === METADATA_KEY.UNMANAGED_TAG;
            });
        });
        var unmanagedCount = [].concat.apply([], metadata).length;
        var dependencyCount = targets.length - unmanagedCount;
        if (dependencyCount > 0) {
            return dependencyCount;
        }
        else {
            return getBaseClassDependencyCount(metadataReader, baseConstructor);
        }
    }
    else {
        return 0;
    }
}
exports.getBaseClassDependencyCount = getBaseClassDependencyCount;
function formatTargetMetadata(targetMetadata) {
    var targetMetadataMap = {};
    targetMetadata.forEach(function (m) {
        targetMetadataMap[m.key.toString()] = m.value;
    });
    return {
        inject: targetMetadataMap[METADATA_KEY.INJECT_TAG],
        multiInject: targetMetadataMap[METADATA_KEY.MULTI_INJECT_TAG],
        targetName: targetMetadataMap[METADATA_KEY.NAME_TAG],
        unmanaged: targetMetadataMap[METADATA_KEY.UNMANAGED_TAG]
    };
}


/***/ }),

/***/ "./node_modules/inversify/lib/planning/request.js":
/*!********************************************************!*\
  !*** ./node_modules/inversify/lib/planning/request.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Request = void 0;
var id_1 = __webpack_require__(/*! ../utils/id */ "./node_modules/inversify/lib/utils/id.js");
var Request = (function () {
    function Request(serviceIdentifier, parentContext, parentRequest, bindings, target) {
        this.id = id_1.id();
        this.serviceIdentifier = serviceIdentifier;
        this.parentContext = parentContext;
        this.parentRequest = parentRequest;
        this.target = target;
        this.childRequests = [];
        this.bindings = (Array.isArray(bindings) ? bindings : [bindings]);
        this.requestScope = parentRequest === null
            ? new Map()
            : null;
    }
    Request.prototype.addChildRequest = function (serviceIdentifier, bindings, target) {
        var child = new Request(serviceIdentifier, this.parentContext, this, bindings, target);
        this.childRequests.push(child);
        return child;
    };
    return Request;
}());
exports.Request = Request;


/***/ }),

/***/ "./node_modules/inversify/lib/planning/target.js":
/*!*******************************************************!*\
  !*** ./node_modules/inversify/lib/planning/target.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Target = void 0;
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "./node_modules/inversify/lib/constants/metadata_keys.js");
var id_1 = __webpack_require__(/*! ../utils/id */ "./node_modules/inversify/lib/utils/id.js");
var metadata_1 = __webpack_require__(/*! ./metadata */ "./node_modules/inversify/lib/planning/metadata.js");
var queryable_string_1 = __webpack_require__(/*! ./queryable_string */ "./node_modules/inversify/lib/planning/queryable_string.js");
var Target = (function () {
    function Target(type, name, serviceIdentifier, namedOrTagged) {
        this.id = id_1.id();
        this.type = type;
        this.serviceIdentifier = serviceIdentifier;
        this.name = new queryable_string_1.QueryableString(name || "");
        this.metadata = new Array();
        var metadataItem = null;
        if (typeof namedOrTagged === "string") {
            metadataItem = new metadata_1.Metadata(METADATA_KEY.NAMED_TAG, namedOrTagged);
        }
        else if (namedOrTagged instanceof metadata_1.Metadata) {
            metadataItem = namedOrTagged;
        }
        if (metadataItem !== null) {
            this.metadata.push(metadataItem);
        }
    }
    Target.prototype.hasTag = function (key) {
        for (var _i = 0, _a = this.metadata; _i < _a.length; _i++) {
            var m = _a[_i];
            if (m.key === key) {
                return true;
            }
        }
        return false;
    };
    Target.prototype.isArray = function () {
        return this.hasTag(METADATA_KEY.MULTI_INJECT_TAG);
    };
    Target.prototype.matchesArray = function (name) {
        return this.matchesTag(METADATA_KEY.MULTI_INJECT_TAG)(name);
    };
    Target.prototype.isNamed = function () {
        return this.hasTag(METADATA_KEY.NAMED_TAG);
    };
    Target.prototype.isTagged = function () {
        return this.metadata.some(function (metadata) { return METADATA_KEY.NON_CUSTOM_TAG_KEYS.every(function (key) { return metadata.key !== key; }); });
    };
    Target.prototype.isOptional = function () {
        return this.matchesTag(METADATA_KEY.OPTIONAL_TAG)(true);
    };
    Target.prototype.getNamedTag = function () {
        if (this.isNamed()) {
            return this.metadata.filter(function (m) { return m.key === METADATA_KEY.NAMED_TAG; })[0];
        }
        return null;
    };
    Target.prototype.getCustomTags = function () {
        if (this.isTagged()) {
            return this.metadata.filter(function (metadata) { return METADATA_KEY.NON_CUSTOM_TAG_KEYS.every(function (key) { return metadata.key !== key; }); });
        }
        else {
            return null;
        }
    };
    Target.prototype.matchesNamedTag = function (name) {
        return this.matchesTag(METADATA_KEY.NAMED_TAG)(name);
    };
    Target.prototype.matchesTag = function (key) {
        var _this = this;
        return function (value) {
            for (var _i = 0, _a = _this.metadata; _i < _a.length; _i++) {
                var m = _a[_i];
                if (m.key === key && m.value === value) {
                    return true;
                }
            }
            return false;
        };
    };
    return Target;
}());
exports.Target = Target;


/***/ }),

/***/ "./node_modules/inversify/lib/resolution/instantiation.js":
/*!****************************************************************!*\
  !*** ./node_modules/inversify/lib/resolution/instantiation.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.resolveInstance = void 0;
var error_msgs_1 = __webpack_require__(/*! ../constants/error_msgs */ "./node_modules/inversify/lib/constants/error_msgs.js");
var literal_types_1 = __webpack_require__(/*! ../constants/literal_types */ "./node_modules/inversify/lib/constants/literal_types.js");
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "./node_modules/inversify/lib/constants/metadata_keys.js");
function _injectProperties(instance, childRequests, resolveRequest) {
    var propertyInjectionsRequests = childRequests.filter(function (childRequest) {
        return (childRequest.target !== null &&
            childRequest.target.type === literal_types_1.TargetTypeEnum.ClassProperty);
    });
    var propertyInjections = propertyInjectionsRequests.map(resolveRequest);
    propertyInjectionsRequests.forEach(function (r, index) {
        var propertyName = "";
        propertyName = r.target.name.value();
        var injection = propertyInjections[index];
        instance[propertyName] = injection;
    });
    return instance;
}
function _createInstance(Func, injections) {
    return new (Func.bind.apply(Func, __spreadArray([void 0], injections)))();
}
function _postConstruct(constr, result) {
    if (Reflect.hasMetadata(METADATA_KEY.POST_CONSTRUCT, constr)) {
        var data = Reflect.getMetadata(METADATA_KEY.POST_CONSTRUCT, constr);
        try {
            result[data.value]();
        }
        catch (e) {
            throw new Error(error_msgs_1.POST_CONSTRUCT_ERROR(constr.name, e.message));
        }
    }
}
function resolveInstance(constr, childRequests, resolveRequest) {
    var result = null;
    if (childRequests.length > 0) {
        var constructorInjectionsRequests = childRequests.filter(function (childRequest) {
            return (childRequest.target !== null && childRequest.target.type === literal_types_1.TargetTypeEnum.ConstructorArgument);
        });
        var constructorInjections = constructorInjectionsRequests.map(resolveRequest);
        result = _createInstance(constr, constructorInjections);
        result = _injectProperties(result, childRequests, resolveRequest);
    }
    else {
        result = new constr();
    }
    _postConstruct(constr, result);
    return result;
}
exports.resolveInstance = resolveInstance;


/***/ }),

/***/ "./node_modules/inversify/lib/resolution/resolver.js":
/*!***********************************************************!*\
  !*** ./node_modules/inversify/lib/resolution/resolver.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.resolve = void 0;
var ERROR_MSGS = __webpack_require__(/*! ../constants/error_msgs */ "./node_modules/inversify/lib/constants/error_msgs.js");
var literal_types_1 = __webpack_require__(/*! ../constants/literal_types */ "./node_modules/inversify/lib/constants/literal_types.js");
var exceptions_1 = __webpack_require__(/*! ../utils/exceptions */ "./node_modules/inversify/lib/utils/exceptions.js");
var serialization_1 = __webpack_require__(/*! ../utils/serialization */ "./node_modules/inversify/lib/utils/serialization.js");
var instantiation_1 = __webpack_require__(/*! ./instantiation */ "./node_modules/inversify/lib/resolution/instantiation.js");
var invokeFactory = function (factoryType, serviceIdentifier, fn) {
    try {
        return fn();
    }
    catch (error) {
        if (exceptions_1.isStackOverflowExeption(error)) {
            throw new Error(ERROR_MSGS.CIRCULAR_DEPENDENCY_IN_FACTORY(factoryType, serviceIdentifier.toString()));
        }
        else {
            throw error;
        }
    }
};
var _resolveRequest = function (requestScope) {
    return function (request) {
        request.parentContext.setCurrentRequest(request);
        var bindings = request.bindings;
        var childRequests = request.childRequests;
        var targetIsAnArray = request.target && request.target.isArray();
        var targetParentIsNotAnArray = !request.parentRequest ||
            !request.parentRequest.target ||
            !request.target ||
            !request.parentRequest.target.matchesArray(request.target.serviceIdentifier);
        if (targetIsAnArray && targetParentIsNotAnArray) {
            return childRequests.map(function (childRequest) {
                var _f = _resolveRequest(requestScope);
                return _f(childRequest);
            });
        }
        else {
            var result = null;
            if (request.target.isOptional() && bindings.length === 0) {
                return undefined;
            }
            var binding_1 = bindings[0];
            var isSingleton = binding_1.scope === literal_types_1.BindingScopeEnum.Singleton;
            var isRequestSingleton = binding_1.scope === literal_types_1.BindingScopeEnum.Request;
            if (isSingleton && binding_1.activated) {
                return binding_1.cache;
            }
            if (isRequestSingleton &&
                requestScope !== null &&
                requestScope.has(binding_1.id)) {
                return requestScope.get(binding_1.id);
            }
            if (binding_1.type === literal_types_1.BindingTypeEnum.ConstantValue) {
                result = binding_1.cache;
                binding_1.activated = true;
            }
            else if (binding_1.type === literal_types_1.BindingTypeEnum.Function) {
                result = binding_1.cache;
                binding_1.activated = true;
            }
            else if (binding_1.type === literal_types_1.BindingTypeEnum.Constructor) {
                result = binding_1.implementationType;
            }
            else if (binding_1.type === literal_types_1.BindingTypeEnum.DynamicValue && binding_1.dynamicValue !== null) {
                result = invokeFactory("toDynamicValue", binding_1.serviceIdentifier, function () { return binding_1.dynamicValue(request.parentContext); });
            }
            else if (binding_1.type === literal_types_1.BindingTypeEnum.Factory && binding_1.factory !== null) {
                result = invokeFactory("toFactory", binding_1.serviceIdentifier, function () { return binding_1.factory(request.parentContext); });
            }
            else if (binding_1.type === literal_types_1.BindingTypeEnum.Provider && binding_1.provider !== null) {
                result = invokeFactory("toProvider", binding_1.serviceIdentifier, function () { return binding_1.provider(request.parentContext); });
            }
            else if (binding_1.type === literal_types_1.BindingTypeEnum.Instance && binding_1.implementationType !== null) {
                result = instantiation_1.resolveInstance(binding_1.implementationType, childRequests, _resolveRequest(requestScope));
            }
            else {
                var serviceIdentifier = serialization_1.getServiceIdentifierAsString(request.serviceIdentifier);
                throw new Error(ERROR_MSGS.INVALID_BINDING_TYPE + " " + serviceIdentifier);
            }
            if (typeof binding_1.onActivation === "function") {
                result = binding_1.onActivation(request.parentContext, result);
            }
            if (isSingleton) {
                binding_1.cache = result;
                binding_1.activated = true;
            }
            if (isRequestSingleton &&
                requestScope !== null &&
                !requestScope.has(binding_1.id)) {
                requestScope.set(binding_1.id, result);
            }
            return result;
        }
    };
};
function resolve(context) {
    var _f = _resolveRequest(context.plan.rootRequest.requestScope);
    return _f(context.plan.rootRequest);
}
exports.resolve = resolve;


/***/ }),

/***/ "./node_modules/inversify/lib/syntax/binding_in_syntax.js":
/*!****************************************************************!*\
  !*** ./node_modules/inversify/lib/syntax/binding_in_syntax.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BindingInSyntax = void 0;
var literal_types_1 = __webpack_require__(/*! ../constants/literal_types */ "./node_modules/inversify/lib/constants/literal_types.js");
var binding_when_on_syntax_1 = __webpack_require__(/*! ./binding_when_on_syntax */ "./node_modules/inversify/lib/syntax/binding_when_on_syntax.js");
var BindingInSyntax = (function () {
    function BindingInSyntax(binding) {
        this._binding = binding;
    }
    BindingInSyntax.prototype.inRequestScope = function () {
        this._binding.scope = literal_types_1.BindingScopeEnum.Request;
        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
    };
    BindingInSyntax.prototype.inSingletonScope = function () {
        this._binding.scope = literal_types_1.BindingScopeEnum.Singleton;
        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
    };
    BindingInSyntax.prototype.inTransientScope = function () {
        this._binding.scope = literal_types_1.BindingScopeEnum.Transient;
        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
    };
    return BindingInSyntax;
}());
exports.BindingInSyntax = BindingInSyntax;


/***/ }),

/***/ "./node_modules/inversify/lib/syntax/binding_in_when_on_syntax.js":
/*!************************************************************************!*\
  !*** ./node_modules/inversify/lib/syntax/binding_in_when_on_syntax.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BindingInWhenOnSyntax = void 0;
var binding_in_syntax_1 = __webpack_require__(/*! ./binding_in_syntax */ "./node_modules/inversify/lib/syntax/binding_in_syntax.js");
var binding_on_syntax_1 = __webpack_require__(/*! ./binding_on_syntax */ "./node_modules/inversify/lib/syntax/binding_on_syntax.js");
var binding_when_syntax_1 = __webpack_require__(/*! ./binding_when_syntax */ "./node_modules/inversify/lib/syntax/binding_when_syntax.js");
var BindingInWhenOnSyntax = (function () {
    function BindingInWhenOnSyntax(binding) {
        this._binding = binding;
        this._bindingWhenSyntax = new binding_when_syntax_1.BindingWhenSyntax(this._binding);
        this._bindingOnSyntax = new binding_on_syntax_1.BindingOnSyntax(this._binding);
        this._bindingInSyntax = new binding_in_syntax_1.BindingInSyntax(binding);
    }
    BindingInWhenOnSyntax.prototype.inRequestScope = function () {
        return this._bindingInSyntax.inRequestScope();
    };
    BindingInWhenOnSyntax.prototype.inSingletonScope = function () {
        return this._bindingInSyntax.inSingletonScope();
    };
    BindingInWhenOnSyntax.prototype.inTransientScope = function () {
        return this._bindingInSyntax.inTransientScope();
    };
    BindingInWhenOnSyntax.prototype.when = function (constraint) {
        return this._bindingWhenSyntax.when(constraint);
    };
    BindingInWhenOnSyntax.prototype.whenTargetNamed = function (name) {
        return this._bindingWhenSyntax.whenTargetNamed(name);
    };
    BindingInWhenOnSyntax.prototype.whenTargetIsDefault = function () {
        return this._bindingWhenSyntax.whenTargetIsDefault();
    };
    BindingInWhenOnSyntax.prototype.whenTargetTagged = function (tag, value) {
        return this._bindingWhenSyntax.whenTargetTagged(tag, value);
    };
    BindingInWhenOnSyntax.prototype.whenInjectedInto = function (parent) {
        return this._bindingWhenSyntax.whenInjectedInto(parent);
    };
    BindingInWhenOnSyntax.prototype.whenParentNamed = function (name) {
        return this._bindingWhenSyntax.whenParentNamed(name);
    };
    BindingInWhenOnSyntax.prototype.whenParentTagged = function (tag, value) {
        return this._bindingWhenSyntax.whenParentTagged(tag, value);
    };
    BindingInWhenOnSyntax.prototype.whenAnyAncestorIs = function (ancestor) {
        return this._bindingWhenSyntax.whenAnyAncestorIs(ancestor);
    };
    BindingInWhenOnSyntax.prototype.whenNoAncestorIs = function (ancestor) {
        return this._bindingWhenSyntax.whenNoAncestorIs(ancestor);
    };
    BindingInWhenOnSyntax.prototype.whenAnyAncestorNamed = function (name) {
        return this._bindingWhenSyntax.whenAnyAncestorNamed(name);
    };
    BindingInWhenOnSyntax.prototype.whenAnyAncestorTagged = function (tag, value) {
        return this._bindingWhenSyntax.whenAnyAncestorTagged(tag, value);
    };
    BindingInWhenOnSyntax.prototype.whenNoAncestorNamed = function (name) {
        return this._bindingWhenSyntax.whenNoAncestorNamed(name);
    };
    BindingInWhenOnSyntax.prototype.whenNoAncestorTagged = function (tag, value) {
        return this._bindingWhenSyntax.whenNoAncestorTagged(tag, value);
    };
    BindingInWhenOnSyntax.prototype.whenAnyAncestorMatches = function (constraint) {
        return this._bindingWhenSyntax.whenAnyAncestorMatches(constraint);
    };
    BindingInWhenOnSyntax.prototype.whenNoAncestorMatches = function (constraint) {
        return this._bindingWhenSyntax.whenNoAncestorMatches(constraint);
    };
    BindingInWhenOnSyntax.prototype.onActivation = function (handler) {
        return this._bindingOnSyntax.onActivation(handler);
    };
    return BindingInWhenOnSyntax;
}());
exports.BindingInWhenOnSyntax = BindingInWhenOnSyntax;


/***/ }),

/***/ "./node_modules/inversify/lib/syntax/binding_on_syntax.js":
/*!****************************************************************!*\
  !*** ./node_modules/inversify/lib/syntax/binding_on_syntax.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BindingOnSyntax = void 0;
var binding_when_syntax_1 = __webpack_require__(/*! ./binding_when_syntax */ "./node_modules/inversify/lib/syntax/binding_when_syntax.js");
var BindingOnSyntax = (function () {
    function BindingOnSyntax(binding) {
        this._binding = binding;
    }
    BindingOnSyntax.prototype.onActivation = function (handler) {
        this._binding.onActivation = handler;
        return new binding_when_syntax_1.BindingWhenSyntax(this._binding);
    };
    return BindingOnSyntax;
}());
exports.BindingOnSyntax = BindingOnSyntax;


/***/ }),

/***/ "./node_modules/inversify/lib/syntax/binding_to_syntax.js":
/*!****************************************************************!*\
  !*** ./node_modules/inversify/lib/syntax/binding_to_syntax.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BindingToSyntax = void 0;
var ERROR_MSGS = __webpack_require__(/*! ../constants/error_msgs */ "./node_modules/inversify/lib/constants/error_msgs.js");
var literal_types_1 = __webpack_require__(/*! ../constants/literal_types */ "./node_modules/inversify/lib/constants/literal_types.js");
var binding_in_when_on_syntax_1 = __webpack_require__(/*! ./binding_in_when_on_syntax */ "./node_modules/inversify/lib/syntax/binding_in_when_on_syntax.js");
var binding_when_on_syntax_1 = __webpack_require__(/*! ./binding_when_on_syntax */ "./node_modules/inversify/lib/syntax/binding_when_on_syntax.js");
var BindingToSyntax = (function () {
    function BindingToSyntax(binding) {
        this._binding = binding;
    }
    BindingToSyntax.prototype.to = function (constructor) {
        this._binding.type = literal_types_1.BindingTypeEnum.Instance;
        this._binding.implementationType = constructor;
        return new binding_in_when_on_syntax_1.BindingInWhenOnSyntax(this._binding);
    };
    BindingToSyntax.prototype.toSelf = function () {
        if (typeof this._binding.serviceIdentifier !== "function") {
            throw new Error("" + ERROR_MSGS.INVALID_TO_SELF_VALUE);
        }
        var self = this._binding.serviceIdentifier;
        return this.to(self);
    };
    BindingToSyntax.prototype.toConstantValue = function (value) {
        this._binding.type = literal_types_1.BindingTypeEnum.ConstantValue;
        this._binding.cache = value;
        this._binding.dynamicValue = null;
        this._binding.implementationType = null;
        this._binding.scope = literal_types_1.BindingScopeEnum.Singleton;
        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
    };
    BindingToSyntax.prototype.toDynamicValue = function (func) {
        this._binding.type = literal_types_1.BindingTypeEnum.DynamicValue;
        this._binding.cache = null;
        this._binding.dynamicValue = func;
        this._binding.implementationType = null;
        return new binding_in_when_on_syntax_1.BindingInWhenOnSyntax(this._binding);
    };
    BindingToSyntax.prototype.toConstructor = function (constructor) {
        this._binding.type = literal_types_1.BindingTypeEnum.Constructor;
        this._binding.implementationType = constructor;
        this._binding.scope = literal_types_1.BindingScopeEnum.Singleton;
        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
    };
    BindingToSyntax.prototype.toFactory = function (factory) {
        this._binding.type = literal_types_1.BindingTypeEnum.Factory;
        this._binding.factory = factory;
        this._binding.scope = literal_types_1.BindingScopeEnum.Singleton;
        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
    };
    BindingToSyntax.prototype.toFunction = function (func) {
        if (typeof func !== "function") {
            throw new Error(ERROR_MSGS.INVALID_FUNCTION_BINDING);
        }
        var bindingWhenOnSyntax = this.toConstantValue(func);
        this._binding.type = literal_types_1.BindingTypeEnum.Function;
        this._binding.scope = literal_types_1.BindingScopeEnum.Singleton;
        return bindingWhenOnSyntax;
    };
    BindingToSyntax.prototype.toAutoFactory = function (serviceIdentifier) {
        this._binding.type = literal_types_1.BindingTypeEnum.Factory;
        this._binding.factory = function (context) {
            var autofactory = function () { return context.container.get(serviceIdentifier); };
            return autofactory;
        };
        this._binding.scope = literal_types_1.BindingScopeEnum.Singleton;
        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
    };
    BindingToSyntax.prototype.toProvider = function (provider) {
        this._binding.type = literal_types_1.BindingTypeEnum.Provider;
        this._binding.provider = provider;
        this._binding.scope = literal_types_1.BindingScopeEnum.Singleton;
        return new binding_when_on_syntax_1.BindingWhenOnSyntax(this._binding);
    };
    BindingToSyntax.prototype.toService = function (service) {
        this.toDynamicValue(function (context) { return context.container.get(service); });
    };
    return BindingToSyntax;
}());
exports.BindingToSyntax = BindingToSyntax;


/***/ }),

/***/ "./node_modules/inversify/lib/syntax/binding_when_on_syntax.js":
/*!*********************************************************************!*\
  !*** ./node_modules/inversify/lib/syntax/binding_when_on_syntax.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BindingWhenOnSyntax = void 0;
var binding_on_syntax_1 = __webpack_require__(/*! ./binding_on_syntax */ "./node_modules/inversify/lib/syntax/binding_on_syntax.js");
var binding_when_syntax_1 = __webpack_require__(/*! ./binding_when_syntax */ "./node_modules/inversify/lib/syntax/binding_when_syntax.js");
var BindingWhenOnSyntax = (function () {
    function BindingWhenOnSyntax(binding) {
        this._binding = binding;
        this._bindingWhenSyntax = new binding_when_syntax_1.BindingWhenSyntax(this._binding);
        this._bindingOnSyntax = new binding_on_syntax_1.BindingOnSyntax(this._binding);
    }
    BindingWhenOnSyntax.prototype.when = function (constraint) {
        return this._bindingWhenSyntax.when(constraint);
    };
    BindingWhenOnSyntax.prototype.whenTargetNamed = function (name) {
        return this._bindingWhenSyntax.whenTargetNamed(name);
    };
    BindingWhenOnSyntax.prototype.whenTargetIsDefault = function () {
        return this._bindingWhenSyntax.whenTargetIsDefault();
    };
    BindingWhenOnSyntax.prototype.whenTargetTagged = function (tag, value) {
        return this._bindingWhenSyntax.whenTargetTagged(tag, value);
    };
    BindingWhenOnSyntax.prototype.whenInjectedInto = function (parent) {
        return this._bindingWhenSyntax.whenInjectedInto(parent);
    };
    BindingWhenOnSyntax.prototype.whenParentNamed = function (name) {
        return this._bindingWhenSyntax.whenParentNamed(name);
    };
    BindingWhenOnSyntax.prototype.whenParentTagged = function (tag, value) {
        return this._bindingWhenSyntax.whenParentTagged(tag, value);
    };
    BindingWhenOnSyntax.prototype.whenAnyAncestorIs = function (ancestor) {
        return this._bindingWhenSyntax.whenAnyAncestorIs(ancestor);
    };
    BindingWhenOnSyntax.prototype.whenNoAncestorIs = function (ancestor) {
        return this._bindingWhenSyntax.whenNoAncestorIs(ancestor);
    };
    BindingWhenOnSyntax.prototype.whenAnyAncestorNamed = function (name) {
        return this._bindingWhenSyntax.whenAnyAncestorNamed(name);
    };
    BindingWhenOnSyntax.prototype.whenAnyAncestorTagged = function (tag, value) {
        return this._bindingWhenSyntax.whenAnyAncestorTagged(tag, value);
    };
    BindingWhenOnSyntax.prototype.whenNoAncestorNamed = function (name) {
        return this._bindingWhenSyntax.whenNoAncestorNamed(name);
    };
    BindingWhenOnSyntax.prototype.whenNoAncestorTagged = function (tag, value) {
        return this._bindingWhenSyntax.whenNoAncestorTagged(tag, value);
    };
    BindingWhenOnSyntax.prototype.whenAnyAncestorMatches = function (constraint) {
        return this._bindingWhenSyntax.whenAnyAncestorMatches(constraint);
    };
    BindingWhenOnSyntax.prototype.whenNoAncestorMatches = function (constraint) {
        return this._bindingWhenSyntax.whenNoAncestorMatches(constraint);
    };
    BindingWhenOnSyntax.prototype.onActivation = function (handler) {
        return this._bindingOnSyntax.onActivation(handler);
    };
    return BindingWhenOnSyntax;
}());
exports.BindingWhenOnSyntax = BindingWhenOnSyntax;


/***/ }),

/***/ "./node_modules/inversify/lib/syntax/binding_when_syntax.js":
/*!******************************************************************!*\
  !*** ./node_modules/inversify/lib/syntax/binding_when_syntax.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BindingWhenSyntax = void 0;
var binding_on_syntax_1 = __webpack_require__(/*! ./binding_on_syntax */ "./node_modules/inversify/lib/syntax/binding_on_syntax.js");
var constraint_helpers_1 = __webpack_require__(/*! ./constraint_helpers */ "./node_modules/inversify/lib/syntax/constraint_helpers.js");
var BindingWhenSyntax = (function () {
    function BindingWhenSyntax(binding) {
        this._binding = binding;
    }
    BindingWhenSyntax.prototype.when = function (constraint) {
        this._binding.constraint = constraint;
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenTargetNamed = function (name) {
        this._binding.constraint = constraint_helpers_1.namedConstraint(name);
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenTargetIsDefault = function () {
        this._binding.constraint = function (request) {
            var targetIsDefault = (request.target !== null) &&
                (!request.target.isNamed()) &&
                (!request.target.isTagged());
            return targetIsDefault;
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenTargetTagged = function (tag, value) {
        this._binding.constraint = constraint_helpers_1.taggedConstraint(tag)(value);
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenInjectedInto = function (parent) {
        this._binding.constraint = function (request) {
            return constraint_helpers_1.typeConstraint(parent)(request.parentRequest);
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenParentNamed = function (name) {
        this._binding.constraint = function (request) {
            return constraint_helpers_1.namedConstraint(name)(request.parentRequest);
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenParentTagged = function (tag, value) {
        this._binding.constraint = function (request) {
            return constraint_helpers_1.taggedConstraint(tag)(value)(request.parentRequest);
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenAnyAncestorIs = function (ancestor) {
        this._binding.constraint = function (request) {
            return constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.typeConstraint(ancestor));
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenNoAncestorIs = function (ancestor) {
        this._binding.constraint = function (request) {
            return !constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.typeConstraint(ancestor));
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenAnyAncestorNamed = function (name) {
        this._binding.constraint = function (request) {
            return constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.namedConstraint(name));
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenNoAncestorNamed = function (name) {
        this._binding.constraint = function (request) {
            return !constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.namedConstraint(name));
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenAnyAncestorTagged = function (tag, value) {
        this._binding.constraint = function (request) {
            return constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.taggedConstraint(tag)(value));
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenNoAncestorTagged = function (tag, value) {
        this._binding.constraint = function (request) {
            return !constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.taggedConstraint(tag)(value));
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenAnyAncestorMatches = function (constraint) {
        this._binding.constraint = function (request) {
            return constraint_helpers_1.traverseAncerstors(request, constraint);
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    BindingWhenSyntax.prototype.whenNoAncestorMatches = function (constraint) {
        this._binding.constraint = function (request) {
            return !constraint_helpers_1.traverseAncerstors(request, constraint);
        };
        return new binding_on_syntax_1.BindingOnSyntax(this._binding);
    };
    return BindingWhenSyntax;
}());
exports.BindingWhenSyntax = BindingWhenSyntax;


/***/ }),

/***/ "./node_modules/inversify/lib/syntax/constraint_helpers.js":
/*!*****************************************************************!*\
  !*** ./node_modules/inversify/lib/syntax/constraint_helpers.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.typeConstraint = exports.namedConstraint = exports.taggedConstraint = exports.traverseAncerstors = void 0;
var METADATA_KEY = __webpack_require__(/*! ../constants/metadata_keys */ "./node_modules/inversify/lib/constants/metadata_keys.js");
var metadata_1 = __webpack_require__(/*! ../planning/metadata */ "./node_modules/inversify/lib/planning/metadata.js");
var traverseAncerstors = function (request, constraint) {
    var parent = request.parentRequest;
    if (parent !== null) {
        return constraint(parent) ? true : traverseAncerstors(parent, constraint);
    }
    else {
        return false;
    }
};
exports.traverseAncerstors = traverseAncerstors;
var taggedConstraint = function (key) { return function (value) {
    var constraint = function (request) {
        return request !== null && request.target !== null && request.target.matchesTag(key)(value);
    };
    constraint.metaData = new metadata_1.Metadata(key, value);
    return constraint;
}; };
exports.taggedConstraint = taggedConstraint;
var namedConstraint = taggedConstraint(METADATA_KEY.NAMED_TAG);
exports.namedConstraint = namedConstraint;
var typeConstraint = function (type) { return function (request) {
    var binding = null;
    if (request !== null) {
        binding = request.bindings[0];
        if (typeof type === "string") {
            var serviceIdentifier = binding.serviceIdentifier;
            return serviceIdentifier === type;
        }
        else {
            var constructor = request.bindings[0].implementationType;
            return type === constructor;
        }
    }
    return false;
}; };
exports.typeConstraint = typeConstraint;


/***/ }),

/***/ "./node_modules/inversify/lib/utils/binding_utils.js":
/*!***********************************************************!*\
  !*** ./node_modules/inversify/lib/utils/binding_utils.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.multiBindToService = void 0;
var multiBindToService = function (container) {
    return function (service) {
        return function () {
            var types = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                types[_i] = arguments[_i];
            }
            return types.forEach(function (t) { return container.bind(t).toService(service); });
        };
    };
};
exports.multiBindToService = multiBindToService;


/***/ }),

/***/ "./node_modules/inversify/lib/utils/exceptions.js":
/*!********************************************************!*\
  !*** ./node_modules/inversify/lib/utils/exceptions.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isStackOverflowExeption = void 0;
var ERROR_MSGS = __webpack_require__(/*! ../constants/error_msgs */ "./node_modules/inversify/lib/constants/error_msgs.js");
function isStackOverflowExeption(error) {
    return (error instanceof RangeError ||
        error.message === ERROR_MSGS.STACK_OVERFLOW);
}
exports.isStackOverflowExeption = isStackOverflowExeption;


/***/ }),

/***/ "./node_modules/inversify/lib/utils/id.js":
/*!************************************************!*\
  !*** ./node_modules/inversify/lib/utils/id.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.id = void 0;
var idCounter = 0;
function id() {
    return idCounter++;
}
exports.id = id;


/***/ }),

/***/ "./node_modules/inversify/lib/utils/serialization.js":
/*!***********************************************************!*\
  !*** ./node_modules/inversify/lib/utils/serialization.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.circularDependencyToException = exports.listMetadataForTarget = exports.listRegisteredBindingsForServiceIdentifier = exports.getServiceIdentifierAsString = exports.getFunctionName = void 0;
var ERROR_MSGS = __webpack_require__(/*! ../constants/error_msgs */ "./node_modules/inversify/lib/constants/error_msgs.js");
function getServiceIdentifierAsString(serviceIdentifier) {
    if (typeof serviceIdentifier === "function") {
        var _serviceIdentifier = serviceIdentifier;
        return _serviceIdentifier.name;
    }
    else if (typeof serviceIdentifier === "symbol") {
        return serviceIdentifier.toString();
    }
    else {
        var _serviceIdentifier = serviceIdentifier;
        return _serviceIdentifier;
    }
}
exports.getServiceIdentifierAsString = getServiceIdentifierAsString;
function listRegisteredBindingsForServiceIdentifier(container, serviceIdentifier, getBindings) {
    var registeredBindingsList = "";
    var registeredBindings = getBindings(container, serviceIdentifier);
    if (registeredBindings.length !== 0) {
        registeredBindingsList = "\nRegistered bindings:";
        registeredBindings.forEach(function (binding) {
            var name = "Object";
            if (binding.implementationType !== null) {
                name = getFunctionName(binding.implementationType);
            }
            registeredBindingsList = registeredBindingsList + "\n " + name;
            if (binding.constraint.metaData) {
                registeredBindingsList = registeredBindingsList + " - " + binding.constraint.metaData;
            }
        });
    }
    return registeredBindingsList;
}
exports.listRegisteredBindingsForServiceIdentifier = listRegisteredBindingsForServiceIdentifier;
function alreadyDependencyChain(request, serviceIdentifier) {
    if (request.parentRequest === null) {
        return false;
    }
    else if (request.parentRequest.serviceIdentifier === serviceIdentifier) {
        return true;
    }
    else {
        return alreadyDependencyChain(request.parentRequest, serviceIdentifier);
    }
}
function dependencyChainToString(request) {
    function _createStringArr(req, result) {
        if (result === void 0) { result = []; }
        var serviceIdentifier = getServiceIdentifierAsString(req.serviceIdentifier);
        result.push(serviceIdentifier);
        if (req.parentRequest !== null) {
            return _createStringArr(req.parentRequest, result);
        }
        return result;
    }
    var stringArr = _createStringArr(request);
    return stringArr.reverse().join(" --> ");
}
function circularDependencyToException(request) {
    request.childRequests.forEach(function (childRequest) {
        if (alreadyDependencyChain(childRequest, childRequest.serviceIdentifier)) {
            var services = dependencyChainToString(childRequest);
            throw new Error(ERROR_MSGS.CIRCULAR_DEPENDENCY + " " + services);
        }
        else {
            circularDependencyToException(childRequest);
        }
    });
}
exports.circularDependencyToException = circularDependencyToException;
function listMetadataForTarget(serviceIdentifierString, target) {
    if (target.isTagged() || target.isNamed()) {
        var m_1 = "";
        var namedTag = target.getNamedTag();
        var otherTags = target.getCustomTags();
        if (namedTag !== null) {
            m_1 += namedTag.toString() + "\n";
        }
        if (otherTags !== null) {
            otherTags.forEach(function (tag) {
                m_1 += tag.toString() + "\n";
            });
        }
        return " " + serviceIdentifierString + "\n " + serviceIdentifierString + " - " + m_1;
    }
    else {
        return " " + serviceIdentifierString;
    }
}
exports.listMetadataForTarget = listMetadataForTarget;
function getFunctionName(v) {
    if (v.name) {
        return v.name;
    }
    else {
        var name_1 = v.toString();
        var match = name_1.match(/^function\s*([^\s(]+)/);
        return match ? match[1] : "Anonymous function: " + name_1;
    }
}
exports.getFunctionName = getFunctionName;


/***/ }),

/***/ "./node_modules/reflect-metadata/Reflect.js":
/*!**************************************************!*\
  !*** ./node_modules/reflect-metadata/Reflect.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

/*! *****************************************************************************
Copyright (C) Microsoft. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
var Reflect;
(function (Reflect) {
    // Metadata Proposal
    // https://rbuckton.github.io/reflect-metadata/
    (function (factory) {
        var root = typeof __webpack_require__.g === "object" ? __webpack_require__.g :
            typeof self === "object" ? self :
                typeof this === "object" ? this :
                    Function("return this;")();
        var exporter = makeExporter(Reflect);
        if (typeof root.Reflect === "undefined") {
            root.Reflect = Reflect;
        }
        else {
            exporter = makeExporter(root.Reflect, exporter);
        }
        factory(exporter);
        function makeExporter(target, previous) {
            return function (key, value) {
                if (typeof target[key] !== "function") {
                    Object.defineProperty(target, key, { configurable: true, writable: true, value: value });
                }
                if (previous)
                    previous(key, value);
            };
        }
    })(function (exporter) {
        var hasOwn = Object.prototype.hasOwnProperty;
        // feature test for Symbol support
        var supportsSymbol = typeof Symbol === "function";
        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== "undefined" ? Symbol.toPrimitive : "@@toPrimitive";
        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== "undefined" ? Symbol.iterator : "@@iterator";
        var supportsCreate = typeof Object.create === "function"; // feature test for Object.create support
        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support
        var downLevel = !supportsCreate && !supportsProto;
        var HashMap = {
            // create an object in dictionary mode (a.k.a. "slow" mode in v8)
            create: supportsCreate
                ? function () { return MakeDictionary(Object.create(null)); }
                : supportsProto
                    ? function () { return MakeDictionary({ __proto__: null }); }
                    : function () { return MakeDictionary({}); },
            has: downLevel
                ? function (map, key) { return hasOwn.call(map, key); }
                : function (map, key) { return key in map; },
            get: downLevel
                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }
                : function (map, key) { return map[key]; },
        };
        // Load global or shim versions of Map, Set, and WeakMap
        var functionPrototype = Object.getPrototypeOf(Function);
        var usePolyfill = typeof process === "object" && process.env && process.env["REFLECT_METADATA_USE_MAP_POLYFILL"] === "true";
        var _Map = !usePolyfill && typeof Map === "function" && typeof Map.prototype.entries === "function" ? Map : CreateMapPolyfill();
        var _Set = !usePolyfill && typeof Set === "function" && typeof Set.prototype.entries === "function" ? Set : CreateSetPolyfill();
        var _WeakMap = !usePolyfill && typeof WeakMap === "function" ? WeakMap : CreateWeakMapPolyfill();
        // [[Metadata]] internal slot
        // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots
        var Metadata = new _WeakMap();
        /**
         * Applies a set of decorators to a property of a target object.
         * @param decorators An array of decorators.
         * @param target The target object.
         * @param propertyKey (Optional) The property key to decorate.
         * @param attributes (Optional) The property descriptor for the target key.
         * @remarks Decorators are applied in reverse order.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     Example = Reflect.decorate(decoratorsArray, Example);
         *
         *     // property (on constructor)
         *     Reflect.decorate(decoratorsArray, Example, "staticProperty");
         *
         *     // property (on prototype)
         *     Reflect.decorate(decoratorsArray, Example.prototype, "property");
         *
         *     // method (on constructor)
         *     Object.defineProperty(Example, "staticMethod",
         *         Reflect.decorate(decoratorsArray, Example, "staticMethod",
         *             Object.getOwnPropertyDescriptor(Example, "staticMethod")));
         *
         *     // method (on prototype)
         *     Object.defineProperty(Example.prototype, "method",
         *         Reflect.decorate(decoratorsArray, Example.prototype, "method",
         *             Object.getOwnPropertyDescriptor(Example.prototype, "method")));
         *
         */
        function decorate(decorators, target, propertyKey, attributes) {
            if (!IsUndefined(propertyKey)) {
                if (!IsArray(decorators))
                    throw new TypeError();
                if (!IsObject(target))
                    throw new TypeError();
                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))
                    throw new TypeError();
                if (IsNull(attributes))
                    attributes = undefined;
                propertyKey = ToPropertyKey(propertyKey);
                return DecorateProperty(decorators, target, propertyKey, attributes);
            }
            else {
                if (!IsArray(decorators))
                    throw new TypeError();
                if (!IsConstructor(target))
                    throw new TypeError();
                return DecorateConstructor(decorators, target);
            }
        }
        exporter("decorate", decorate);
        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)
        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata
        /**
         * A default metadata decorator factory that can be used on a class, class member, or parameter.
         * @param metadataKey The key for the metadata entry.
         * @param metadataValue The value for the metadata entry.
         * @returns A decorator function.
         * @remarks
         * If `metadataKey` is already defined for the target and target key, the
         * metadataValue for that key will be overwritten.
         * @example
         *
         *     // constructor
         *     @Reflect.metadata(key, value)
         *     class Example {
         *     }
         *
         *     // property (on constructor, TypeScript only)
         *     class Example {
         *         @Reflect.metadata(key, value)
         *         static staticProperty;
         *     }
         *
         *     // property (on prototype, TypeScript only)
         *     class Example {
         *         @Reflect.metadata(key, value)
         *         property;
         *     }
         *
         *     // method (on constructor)
         *     class Example {
         *         @Reflect.metadata(key, value)
         *         static staticMethod() { }
         *     }
         *
         *     // method (on prototype)
         *     class Example {
         *         @Reflect.metadata(key, value)
         *         method() { }
         *     }
         *
         */
        function metadata(metadataKey, metadataValue) {
            function decorator(target, propertyKey) {
                if (!IsObject(target))
                    throw new TypeError();
                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))
                    throw new TypeError();
                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);
            }
            return decorator;
        }
        exporter("metadata", metadata);
        /**
         * Define a unique metadata entry on the target.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param metadataValue A value that contains attached metadata.
         * @param target The target object on which to define metadata.
         * @param propertyKey (Optional) The property key for the target.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     Reflect.defineMetadata("custom:annotation", options, Example);
         *
         *     // property (on constructor)
         *     Reflect.defineMetadata("custom:annotation", options, Example, "staticProperty");
         *
         *     // property (on prototype)
         *     Reflect.defineMetadata("custom:annotation", options, Example.prototype, "property");
         *
         *     // method (on constructor)
         *     Reflect.defineMetadata("custom:annotation", options, Example, "staticMethod");
         *
         *     // method (on prototype)
         *     Reflect.defineMetadata("custom:annotation", options, Example.prototype, "method");
         *
         *     // decorator factory as metadata-producing annotation.
         *     function MyAnnotation(options): Decorator {
         *         return (target, key?) => Reflect.defineMetadata("custom:annotation", options, target, key);
         *     }
         *
         */
        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);
        }
        exporter("defineMetadata", defineMetadata);
        /**
         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.hasMetadata("custom:annotation", Example);
         *
         *     // property (on constructor)
         *     result = Reflect.hasMetadata("custom:annotation", Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.hasMetadata("custom:annotation", Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.hasMetadata("custom:annotation", Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.hasMetadata("custom:annotation", Example.prototype, "method");
         *
         */
        function hasMetadata(metadataKey, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryHasMetadata(metadataKey, target, propertyKey);
        }
        exporter("hasMetadata", hasMetadata);
        /**
         * Gets a value indicating whether the target object has the provided metadata key defined.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.hasOwnMetadata("custom:annotation", Example);
         *
         *     // property (on constructor)
         *     result = Reflect.hasOwnMetadata("custom:annotation", Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.hasOwnMetadata("custom:annotation", Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.hasOwnMetadata("custom:annotation", Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.hasOwnMetadata("custom:annotation", Example.prototype, "method");
         *
         */
        function hasOwnMetadata(metadataKey, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);
        }
        exporter("hasOwnMetadata", hasOwnMetadata);
        /**
         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.getMetadata("custom:annotation", Example);
         *
         *     // property (on constructor)
         *     result = Reflect.getMetadata("custom:annotation", Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.getMetadata("custom:annotation", Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.getMetadata("custom:annotation", Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.getMetadata("custom:annotation", Example.prototype, "method");
         *
         */
        function getMetadata(metadataKey, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryGetMetadata(metadataKey, target, propertyKey);
        }
        exporter("getMetadata", getMetadata);
        /**
         * Gets the metadata value for the provided metadata key on the target object.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.getOwnMetadata("custom:annotation", Example);
         *
         *     // property (on constructor)
         *     result = Reflect.getOwnMetadata("custom:annotation", Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.getOwnMetadata("custom:annotation", Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.getOwnMetadata("custom:annotation", Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.getOwnMetadata("custom:annotation", Example.prototype, "method");
         *
         */
        function getOwnMetadata(metadataKey, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);
        }
        exporter("getOwnMetadata", getOwnMetadata);
        /**
         * Gets the metadata keys defined on the target object or its prototype chain.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns An array of unique metadata keys.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.getMetadataKeys(Example);
         *
         *     // property (on constructor)
         *     result = Reflect.getMetadataKeys(Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.getMetadataKeys(Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.getMetadataKeys(Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.getMetadataKeys(Example.prototype, "method");
         *
         */
        function getMetadataKeys(target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryMetadataKeys(target, propertyKey);
        }
        exporter("getMetadataKeys", getMetadataKeys);
        /**
         * Gets the unique metadata keys defined on the target object.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns An array of unique metadata keys.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.getOwnMetadataKeys(Example);
         *
         *     // property (on constructor)
         *     result = Reflect.getOwnMetadataKeys(Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.getOwnMetadataKeys(Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.getOwnMetadataKeys(Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.getOwnMetadataKeys(Example.prototype, "method");
         *
         */
        function getOwnMetadataKeys(target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            return OrdinaryOwnMetadataKeys(target, propertyKey);
        }
        exporter("getOwnMetadataKeys", getOwnMetadataKeys);
        /**
         * Deletes the metadata entry from the target object with the provided key.
         * @param metadataKey A key used to store and retrieve metadata.
         * @param target The target object on which the metadata is defined.
         * @param propertyKey (Optional) The property key for the target.
         * @returns `true` if the metadata entry was found and deleted; otherwise, false.
         * @example
         *
         *     class Example {
         *         // property declarations are not part of ES6, though they are valid in TypeScript:
         *         // static staticProperty;
         *         // property;
         *
         *         constructor(p) { }
         *         static staticMethod(p) { }
         *         method(p) { }
         *     }
         *
         *     // constructor
         *     result = Reflect.deleteMetadata("custom:annotation", Example);
         *
         *     // property (on constructor)
         *     result = Reflect.deleteMetadata("custom:annotation", Example, "staticProperty");
         *
         *     // property (on prototype)
         *     result = Reflect.deleteMetadata("custom:annotation", Example.prototype, "property");
         *
         *     // method (on constructor)
         *     result = Reflect.deleteMetadata("custom:annotation", Example, "staticMethod");
         *
         *     // method (on prototype)
         *     result = Reflect.deleteMetadata("custom:annotation", Example.prototype, "method");
         *
         */
        function deleteMetadata(metadataKey, target, propertyKey) {
            if (!IsObject(target))
                throw new TypeError();
            if (!IsUndefined(propertyKey))
                propertyKey = ToPropertyKey(propertyKey);
            var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);
            if (IsUndefined(metadataMap))
                return false;
            if (!metadataMap.delete(metadataKey))
                return false;
            if (metadataMap.size > 0)
                return true;
            var targetMetadata = Metadata.get(target);
            targetMetadata.delete(propertyKey);
            if (targetMetadata.size > 0)
                return true;
            Metadata.delete(target);
            return true;
        }
        exporter("deleteMetadata", deleteMetadata);
        function DecorateConstructor(decorators, target) {
            for (var i = decorators.length - 1; i >= 0; --i) {
                var decorator = decorators[i];
                var decorated = decorator(target);
                if (!IsUndefined(decorated) && !IsNull(decorated)) {
                    if (!IsConstructor(decorated))
                        throw new TypeError();
                    target = decorated;
                }
            }
            return target;
        }
        function DecorateProperty(decorators, target, propertyKey, descriptor) {
            for (var i = decorators.length - 1; i >= 0; --i) {
                var decorator = decorators[i];
                var decorated = decorator(target, propertyKey, descriptor);
                if (!IsUndefined(decorated) && !IsNull(decorated)) {
                    if (!IsObject(decorated))
                        throw new TypeError();
                    descriptor = decorated;
                }
            }
            return descriptor;
        }
        function GetOrCreateMetadataMap(O, P, Create) {
            var targetMetadata = Metadata.get(O);
            if (IsUndefined(targetMetadata)) {
                if (!Create)
                    return undefined;
                targetMetadata = new _Map();
                Metadata.set(O, targetMetadata);
            }
            var metadataMap = targetMetadata.get(P);
            if (IsUndefined(metadataMap)) {
                if (!Create)
                    return undefined;
                metadataMap = new _Map();
                targetMetadata.set(P, metadataMap);
            }
            return metadataMap;
        }
        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata
        function OrdinaryHasMetadata(MetadataKey, O, P) {
            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);
            if (hasOwn)
                return true;
            var parent = OrdinaryGetPrototypeOf(O);
            if (!IsNull(parent))
                return OrdinaryHasMetadata(MetadataKey, parent, P);
            return false;
        }
        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata
        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {
            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);
            if (IsUndefined(metadataMap))
                return false;
            return ToBoolean(metadataMap.has(MetadataKey));
        }
        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata
        function OrdinaryGetMetadata(MetadataKey, O, P) {
            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);
            if (hasOwn)
                return OrdinaryGetOwnMetadata(MetadataKey, O, P);
            var parent = OrdinaryGetPrototypeOf(O);
            if (!IsNull(parent))
                return OrdinaryGetMetadata(MetadataKey, parent, P);
            return undefined;
        }
        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata
        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {
            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);
            if (IsUndefined(metadataMap))
                return undefined;
            return metadataMap.get(MetadataKey);
        }
        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata
        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {
            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);
            metadataMap.set(MetadataKey, MetadataValue);
        }
        // 3.1.6.1 OrdinaryMetadataKeys(O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys
        function OrdinaryMetadataKeys(O, P) {
            var ownKeys = OrdinaryOwnMetadataKeys(O, P);
            var parent = OrdinaryGetPrototypeOf(O);
            if (parent === null)
                return ownKeys;
            var parentKeys = OrdinaryMetadataKeys(parent, P);
            if (parentKeys.length <= 0)
                return ownKeys;
            if (ownKeys.length <= 0)
                return parentKeys;
            var set = new _Set();
            var keys = [];
            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {
                var key = ownKeys_1[_i];
                var hasKey = set.has(key);
                if (!hasKey) {
                    set.add(key);
                    keys.push(key);
                }
            }
            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {
                var key = parentKeys_1[_a];
                var hasKey = set.has(key);
                if (!hasKey) {
                    set.add(key);
                    keys.push(key);
                }
            }
            return keys;
        }
        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)
        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys
        function OrdinaryOwnMetadataKeys(O, P) {
            var keys = [];
            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);
            if (IsUndefined(metadataMap))
                return keys;
            var keysObj = metadataMap.keys();
            var iterator = GetIterator(keysObj);
            var k = 0;
            while (true) {
                var next = IteratorStep(iterator);
                if (!next) {
                    keys.length = k;
                    return keys;
                }
                var nextValue = IteratorValue(next);
                try {
                    keys[k] = nextValue;
                }
                catch (e) {
                    try {
                        IteratorClose(iterator);
                    }
                    finally {
                        throw e;
                    }
                }
                k++;
            }
        }
        // 6 ECMAScript Data Typ0es and Values
        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values
        function Type(x) {
            if (x === null)
                return 1 /* Null */;
            switch (typeof x) {
                case "undefined": return 0 /* Undefined */;
                case "boolean": return 2 /* Boolean */;
                case "string": return 3 /* String */;
                case "symbol": return 4 /* Symbol */;
                case "number": return 5 /* Number */;
                case "object": return x === null ? 1 /* Null */ : 6 /* Object */;
                default: return 6 /* Object */;
            }
        }
        // 6.1.1 The Undefined Type
        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type
        function IsUndefined(x) {
            return x === undefined;
        }
        // 6.1.2 The Null Type
        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type
        function IsNull(x) {
            return x === null;
        }
        // 6.1.5 The Symbol Type
        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type
        function IsSymbol(x) {
            return typeof x === "symbol";
        }
        // 6.1.7 The Object Type
        // https://tc39.github.io/ecma262/#sec-object-type
        function IsObject(x) {
            return typeof x === "object" ? x !== null : typeof x === "function";
        }
        // 7.1 Type Conversion
        // https://tc39.github.io/ecma262/#sec-type-conversion
        // 7.1.1 ToPrimitive(input [, PreferredType])
        // https://tc39.github.io/ecma262/#sec-toprimitive
        function ToPrimitive(input, PreferredType) {
            switch (Type(input)) {
                case 0 /* Undefined */: return input;
                case 1 /* Null */: return input;
                case 2 /* Boolean */: return input;
                case 3 /* String */: return input;
                case 4 /* Symbol */: return input;
                case 5 /* Number */: return input;
            }
            var hint = PreferredType === 3 /* String */ ? "string" : PreferredType === 5 /* Number */ ? "number" : "default";
            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);
            if (exoticToPrim !== undefined) {
                var result = exoticToPrim.call(input, hint);
                if (IsObject(result))
                    throw new TypeError();
                return result;
            }
            return OrdinaryToPrimitive(input, hint === "default" ? "number" : hint);
        }
        // 7.1.1.1 OrdinaryToPrimitive(O, hint)
        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive
        function OrdinaryToPrimitive(O, hint) {
            if (hint === "string") {
                var toString_1 = O.toString;
                if (IsCallable(toString_1)) {
                    var result = toString_1.call(O);
                    if (!IsObject(result))
                        return result;
                }
                var valueOf = O.valueOf;
                if (IsCallable(valueOf)) {
                    var result = valueOf.call(O);
                    if (!IsObject(result))
                        return result;
                }
            }
            else {
                var valueOf = O.valueOf;
                if (IsCallable(valueOf)) {
                    var result = valueOf.call(O);
                    if (!IsObject(result))
                        return result;
                }
                var toString_2 = O.toString;
                if (IsCallable(toString_2)) {
                    var result = toString_2.call(O);
                    if (!IsObject(result))
                        return result;
                }
            }
            throw new TypeError();
        }
        // 7.1.2 ToBoolean(argument)
        // https://tc39.github.io/ecma262/2016/#sec-toboolean
        function ToBoolean(argument) {
            return !!argument;
        }
        // 7.1.12 ToString(argument)
        // https://tc39.github.io/ecma262/#sec-tostring
        function ToString(argument) {
            return "" + argument;
        }
        // 7.1.14 ToPropertyKey(argument)
        // https://tc39.github.io/ecma262/#sec-topropertykey
        function ToPropertyKey(argument) {
            var key = ToPrimitive(argument, 3 /* String */);
            if (IsSymbol(key))
                return key;
            return ToString(key);
        }
        // 7.2 Testing and Comparison Operations
        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations
        // 7.2.2 IsArray(argument)
        // https://tc39.github.io/ecma262/#sec-isarray
        function IsArray(argument) {
            return Array.isArray
                ? Array.isArray(argument)
                : argument instanceof Object
                    ? argument instanceof Array
                    : Object.prototype.toString.call(argument) === "[object Array]";
        }
        // 7.2.3 IsCallable(argument)
        // https://tc39.github.io/ecma262/#sec-iscallable
        function IsCallable(argument) {
            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.
            return typeof argument === "function";
        }
        // 7.2.4 IsConstructor(argument)
        // https://tc39.github.io/ecma262/#sec-isconstructor
        function IsConstructor(argument) {
            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.
            return typeof argument === "function";
        }
        // 7.2.7 IsPropertyKey(argument)
        // https://tc39.github.io/ecma262/#sec-ispropertykey
        function IsPropertyKey(argument) {
            switch (Type(argument)) {
                case 3 /* String */: return true;
                case 4 /* Symbol */: return true;
                default: return false;
            }
        }
        // 7.3 Operations on Objects
        // https://tc39.github.io/ecma262/#sec-operations-on-objects
        // 7.3.9 GetMethod(V, P)
        // https://tc39.github.io/ecma262/#sec-getmethod
        function GetMethod(V, P) {
            var func = V[P];
            if (func === undefined || func === null)
                return undefined;
            if (!IsCallable(func))
                throw new TypeError();
            return func;
        }
        // 7.4 Operations on Iterator Objects
        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects
        function GetIterator(obj) {
            var method = GetMethod(obj, iteratorSymbol);
            if (!IsCallable(method))
                throw new TypeError(); // from Call
            var iterator = method.call(obj);
            if (!IsObject(iterator))
                throw new TypeError();
            return iterator;
        }
        // 7.4.4 IteratorValue(iterResult)
        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue
        function IteratorValue(iterResult) {
            return iterResult.value;
        }
        // 7.4.5 IteratorStep(iterator)
        // https://tc39.github.io/ecma262/#sec-iteratorstep
        function IteratorStep(iterator) {
            var result = iterator.next();
            return result.done ? false : result;
        }
        // 7.4.6 IteratorClose(iterator, completion)
        // https://tc39.github.io/ecma262/#sec-iteratorclose
        function IteratorClose(iterator) {
            var f = iterator["return"];
            if (f)
                f.call(iterator);
        }
        // 9.1 Ordinary Object Internal Methods and Internal Slots
        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots
        // 9.1.1.1 OrdinaryGetPrototypeOf(O)
        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof
        function OrdinaryGetPrototypeOf(O) {
            var proto = Object.getPrototypeOf(O);
            if (typeof O !== "function" || O === functionPrototype)
                return proto;
            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.
            // Try to determine the superclass constructor. Compatible implementations
            // must either set __proto__ on a subclass constructor to the superclass constructor,
            // or ensure each class has a valid `constructor` property on its prototype that
            // points back to the constructor.
            // If this is not the same as Function.[[Prototype]], then this is definately inherited.
            // This is the case when in ES6 or when using __proto__ in a compatible browser.
            if (proto !== functionPrototype)
                return proto;
            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.
            var prototype = O.prototype;
            var prototypeProto = prototype && Object.getPrototypeOf(prototype);
            if (prototypeProto == null || prototypeProto === Object.prototype)
                return proto;
            // If the constructor was not a function, then we cannot determine the heritage.
            var constructor = prototypeProto.constructor;
            if (typeof constructor !== "function")
                return proto;
            // If we have some kind of self-reference, then we cannot determine the heritage.
            if (constructor === O)
                return proto;
            // we have a pretty good guess at the heritage.
            return constructor;
        }
        // naive Map shim
        function CreateMapPolyfill() {
            var cacheSentinel = {};
            var arraySentinel = [];
            var MapIterator = /** @class */ (function () {
                function MapIterator(keys, values, selector) {
                    this._index = 0;
                    this._keys = keys;
                    this._values = values;
                    this._selector = selector;
                }
                MapIterator.prototype["@@iterator"] = function () { return this; };
                MapIterator.prototype[iteratorSymbol] = function () { return this; };
                MapIterator.prototype.next = function () {
                    var index = this._index;
                    if (index >= 0 && index < this._keys.length) {
                        var result = this._selector(this._keys[index], this._values[index]);
                        if (index + 1 >= this._keys.length) {
                            this._index = -1;
                            this._keys = arraySentinel;
                            this._values = arraySentinel;
                        }
                        else {
                            this._index++;
                        }
                        return { value: result, done: false };
                    }
                    return { value: undefined, done: true };
                };
                MapIterator.prototype.throw = function (error) {
                    if (this._index >= 0) {
                        this._index = -1;
                        this._keys = arraySentinel;
                        this._values = arraySentinel;
                    }
                    throw error;
                };
                MapIterator.prototype.return = function (value) {
                    if (this._index >= 0) {
                        this._index = -1;
                        this._keys = arraySentinel;
                        this._values = arraySentinel;
                    }
                    return { value: value, done: true };
                };
                return MapIterator;
            }());
            return /** @class */ (function () {
                function Map() {
                    this._keys = [];
                    this._values = [];
                    this._cacheKey = cacheSentinel;
                    this._cacheIndex = -2;
                }
                Object.defineProperty(Map.prototype, "size", {
                    get: function () { return this._keys.length; },
                    enumerable: true,
                    configurable: true
                });
                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };
                Map.prototype.get = function (key) {
                    var index = this._find(key, /*insert*/ false);
                    return index >= 0 ? this._values[index] : undefined;
                };
                Map.prototype.set = function (key, value) {
                    var index = this._find(key, /*insert*/ true);
                    this._values[index] = value;
                    return this;
                };
                Map.prototype.delete = function (key) {
                    var index = this._find(key, /*insert*/ false);
                    if (index >= 0) {
                        var size = this._keys.length;
                        for (var i = index + 1; i < size; i++) {
                            this._keys[i - 1] = this._keys[i];
                            this._values[i - 1] = this._values[i];
                        }
                        this._keys.length--;
                        this._values.length--;
                        if (key === this._cacheKey) {
                            this._cacheKey = cacheSentinel;
                            this._cacheIndex = -2;
                        }
                        return true;
                    }
                    return false;
                };
                Map.prototype.clear = function () {
                    this._keys.length = 0;
                    this._values.length = 0;
                    this._cacheKey = cacheSentinel;
                    this._cacheIndex = -2;
                };
                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };
                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };
                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };
                Map.prototype["@@iterator"] = function () { return this.entries(); };
                Map.prototype[iteratorSymbol] = function () { return this.entries(); };
                Map.prototype._find = function (key, insert) {
                    if (this._cacheKey !== key) {
                        this._cacheIndex = this._keys.indexOf(this._cacheKey = key);
                    }
                    if (this._cacheIndex < 0 && insert) {
                        this._cacheIndex = this._keys.length;
                        this._keys.push(key);
                        this._values.push(undefined);
                    }
                    return this._cacheIndex;
                };
                return Map;
            }());
            function getKey(key, _) {
                return key;
            }
            function getValue(_, value) {
                return value;
            }
            function getEntry(key, value) {
                return [key, value];
            }
        }
        // naive Set shim
        function CreateSetPolyfill() {
            return /** @class */ (function () {
                function Set() {
                    this._map = new _Map();
                }
                Object.defineProperty(Set.prototype, "size", {
                    get: function () { return this._map.size; },
                    enumerable: true,
                    configurable: true
                });
                Set.prototype.has = function (value) { return this._map.has(value); };
                Set.prototype.add = function (value) { return this._map.set(value, value), this; };
                Set.prototype.delete = function (value) { return this._map.delete(value); };
                Set.prototype.clear = function () { this._map.clear(); };
                Set.prototype.keys = function () { return this._map.keys(); };
                Set.prototype.values = function () { return this._map.values(); };
                Set.prototype.entries = function () { return this._map.entries(); };
                Set.prototype["@@iterator"] = function () { return this.keys(); };
                Set.prototype[iteratorSymbol] = function () { return this.keys(); };
                return Set;
            }());
        }
        // naive WeakMap shim
        function CreateWeakMapPolyfill() {
            var UUID_SIZE = 16;
            var keys = HashMap.create();
            var rootKey = CreateUniqueKey();
            return /** @class */ (function () {
                function WeakMap() {
                    this._key = CreateUniqueKey();
                }
                WeakMap.prototype.has = function (target) {
                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);
                    return table !== undefined ? HashMap.has(table, this._key) : false;
                };
                WeakMap.prototype.get = function (target) {
                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);
                    return table !== undefined ? HashMap.get(table, this._key) : undefined;
                };
                WeakMap.prototype.set = function (target, value) {
                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);
                    table[this._key] = value;
                    return this;
                };
                WeakMap.prototype.delete = function (target) {
                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);
                    return table !== undefined ? delete table[this._key] : false;
                };
                WeakMap.prototype.clear = function () {
                    // NOTE: not a real clear, just makes the previous data unreachable
                    this._key = CreateUniqueKey();
                };
                return WeakMap;
            }());
            function CreateUniqueKey() {
                var key;
                do
                    key = "@@WeakMap@@" + CreateUUID();
                while (HashMap.has(keys, key));
                keys[key] = true;
                return key;
            }
            function GetOrCreateWeakMapTable(target, create) {
                if (!hasOwn.call(target, rootKey)) {
                    if (!create)
                        return undefined;
                    Object.defineProperty(target, rootKey, { value: HashMap.create() });
                }
                return target[rootKey];
            }
            function FillRandomBytes(buffer, size) {
                for (var i = 0; i < size; ++i)
                    buffer[i] = Math.random() * 0xff | 0;
                return buffer;
            }
            function GenRandomBytes(size) {
                if (typeof Uint8Array === "function") {
                    if (typeof crypto !== "undefined")
                        return crypto.getRandomValues(new Uint8Array(size));
                    if (typeof msCrypto !== "undefined")
                        return msCrypto.getRandomValues(new Uint8Array(size));
                    return FillRandomBytes(new Uint8Array(size), size);
                }
                return FillRandomBytes(new Array(size), size);
            }
            function CreateUUID() {
                var data = GenRandomBytes(UUID_SIZE);
                // mark as random - RFC 4122 § 4.4
                data[6] = data[6] & 0x4f | 0x40;
                data[8] = data[8] & 0xbf | 0x80;
                var result = "";
                for (var offset = 0; offset < UUID_SIZE; ++offset) {
                    var byte = data[offset];
                    if (offset === 4 || offset === 6 || offset === 8)
                        result += "-";
                    if (byte < 16)
                        result += "0";
                    result += byte.toString(16).toLowerCase();
                }
                return result;
            }
        }
        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.
        function MakeDictionary(obj) {
            obj.__ = undefined;
            delete obj.__;
            return obj;
        }
    });
})(Reflect || (Reflect = {}));


/***/ }),

/***/ "./node_modules/snabbdom/build/h.js":
/*!******************************************!*\
  !*** ./node_modules/snabbdom/build/h.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   addNS: () => (/* binding */ addNS),
/* harmony export */   fragment: () => (/* binding */ fragment),
/* harmony export */   h: () => (/* binding */ h)
/* harmony export */ });
/* harmony import */ var _vnode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vnode */ "./node_modules/snabbdom/build/vnode.js");
/* harmony import */ var _is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is */ "./node_modules/snabbdom/build/is.js");


function addNS(data, children, sel) {
    data.ns = "http://www.w3.org/2000/svg";
    if (sel !== "foreignObject" && children !== undefined) {
        for (let i = 0; i < children.length; ++i) {
            const child = children[i];
            if (typeof child === "string")
                continue;
            const childData = child.data;
            if (childData !== undefined) {
                addNS(childData, child.children, child.sel);
            }
        }
    }
}
function h(sel, b, c) {
    let data = {};
    let children;
    let text;
    let i;
    if (c !== undefined) {
        if (b !== null) {
            data = b;
        }
        if (_is__WEBPACK_IMPORTED_MODULE_0__.array(c)) {
            children = c;
        }
        else if (_is__WEBPACK_IMPORTED_MODULE_0__.primitive(c)) {
            text = c.toString();
        }
        else if (c && c.sel) {
            children = [c];
        }
    }
    else if (b !== undefined && b !== null) {
        if (_is__WEBPACK_IMPORTED_MODULE_0__.array(b)) {
            children = b;
        }
        else if (_is__WEBPACK_IMPORTED_MODULE_0__.primitive(b)) {
            text = b.toString();
        }
        else if (b && b.sel) {
            children = [b];
        }
        else {
            data = b;
        }
    }
    if (children !== undefined) {
        for (i = 0; i < children.length; ++i) {
            if (_is__WEBPACK_IMPORTED_MODULE_0__.primitive(children[i]))
                children[i] = (0,_vnode__WEBPACK_IMPORTED_MODULE_1__.vnode)(undefined, undefined, undefined, children[i], undefined);
        }
    }
    if (sel[0] === "s" &&
        sel[1] === "v" &&
        sel[2] === "g" &&
        (sel.length === 3 || sel[3] === "." || sel[3] === "#")) {
        addNS(data, children, sel);
    }
    return (0,_vnode__WEBPACK_IMPORTED_MODULE_1__.vnode)(sel, data, children, text, undefined);
}
/**
 * @experimental
 */
function fragment(children) {
    let c;
    let text;
    if (_is__WEBPACK_IMPORTED_MODULE_0__.array(children)) {
        c = children;
    }
    else if (_is__WEBPACK_IMPORTED_MODULE_0__.primitive(c)) {
        text = children;
    }
    else if (c && c.sel) {
        c = [children];
    }
    if (c !== undefined) {
        for (let i = 0; i < c.length; ++i) {
            if (_is__WEBPACK_IMPORTED_MODULE_0__.primitive(c[i]))
                c[i] = (0,_vnode__WEBPACK_IMPORTED_MODULE_1__.vnode)(undefined, undefined, undefined, c[i], undefined);
        }
    }
    return (0,_vnode__WEBPACK_IMPORTED_MODULE_1__.vnode)(undefined, {}, c, text, undefined);
}


/***/ }),

/***/ "./node_modules/snabbdom/build/helpers/attachto.js":
/*!*********************************************************!*\
  !*** ./node_modules/snabbdom/build/helpers/attachto.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   attachTo: () => (/* binding */ attachTo)
/* harmony export */ });
function pre(vnode, newVnode) {
    const attachData = vnode.data.attachData;
    // Copy created placeholder and real element from old vnode
    newVnode.data.attachData.placeholder = attachData.placeholder;
    newVnode.data.attachData.real = attachData.real;
    // Mount real element in vnode so the patch process operates on it
    vnode.elm = vnode.data.attachData.real;
}
function post(_, vnode) {
    // Mount dummy placeholder in vnode so potential reorders use it
    vnode.elm = vnode.data.attachData.placeholder;
}
function destroy(vnode) {
    // Remove placeholder
    if (vnode.elm !== undefined) {
        vnode.elm.parentNode.removeChild(vnode.elm);
    }
    // Remove real element from where it was inserted
    vnode.elm = vnode.data.attachData.real;
}
function create(_, vnode) {
    const real = vnode.elm;
    const attachData = vnode.data.attachData;
    const placeholder = document.createElement("span");
    // Replace actual element with dummy placeholder
    // Snabbdom will then insert placeholder instead
    vnode.elm = placeholder;
    attachData.target.appendChild(real);
    attachData.real = real;
    attachData.placeholder = placeholder;
}
function attachTo(target, vnode) {
    if (vnode.data === undefined)
        vnode.data = {};
    if (vnode.data.hook === undefined)
        vnode.data.hook = {};
    const data = vnode.data;
    const hook = vnode.data.hook;
    data.attachData = { target: target, placeholder: undefined, real: undefined };
    hook.create = create;
    hook.prepatch = pre;
    hook.postpatch = post;
    hook.destroy = destroy;
    return vnode;
}


/***/ }),

/***/ "./node_modules/snabbdom/build/htmldomapi.js":
/*!***************************************************!*\
  !*** ./node_modules/snabbdom/build/htmldomapi.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   htmlDomApi: () => (/* binding */ htmlDomApi)
/* harmony export */ });
function createElement(tagName, options) {
    return document.createElement(tagName, options);
}
function createElementNS(namespaceURI, qualifiedName, options) {
    return document.createElementNS(namespaceURI, qualifiedName, options);
}
function createDocumentFragment() {
    return parseFragment(document.createDocumentFragment());
}
function createTextNode(text) {
    return document.createTextNode(text);
}
function createComment(text) {
    return document.createComment(text);
}
function insertBefore(parentNode, newNode, referenceNode) {
    if (isDocumentFragment(parentNode)) {
        let node = parentNode;
        while (node && isDocumentFragment(node)) {
            const fragment = parseFragment(node);
            node = fragment.parent;
        }
        parentNode = node !== null && node !== void 0 ? node : parentNode;
    }
    if (isDocumentFragment(newNode)) {
        newNode = parseFragment(newNode, parentNode);
    }
    if (referenceNode && isDocumentFragment(referenceNode)) {
        referenceNode = parseFragment(referenceNode).firstChildNode;
    }
    parentNode.insertBefore(newNode, referenceNode);
}
function removeChild(node, child) {
    node.removeChild(child);
}
function appendChild(node, child) {
    if (isDocumentFragment(child)) {
        child = parseFragment(child, node);
    }
    node.appendChild(child);
}
function parentNode(node) {
    if (isDocumentFragment(node)) {
        while (node && isDocumentFragment(node)) {
            const fragment = parseFragment(node);
            node = fragment.parent;
        }
        return node !== null && node !== void 0 ? node : null;
    }
    return node.parentNode;
}
function nextSibling(node) {
    var _a;
    if (isDocumentFragment(node)) {
        const fragment = parseFragment(node);
        const parent = parentNode(fragment);
        if (parent && fragment.lastChildNode) {
            const children = Array.from(parent.childNodes);
            const index = children.indexOf(fragment.lastChildNode);
            return (_a = children[index + 1]) !== null && _a !== void 0 ? _a : null;
        }
        return null;
    }
    return node.nextSibling;
}
function tagName(elm) {
    return elm.tagName;
}
function setTextContent(node, text) {
    node.textContent = text;
}
function getTextContent(node) {
    return node.textContent;
}
function isElement(node) {
    return node.nodeType === 1;
}
function isText(node) {
    return node.nodeType === 3;
}
function isComment(node) {
    return node.nodeType === 8;
}
function isDocumentFragment(node) {
    return node.nodeType === 11;
}
function parseFragment(fragmentNode, parentNode) {
    var _a, _b, _c;
    const fragment = fragmentNode;
    (_a = fragment.parent) !== null && _a !== void 0 ? _a : (fragment.parent = parentNode !== null && parentNode !== void 0 ? parentNode : null);
    (_b = fragment.firstChildNode) !== null && _b !== void 0 ? _b : (fragment.firstChildNode = fragmentNode.firstChild);
    (_c = fragment.lastChildNode) !== null && _c !== void 0 ? _c : (fragment.lastChildNode = fragmentNode.lastChild);
    return fragment;
}
const htmlDomApi = {
    createElement,
    createElementNS,
    createTextNode,
    createDocumentFragment,
    createComment,
    insertBefore,
    removeChild,
    appendChild,
    parentNode,
    nextSibling,
    tagName,
    setTextContent,
    getTextContent,
    isElement,
    isText,
    isComment,
    isDocumentFragment,
};


/***/ }),

/***/ "./node_modules/snabbdom/build/index.js":
/*!**********************************************!*\
  !*** ./node_modules/snabbdom/build/index.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Fragment: () => (/* reexport safe */ _jsx__WEBPACK_IMPORTED_MODULE_14__.Fragment),
/* harmony export */   array: () => (/* reexport safe */ _is__WEBPACK_IMPORTED_MODULE_5__.array),
/* harmony export */   attachTo: () => (/* reexport safe */ _helpers_attachto__WEBPACK_IMPORTED_MODULE_4__.attachTo),
/* harmony export */   attributesModule: () => (/* reexport safe */ _modules_attributes__WEBPACK_IMPORTED_MODULE_8__.attributesModule),
/* harmony export */   classModule: () => (/* reexport safe */ _modules_class__WEBPACK_IMPORTED_MODULE_9__.classModule),
/* harmony export */   datasetModule: () => (/* reexport safe */ _modules_dataset__WEBPACK_IMPORTED_MODULE_10__.datasetModule),
/* harmony export */   eventListenersModule: () => (/* reexport safe */ _modules_eventlisteners__WEBPACK_IMPORTED_MODULE_11__.eventListenersModule),
/* harmony export */   fragment: () => (/* reexport safe */ _h__WEBPACK_IMPORTED_MODULE_7__.fragment),
/* harmony export */   h: () => (/* reexport safe */ _h__WEBPACK_IMPORTED_MODULE_7__.h),
/* harmony export */   htmlDomApi: () => (/* reexport safe */ _htmldomapi__WEBPACK_IMPORTED_MODULE_0__.htmlDomApi),
/* harmony export */   init: () => (/* reexport safe */ _init__WEBPACK_IMPORTED_MODULE_1__.init),
/* harmony export */   jsx: () => (/* reexport safe */ _jsx__WEBPACK_IMPORTED_MODULE_14__.jsx),
/* harmony export */   primitive: () => (/* reexport safe */ _is__WEBPACK_IMPORTED_MODULE_5__.primitive),
/* harmony export */   propsModule: () => (/* reexport safe */ _modules_props__WEBPACK_IMPORTED_MODULE_12__.propsModule),
/* harmony export */   styleModule: () => (/* reexport safe */ _modules_style__WEBPACK_IMPORTED_MODULE_13__.styleModule),
/* harmony export */   thunk: () => (/* reexport safe */ _thunk__WEBPACK_IMPORTED_MODULE_2__.thunk),
/* harmony export */   toVNode: () => (/* reexport safe */ _tovnode__WEBPACK_IMPORTED_MODULE_6__.toVNode),
/* harmony export */   vnode: () => (/* reexport safe */ _vnode__WEBPACK_IMPORTED_MODULE_3__.vnode)
/* harmony export */ });
/* harmony import */ var _htmldomapi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./htmldomapi */ "./node_modules/snabbdom/build/htmldomapi.js");
/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./init */ "./node_modules/snabbdom/build/init.js");
/* harmony import */ var _thunk__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./thunk */ "./node_modules/snabbdom/build/thunk.js");
/* harmony import */ var _vnode__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./vnode */ "./node_modules/snabbdom/build/vnode.js");
/* harmony import */ var _helpers_attachto__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./helpers/attachto */ "./node_modules/snabbdom/build/helpers/attachto.js");
/* harmony import */ var _is__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./is */ "./node_modules/snabbdom/build/is.js");
/* harmony import */ var _tovnode__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./tovnode */ "./node_modules/snabbdom/build/tovnode.js");
/* harmony import */ var _h__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./h */ "./node_modules/snabbdom/build/h.js");
/* harmony import */ var _modules_attributes__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./modules/attributes */ "./node_modules/snabbdom/build/modules/attributes.js");
/* harmony import */ var _modules_class__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./modules/class */ "./node_modules/snabbdom/build/modules/class.js");
/* harmony import */ var _modules_dataset__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./modules/dataset */ "./node_modules/snabbdom/build/modules/dataset.js");
/* harmony import */ var _modules_eventlisteners__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./modules/eventlisteners */ "./node_modules/snabbdom/build/modules/eventlisteners.js");
/* harmony import */ var _modules_props__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./modules/props */ "./node_modules/snabbdom/build/modules/props.js");
/* harmony import */ var _modules_style__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./modules/style */ "./node_modules/snabbdom/build/modules/style.js");
/* harmony import */ var _jsx__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./jsx */ "./node_modules/snabbdom/build/jsx.js");
// core




// helpers




// types

// modules






// JSX



/***/ }),

/***/ "./node_modules/snabbdom/build/init.js":
/*!*********************************************!*\
  !*** ./node_modules/snabbdom/build/init.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   init: () => (/* binding */ init)
/* harmony export */ });
/* harmony import */ var _vnode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vnode */ "./node_modules/snabbdom/build/vnode.js");
/* harmony import */ var _is__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./is */ "./node_modules/snabbdom/build/is.js");
/* harmony import */ var _htmldomapi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./htmldomapi */ "./node_modules/snabbdom/build/htmldomapi.js");



function isUndef(s) {
    return s === undefined;
}
function isDef(s) {
    return s !== undefined;
}
const emptyNode = (0,_vnode__WEBPACK_IMPORTED_MODULE_0__.vnode)("", {}, [], undefined, undefined);
function sameVnode(vnode1, vnode2) {
    var _a, _b;
    const isSameKey = vnode1.key === vnode2.key;
    const isSameIs = ((_a = vnode1.data) === null || _a === void 0 ? void 0 : _a.is) === ((_b = vnode2.data) === null || _b === void 0 ? void 0 : _b.is);
    const isSameSel = vnode1.sel === vnode2.sel;
    const isSameTextOrFragment = !vnode1.sel && vnode1.sel === vnode2.sel
        ? typeof vnode1.text === typeof vnode2.text
        : true;
    return isSameSel && isSameKey && isSameIs && isSameTextOrFragment;
}
/**
 * @todo Remove this function when the document fragment is considered stable.
 */
function documentFragmentIsNotSupported() {
    throw new Error("The document fragment is not supported on this platform.");
}
function isElement(api, vnode) {
    return api.isElement(vnode);
}
function isDocumentFragment(api, vnode) {
    return api.isDocumentFragment(vnode);
}
function createKeyToOldIdx(children, beginIdx, endIdx) {
    var _a;
    const map = {};
    for (let i = beginIdx; i <= endIdx; ++i) {
        const key = (_a = children[i]) === null || _a === void 0 ? void 0 : _a.key;
        if (key !== undefined) {
            map[key] = i;
        }
    }
    return map;
}
const hooks = [
    "create",
    "update",
    "remove",
    "destroy",
    "pre",
    "post",
];
function init(modules, domApi, options) {
    const cbs = {
        create: [],
        update: [],
        remove: [],
        destroy: [],
        pre: [],
        post: [],
    };
    const api = domApi !== undefined ? domApi : _htmldomapi__WEBPACK_IMPORTED_MODULE_1__.htmlDomApi;
    for (const hook of hooks) {
        for (const module of modules) {
            const currentHook = module[hook];
            if (currentHook !== undefined) {
                cbs[hook].push(currentHook);
            }
        }
    }
    function emptyNodeAt(elm) {
        const id = elm.id ? "#" + elm.id : "";
        // elm.className doesn't return a string when elm is an SVG element inside a shadowRoot.
        // https://stackoverflow.com/questions/29454340/detecting-classname-of-svganimatedstring
        const classes = elm.getAttribute("class");
        const c = classes ? "." + classes.split(" ").join(".") : "";
        return (0,_vnode__WEBPACK_IMPORTED_MODULE_0__.vnode)(api.tagName(elm).toLowerCase() + id + c, {}, [], undefined, elm);
    }
    function emptyDocumentFragmentAt(frag) {
        return (0,_vnode__WEBPACK_IMPORTED_MODULE_0__.vnode)(undefined, {}, [], undefined, frag);
    }
    function createRmCb(childElm, listeners) {
        return function rmCb() {
            if (--listeners === 0) {
                const parent = api.parentNode(childElm);
                api.removeChild(parent, childElm);
            }
        };
    }
    function createElm(vnode, insertedVnodeQueue) {
        var _a, _b, _c, _d;
        let i;
        let data = vnode.data;
        if (data !== undefined) {
            const init = (_a = data.hook) === null || _a === void 0 ? void 0 : _a.init;
            if (isDef(init)) {
                init(vnode);
                data = vnode.data;
            }
        }
        const children = vnode.children;
        const sel = vnode.sel;
        if (sel === "!") {
            if (isUndef(vnode.text)) {
                vnode.text = "";
            }
            vnode.elm = api.createComment(vnode.text);
        }
        else if (sel !== undefined) {
            // Parse selector
            const hashIdx = sel.indexOf("#");
            const dotIdx = sel.indexOf(".", hashIdx);
            const hash = hashIdx > 0 ? hashIdx : sel.length;
            const dot = dotIdx > 0 ? dotIdx : sel.length;
            const tag = hashIdx !== -1 || dotIdx !== -1
                ? sel.slice(0, Math.min(hash, dot))
                : sel;
            const elm = (vnode.elm =
                isDef(data) && isDef((i = data.ns))
                    ? api.createElementNS(i, tag, data)
                    : api.createElement(tag, data));
            if (hash < dot)
                elm.setAttribute("id", sel.slice(hash + 1, dot));
            if (dotIdx > 0)
                elm.setAttribute("class", sel.slice(dot + 1).replace(/\./g, " "));
            for (i = 0; i < cbs.create.length; ++i)
                cbs.create[i](emptyNode, vnode);
            if (_is__WEBPACK_IMPORTED_MODULE_2__.array(children)) {
                for (i = 0; i < children.length; ++i) {
                    const ch = children[i];
                    if (ch != null) {
                        api.appendChild(elm, createElm(ch, insertedVnodeQueue));
                    }
                }
            }
            else if (_is__WEBPACK_IMPORTED_MODULE_2__.primitive(vnode.text)) {
                api.appendChild(elm, api.createTextNode(vnode.text));
            }
            const hook = vnode.data.hook;
            if (isDef(hook)) {
                (_b = hook.create) === null || _b === void 0 ? void 0 : _b.call(hook, emptyNode, vnode);
                if (hook.insert) {
                    insertedVnodeQueue.push(vnode);
                }
            }
        }
        else if (((_c = options === null || options === void 0 ? void 0 : options.experimental) === null || _c === void 0 ? void 0 : _c.fragments) && vnode.children) {
            vnode.elm = ((_d = api.createDocumentFragment) !== null && _d !== void 0 ? _d : documentFragmentIsNotSupported)();
            for (i = 0; i < cbs.create.length; ++i)
                cbs.create[i](emptyNode, vnode);
            for (i = 0; i < vnode.children.length; ++i) {
                const ch = vnode.children[i];
                if (ch != null) {
                    api.appendChild(vnode.elm, createElm(ch, insertedVnodeQueue));
                }
            }
        }
        else {
            vnode.elm = api.createTextNode(vnode.text);
        }
        return vnode.elm;
    }
    function addVnodes(parentElm, before, vnodes, startIdx, endIdx, insertedVnodeQueue) {
        for (; startIdx <= endIdx; ++startIdx) {
            const ch = vnodes[startIdx];
            if (ch != null) {
                api.insertBefore(parentElm, createElm(ch, insertedVnodeQueue), before);
            }
        }
    }
    function invokeDestroyHook(vnode) {
        var _a, _b;
        const data = vnode.data;
        if (data !== undefined) {
            (_b = (_a = data === null || data === void 0 ? void 0 : data.hook) === null || _a === void 0 ? void 0 : _a.destroy) === null || _b === void 0 ? void 0 : _b.call(_a, vnode);
            for (let i = 0; i < cbs.destroy.length; ++i)
                cbs.destroy[i](vnode);
            if (vnode.children !== undefined) {
                for (let j = 0; j < vnode.children.length; ++j) {
                    const child = vnode.children[j];
                    if (child != null && typeof child !== "string") {
                        invokeDestroyHook(child);
                    }
                }
            }
        }
    }
    function removeVnodes(parentElm, vnodes, startIdx, endIdx) {
        var _a, _b;
        for (; startIdx <= endIdx; ++startIdx) {
            let listeners;
            let rm;
            const ch = vnodes[startIdx];
            if (ch != null) {
                if (isDef(ch.sel)) {
                    invokeDestroyHook(ch);
                    listeners = cbs.remove.length + 1;
                    rm = createRmCb(ch.elm, listeners);
                    for (let i = 0; i < cbs.remove.length; ++i)
                        cbs.remove[i](ch, rm);
                    const removeHook = (_b = (_a = ch === null || ch === void 0 ? void 0 : ch.data) === null || _a === void 0 ? void 0 : _a.hook) === null || _b === void 0 ? void 0 : _b.remove;
                    if (isDef(removeHook)) {
                        removeHook(ch, rm);
                    }
                    else {
                        rm();
                    }
                }
                else if (ch.children) {
                    // Fragment node
                    invokeDestroyHook(ch);
                    removeVnodes(parentElm, ch.children, 0, ch.children.length - 1);
                }
                else {
                    // Text node
                    api.removeChild(parentElm, ch.elm);
                }
            }
        }
    }
    function updateChildren(parentElm, oldCh, newCh, insertedVnodeQueue) {
        let oldStartIdx = 0;
        let newStartIdx = 0;
        let oldEndIdx = oldCh.length - 1;
        let oldStartVnode = oldCh[0];
        let oldEndVnode = oldCh[oldEndIdx];
        let newEndIdx = newCh.length - 1;
        let newStartVnode = newCh[0];
        let newEndVnode = newCh[newEndIdx];
        let oldKeyToIdx;
        let idxInOld;
        let elmToMove;
        let before;
        while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {
            if (oldStartVnode == null) {
                oldStartVnode = oldCh[++oldStartIdx]; // Vnode might have been moved left
            }
            else if (oldEndVnode == null) {
                oldEndVnode = oldCh[--oldEndIdx];
            }
            else if (newStartVnode == null) {
                newStartVnode = newCh[++newStartIdx];
            }
            else if (newEndVnode == null) {
                newEndVnode = newCh[--newEndIdx];
            }
            else if (sameVnode(oldStartVnode, newStartVnode)) {
                patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);
                oldStartVnode = oldCh[++oldStartIdx];
                newStartVnode = newCh[++newStartIdx];
            }
            else if (sameVnode(oldEndVnode, newEndVnode)) {
                patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);
                oldEndVnode = oldCh[--oldEndIdx];
                newEndVnode = newCh[--newEndIdx];
            }
            else if (sameVnode(oldStartVnode, newEndVnode)) {
                // Vnode moved right
                patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);
                api.insertBefore(parentElm, oldStartVnode.elm, api.nextSibling(oldEndVnode.elm));
                oldStartVnode = oldCh[++oldStartIdx];
                newEndVnode = newCh[--newEndIdx];
            }
            else if (sameVnode(oldEndVnode, newStartVnode)) {
                // Vnode moved left
                patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);
                api.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);
                oldEndVnode = oldCh[--oldEndIdx];
                newStartVnode = newCh[++newStartIdx];
            }
            else {
                if (oldKeyToIdx === undefined) {
                    oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);
                }
                idxInOld = oldKeyToIdx[newStartVnode.key];
                if (isUndef(idxInOld)) {
                    // New element
                    api.insertBefore(parentElm, createElm(newStartVnode, insertedVnodeQueue), oldStartVnode.elm);
                }
                else {
                    elmToMove = oldCh[idxInOld];
                    if (elmToMove.sel !== newStartVnode.sel) {
                        api.insertBefore(parentElm, createElm(newStartVnode, insertedVnodeQueue), oldStartVnode.elm);
                    }
                    else {
                        patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);
                        oldCh[idxInOld] = undefined;
                        api.insertBefore(parentElm, elmToMove.elm, oldStartVnode.elm);
                    }
                }
                newStartVnode = newCh[++newStartIdx];
            }
        }
        if (newStartIdx <= newEndIdx) {
            before = newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].elm;
            addVnodes(parentElm, before, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);
        }
        if (oldStartIdx <= oldEndIdx) {
            removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);
        }
    }
    function patchVnode(oldVnode, vnode, insertedVnodeQueue) {
        var _a, _b, _c, _d, _e, _f, _g, _h;
        const hook = (_a = vnode.data) === null || _a === void 0 ? void 0 : _a.hook;
        (_b = hook === null || hook === void 0 ? void 0 : hook.prepatch) === null || _b === void 0 ? void 0 : _b.call(hook, oldVnode, vnode);
        const elm = (vnode.elm = oldVnode.elm);
        if (oldVnode === vnode)
            return;
        if (vnode.data !== undefined ||
            (isDef(vnode.text) && vnode.text !== oldVnode.text)) {
            (_c = vnode.data) !== null && _c !== void 0 ? _c : (vnode.data = {});
            (_d = oldVnode.data) !== null && _d !== void 0 ? _d : (oldVnode.data = {});
            for (let i = 0; i < cbs.update.length; ++i)
                cbs.update[i](oldVnode, vnode);
            (_g = (_f = (_e = vnode.data) === null || _e === void 0 ? void 0 : _e.hook) === null || _f === void 0 ? void 0 : _f.update) === null || _g === void 0 ? void 0 : _g.call(_f, oldVnode, vnode);
        }
        const oldCh = oldVnode.children;
        const ch = vnode.children;
        if (isUndef(vnode.text)) {
            if (isDef(oldCh) && isDef(ch)) {
                if (oldCh !== ch)
                    updateChildren(elm, oldCh, ch, insertedVnodeQueue);
            }
            else if (isDef(ch)) {
                if (isDef(oldVnode.text))
                    api.setTextContent(elm, "");
                addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);
            }
            else if (isDef(oldCh)) {
                removeVnodes(elm, oldCh, 0, oldCh.length - 1);
            }
            else if (isDef(oldVnode.text)) {
                api.setTextContent(elm, "");
            }
        }
        else if (oldVnode.text !== vnode.text) {
            if (isDef(oldCh)) {
                removeVnodes(elm, oldCh, 0, oldCh.length - 1);
            }
            api.setTextContent(elm, vnode.text);
        }
        (_h = hook === null || hook === void 0 ? void 0 : hook.postpatch) === null || _h === void 0 ? void 0 : _h.call(hook, oldVnode, vnode);
    }
    return function patch(oldVnode, vnode) {
        let i, elm, parent;
        const insertedVnodeQueue = [];
        for (i = 0; i < cbs.pre.length; ++i)
            cbs.pre[i]();
        if (isElement(api, oldVnode)) {
            oldVnode = emptyNodeAt(oldVnode);
        }
        else if (isDocumentFragment(api, oldVnode)) {
            oldVnode = emptyDocumentFragmentAt(oldVnode);
        }
        if (sameVnode(oldVnode, vnode)) {
            patchVnode(oldVnode, vnode, insertedVnodeQueue);
        }
        else {
            elm = oldVnode.elm;
            parent = api.parentNode(elm);
            createElm(vnode, insertedVnodeQueue);
            if (parent !== null) {
                api.insertBefore(parent, vnode.elm, api.nextSibling(elm));
                removeVnodes(parent, [oldVnode], 0, 0);
            }
        }
        for (i = 0; i < insertedVnodeQueue.length; ++i) {
            insertedVnodeQueue[i].data.hook.insert(insertedVnodeQueue[i]);
        }
        for (i = 0; i < cbs.post.length; ++i)
            cbs.post[i]();
        return vnode;
    };
}


/***/ }),

/***/ "./node_modules/snabbdom/build/is.js":
/*!*******************************************!*\
  !*** ./node_modules/snabbdom/build/is.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   array: () => (/* binding */ array),
/* harmony export */   primitive: () => (/* binding */ primitive)
/* harmony export */ });
const array = Array.isArray;
function primitive(s) {
    return (typeof s === "string" ||
        typeof s === "number" ||
        s instanceof String ||
        s instanceof Number);
}


/***/ }),

/***/ "./node_modules/snabbdom/build/jsx.js":
/*!********************************************!*\
  !*** ./node_modules/snabbdom/build/jsx.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Fragment: () => (/* binding */ Fragment),
/* harmony export */   jsx: () => (/* binding */ jsx)
/* harmony export */ });
/* harmony import */ var _vnode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vnode */ "./node_modules/snabbdom/build/vnode.js");
/* harmony import */ var _h__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./h */ "./node_modules/snabbdom/build/h.js");
/* eslint-disable @typescript-eslint/no-namespace, import/export */


function Fragment(data, ...children) {
    const flatChildren = flattenAndFilter(children, []);
    if (flatChildren.length === 1 &&
        !flatChildren[0].sel &&
        flatChildren[0].text) {
        // only child is a simple text node, pass as text for a simpler vtree
        return (0,_vnode__WEBPACK_IMPORTED_MODULE_0__.vnode)(undefined, undefined, undefined, flatChildren[0].text, undefined);
    }
    else {
        return (0,_vnode__WEBPACK_IMPORTED_MODULE_0__.vnode)(undefined, data !== null && data !== void 0 ? data : {}, flatChildren, undefined, undefined);
    }
}
function flattenAndFilter(children, flattened) {
    for (const child of children) {
        // filter out falsey children, except 0 since zero can be a valid value e.g inside a chart
        if (child !== undefined &&
            child !== null &&
            child !== false &&
            child !== "") {
            if (Array.isArray(child)) {
                flattenAndFilter(child, flattened);
            }
            else if (typeof child === "string" ||
                typeof child === "number" ||
                typeof child === "boolean") {
                flattened.push((0,_vnode__WEBPACK_IMPORTED_MODULE_0__.vnode)(undefined, undefined, undefined, String(child), undefined));
            }
            else {
                flattened.push(child);
            }
        }
    }
    return flattened;
}
/**
 * jsx/tsx compatible factory function
 * see: https://www.typescriptlang.org/docs/handbook/jsx.html#factory-functions
 */
function jsx(tag, data, ...children) {
    const flatChildren = flattenAndFilter(children, []);
    if (typeof tag === "function") {
        // tag is a function component
        return tag(data, flatChildren);
    }
    else {
        if (flatChildren.length === 1 &&
            !flatChildren[0].sel &&
            flatChildren[0].text) {
            // only child is a simple text node, pass as text for a simpler vtree
            return (0,_h__WEBPACK_IMPORTED_MODULE_1__.h)(tag, data, flatChildren[0].text);
        }
        else {
            return (0,_h__WEBPACK_IMPORTED_MODULE_1__.h)(tag, data, flatChildren);
        }
    }
}
(function (jsx) {
})(jsx || (jsx = {}));


/***/ }),

/***/ "./node_modules/snabbdom/build/modules/attributes.js":
/*!***********************************************************!*\
  !*** ./node_modules/snabbdom/build/modules/attributes.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   attributesModule: () => (/* binding */ attributesModule)
/* harmony export */ });
const xlinkNS = "http://www.w3.org/1999/xlink";
const xmlNS = "http://www.w3.org/XML/1998/namespace";
const colonChar = 58;
const xChar = 120;
function updateAttrs(oldVnode, vnode) {
    let key;
    const elm = vnode.elm;
    let oldAttrs = oldVnode.data.attrs;
    let attrs = vnode.data.attrs;
    if (!oldAttrs && !attrs)
        return;
    if (oldAttrs === attrs)
        return;
    oldAttrs = oldAttrs || {};
    attrs = attrs || {};
    // update modified attributes, add new attributes
    for (key in attrs) {
        const cur = attrs[key];
        const old = oldAttrs[key];
        if (old !== cur) {
            if (cur === true) {
                elm.setAttribute(key, "");
            }
            else if (cur === false) {
                elm.removeAttribute(key);
            }
            else {
                if (key.charCodeAt(0) !== xChar) {
                    elm.setAttribute(key, cur);
                }
                else if (key.charCodeAt(3) === colonChar) {
                    // Assume xml namespace
                    elm.setAttributeNS(xmlNS, key, cur);
                }
                else if (key.charCodeAt(5) === colonChar) {
                    // Assume xlink namespace
                    elm.setAttributeNS(xlinkNS, key, cur);
                }
                else {
                    elm.setAttribute(key, cur);
                }
            }
        }
    }
    // remove removed attributes
    // use `in` operator since the previous `for` iteration uses it (.i.e. add even attributes with undefined value)
    // the other option is to remove all attributes with value == undefined
    for (key in oldAttrs) {
        if (!(key in attrs)) {
            elm.removeAttribute(key);
        }
    }
}
const attributesModule = {
    create: updateAttrs,
    update: updateAttrs,
};


/***/ }),

/***/ "./node_modules/snabbdom/build/modules/class.js":
/*!******************************************************!*\
  !*** ./node_modules/snabbdom/build/modules/class.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   classModule: () => (/* binding */ classModule)
/* harmony export */ });
function updateClass(oldVnode, vnode) {
    let cur;
    let name;
    const elm = vnode.elm;
    let oldClass = oldVnode.data.class;
    let klass = vnode.data.class;
    if (!oldClass && !klass)
        return;
    if (oldClass === klass)
        return;
    oldClass = oldClass || {};
    klass = klass || {};
    for (name in oldClass) {
        if (oldClass[name] && !Object.prototype.hasOwnProperty.call(klass, name)) {
            // was `true` and now not provided
            elm.classList.remove(name);
        }
    }
    for (name in klass) {
        cur = klass[name];
        if (cur !== oldClass[name]) {
            elm.classList[cur ? "add" : "remove"](name);
        }
    }
}
const classModule = { create: updateClass, update: updateClass };


/***/ }),

/***/ "./node_modules/snabbdom/build/modules/dataset.js":
/*!********************************************************!*\
  !*** ./node_modules/snabbdom/build/modules/dataset.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   datasetModule: () => (/* binding */ datasetModule)
/* harmony export */ });
const CAPS_REGEX = /[A-Z]/g;
function updateDataset(oldVnode, vnode) {
    const elm = vnode.elm;
    let oldDataset = oldVnode.data.dataset;
    let dataset = vnode.data.dataset;
    let key;
    if (!oldDataset && !dataset)
        return;
    if (oldDataset === dataset)
        return;
    oldDataset = oldDataset || {};
    dataset = dataset || {};
    const d = elm.dataset;
    for (key in oldDataset) {
        if (!dataset[key]) {
            if (d) {
                if (key in d) {
                    delete d[key];
                }
            }
            else {
                elm.removeAttribute("data-" + key.replace(CAPS_REGEX, "-$&").toLowerCase());
            }
        }
    }
    for (key in dataset) {
        if (oldDataset[key] !== dataset[key]) {
            if (d) {
                d[key] = dataset[key];
            }
            else {
                elm.setAttribute("data-" + key.replace(CAPS_REGEX, "-$&").toLowerCase(), dataset[key]);
            }
        }
    }
}
const datasetModule = {
    create: updateDataset,
    update: updateDataset,
};


/***/ }),

/***/ "./node_modules/snabbdom/build/modules/eventlisteners.js":
/*!***************************************************************!*\
  !*** ./node_modules/snabbdom/build/modules/eventlisteners.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   eventListenersModule: () => (/* binding */ eventListenersModule)
/* harmony export */ });
function invokeHandler(handler, vnode, event) {
    if (typeof handler === "function") {
        // call function handler
        handler.call(vnode, event, vnode);
    }
    else if (typeof handler === "object") {
        // call multiple handlers
        for (let i = 0; i < handler.length; i++) {
            invokeHandler(handler[i], vnode, event);
        }
    }
}
function handleEvent(event, vnode) {
    const name = event.type;
    const on = vnode.data.on;
    // call event handler(s) if exists
    if (on && on[name]) {
        invokeHandler(on[name], vnode, event);
    }
}
function createListener() {
    return function handler(event) {
        handleEvent(event, handler.vnode);
    };
}
function updateEventListeners(oldVnode, vnode) {
    const oldOn = oldVnode.data.on;
    const oldListener = oldVnode.listener;
    const oldElm = oldVnode.elm;
    const on = vnode && vnode.data.on;
    const elm = (vnode && vnode.elm);
    let name;
    // optimization for reused immutable handlers
    if (oldOn === on) {
        return;
    }
    // remove existing listeners which no longer used
    if (oldOn && oldListener) {
        // if element changed or deleted we remove all existing listeners unconditionally
        if (!on) {
            for (name in oldOn) {
                // remove listener if element was changed or existing listeners removed
                oldElm.removeEventListener(name, oldListener, false);
            }
        }
        else {
            for (name in oldOn) {
                // remove listener if existing listener removed
                if (!on[name]) {
                    oldElm.removeEventListener(name, oldListener, false);
                }
            }
        }
    }
    // add new listeners which has not already attached
    if (on) {
        // reuse existing listener or create new
        const listener = (vnode.listener =
            oldVnode.listener || createListener());
        // update vnode for listener
        listener.vnode = vnode;
        // if element changed or added we add all needed listeners unconditionally
        if (!oldOn) {
            for (name in on) {
                // add listener if element was changed or new listeners added
                elm.addEventListener(name, listener, false);
            }
        }
        else {
            for (name in on) {
                // add listener if new listener added
                if (!oldOn[name]) {
                    elm.addEventListener(name, listener, false);
                }
            }
        }
    }
}
const eventListenersModule = {
    create: updateEventListeners,
    update: updateEventListeners,
    destroy: updateEventListeners,
};


/***/ }),

/***/ "./node_modules/snabbdom/build/modules/props.js":
/*!******************************************************!*\
  !*** ./node_modules/snabbdom/build/modules/props.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   propsModule: () => (/* binding */ propsModule)
/* harmony export */ });
function updateProps(oldVnode, vnode) {
    let key;
    let cur;
    let old;
    const elm = vnode.elm;
    let oldProps = oldVnode.data.props;
    let props = vnode.data.props;
    if (!oldProps && !props)
        return;
    if (oldProps === props)
        return;
    oldProps = oldProps || {};
    props = props || {};
    for (key in props) {
        cur = props[key];
        old = oldProps[key];
        if (old !== cur && (key !== "value" || elm[key] !== cur)) {
            elm[key] = cur;
        }
    }
}
const propsModule = { create: updateProps, update: updateProps };


/***/ }),

/***/ "./node_modules/snabbdom/build/modules/style.js":
/*!******************************************************!*\
  !*** ./node_modules/snabbdom/build/modules/style.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   styleModule: () => (/* binding */ styleModule)
/* harmony export */ });
// Bindig `requestAnimationFrame` like this fixes a bug in IE/Edge. See #360 and #409.
const raf = (typeof window !== "undefined" &&
    window.requestAnimationFrame.bind(window)) ||
    setTimeout;
const nextFrame = function (fn) {
    raf(function () {
        raf(fn);
    });
};
let reflowForced = false;
function setNextFrame(obj, prop, val) {
    nextFrame(function () {
        obj[prop] = val;
    });
}
function updateStyle(oldVnode, vnode) {
    let cur;
    let name;
    const elm = vnode.elm;
    let oldStyle = oldVnode.data.style;
    let style = vnode.data.style;
    if (!oldStyle && !style)
        return;
    if (oldStyle === style)
        return;
    oldStyle = oldStyle || {};
    style = style || {};
    const oldHasDel = "delayed" in oldStyle;
    for (name in oldStyle) {
        if (!style[name]) {
            if (name[0] === "-" && name[1] === "-") {
                elm.style.removeProperty(name);
            }
            else {
                elm.style[name] = "";
            }
        }
    }
    for (name in style) {
        cur = style[name];
        if (name === "delayed" && style.delayed) {
            for (const name2 in style.delayed) {
                cur = style.delayed[name2];
                if (!oldHasDel || cur !== oldStyle.delayed[name2]) {
                    setNextFrame(elm.style, name2, cur);
                }
            }
        }
        else if (name !== "remove" && cur !== oldStyle[name]) {
            if (name[0] === "-" && name[1] === "-") {
                elm.style.setProperty(name, cur);
            }
            else {
                elm.style[name] = cur;
            }
        }
    }
}
function applyDestroyStyle(vnode) {
    let style;
    let name;
    const elm = vnode.elm;
    const s = vnode.data.style;
    if (!s || !(style = s.destroy))
        return;
    for (name in style) {
        elm.style[name] = style[name];
    }
}
function applyRemoveStyle(vnode, rm) {
    const s = vnode.data.style;
    if (!s || !s.remove) {
        rm();
        return;
    }
    if (!reflowForced) {
        // eslint-disable-next-line @typescript-eslint/no-unused-expressions
        vnode.elm.offsetLeft;
        reflowForced = true;
    }
    let name;
    const elm = vnode.elm;
    let i = 0;
    const style = s.remove;
    let amount = 0;
    const applied = [];
    for (name in style) {
        applied.push(name);
        elm.style[name] = style[name];
    }
    const compStyle = getComputedStyle(elm);
    const props = compStyle["transition-property"].split(", ");
    for (; i < props.length; ++i) {
        if (applied.indexOf(props[i]) !== -1)
            amount++;
    }
    elm.addEventListener("transitionend", function (ev) {
        if (ev.target === elm)
            --amount;
        if (amount === 0)
            rm();
    });
}
function forceReflow() {
    reflowForced = false;
}
const styleModule = {
    pre: forceReflow,
    create: updateStyle,
    update: updateStyle,
    destroy: applyDestroyStyle,
    remove: applyRemoveStyle,
};


/***/ }),

/***/ "./node_modules/snabbdom/build/thunk.js":
/*!**********************************************!*\
  !*** ./node_modules/snabbdom/build/thunk.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   thunk: () => (/* binding */ thunk)
/* harmony export */ });
/* harmony import */ var _h__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./h */ "./node_modules/snabbdom/build/h.js");

function copyToThunk(vnode, thunk) {
    var _a;
    const ns = (_a = thunk.data) === null || _a === void 0 ? void 0 : _a.ns;
    vnode.data.fn = thunk.data.fn;
    vnode.data.args = thunk.data.args;
    thunk.data = vnode.data;
    thunk.children = vnode.children;
    thunk.text = vnode.text;
    thunk.elm = vnode.elm;
    if (ns)
        (0,_h__WEBPACK_IMPORTED_MODULE_0__.addNS)(thunk.data, thunk.children, thunk.sel);
}
function init(thunk) {
    const cur = thunk.data;
    const vnode = cur.fn(...cur.args);
    copyToThunk(vnode, thunk);
}
function prepatch(oldVnode, thunk) {
    let i;
    const old = oldVnode.data;
    const cur = thunk.data;
    const oldArgs = old.args;
    const args = cur.args;
    if (old.fn !== cur.fn || oldArgs.length !== args.length) {
        copyToThunk(cur.fn(...args), thunk);
        return;
    }
    for (i = 0; i < args.length; ++i) {
        if (oldArgs[i] !== args[i]) {
            copyToThunk(cur.fn(...args), thunk);
            return;
        }
    }
    copyToThunk(oldVnode, thunk);
}
const thunk = function thunk(sel, key, fn, args) {
    if (args === undefined) {
        args = fn;
        fn = key;
        key = undefined;
    }
    return (0,_h__WEBPACK_IMPORTED_MODULE_0__.h)(sel, {
        key: key,
        hook: { init, prepatch },
        fn: fn,
        args: args,
    });
};


/***/ }),

/***/ "./node_modules/snabbdom/build/tovnode.js":
/*!************************************************!*\
  !*** ./node_modules/snabbdom/build/tovnode.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   toVNode: () => (/* binding */ toVNode)
/* harmony export */ });
/* harmony import */ var _h__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./h */ "./node_modules/snabbdom/build/h.js");
/* harmony import */ var _vnode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vnode */ "./node_modules/snabbdom/build/vnode.js");
/* harmony import */ var _htmldomapi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./htmldomapi */ "./node_modules/snabbdom/build/htmldomapi.js");



function toVNode(node, domApi) {
    const api = domApi !== undefined ? domApi : _htmldomapi__WEBPACK_IMPORTED_MODULE_0__.htmlDomApi;
    let text;
    if (api.isElement(node)) {
        const id = node.id ? "#" + node.id : "";
        const cn = node.getAttribute("class");
        const c = cn ? "." + cn.split(" ").join(".") : "";
        const sel = api.tagName(node).toLowerCase() + id + c;
        const attrs = {};
        const dataset = {};
        const data = {};
        const children = [];
        let name;
        let i, n;
        const elmAttrs = node.attributes;
        const elmChildren = node.childNodes;
        for (i = 0, n = elmAttrs.length; i < n; i++) {
            name = elmAttrs[i].nodeName;
            if (name[0] === "d" &&
                name[1] === "a" &&
                name[2] === "t" &&
                name[3] === "a" &&
                name[4] === "-") {
                dataset[name.slice(5)] = elmAttrs[i].nodeValue || "";
            }
            else if (name !== "id" && name !== "class") {
                attrs[name] = elmAttrs[i].nodeValue;
            }
        }
        for (i = 0, n = elmChildren.length; i < n; i++) {
            children.push(toVNode(elmChildren[i], domApi));
        }
        if (Object.keys(attrs).length > 0)
            data.attrs = attrs;
        if (Object.keys(dataset).length > 0)
            data.dataset = dataset;
        if (sel[0] === "s" &&
            sel[1] === "v" &&
            sel[2] === "g" &&
            (sel.length === 3 || sel[3] === "." || sel[3] === "#")) {
            (0,_h__WEBPACK_IMPORTED_MODULE_1__.addNS)(data, children, sel);
        }
        return (0,_vnode__WEBPACK_IMPORTED_MODULE_2__.vnode)(sel, data, children, undefined, node);
    }
    else if (api.isText(node)) {
        text = api.getTextContent(node);
        return (0,_vnode__WEBPACK_IMPORTED_MODULE_2__.vnode)(undefined, undefined, undefined, text, node);
    }
    else if (api.isComment(node)) {
        text = api.getTextContent(node);
        return (0,_vnode__WEBPACK_IMPORTED_MODULE_2__.vnode)("!", {}, [], text, node);
    }
    else {
        return (0,_vnode__WEBPACK_IMPORTED_MODULE_2__.vnode)("", {}, [], undefined, node);
    }
}


/***/ }),

/***/ "./node_modules/snabbdom/build/vnode.js":
/*!**********************************************!*\
  !*** ./node_modules/snabbdom/build/vnode.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   vnode: () => (/* binding */ vnode)
/* harmony export */ });
function vnode(sel, data, children, text, elm) {
    const key = data === undefined ? undefined : data.key;
    return { sel, data, children, text, elm, key };
}


/***/ }),

/***/ "./node_modules/sprotty-protocol/lib/action-handler.js":
/*!*************************************************************!*\
  !*** ./node_modules/sprotty-protocol/lib/action-handler.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ServerActionHandlerRegistry = void 0;
/**
 * Use this service to register handlers to specific actions. The `DiagramServer` queries this registry
 * when an action is received from the client, and falls back to the built-in behavior if no handlers
 * are found.
 */
var ServerActionHandlerRegistry = /** @class */ (function () {
    function ServerActionHandlerRegistry() {
        this.handlers = new Map();
    }
    /**
     * Returns the action handlers for the given action kind, or `undefined` if there are none.
     */
    ServerActionHandlerRegistry.prototype.getHandler = function (kind) {
        return this.handlers.get(kind);
    };
    /**
     * Add an action handler to be called when an action of the specified kind is received.
     */
    ServerActionHandlerRegistry.prototype.onAction = function (kind, handler) {
        if (this.handlers.has(kind)) {
            this.handlers.get(kind).push(handler);
        }
        else {
            this.handlers.set(kind, [handler]);
        }
    };
    /**
     * Remove an action handler that was previously added with `onAction`.
     */
    ServerActionHandlerRegistry.prototype.removeActionHandler = function (kind, handler) {
        var list = this.handlers.get(kind);
        if (list) {
            var index = list.indexOf(handler);
            if (index >= 0) {
                list.splice(index, 1);
            }
        }
    };
    return ServerActionHandlerRegistry;
}());
exports.ServerActionHandlerRegistry = ServerActionHandlerRegistry;


/***/ }),

/***/ "./node_modules/sprotty-protocol/lib/actions.js":
/*!******************************************************!*\
  !*** ./node_modules/sprotty-protocol/lib/actions.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ReconnectAction = exports.ApplyLabelEditAction = exports.DeleteElementAction = exports.CreateElementAction = exports.HoverFeedbackAction = exports.MoveAction = exports.RedoAction = exports.UndoAction = exports.BringToFrontAction = exports.SetViewportAction = exports.FitToScreenAction = exports.CenterAction = exports.LayoutAction = exports.OpenAction = exports.CollapseExpandAllAction = exports.CollapseExpandAction = exports.SelectAllAction = exports.SelectAction = exports.LoggingAction = exports.ComputedBoundsAction = exports.RequestBoundsAction = exports.SetBoundsAction = exports.SetPopupModelAction = exports.RequestPopupModelAction = exports.UpdateModelAction = exports.SetModelAction = exports.RequestModelAction = exports.RejectAction = exports.isResponseAction = exports.generateRequestId = exports.isRequestAction = exports.isAction = exports.isActionMessage = void 0;
var object_1 = __webpack_require__(/*! ./utils/object */ "./node_modules/sprotty-protocol/lib/utils/object.js");
function isActionMessage(object) {
    return (0, object_1.hasOwnProperty)(object, 'action');
}
exports.isActionMessage = isActionMessage;
function isAction(object) {
    return (0, object_1.hasOwnProperty)(object, 'kind', 'string');
}
exports.isAction = isAction;
function isRequestAction(object) {
    return (0, object_1.hasOwnProperty)(object, 'requestId', 'string');
}
exports.isRequestAction = isRequestAction;
var nextRequestId = 1;
/**
 * Generate a unique `requestId` for a request action.
 */
function generateRequestId() {
    return (nextRequestId++).toString();
}
exports.generateRequestId = generateRequestId;
/**
 * A response action is sent to respond to a request action. The `responseId` must match
 * the `requestId` of the preceding request. In case the `responseId` is empty or undefined,
 * the action is handled as standalone, i.e. it was fired without a preceding request.
 */
function isResponseAction(object) {
    return (0, object_1.hasOwnProperty)(object, 'responseId', 'string') && object.responseId !== '';
}
exports.isResponseAction = isResponseAction;
var RejectAction;
(function (RejectAction) {
    RejectAction.KIND = 'rejectRequest';
    function create(options) {
        return {
            kind: RejectAction.KIND,
            message: options.message,
            detail: options.detail,
            responseId: options.requestId
        };
    }
    RejectAction.create = create;
})(RejectAction = exports.RejectAction || (exports.RejectAction = {}));
var RequestModelAction;
(function (RequestModelAction) {
    RequestModelAction.KIND = 'requestModel';
    function create(options) {
        return {
            kind: RequestModelAction.KIND,
            options: options,
            requestId: generateRequestId()
        };
    }
    RequestModelAction.create = create;
})(RequestModelAction = exports.RequestModelAction || (exports.RequestModelAction = {}));
var SetModelAction;
(function (SetModelAction) {
    SetModelAction.KIND = 'setModel';
    function create(newRoot, requestId) {
        if (requestId === void 0) { requestId = ''; }
        return {
            kind: SetModelAction.KIND,
            newRoot: newRoot,
            responseId: requestId
        };
    }
    SetModelAction.create = create;
})(SetModelAction = exports.SetModelAction || (exports.SetModelAction = {}));
var UpdateModelAction;
(function (UpdateModelAction) {
    UpdateModelAction.KIND = 'updateModel';
    function create(input, options) {
        if (options === void 0) { options = {}; }
        if (Array.isArray(input)) {
            return {
                kind: UpdateModelAction.KIND,
                matches: input,
                animate: options.animate,
                cause: options.cause
            };
        }
        else {
            return {
                kind: UpdateModelAction.KIND,
                newRoot: input,
                animate: options.animate,
                cause: options.cause
            };
        }
    }
    UpdateModelAction.create = create;
})(UpdateModelAction = exports.UpdateModelAction || (exports.UpdateModelAction = {}));
var RequestPopupModelAction;
(function (RequestPopupModelAction) {
    RequestPopupModelAction.KIND = 'requestPopupModel';
    function create(options) {
        return {
            kind: RequestPopupModelAction.KIND,
            elementId: options.elementId,
            bounds: options.bounds,
            requestId: generateRequestId()
        };
    }
    RequestPopupModelAction.create = create;
})(RequestPopupModelAction = exports.RequestPopupModelAction || (exports.RequestPopupModelAction = {}));
var SetPopupModelAction;
(function (SetPopupModelAction) {
    SetPopupModelAction.KIND = 'setPopupModel';
    function create(newRoot, requestId) {
        if (requestId === void 0) { requestId = ''; }
        return {
            kind: SetPopupModelAction.KIND,
            newRoot: newRoot,
            responseId: requestId
        };
    }
    SetPopupModelAction.create = create;
})(SetPopupModelAction = exports.SetPopupModelAction || (exports.SetPopupModelAction = {}));
var SetBoundsAction;
(function (SetBoundsAction) {
    SetBoundsAction.KIND = 'setBounds';
    function create(bounds) {
        return {
            kind: SetBoundsAction.KIND,
            bounds: bounds
        };
    }
    SetBoundsAction.create = create;
})(SetBoundsAction = exports.SetBoundsAction || (exports.SetBoundsAction = {}));
var RequestBoundsAction;
(function (RequestBoundsAction) {
    RequestBoundsAction.KIND = 'requestBounds';
    function create(newRoot) {
        return {
            kind: RequestBoundsAction.KIND,
            newRoot: newRoot,
            requestId: generateRequestId()
        };
    }
    RequestBoundsAction.create = create;
})(RequestBoundsAction = exports.RequestBoundsAction || (exports.RequestBoundsAction = {}));
var ComputedBoundsAction;
(function (ComputedBoundsAction) {
    ComputedBoundsAction.KIND = 'computedBounds';
    function create(bounds, options) {
        var _a;
        if (options === void 0) { options = {}; }
        return {
            kind: ComputedBoundsAction.KIND,
            bounds: bounds,
            revision: options.revision,
            alignments: options.alignments,
            responseId: (_a = options.requestId) !== null && _a !== void 0 ? _a : ''
        };
    }
    ComputedBoundsAction.create = create;
})(ComputedBoundsAction = exports.ComputedBoundsAction || (exports.ComputedBoundsAction = {}));
var LoggingAction;
(function (LoggingAction) {
    LoggingAction.KIND = 'logging';
    function create(options) {
        return __assign({ kind: LoggingAction.KIND }, options);
    }
    LoggingAction.create = create;
})(LoggingAction = exports.LoggingAction || (exports.LoggingAction = {}));
var SelectAction;
(function (SelectAction) {
    SelectAction.KIND = 'elementSelected';
    function create(options) {
        var _a, _b;
        return {
            kind: SelectAction.KIND,
            selectedElementsIDs: (_a = options.selectedElementsIDs) !== null && _a !== void 0 ? _a : [],
            deselectedElementsIDs: (_b = options.deselectedElementsIDs) !== null && _b !== void 0 ? _b : []
        };
    }
    SelectAction.create = create;
})(SelectAction = exports.SelectAction || (exports.SelectAction = {}));
var SelectAllAction;
(function (SelectAllAction) {
    SelectAllAction.KIND = 'allSelected';
    function create(options) {
        var _a;
        if (options === void 0) { options = {}; }
        return {
            kind: SelectAllAction.KIND,
            select: (_a = options.select) !== null && _a !== void 0 ? _a : true
        };
    }
    SelectAllAction.create = create;
})(SelectAllAction = exports.SelectAllAction || (exports.SelectAllAction = {}));
var CollapseExpandAction;
(function (CollapseExpandAction) {
    CollapseExpandAction.KIND = 'collapseExpand';
    function create(options) {
        var _a, _b;
        return {
            kind: CollapseExpandAction.KIND,
            expandIds: (_a = options.expandIds) !== null && _a !== void 0 ? _a : [],
            collapseIds: (_b = options.collapseIds) !== null && _b !== void 0 ? _b : []
        };
    }
    CollapseExpandAction.create = create;
})(CollapseExpandAction = exports.CollapseExpandAction || (exports.CollapseExpandAction = {}));
var CollapseExpandAllAction;
(function (CollapseExpandAllAction) {
    CollapseExpandAllAction.KIND = 'collapseExpandAll';
    function create(options) {
        var _a;
        if (options === void 0) { options = {}; }
        return {
            kind: CollapseExpandAllAction.KIND,
            expand: (_a = options.expand) !== null && _a !== void 0 ? _a : true
        };
    }
    CollapseExpandAllAction.create = create;
})(CollapseExpandAllAction = exports.CollapseExpandAllAction || (exports.CollapseExpandAllAction = {}));
var OpenAction;
(function (OpenAction) {
    OpenAction.KIND = 'open';
    function create(elementId) {
        return {
            kind: OpenAction.KIND,
            elementId: elementId
        };
    }
    OpenAction.create = create;
})(OpenAction = exports.OpenAction || (exports.OpenAction = {}));
var LayoutAction;
(function (LayoutAction) {
    LayoutAction.KIND = 'layout';
    function create(options) {
        if (options === void 0) { options = {}; }
        return {
            kind: LayoutAction.KIND,
            layoutType: options.layoutType,
            elementIds: options.elementIds
        };
    }
    LayoutAction.create = create;
})(LayoutAction = exports.LayoutAction || (exports.LayoutAction = {}));
var CenterAction;
(function (CenterAction) {
    CenterAction.KIND = 'center';
    function create(elementIds, options) {
        var _a, _b;
        if (options === void 0) { options = {}; }
        return {
            kind: CenterAction.KIND,
            elementIds: elementIds,
            animate: (_a = options.animate) !== null && _a !== void 0 ? _a : true,
            retainZoom: (_b = options.retainZoom) !== null && _b !== void 0 ? _b : false
        };
    }
    CenterAction.create = create;
})(CenterAction = exports.CenterAction || (exports.CenterAction = {}));
var FitToScreenAction;
(function (FitToScreenAction) {
    FitToScreenAction.KIND = 'fit';
    function create(elementIds, options) {
        var _a;
        if (options === void 0) { options = {}; }
        return {
            kind: FitToScreenAction.KIND,
            elementIds: elementIds,
            padding: options.padding,
            maxZoom: options.maxZoom,
            animate: (_a = options.animate) !== null && _a !== void 0 ? _a : true
        };
    }
    FitToScreenAction.create = create;
})(FitToScreenAction = exports.FitToScreenAction || (exports.FitToScreenAction = {}));
var SetViewportAction;
(function (SetViewportAction) {
    SetViewportAction.KIND = 'viewport';
    function create(elementId, newViewport, options) {
        var _a;
        if (options === void 0) { options = {}; }
        return {
            kind: SetViewportAction.KIND,
            elementId: elementId,
            newViewport: newViewport,
            animate: (_a = options.animate) !== null && _a !== void 0 ? _a : true
        };
    }
    SetViewportAction.create = create;
})(SetViewportAction = exports.SetViewportAction || (exports.SetViewportAction = {}));
var BringToFrontAction;
(function (BringToFrontAction) {
    BringToFrontAction.KIND = 'bringToFront';
    function create(elementIDs) {
        return {
            kind: BringToFrontAction.KIND,
            elementIDs: elementIDs
        };
    }
    BringToFrontAction.create = create;
})(BringToFrontAction = exports.BringToFrontAction || (exports.BringToFrontAction = {}));
var UndoAction;
(function (UndoAction) {
    UndoAction.KIND = 'undo';
    function create() {
        return {
            kind: UndoAction.KIND
        };
    }
    UndoAction.create = create;
})(UndoAction = exports.UndoAction || (exports.UndoAction = {}));
var RedoAction;
(function (RedoAction) {
    RedoAction.KIND = 'redo';
    function create() {
        return {
            kind: RedoAction.KIND
        };
    }
    RedoAction.create = create;
})(RedoAction = exports.RedoAction || (exports.RedoAction = {}));
var MoveAction;
(function (MoveAction) {
    MoveAction.KIND = 'move';
    function create(moves, options) {
        var _a, _b;
        if (options === void 0) { options = {}; }
        return {
            kind: MoveAction.KIND,
            moves: moves,
            animate: (_a = options.animate) !== null && _a !== void 0 ? _a : true,
            finished: (_b = options.finished) !== null && _b !== void 0 ? _b : false
        };
    }
    MoveAction.create = create;
})(MoveAction = exports.MoveAction || (exports.MoveAction = {}));
var HoverFeedbackAction;
(function (HoverFeedbackAction) {
    HoverFeedbackAction.KIND = 'hoverFeedback';
    function create(options) {
        return {
            kind: HoverFeedbackAction.KIND,
            mouseoverElement: options.mouseoverElement,
            mouseIsOver: options.mouseIsOver
        };
    }
    HoverFeedbackAction.create = create;
})(HoverFeedbackAction = exports.HoverFeedbackAction || (exports.HoverFeedbackAction = {}));
var CreateElementAction;
(function (CreateElementAction) {
    CreateElementAction.KIND = 'createElement';
    function create(elementSchema, options) {
        return {
            kind: CreateElementAction.KIND,
            elementSchema: elementSchema,
            containerId: options.containerId
        };
    }
    CreateElementAction.create = create;
})(CreateElementAction = exports.CreateElementAction || (exports.CreateElementAction = {}));
var DeleteElementAction;
(function (DeleteElementAction) {
    DeleteElementAction.KIND = 'delete';
    function create(elementIds) {
        return {
            kind: DeleteElementAction.KIND,
            elementIds: elementIds
        };
    }
    DeleteElementAction.create = create;
})(DeleteElementAction = exports.DeleteElementAction || (exports.DeleteElementAction = {}));
var ApplyLabelEditAction;
(function (ApplyLabelEditAction) {
    ApplyLabelEditAction.KIND = 'applyLabelEdit';
    function create(labelId, text) {
        return {
            kind: ApplyLabelEditAction.KIND,
            labelId: labelId,
            text: text
        };
    }
    ApplyLabelEditAction.create = create;
})(ApplyLabelEditAction = exports.ApplyLabelEditAction || (exports.ApplyLabelEditAction = {}));
var ReconnectAction;
(function (ReconnectAction) {
    ReconnectAction.KIND = 'reconnect';
    function create(options) {
        return {
            kind: ReconnectAction.KIND,
            routableId: options.routableId,
            newSourceId: options.newSourceId,
            newTargetId: options.newTargetId
        };
    }
    ReconnectAction.create = create;
})(ReconnectAction = exports.ReconnectAction || (exports.ReconnectAction = {}));


/***/ }),

/***/ "./node_modules/sprotty-protocol/lib/diagram-server.js":
/*!*************************************************************!*\
  !*** ./node_modules/sprotty-protocol/lib/diagram-server.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DiagramServer = void 0;
var action_handler_1 = __webpack_require__(/*! ./action-handler */ "./node_modules/sprotty-protocol/lib/action-handler.js");
var actions_1 = __webpack_require__(/*! ./actions */ "./node_modules/sprotty-protocol/lib/actions.js");
var async_1 = __webpack_require__(/*! ./utils/async */ "./node_modules/sprotty-protocol/lib/utils/async.js");
var model_utils_1 = __webpack_require__(/*! ./utils/model-utils */ "./node_modules/sprotty-protocol/lib/utils/model-utils.js");
/**
 * An instance of this class is responsible for handling a single diagram client. It holds the current
 * state of the diagram and manages communication with the client via actions.
 */
var DiagramServer = /** @class */ (function () {
    function DiagramServer(dispatch, services) {
        this.state = {
            currentRoot: {
                type: 'NONE',
                id: 'ROOT'
            },
            revision: 0
        };
        this.requests = new Map();
        this.dispatch = dispatch;
        this.diagramGenerator = services.DiagramGenerator;
        this.layoutEngine = services.ModelLayoutEngine;
        this.actionHandlerRegistry = services.ServerActionHandlerRegistry;
    }
    /**
     * @deprecated Use the `ServerActionHandlerRegistry` service instead
     */
    DiagramServer.prototype.onAction = function (kind, handler) {
        if (!this.actionHandlerRegistry) {
            this.actionHandlerRegistry = new action_handler_1.ServerActionHandlerRegistry();
        }
        this.actionHandlerRegistry.onAction(kind, handler);
    };
    /**
     * @deprecated Use the `ServerActionHandlerRegistry` service instead
     */
    DiagramServer.prototype.removeActionHandler = function (kind, handler) {
        if (this.actionHandlerRegistry) {
            this.actionHandlerRegistry.removeActionHandler(kind, handler);
        }
    };
    /**
     * Set the model and submit it to the client.
     */
    DiagramServer.prototype.setModel = function (newRoot) {
        newRoot.revision = ++this.state.revision;
        this.state.currentRoot = newRoot;
        return this.submitModel(newRoot, false);
    };
    /**
     * Update the model to a new state and submit it to the client.
     */
    DiagramServer.prototype.updateModel = function (newRoot) {
        newRoot.revision = ++this.state.revision;
        this.state.currentRoot = newRoot;
        return this.submitModel(newRoot, true);
    };
    Object.defineProperty(DiagramServer.prototype, "needsClientLayout", {
        /**
         * Whether the client needs to compute the layout of parts of the model. This affects the behavior
         * of `submitModel`.
         *
         * This setting is determined by the `DiagramOptions` that are received with the `RequestModelAction`
         * from the client. If the client does not specify whether it needs client layout, the default value
         * is `true`.
         */
        get: function () {
            if (this.state.options && this.state.options.needsClientLayout !== undefined) {
                return !!this.state.options.needsClientLayout;
            }
            return true;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DiagramServer.prototype, "needsServerLayout", {
        /**
         * Whether the server needs to compute the layout of parts of the model. This affects the behavior
         * of `submitModel`.
         *
         * This setting is determined by the `DiagramOptions` that are received with the `RequestModelAction`
         * from the client. If the client does not specify whether it needs server layout, the default value
         * is `false`.
         */
        get: function () {
            if (this.state.options && this.state.options.needsServerLayout !== undefined) {
                return !!this.state.options.needsServerLayout;
            }
            return false;
        },
        enumerable: false,
        configurable: true
    });
    /**
     * Called when an action is received from the client.
     */
    DiagramServer.prototype.accept = function (action) {
        if ((0, actions_1.isResponseAction)(action)) {
            var id = action.responseId;
            var future = this.requests.get(id);
            if (future) {
                this.requests.delete(id);
                if (action.kind === actions_1.RejectAction.KIND) {
                    var rejectAction = action;
                    future.reject(new Error(rejectAction.message));
                    console.warn("Request with id ".concat(action.responseId, " failed: ").concat(rejectAction.message), rejectAction.detail);
                }
                else {
                    future.resolve(action);
                }
                return Promise.resolve();
            }
            console.info('No matching request for response:', action);
        }
        return this.handleAction(action);
    };
    /**
     * Send a request action to the client. The resulting promise is resolved when a matching
     * response is received and rejected when a `RejectAction` is received.
     */
    DiagramServer.prototype.request = function (action) {
        var _this = this;
        if (!action.requestId) {
            action.requestId = 'server_' + (0, actions_1.generateRequestId)();
        }
        var future = new async_1.Deferred();
        this.requests.set(action.requestId, future);
        this.dispatch(action).catch(function (err) {
            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
            _this.requests.delete(action.requestId);
            future.reject(err);
        });
        return future.promise;
    };
    /**
     * Send a `RejectAction` to the client to notify that a request could not be fulfilled.
     */
    DiagramServer.prototype.rejectRemoteRequest = function (action, error) {
        if (action && (0, actions_1.isRequestAction)(action)) {
            this.dispatch({
                kind: actions_1.RejectAction.KIND,
                responseId: action.requestId,
                message: error.message,
                detail: error.stack
            });
        }
    };
    DiagramServer.prototype.handleAction = function (action) {
        var _this = this;
        var _a;
        // Find a matching action handler in the registry
        var handlers = (_a = this.actionHandlerRegistry) === null || _a === void 0 ? void 0 : _a.getHandler(action.kind);
        if (handlers && handlers.length === 1) {
            return handlers[0](action, this.state, this);
        }
        else if (handlers && handlers.length > 1) {
            return Promise.all(handlers.map(function (h) { return h(action, _this.state, _this); }));
        }
        // If no handler is registered, call one of the default handling methods
        switch (action.kind) {
            case actions_1.RequestModelAction.KIND:
                return this.handleRequestModel(action);
            case actions_1.ComputedBoundsAction.KIND:
                return this.handleComputedBounds(action);
            case actions_1.LayoutAction.KIND:
                return this.handleLayout(action);
        }
        // We don't know this action kind, sigh
        console.warn("Unhandled action from client: ".concat(action.kind));
        return Promise.resolve();
    };
    DiagramServer.prototype.handleRequestModel = function (action) {
        var _a;
        return __awaiter(this, void 0, void 0, function () {
            var newRoot, err_1;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        this.state.options = action.options;
                        _b.label = 1;
                    case 1:
                        _b.trys.push([1, 4, , 5]);
                        return [4 /*yield*/, this.diagramGenerator.generate({
                                options: (_a = this.state.options) !== null && _a !== void 0 ? _a : {},
                                state: this.state
                            })];
                    case 2:
                        newRoot = _b.sent();
                        newRoot.revision = ++this.state.revision;
                        this.state.currentRoot = newRoot;
                        return [4 /*yield*/, this.submitModel(this.state.currentRoot, false, action)];
                    case 3:
                        _b.sent();
                        return [3 /*break*/, 5];
                    case 4:
                        err_1 = _b.sent();
                        this.rejectRemoteRequest(action, err_1);
                        console.error('Failed to generate diagram:', err_1);
                        return [3 /*break*/, 5];
                    case 5: return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Submit a model to the client after it has been updated in the server state.
     */
    DiagramServer.prototype.submitModel = function (newRoot, update, cause) {
        return __awaiter(this, void 0, void 0, function () {
            var request, response, currentRoot;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.needsClientLayout) return [3 /*break*/, 6];
                        if (!!this.needsServerLayout) return [3 /*break*/, 1];
                        // In this case the client won't send us the computed bounds
                        this.dispatch({ kind: actions_1.RequestBoundsAction.KIND, newRoot: newRoot });
                        return [3 /*break*/, 5];
                    case 1:
                        request = actions_1.RequestBoundsAction.create(newRoot);
                        return [4 /*yield*/, this.request(request)];
                    case 2:
                        response = _a.sent();
                        currentRoot = this.state.currentRoot;
                        if (!(response.revision === currentRoot.revision)) return [3 /*break*/, 4];
                        (0, model_utils_1.applyBounds)(currentRoot, response);
                        return [4 /*yield*/, this.doSubmitModel(currentRoot, update, cause)];
                    case 3:
                        _a.sent();
                        return [3 /*break*/, 5];
                    case 4:
                        this.rejectRemoteRequest(cause, new Error("Model revision does not match: ".concat(response.revision)));
                        _a.label = 5;
                    case 5: return [3 /*break*/, 8];
                    case 6: return [4 /*yield*/, this.doSubmitModel(newRoot, update, cause)];
                    case 7:
                        _a.sent();
                        _a.label = 8;
                    case 8: return [2 /*return*/];
                }
            });
        });
    };
    DiagramServer.prototype.doSubmitModel = function (newRoot, update, cause) {
        return __awaiter(this, void 0, void 0, function () {
            var modelType, requestId, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (newRoot.revision !== this.state.revision) {
                            return [2 /*return*/];
                        }
                        if (!(this.needsServerLayout && this.layoutEngine)) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.layoutEngine.layout(newRoot)];
                    case 1:
                        newRoot = _a.sent();
                        _a.label = 2;
                    case 2:
                        modelType = newRoot.type;
                        if (!(cause && cause.kind === actions_1.RequestModelAction.KIND)) return [3 /*break*/, 4];
                        requestId = cause.requestId;
                        response = actions_1.SetModelAction.create(newRoot, requestId);
                        return [4 /*yield*/, this.dispatch(response)];
                    case 3:
                        _a.sent();
                        return [3 /*break*/, 8];
                    case 4:
                        if (!(update && modelType === this.state.lastSubmittedModelType)) return [3 /*break*/, 6];
                        return [4 /*yield*/, this.dispatch({ kind: actions_1.UpdateModelAction.KIND, newRoot: newRoot, cause: cause })];
                    case 5:
                        _a.sent();
                        return [3 /*break*/, 8];
                    case 6: return [4 /*yield*/, this.dispatch({ kind: actions_1.SetModelAction.KIND, newRoot: newRoot })];
                    case 7:
                        _a.sent();
                        _a.label = 8;
                    case 8:
                        this.state.lastSubmittedModelType = modelType;
                        return [2 /*return*/];
                }
            });
        });
    };
    DiagramServer.prototype.handleComputedBounds = function (action) {
        if (action.revision !== this.state.currentRoot.revision) {
            return Promise.reject();
        }
        (0, model_utils_1.applyBounds)(this.state.currentRoot, action);
        return Promise.resolve();
    };
    DiagramServer.prototype.handleLayout = function (action) {
        return __awaiter(this, void 0, void 0, function () {
            var newRoot;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.layoutEngine) {
                            return [2 /*return*/];
                        }
                        if (!!this.needsServerLayout) return [3 /*break*/, 2];
                        newRoot = (0, model_utils_1.cloneModel)(this.state.currentRoot);
                        return [4 /*yield*/, this.layoutEngine.layout(newRoot)];
                    case 1:
                        newRoot = _a.sent();
                        newRoot.revision = ++this.state.revision;
                        this.state.currentRoot = newRoot;
                        _a.label = 2;
                    case 2: return [4 /*yield*/, this.doSubmitModel(this.state.currentRoot, true, action)];
                    case 3:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    return DiagramServer;
}());
exports.DiagramServer = DiagramServer;


/***/ }),

/***/ "./node_modules/sprotty-protocol/lib/diagram-services.js":
/*!***************************************************************!*\
  !*** ./node_modules/sprotty-protocol/lib/diagram-services.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./node_modules/sprotty-protocol/lib/index.js":
/*!****************************************************!*\
  !*** ./node_modules/sprotty-protocol/lib/index.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(/*! ./actions */ "./node_modules/sprotty-protocol/lib/actions.js"), exports);
__exportStar(__webpack_require__(/*! ./diagram-server */ "./node_modules/sprotty-protocol/lib/diagram-server.js"), exports);
__exportStar(__webpack_require__(/*! ./diagram-services */ "./node_modules/sprotty-protocol/lib/diagram-services.js"), exports);
__exportStar(__webpack_require__(/*! ./model */ "./node_modules/sprotty-protocol/lib/model.js"), exports);
__exportStar(__webpack_require__(/*! ./utils/async */ "./node_modules/sprotty-protocol/lib/utils/async.js"), exports);
__exportStar(__webpack_require__(/*! ./utils/geometry */ "./node_modules/sprotty-protocol/lib/utils/geometry.js"), exports);
__exportStar(__webpack_require__(/*! ./utils/json */ "./node_modules/sprotty-protocol/lib/utils/json.js"), exports);
__exportStar(__webpack_require__(/*! ./utils/model-utils */ "./node_modules/sprotty-protocol/lib/utils/model-utils.js"), exports);
__exportStar(__webpack_require__(/*! ./utils/object */ "./node_modules/sprotty-protocol/lib/utils/object.js"), exports);


/***/ }),

/***/ "./node_modules/sprotty-protocol/lib/model.js":
/*!****************************************************!*\
  !*** ./node_modules/sprotty-protocol/lib/model.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isZoomable = exports.isScrollable = void 0;
var object_1 = __webpack_require__(/*! ./utils/object */ "./node_modules/sprotty-protocol/lib/utils/object.js");
function isScrollable(element) {
    return (0, object_1.hasOwnProperty)(element, 'scroll');
}
exports.isScrollable = isScrollable;
function isZoomable(element) {
    return (0, object_1.hasOwnProperty)(element, 'zoom');
}
exports.isZoomable = isZoomable;


/***/ }),

/***/ "./node_modules/sprotty-protocol/lib/utils/async.js":
/*!**********************************************************!*\
  !*** ./node_modules/sprotty-protocol/lib/utils/async.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Deferred = void 0;
/**
 * Simple implementation of the deferred pattern.
 * An object that exposes a promise and functions to resolve and reject it.
 */
var Deferred = /** @class */ (function () {
    function Deferred() {
        var _this = this;
        this.promise = new Promise(function (resolve, reject) {
            _this.resolve = resolve;
            _this.reject = reject;
        });
    }
    return Deferred;
}());
exports.Deferred = Deferred;


/***/ }),

/***/ "./node_modules/sprotty-protocol/lib/utils/geometry.js":
/*!*************************************************************!*\
  !*** ./node_modules/sprotty-protocol/lib/utils/geometry.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.almostEquals = exports.toRadians = exports.toDegrees = exports.Bounds = exports.isBounds = exports.Dimension = exports.centerOfLine = exports.angleBetweenPoints = exports.angleOfPoint = exports.Point = void 0;
var object_1 = __webpack_require__(/*! ./object */ "./node_modules/sprotty-protocol/lib/utils/object.js");
var Point;
(function (Point) {
    /**
     * (x,y) coordinates of the origin.
     */
    Point.ORIGIN = Object.freeze({
        x: 0,
        y: 0
    });
    /**
     * Adds two points.
     * @param {Point} p1 - First point
     * @param {Point} p2 - Second point
     * @returns {Point} The sum of the two points
     */
    function add(p1, p2) {
        return {
            x: p1.x + p2.x,
            y: p1.y + p2.y
        };
    }
    Point.add = add;
    /**
     * Subtracts two points.
     * @param {Point} p1 - First point
     * @param {Point} p2 - Second point
     * @returns {Point} The difference of the two points
     */
    function subtract(p1, p2) {
        return {
            x: p1.x - p2.x,
            y: p1.y - p2.y
        };
    }
    Point.subtract = subtract;
    /**
     * Specifies whether a point has exactly the same coordinates as another point.
     * @param {Point} point1 a point
     * @param {Point} point2 another point
     * @returns {boolean} `true` if `point1` has exactly the same `x` and `y` values as `point2`, `false` otherwise.
     */
    function equals(point1, point2) {
        return point1.x === point2.x && point1.y === point2.y;
    }
    Point.equals = equals;
    /**
     * Computes a point that is the original `point` shifted towards `refPoint` by the given `distance`.
     * @param {Point} point - Point to shift
     * @param {Point} refPoint - Point to shift towards
     * @param {Point} distance - Distance to shift
     */
    function shiftTowards(point, refPoint, distance) {
        var diff = subtract(refPoint, point);
        var normalized = normalize(diff);
        var shift = { x: normalized.x * distance, y: normalized.y * distance };
        return add(point, shift);
    }
    Point.shiftTowards = shiftTowards;
    /**
     * Computes the normalized vector from the vector given in `point`; that is, computing its unit vector.
     * @param {Point} point - Point representing the vector to be normalized
     * @returns {Point} The normalized point
     */
    function normalize(point) {
        var mag = magnitude(point);
        if (mag === 0 || mag === 1) {
            return Point.ORIGIN;
        }
        return {
            x: point.x / mag,
            y: point.y / mag
        };
    }
    Point.normalize = normalize;
    /**
     * Computes the magnitude of the vector given in `point`.
     * @param {Point} point - Point representing the vector to compute the magnitude for
     * @returns {number} The magnitude or also known as length of the `point`
     */
    function magnitude(point) {
        return Math.sqrt(Math.pow(point.x, 2) + Math.pow(point.y, 2));
    }
    Point.magnitude = magnitude;
    /**
     * Calculates a linear combination of p0 and p1 using lambda, i.e.
     *   (1-lambda) * p0 + lambda * p1
     */
    function linear(p0, p1, lambda) {
        return {
            x: (1 - lambda) * p0.x + lambda * p1.x,
            y: (1 - lambda) * p0.y + lambda * p1.y
        };
    }
    Point.linear = linear;
    /**
     * Returns the "straight line" distance between two points.
     * @param {Point} a - First point
     * @param {Point} b - Second point
     * @returns {number} The Eucledian distance
     */
    function euclideanDistance(a, b) {
        var dx = b.x - a.x;
        var dy = b.y - a.y;
        return Math.sqrt(dx * dx + dy * dy);
    }
    Point.euclideanDistance = euclideanDistance;
    /**
     * Returns the distance between two points in a grid, using a
     * strictly vertical and/or horizontal path (versus straight line).
     * @param {Point} a - First point
     * @param {Point} b - Second point
     * @returns {number} The Manhattan distance
     */
    function manhattanDistance(a, b) {
        return Math.abs(b.x - a.x) + Math.abs(b.y - a.y);
    }
    Point.manhattanDistance = manhattanDistance;
    /**
     * Returns the maximum of the horizontal and the vertical distance.
     * @param {Point} a - First point
     * @param {Point} b - Second point
     * @returns {number} The maximum distance
     */
    function maxDistance(a, b) {
        return Math.max(Math.abs(b.x - a.x), Math.abs(b.y - a.y));
    }
    Point.maxDistance = maxDistance;
})(Point = exports.Point || (exports.Point = {}));
/**
 * Computes the angle in radians of the given point to the x-axis of the coordinate system.
 * The result is in the range [-pi, pi].
 * @param {Point} p - A point in the Eucledian plane
 */
function angleOfPoint(p) {
    return Math.atan2(p.y, p.x);
}
exports.angleOfPoint = angleOfPoint;
/**
 * Computes the angle in radians between the two given points (relative to the origin of the coordinate system).
 * The result is in the range [0, pi]. Returns NaN if the points are equal.
 * @param {Point} a - First point
 * @param {Point} b - Second point
 */
function angleBetweenPoints(a, b) {
    var lengthProduct = Math.sqrt((a.x * a.x + a.y * a.y) * (b.x * b.x + b.y * b.y));
    if (isNaN(lengthProduct) || lengthProduct === 0)
        return NaN;
    var dotProduct = a.x * b.x + a.y * b.y;
    return Math.acos(dotProduct / lengthProduct);
}
exports.angleBetweenPoints = angleBetweenPoints;
/**
 * Computes the center of the line segment spanned by the two given points.
 * @param {Point} s - Start point of the line
 * @param {Point} e - End point of the line
 */
function centerOfLine(s, e) {
    var b = {
        x: s.x > e.x ? e.x : s.x,
        y: s.y > e.y ? e.y : s.y,
        width: Math.abs(e.x - s.x),
        height: Math.abs(e.y - s.y)
    };
    return Bounds.center(b);
}
exports.centerOfLine = centerOfLine;
var Dimension;
(function (Dimension) {
    /**
     * A dimension with both width and height set to a negative value, which is considered as undefined.
     */
    Dimension.EMPTY = Object.freeze({
        width: -1,
        height: -1
    });
    /**
     * Checks whether the given dimention is valid, i.e. the width and height are non-zero.
     * @param {Dimension} b - Dimension object
     * @returns {boolean} `true` if the dimension is valid
     */
    function isValid(d) {
        return d.width >= 0 && d.height >= 0;
    }
    Dimension.isValid = isValid;
})(Dimension = exports.Dimension || (exports.Dimension = {}));
function isBounds(element) {
    return (0, object_1.hasOwnProperty)(element, ['x', 'y', 'width', 'height']);
}
exports.isBounds = isBounds;
var Bounds;
(function (Bounds) {
    Bounds.EMPTY = Object.freeze({
        x: 0,
        y: 0,
        width: -1,
        height: -1
    });
    /**
     * Combines the bounds of two objects into one, so that the new bounds
     * are the minimum bounds that covers both of the original bounds.
     * @param {Bounds} b0 - First bounds object
     * @param {Bounds} b1 - Second bounds object
     * @returns {Bounds} The combined bounds
     */
    function combine(b0, b1) {
        if (!Dimension.isValid(b0))
            return Dimension.isValid(b1) ? b1 : Bounds.EMPTY;
        if (!Dimension.isValid(b1))
            return b0;
        var minX = Math.min(b0.x, b1.x);
        var minY = Math.min(b0.y, b1.y);
        var maxX = Math.max(b0.x + (b0.width >= 0 ? b0.width : 0), b1.x + (b1.width >= 0 ? b1.width : 0));
        var maxY = Math.max(b0.y + (b0.height >= 0 ? b0.height : 0), b1.y + (b1.height >= 0 ? b1.height : 0));
        return {
            x: minX, y: minY, width: maxX - minX, height: maxY - minY
        };
    }
    Bounds.combine = combine;
    /**
     * Translates the given bounds.
     * @param {Bounds} b - Bounds object
     * @param {Point} p - Vector by which to translate the bounds
     * @returns {Bounds} The translated bounds
     */
    function translate(b, p) {
        return {
            x: b.x + p.x,
            y: b.y + p.y,
            width: b.width,
            height: b.height
        };
    }
    Bounds.translate = translate;
    /**
     * Returns the center point of the bounds of an object
     * @param {Bounds} b - Bounds object
     * @returns {Point} the center point
     */
    function center(b) {
        return {
            x: b.x + (b.width >= 0 ? 0.5 * b.width : 0),
            y: b.y + (b.height >= 0 ? 0.5 * b.height : 0)
        };
    }
    Bounds.center = center;
    /**
    * Checks whether the point p is included in the bounds b.
    */
    function includes(b, p) {
        return p.x >= b.x && p.x <= b.x + b.width && p.y >= b.y && p.y <= b.y + b.height;
    }
    Bounds.includes = includes;
})(Bounds = exports.Bounds || (exports.Bounds = {}));
/**
 * Converts from radians to degrees
 * @param {number} a - A value in radians
 * @returns {number} The converted value
 */
function toDegrees(a) {
    return a * 180 / Math.PI;
}
exports.toDegrees = toDegrees;
/**
 * Converts from degrees to radians
 * @param {number} a - A value in degrees
 * @returns {number} The converted value
 */
function toRadians(a) {
    return a * Math.PI / 180;
}
exports.toRadians = toRadians;
/**
 * Returns whether two numbers are almost equal, within a small margin (0.001)
 * @param {number} a - First number
 * @param {number} b - Second number
 * @returns {boolean} True if the two numbers are almost equal
 */
function almostEquals(a, b) {
    return Math.abs(a - b) < 1e-3;
}
exports.almostEquals = almostEquals;


/***/ }),

/***/ "./node_modules/sprotty-protocol/lib/utils/json.js":
/*!*********************************************************!*\
  !*** ./node_modules/sprotty-protocol/lib/utils/json.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2020-2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./node_modules/sprotty-protocol/lib/utils/model-utils.js":
/*!****************************************************************!*\
  !*** ./node_modules/sprotty-protocol/lib/utils/model-utils.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SModelIndex = exports.findElement = exports.getSubType = exports.getBasicType = exports.applyBounds = exports.cloneModel = void 0;
/**
 * Clone a given model. This function requires that the model is serializable, so it's
 * free of cycles and functions.
 */
function cloneModel(model) {
    return JSON.parse(JSON.stringify(model));
}
exports.cloneModel = cloneModel;
/**
 * Apply the computed bounds to the given model. This ensures that the model has complete
 * information about positions and sizes derived from its actual rendering in the frontend.
 */
function applyBounds(root, action) {
    var index = new SModelIndex();
    index.add(root);
    for (var _i = 0, _a = action.bounds; _i < _a.length; _i++) {
        var b = _a[_i];
        var element = index.getById(b.elementId);
        if (element) {
            var bae = element;
            if (b.newPosition) {
                bae.position = { x: b.newPosition.x, y: b.newPosition.y };
            }
            if (b.newSize) {
                bae.size = { width: b.newSize.width, height: b.newSize.height };
            }
        }
    }
    if (action.alignments) {
        for (var _b = 0, _c = action.alignments; _b < _c.length; _b++) {
            var a = _c[_b];
            var element = index.getById(a.elementId);
            if (element) {
                var alignable = element;
                alignable.alignment = { x: a.newAlignment.x, y: a.newAlignment.y };
            }
        }
    }
}
exports.applyBounds = applyBounds;
/**
 * Model element types can include a colon to separate the basic type and a sub-type. This function
 * extracts the basic type of a model element.
 */
function getBasicType(element) {
    if (!element.type) {
        return '';
    }
    var colonIndex = element.type.indexOf(':');
    return colonIndex >= 0 ? element.type.substring(0, colonIndex) : element.type;
}
exports.getBasicType = getBasicType;
/**
 * Model element types can include a colon to separate the basic type and a sub-type. This function
 * extracts the sub-type of a model element.
 */
function getSubType(schema) {
    if (!schema.type) {
        return '';
    }
    var colonIndex = schema.type.indexOf(':');
    return colonIndex >= 0 ? schema.type.substring(colonIndex + 1) : schema.type;
}
exports.getSubType = getSubType;
/**
 * Find the element with the given identifier. If you need to find multiple elements, using an
 * `SModelIndex` might be more effective.
 */
function findElement(parent, elementId) {
    if (parent.id === elementId)
        return parent;
    if (parent.children !== undefined) {
        for (var _i = 0, _a = parent.children; _i < _a.length; _i++) {
            var child = _a[_i];
            var result = findElement(child, elementId);
            if (result !== undefined)
                return result;
        }
    }
    return undefined;
}
exports.findElement = findElement;
/**
 * Used to speed up model element lookup by id.
 * This index implementation is for the serializable _external model_ defined in `sprotty-protocol`.
 */
var SModelIndex = /** @class */ (function () {
    function SModelIndex() {
        this.id2element = new Map();
        this.id2parent = new Map();
    }
    SModelIndex.prototype.add = function (element) {
        if (!element.id) {
            throw new Error("Model element has no ID.");
        }
        else if (this.contains(element)) {
            throw new Error("Duplicate ID in model: " + element.id);
        }
        this.id2element.set(element.id, element);
        if (Array.isArray(element.children)) {
            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {
                var child = _a[_i];
                this.add(child);
                this.id2parent.set(child.id, element);
            }
        }
    };
    SModelIndex.prototype.remove = function (element) {
        this.id2element.delete(element.id);
        if (Array.isArray(element.children)) {
            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {
                var child = _a[_i];
                this.id2parent.delete(child.id);
                this.remove(child);
            }
        }
    };
    SModelIndex.prototype.contains = function (element) {
        return this.id2element.has(element.id);
    };
    SModelIndex.prototype.getById = function (id) {
        return this.id2element.get(id);
    };
    SModelIndex.prototype.getParent = function (id) {
        return this.id2parent.get(id);
    };
    SModelIndex.prototype.getRoot = function (element) {
        var current = element;
        while (current) {
            var parent_1 = this.id2parent.get(current.id);
            if (parent_1 === undefined) {
                return current;
            }
            current = parent_1;
        }
        throw new Error("Element has no root");
    };
    return SModelIndex;
}());
exports.SModelIndex = SModelIndex;


/***/ }),

/***/ "./node_modules/sprotty-protocol/lib/utils/object.js":
/*!***********************************************************!*\
  !*** ./node_modules/sprotty-protocol/lib/utils/object.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.safeAssign = exports.hasOwnProperty = exports.isObject = void 0;
function isObject(data) {
    return typeof data === 'object' && data !== null;
}
exports.isObject = isObject;
function hasOwnProperty(arg, key, type) {
    if (!isObject(arg)) {
        return false;
    }
    if (Array.isArray(key)) {
        for (var _i = 0, key_1 = key; _i < key_1.length; _i++) {
            var k = key_1[_i];
            if (!Object.prototype.hasOwnProperty.call(arg, k)) {
                return false;
            }
            if (typeof type === 'string' && typeof arg[k] !== type) {
                return false;
            }
            else if (typeof type === 'function' && !type(arg[k])) {
                return false;
            }
        }
    }
    else {
        if (!Object.prototype.hasOwnProperty.call(arg, key)) {
            return false;
        }
        if (typeof type === 'string') {
            return typeof arg[key] === type;
        }
        if (typeof type === 'function') {
            return type(arg[key]);
        }
    }
    return true;
}
exports.hasOwnProperty = hasOwnProperty;
function safeAssign(target, partial) {
    return Object.assign(target, partial);
}
exports.safeAssign = safeAssign;


/***/ }),

/***/ "./node_modules/sprotty/lib/base/actions/action-dispatcher.js":
/*!********************************************************************!*\
  !*** ./node_modules/sprotty/lib/base/actions/action-dispatcher.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ActionDispatcher = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "./node_modules/sprotty-protocol/lib/actions.js");
var async_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/async */ "./node_modules/sprotty-protocol/lib/utils/async.js");
var types_1 = __webpack_require__(/*! ../types */ "./node_modules/sprotty/lib/base/types.js");
var smodel_factory_1 = __webpack_require__(/*! ../model/smodel-factory */ "./node_modules/sprotty/lib/base/model/smodel-factory.js");
var animation_frame_syncer_1 = __webpack_require__(/*! ../animations/animation-frame-syncer */ "./node_modules/sprotty/lib/base/animations/animation-frame-syncer.js");
/**
 * Collects actions, converts them to commands and dispatches them.
 * Also acts as the proxy to model sources such as diagram servers.
 */
var ActionDispatcher = /** @class */ (function () {
    function ActionDispatcher() {
        this.postponedActions = [];
        this.requests = new Map();
    }
    ActionDispatcher.prototype.initialize = function () {
        var _this = this;
        if (!this.initialized) {
            this.initialized = this.actionHandlerRegistryProvider().then(function (registry) {
                _this.actionHandlerRegistry = registry;
                _this.handleAction(actions_1.SetModelAction.create(smodel_factory_1.EMPTY_ROOT)).catch(function () { });
            });
        }
        return this.initialized;
    };
    /**
     * Dispatch an action by querying all handlers that are registered for its kind.
     * The returned promise is resolved when all handler results (commands or actions)
     * have been processed.
     */
    ActionDispatcher.prototype.dispatch = function (action) {
        var _this = this;
        return this.initialize().then(function () {
            if (_this.blockUntil !== undefined) {
                return _this.handleBlocked(action, _this.blockUntil);
            }
            else if (_this.diagramLocker.isAllowed(action)) {
                return _this.handleAction(action);
            }
            return undefined;
        });
    };
    /**
     * Calls `dispatch` on every action in the given array. The returned promise
     * is resolved when the promises of all `dispatch` calls have been resolved.
     */
    ActionDispatcher.prototype.dispatchAll = function (actions) {
        var _this = this;
        return Promise.all(actions.map(function (action) { return _this.dispatch(action); }));
    };
    /**
     * Dispatch a request. The returned promise is resolved when a response with matching
     * identifier is dispatched. That response is _not_ passed to the registered action
     * handlers. Instead, it is the responsibility of the caller of this method to handle
     * the response properly. For example, it can be sent to the registered handlers by
     * passing it again to the `dispatch` method.
     */
    ActionDispatcher.prototype.request = function (action) {
        if (!action.requestId) {
            return Promise.reject(new Error('Request without requestId'));
        }
        var deferred = new async_1.Deferred();
        this.requests.set(action.requestId, deferred);
        this.dispatch(action).catch(function () { });
        return deferred.promise;
    };
    ActionDispatcher.prototype.handleAction = function (action) {
        if (action.kind === actions_1.UndoAction.KIND) {
            return this.commandStack.undo().then(function () { });
        }
        if (action.kind === actions_1.RedoAction.KIND) {
            return this.commandStack.redo().then(function () { });
        }
        if ((0, actions_1.isResponseAction)(action)) {
            var deferred = this.requests.get(action.responseId);
            if (deferred !== undefined) {
                this.requests.delete(action.responseId);
                if (action.kind === actions_1.RejectAction.KIND) {
                    var rejectAction = action;
                    deferred.reject(new Error(rejectAction.message));
                    this.logger.warn(this, "Request with id ".concat(action.responseId, " failed."), rejectAction.message, rejectAction.detail);
                }
                else {
                    deferred.resolve(action);
                }
                return Promise.resolve();
            }
            this.logger.log(this, 'No matching request for response', action);
        }
        var handlers = this.actionHandlerRegistry.get(action.kind);
        if (handlers.length === 0) {
            this.logger.warn(this, 'Missing handler for action', action);
            var error = new Error("Missing handler for action '".concat(action.kind, "'"));
            if ((0, actions_1.isRequestAction)(action)) {
                var deferred = this.requests.get(action.requestId);
                if (deferred !== undefined) {
                    this.requests.delete(action.requestId);
                    deferred.reject(error);
                }
            }
            return Promise.reject(error);
        }
        this.logger.log(this, 'Handle', action);
        var promises = [];
        for (var _i = 0, handlers_1 = handlers; _i < handlers_1.length; _i++) {
            var handler = handlers_1[_i];
            var result = handler.handle(action);
            if ((0, actions_1.isAction)(result)) {
                promises.push(this.dispatch(result));
            }
            else if (result !== undefined) {
                promises.push(this.commandStack.execute(result));
                this.blockUntil = result.blockUntil;
            }
        }
        return Promise.all(promises);
    };
    ActionDispatcher.prototype.handleBlocked = function (action, predicate) {
        var _this = this;
        if (predicate(action)) {
            this.blockUntil = undefined;
            var result = this.handleAction(action);
            var actions = this.postponedActions;
            this.postponedActions = [];
            for (var _i = 0, actions_2 = actions; _i < actions_2.length; _i++) {
                var a = actions_2[_i];
                this.dispatch(a.action).then(a.resolve, a.reject);
            }
            return result;
        }
        else {
            this.logger.log(this, 'Action is postponed due to block condition', action);
            return new Promise(function (resolve, reject) {
                _this.postponedActions.push({ action: action, resolve: resolve, reject: reject });
            });
        }
    };
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.ActionHandlerRegistryProvider),
        __metadata("design:type", Function)
    ], ActionDispatcher.prototype, "actionHandlerRegistryProvider", void 0);
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.ICommandStack),
        __metadata("design:type", Object)
    ], ActionDispatcher.prototype, "commandStack", void 0);
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.ILogger),
        __metadata("design:type", Object)
    ], ActionDispatcher.prototype, "logger", void 0);
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.AnimationFrameSyncer),
        __metadata("design:type", animation_frame_syncer_1.AnimationFrameSyncer)
    ], ActionDispatcher.prototype, "syncer", void 0);
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.IDiagramLocker),
        __metadata("design:type", Object)
    ], ActionDispatcher.prototype, "diagramLocker", void 0);
    ActionDispatcher = __decorate([
        (0, inversify_1.injectable)()
    ], ActionDispatcher);
    return ActionDispatcher;
}());
exports.ActionDispatcher = ActionDispatcher;


/***/ }),

/***/ "./node_modules/sprotty/lib/base/actions/action-handler.js":
/*!*****************************************************************!*\
  !*** ./node_modules/sprotty/lib/base/actions/action-handler.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.onAction = exports.configureActionHandler = exports.ActionHandlerRegistry = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../types */ "./node_modules/sprotty/lib/base/types.js");
var registry_1 = __webpack_require__(/*! ../../utils/registry */ "./node_modules/sprotty/lib/utils/registry.js");
var inversify_2 = __webpack_require__(/*! ../../utils/inversify */ "./node_modules/sprotty/lib/utils/inversify.js");
/**
 * The action handler registry maps actions to their handlers using the Action.kind property.
 */
var ActionHandlerRegistry = /** @class */ (function (_super) {
    __extends(ActionHandlerRegistry, _super);
    function ActionHandlerRegistry(registrations, initializers) {
        var _this = _super.call(this) || this;
        registrations.forEach(function (registration) {
            return _this.register(registration.actionKind, registration.factory());
        });
        initializers.forEach(function (initializer) {
            return _this.initializeActionHandler(initializer);
        });
        return _this;
    }
    ActionHandlerRegistry.prototype.initializeActionHandler = function (initializer) {
        initializer.initialize(this);
    };
    ActionHandlerRegistry = __decorate([
        (0, inversify_1.injectable)(),
        __param(0, (0, inversify_1.multiInject)(types_1.TYPES.ActionHandlerRegistration)),
        __param(0, (0, inversify_1.optional)()),
        __param(1, (0, inversify_1.multiInject)(types_1.TYPES.IActionHandlerInitializer)),
        __param(1, (0, inversify_1.optional)()),
        __metadata("design:paramtypes", [Array, Array])
    ], ActionHandlerRegistry);
    return ActionHandlerRegistry;
}(registry_1.MultiInstanceRegistry));
exports.ActionHandlerRegistry = ActionHandlerRegistry;
/**
 * Utility function to register an action handler for an action kind.
 */
function configureActionHandler(context, kind, constr) {
    if (typeof constr === 'function') {
        if (!(0, inversify_2.isInjectable)(constr)) {
            throw new Error("Action handlers should be @injectable: ".concat(constr.name));
        }
        if (!context.isBound(constr)) {
            context.bind(constr).toSelf();
        }
    }
    context.bind(types_1.TYPES.ActionHandlerRegistration).toDynamicValue(function (ctx) { return ({
        actionKind: kind,
        factory: function () { return ctx.container.get(constr); }
    }); });
}
exports.configureActionHandler = configureActionHandler;
/**
 * Utility function to register an action handler for an action kind.
 */
function onAction(context, kind, handle) {
    context.bind(types_1.TYPES.ActionHandlerRegistration).toConstantValue({
        actionKind: kind,
        factory: function () { return ({ handle: handle }); }
    });
}
exports.onAction = onAction;


/***/ }),

/***/ "./node_modules/sprotty/lib/base/actions/action.js":
/*!*********************************************************!*\
  !*** ./node_modules/sprotty/lib/base/actions/action.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isLabeledAction = exports.LabeledAction = exports.RejectAction = exports.isResponseAction = exports.generateRequestId = exports.isRequestAction = exports.isAction = void 0;
var actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "./node_modules/sprotty-protocol/lib/actions.js");
var object_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/object */ "./node_modules/sprotty-protocol/lib/utils/object.js");
/**
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
function isAction(object) {
    return (0, object_1.hasOwnProperty)(object, 'kind', 'string');
}
exports.isAction = isAction;
/**
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
function isRequestAction(object) {
    return isAction(object) && (0, object_1.hasOwnProperty)(object, 'requestId', 'string');
}
exports.isRequestAction = isRequestAction;
/**
 * Generate a unique `requestId` for a request action.
 *
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
exports.generateRequestId = actions_1.generateRequestId;
/**
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
function isResponseAction(object) {
    return isAction(object) && (0, object_1.hasOwnProperty)(object, 'responseId', 'string')
        && object.responseId !== '';
}
exports.isResponseAction = isResponseAction;
/**
 * A reject action is fired to indicate that a request must be rejected.
 *
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
var RejectAction = /** @class */ (function () {
    function RejectAction(message, responseId, detail) {
        this.message = message;
        this.responseId = responseId;
        this.detail = detail;
        this.kind = RejectAction.KIND;
    }
    RejectAction.KIND = 'rejectRequest';
    return RejectAction;
}());
exports.RejectAction = RejectAction;
/**
 * A list of actions with a label.
 * Labeled actions are used to denote a group of actions in a user-interface context, e.g.,
 * to define an entry in the command palette or in the context menu.
 */
var LabeledAction = /** @class */ (function () {
    function LabeledAction(label, actions, icon) {
        this.label = label;
        this.actions = actions;
        this.icon = icon;
    }
    return LabeledAction;
}());
exports.LabeledAction = LabeledAction;
function isLabeledAction(element) {
    return element !== undefined
        && element.label !== undefined
        && element.actions !== undefined;
}
exports.isLabeledAction = isLabeledAction;


/***/ }),

/***/ "./node_modules/sprotty/lib/base/actions/diagram-locker.js":
/*!*****************************************************************!*\
  !*** ./node_modules/sprotty/lib/base/actions/diagram-locker.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DefaultDiagramLocker = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var DefaultDiagramLocker = /** @class */ (function () {
    function DefaultDiagramLocker() {
    }
    DefaultDiagramLocker.prototype.isAllowed = function (action) {
        return true;
    };
    DefaultDiagramLocker = __decorate([
        (0, inversify_1.injectable)()
    ], DefaultDiagramLocker);
    return DefaultDiagramLocker;
}());
exports.DefaultDiagramLocker = DefaultDiagramLocker;


/***/ }),

/***/ "./node_modules/sprotty/lib/base/animations/animation-frame-syncer.js":
/*!****************************************************************************!*\
  !*** ./node_modules/sprotty/lib/base/animations/animation-frame-syncer.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AnimationFrameSyncer = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var AnimationFrameSyncer = /** @class */ (function () {
    function AnimationFrameSyncer() {
        this.tasks = [];
        this.endTasks = [];
        this.triggered = false;
    }
    AnimationFrameSyncer.prototype.isAvailable = function () {
        return typeof requestAnimationFrame === "function";
    };
    AnimationFrameSyncer.prototype.onNextFrame = function (task) {
        this.tasks.push(task);
        this.trigger();
    };
    AnimationFrameSyncer.prototype.onEndOfNextFrame = function (task) {
        this.endTasks.push(task);
        this.trigger();
    };
    AnimationFrameSyncer.prototype.trigger = function () {
        var _this = this;
        if (!this.triggered) {
            this.triggered = true;
            if (this.isAvailable())
                requestAnimationFrame(function (time) { return _this.run(time); });
            else
                setTimeout(function (time) { return _this.run(time); });
        }
    };
    AnimationFrameSyncer.prototype.run = function (time) {
        var tasks = this.tasks;
        var endTasks = this.endTasks;
        this.triggered = false;
        this.tasks = [];
        this.endTasks = [];
        tasks.forEach(function (task) { return task.call(undefined, time); });
        endTasks.forEach(function (task) { return task.call(undefined, time); });
    };
    AnimationFrameSyncer = __decorate([
        (0, inversify_1.injectable)()
    ], AnimationFrameSyncer);
    return AnimationFrameSyncer;
}());
exports.AnimationFrameSyncer = AnimationFrameSyncer;


/***/ }),

/***/ "./node_modules/sprotty/lib/base/animations/animation.js":
/*!***************************************************************!*\
  !*** ./node_modules/sprotty/lib/base/animations/animation.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CompoundAnimation = exports.Animation = void 0;
var easing_1 = __webpack_require__(/*! ./easing */ "./node_modules/sprotty/lib/base/animations/easing.js");
/**
 * An animation uses the rendering loop of the browser to smoothly
 * calculate a transition between two states of a model element.
 */
var Animation = /** @class */ (function () {
    function Animation(context, ease) {
        if (ease === void 0) { ease = easing_1.easeInOut; }
        this.context = context;
        this.ease = ease;
    }
    Animation.prototype.start = function () {
        var _this = this;
        return new Promise(function (resolve, reject) {
            var start = undefined;
            var frames = 0;
            var lambda = function (time) {
                frames++;
                var dtime;
                if (start === undefined) {
                    start = time;
                    dtime = 0;
                }
                else {
                    dtime = time - start;
                }
                var t = Math.min(1, dtime / _this.context.duration);
                var current = _this.tween(_this.ease(t), _this.context);
                _this.context.modelChanged.update(current);
                if (t === 1) {
                    _this.context.logger.log(_this, (frames * 1000 / _this.context.duration) + ' fps');
                    resolve(current);
                }
                else {
                    _this.context.syncer.onNextFrame(lambda);
                }
            };
            if (_this.context.syncer.isAvailable()) {
                _this.context.syncer.onNextFrame(lambda);
            }
            else {
                var finalModel = _this.tween(1, _this.context);
                resolve(finalModel);
            }
        });
    };
    return Animation;
}());
exports.Animation = Animation;
var CompoundAnimation = /** @class */ (function (_super) {
    __extends(CompoundAnimation, _super);
    function CompoundAnimation(model, context, components, ease) {
        if (components === void 0) { components = []; }
        if (ease === void 0) { ease = easing_1.easeInOut; }
        var _this = _super.call(this, context, ease) || this;
        _this.model = model;
        _this.context = context;
        _this.components = components;
        _this.ease = ease;
        return _this;
    }
    CompoundAnimation.prototype.include = function (animation) {
        this.components.push(animation);
        return this;
    };
    CompoundAnimation.prototype.tween = function (t, context) {
        for (var _i = 0, _a = this.components; _i < _a.length; _i++) {
            var a = _a[_i];
            a.tween(t, context);
        }
        return this.model;
    };
    return CompoundAnimation;
}(Animation));
exports.CompoundAnimation = CompoundAnimation;


/***/ }),

/***/ "./node_modules/sprotty/lib/base/animations/easing.js":
/*!************************************************************!*\
  !*** ./node_modules/sprotty/lib/base/animations/easing.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.easeInOut = void 0;
/**
 * Slows down animations towards the begin and the end.
 *
 * @param x the value between 0 (start of animation) and 1 (end of
 *     animation) linearly interpolated in time.
 * @returns {number} the eased value between 0 and 1
 */
function easeInOut(x) {
    if (x < 0.5)
        return x * x * 2;
    else
        return 1 - (1 - x) * (1 - x) * 2;
}
exports.easeInOut = easeInOut;


/***/ }),

/***/ "./node_modules/sprotty/lib/base/commands/command-registration.js":
/*!************************************************************************!*\
  !*** ./node_modules/sprotty/lib/base/commands/command-registration.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.configureCommand = exports.CommandActionHandlerInitializer = exports.CommandActionHandler = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var inversify_2 = __webpack_require__(/*! ../../utils/inversify */ "./node_modules/sprotty/lib/utils/inversify.js");
var types_1 = __webpack_require__(/*! ../types */ "./node_modules/sprotty/lib/base/types.js");
var CommandActionHandler = /** @class */ (function () {
    function CommandActionHandler(commandRegistration) {
        this.commandRegistration = commandRegistration;
    }
    CommandActionHandler.prototype.handle = function (action) {
        return this.commandRegistration.factory(action);
    };
    return CommandActionHandler;
}());
exports.CommandActionHandler = CommandActionHandler;
var CommandActionHandlerInitializer = /** @class */ (function () {
    function CommandActionHandlerInitializer(registrations) {
        this.registrations = registrations;
    }
    CommandActionHandlerInitializer.prototype.initialize = function (registry) {
        this.registrations.forEach(function (registration) {
            return registry.register(registration.kind, new CommandActionHandler(registration));
        });
    };
    CommandActionHandlerInitializer = __decorate([
        (0, inversify_1.injectable)(),
        __param(0, (0, inversify_1.multiInject)(types_1.TYPES.CommandRegistration)),
        __param(0, (0, inversify_1.optional)()),
        __metadata("design:paramtypes", [Array])
    ], CommandActionHandlerInitializer);
    return CommandActionHandlerInitializer;
}());
exports.CommandActionHandlerInitializer = CommandActionHandlerInitializer;
/**
 * Use this method in your DI configuration to register a new command to the diagram.
 */
function configureCommand(context, constr) {
    if (!(0, inversify_2.isInjectable)(constr)) {
        throw new Error("Commands should be @injectable: ".concat(constr.name));
    }
    if (!context.isBound(constr)) {
        context.bind(constr).toSelf();
    }
    context.bind(types_1.TYPES.CommandRegistration).toDynamicValue(function (ctx) { return ({
        kind: constr.KIND,
        factory: function (action) {
            var childContainer = new inversify_1.Container();
            childContainer.parent = ctx.container;
            childContainer.bind(types_1.TYPES.Action).toConstantValue(action);
            return childContainer.get(constr);
        }
    }); });
}
exports.configureCommand = configureCommand;


/***/ }),

/***/ "./node_modules/sprotty/lib/base/commands/command-stack-options.js":
/*!*************************************************************************!*\
  !*** ./node_modules/sprotty/lib/base/commands/command-stack-options.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.overrideCommandStackOptions = void 0;
var object_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/object */ "./node_modules/sprotty-protocol/lib/utils/object.js");
var types_1 = __webpack_require__(/*! ../types */ "./node_modules/sprotty/lib/base/types.js");
function overrideCommandStackOptions(container, options) {
    var defaultOptions = container.get(types_1.TYPES.CommandStackOptions);
    (0, object_1.safeAssign)(defaultOptions, options);
    return defaultOptions;
}
exports.overrideCommandStackOptions = overrideCommandStackOptions;


/***/ }),

/***/ "./node_modules/sprotty/lib/base/commands/command-stack.js":
/*!*****************************************************************!*\
  !*** ./node_modules/sprotty/lib/base/commands/command-stack.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CommandStack = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../types */ "./node_modules/sprotty/lib/base/types.js");
var smodel_factory_1 = __webpack_require__(/*! ../model/smodel-factory */ "./node_modules/sprotty/lib/base/model/smodel-factory.js");
var smodel_1 = __webpack_require__(/*! ../model/smodel */ "./node_modules/sprotty/lib/base/model/smodel.js");
var animation_frame_syncer_1 = __webpack_require__(/*! ../animations/animation-frame-syncer */ "./node_modules/sprotty/lib/base/animations/animation-frame-syncer.js");
var command_1 = __webpack_require__(/*! ./command */ "./node_modules/sprotty/lib/base/commands/command.js");
/**
 * The implementation of the ICommandStack. Clients should not use this
 * class directly.
 *
 * The command stack holds the current model as the result of the current
 * promise. When a new command is executed/undone/redone, its execution is
 * chained using <code>Promise#then()</code> to the current Promise. This
 * way we can handle long running commands without blocking the current
 * thread.
 *
 * The command stack also does the special handling for special commands:
 *
 * System commands should be transparent to the user and as such be
 * automatically undone/redone with the next plain command. Additional care
 * must be taken that system commands that are executed after undo don't
 * break the correspondence between the topmost commands on the undo and
 * redo stacks.
 *
 * Hidden commands only tell the viewer to render a hidden model such that
 * its bounds can be extracted from the DOM and forwarded as separate actions.
 * Hidden commands should not leave any trace on the undo/redo/off stacks.
 *
 * Mergeable commands should be merged with their predecessor if possible,
 * such that e.g. multiple subsequent moves of the smae element can be undone
 * in one single step.
 */
var CommandStack = /** @class */ (function () {
    function CommandStack() {
        this.undoStack = [];
        this.redoStack = [];
        /**
         * System commands should be transparent to the user in undo/redo
         * operations. When a system command is executed when the redo
         * stack is not empty, it is pushed to offStack instead.
         *
         * On redo, all commands form this stack are undone such that the
         * redo operation gets the exact same model as when it was executed
         * first.
         *
         * On undo, all commands form this stack are undone as well as
         * system ommands should be transparent to the user.
         */
        this.offStack = [];
    }
    CommandStack.prototype.initialize = function () {
        this.currentPromise = Promise.resolve({
            main: {
                model: this.modelFactory.createRoot(smodel_factory_1.EMPTY_ROOT),
                modelChanged: false,
            },
            hidden: {
                model: this.modelFactory.createRoot(smodel_factory_1.EMPTY_ROOT),
                modelChanged: false,
            },
            popup: {
                model: this.modelFactory.createRoot(smodel_factory_1.EMPTY_ROOT),
                modelChanged: false,
            }
        });
    };
    Object.defineProperty(CommandStack.prototype, "currentModel", {
        get: function () {
            return this.currentPromise.then(function (state) { return state.main.model; });
        },
        enumerable: false,
        configurable: true
    });
    CommandStack.prototype.executeAll = function (commands) {
        var _this = this;
        commands.forEach(function (command) {
            _this.logger.log(_this, 'Executing', command);
            _this.handleCommand(command, command.execute, _this.mergeOrPush);
        });
        return this.thenUpdate();
    };
    CommandStack.prototype.execute = function (command) {
        this.logger.log(this, 'Executing', command);
        this.handleCommand(command, command.execute, this.mergeOrPush);
        return this.thenUpdate();
    };
    CommandStack.prototype.undo = function () {
        var _this = this;
        this.undoOffStackSystemCommands();
        this.undoPreceedingSystemCommands();
        var command = this.undoStack[this.undoStack.length - 1];
        if (command !== undefined && !this.isBlockUndo(command)) {
            this.undoStack.pop();
            this.logger.log(this, 'Undoing', command);
            this.handleCommand(command, command.undo, function (c, context) {
                _this.redoStack.push(c);
            });
        }
        return this.thenUpdate();
    };
    CommandStack.prototype.redo = function () {
        var _this = this;
        this.undoOffStackSystemCommands();
        var command = this.redoStack.pop();
        if (command !== undefined) {
            this.logger.log(this, 'Redoing', command);
            this.handleCommand(command, command.redo, function (c, context) {
                _this.pushToUndoStack(c);
            });
        }
        this.redoFollowingSystemCommands();
        return this.thenUpdate();
    };
    /**
     * Chains the current promise with another Promise that performs the
     * given operation on the given command.
     *
     * @param beforeResolve a function that is called directly before
     *      resolving the Promise to return the new model. Usually puts the
     *      command on the appropriate stack.
     */
    CommandStack.prototype.handleCommand = function (command, operation, beforeResolve) {
        var _this = this;
        this.currentPromise = this.currentPromise.then(function (state) {
            return new Promise(function (resolve) {
                var target;
                if (command instanceof command_1.HiddenCommand)
                    target = 'hidden';
                else if (command instanceof command_1.PopupCommand)
                    target = 'popup';
                else
                    target = 'main';
                var context = _this.createContext(state.main.model);
                var commandResult;
                try {
                    commandResult = operation.call(command, context);
                }
                catch (error) {
                    _this.logger.error(_this, "Failed to execute command:", error);
                    commandResult = state[target].model;
                }
                var newState = copyState(state);
                if (commandResult instanceof Promise) {
                    commandResult.then(function (newModel) {
                        if (target === 'main')
                            beforeResolve.call(_this, command, context);
                        newState[target] = { model: newModel, modelChanged: true };
                        resolve(newState);
                    });
                }
                else if (commandResult instanceof smodel_1.SModelRoot) {
                    if (target === 'main')
                        beforeResolve.call(_this, command, context);
                    newState[target] = { model: commandResult, modelChanged: true };
                    resolve(newState);
                }
                else {
                    if (target === 'main')
                        beforeResolve.call(_this, command, context);
                    newState[target] = {
                        model: commandResult.model,
                        modelChanged: state[target].modelChanged || commandResult.modelChanged,
                        cause: commandResult.cause
                    };
                    resolve(newState);
                }
            });
        });
    };
    CommandStack.prototype.pushToUndoStack = function (command) {
        this.undoStack.push(command);
        if (this.options.undoHistoryLimit >= 0 && this.undoStack.length > this.options.undoHistoryLimit)
            this.undoStack.splice(0, this.undoStack.length - this.options.undoHistoryLimit);
    };
    /**
     * Notifies the Viewer to render the new model and/or the new hidden model
     * and returns a Promise for the new model.
     */
    CommandStack.prototype.thenUpdate = function () {
        var _this = this;
        this.currentPromise = this.currentPromise.then(function (state) {
            var newState = copyState(state);
            if (state.hidden.modelChanged) {
                _this.updateHidden(state.hidden.model, state.hidden.cause);
                newState.hidden.modelChanged = false;
                newState.hidden.cause = undefined;
            }
            if (state.main.modelChanged) {
                _this.update(state.main.model, state.main.cause);
                newState.main.modelChanged = false;
                newState.main.cause = undefined;
            }
            if (state.popup.modelChanged) {
                _this.updatePopup(state.popup.model, state.popup.cause);
                newState.popup.modelChanged = false;
                newState.popup.cause = undefined;
            }
            return newState;
        });
        return this.currentModel;
    };
    /**
     * Notify the `ModelViewer` that the model has changed.
     */
    CommandStack.prototype.update = function (model, cause) {
        if (this.modelViewer === undefined) {
            this.modelViewer = this.viewerProvider.modelViewer;
        }
        this.modelViewer.update(model, cause);
    };
    /**
     * Notify the `HiddenModelViewer` that the hidden model has changed.
     */
    CommandStack.prototype.updateHidden = function (model, cause) {
        if (this.hiddenModelViewer === undefined) {
            this.hiddenModelViewer = this.viewerProvider.hiddenModelViewer;
        }
        this.hiddenModelViewer.update(model, cause);
    };
    /**
     * Notify the `PopupModelViewer` that the popup model has changed.
     */
    CommandStack.prototype.updatePopup = function (model, cause) {
        if (this.popupModelViewer === undefined) {
            this.popupModelViewer = this.viewerProvider.popupModelViewer;
        }
        this.popupModelViewer.update(model, cause);
    };
    /**
     * Handling of commands after their execution.
     *
     * Hidden commands are not pushed to any stack.
     *
     * System commands are pushed to the <code>offStack</code> when the redo
     * stack is not empty, allowing to undo the before a redo to keep the chain
     * of commands consistent.
     *
     * Mergable commands are merged if possible.
     */
    CommandStack.prototype.mergeOrPush = function (command, context) {
        var _this = this;
        if (this.isBlockUndo(command)) {
            this.undoStack = [];
            this.redoStack = [];
            this.offStack = [];
            this.pushToUndoStack(command);
            return;
        }
        if (this.isPushToOffStack(command) && this.redoStack.length > 0) {
            if (this.offStack.length > 0) {
                var lastCommand = this.offStack[this.offStack.length - 1];
                if (lastCommand instanceof command_1.MergeableCommand && lastCommand.merge(command, context))
                    return;
            }
            this.offStack.push(command);
            return;
        }
        if (this.isPushToUndoStack(command)) {
            this.offStack.forEach(function (c) { return _this.undoStack.push(c); });
            this.offStack = [];
            this.redoStack = [];
            if (this.undoStack.length > 0) {
                var lastCommand = this.undoStack[this.undoStack.length - 1];
                if (lastCommand instanceof command_1.MergeableCommand && lastCommand.merge(command, context))
                    return;
            }
            this.pushToUndoStack(command);
        }
    };
    /**
     * Reverts all system commands on the offStack.
     */
    CommandStack.prototype.undoOffStackSystemCommands = function () {
        var command = this.offStack.pop();
        while (command !== undefined) {
            this.logger.log(this, 'Undoing off-stack', command);
            this.handleCommand(command, command.undo, function () { });
            command = this.offStack.pop();
        }
    };
    /**
     * System commands should be transparent to the user, so this method
     * is called from <code>undo()</code> to revert all system commands
     * at the top of the undoStack.
     */
    CommandStack.prototype.undoPreceedingSystemCommands = function () {
        var _this = this;
        var command = this.undoStack[this.undoStack.length - 1];
        while (command !== undefined && this.isPushToOffStack(command)) {
            this.undoStack.pop();
            this.logger.log(this, 'Undoing', command);
            this.handleCommand(command, command.undo, function (c, context) {
                _this.redoStack.push(c);
            });
            command = this.undoStack[this.undoStack.length - 1];
        }
    };
    /**
     * System commands should be transparent to the user, so this method
     * is called from <code>redo()</code> to re-execute all system commands
     * at the top of the redoStack.
     */
    CommandStack.prototype.redoFollowingSystemCommands = function () {
        var _this = this;
        var command = this.redoStack[this.redoStack.length - 1];
        while (command !== undefined && this.isPushToOffStack(command)) {
            this.redoStack.pop();
            this.logger.log(this, 'Redoing ', command);
            this.handleCommand(command, command.redo, function (c, context) {
                _this.pushToUndoStack(c);
            });
            command = this.redoStack[this.redoStack.length - 1];
        }
    };
    /**
     * Assembles the context object that is passed to the commands execution method.
     */
    CommandStack.prototype.createContext = function (currentModel) {
        return {
            root: currentModel,
            modelChanged: this,
            modelFactory: this.modelFactory,
            duration: this.options.defaultDuration,
            logger: this.logger,
            syncer: this.syncer
        };
    };
    CommandStack.prototype.isPushToOffStack = function (command) {
        return command instanceof command_1.SystemCommand;
    };
    CommandStack.prototype.isPushToUndoStack = function (command) {
        return !(command instanceof command_1.HiddenCommand);
    };
    CommandStack.prototype.isBlockUndo = function (command) {
        return command instanceof command_1.ResetCommand;
    };
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.IModelFactory),
        __metadata("design:type", Object)
    ], CommandStack.prototype, "modelFactory", void 0);
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.IViewerProvider),
        __metadata("design:type", Object)
    ], CommandStack.prototype, "viewerProvider", void 0);
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.ILogger),
        __metadata("design:type", Object)
    ], CommandStack.prototype, "logger", void 0);
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.AnimationFrameSyncer),
        __metadata("design:type", animation_frame_syncer_1.AnimationFrameSyncer)
    ], CommandStack.prototype, "syncer", void 0);
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.CommandStackOptions),
        __metadata("design:type", Object)
    ], CommandStack.prototype, "options", void 0);
    __decorate([
        (0, inversify_1.postConstruct)(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], CommandStack.prototype, "initialize", null);
    CommandStack = __decorate([
        (0, inversify_1.injectable)()
    ], CommandStack);
    return CommandStack;
}());
exports.CommandStack = CommandStack;
function copyState(state) {
    return {
        main: __assign({}, state.main),
        hidden: __assign({}, state.hidden),
        popup: __assign({}, state.popup)
    };
}


/***/ }),

/***/ "./node_modules/sprotty/lib/base/commands/command.js":
/*!***********************************************************!*\
  !*** ./node_modules/sprotty/lib/base/commands/command.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ResetCommand = exports.SystemCommand = exports.PopupCommand = exports.HiddenCommand = exports.MergeableCommand = exports.Command = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
/**
 * Base class for all commands.
 *
 * Command instances are created via dependency injection and should take
 * the respective action as an injected constructor parameter. They must
 * also define a static <code>KIND</code> which is used to map an
 * <code>Action#kind</code>.
 *
 * <pre>
 * export class MyCommand extends Command {
 *   static KIND = 'MyCommand'
 *   constructor(@inject(TYPES.Action) action: MyAction) {
 *   ...
 * }
 * @inject(TYPES.Action)
 * </pre>
 */
var Command = /** @class */ (function () {
    function Command() {
    }
    Command = __decorate([
        (0, inversify_1.injectable)()
    ], Command);
    return Command;
}());
exports.Command = Command;
/**
 * A mergeable command can accumulate subsequent commands of the same kind.
 *
 * For example, multiple subsequent move commands can be merged to yield a
 * single command, such that undo will roll them back altogether. Otherwise
 * the user would have to push CTRL-Z for each mouse move element that
 * resuted in a command.
 */
var MergeableCommand = /** @class */ (function (_super) {
    __extends(MergeableCommand, _super);
    function MergeableCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Tries to merge the given command with this.
     *
     * @param command
     * @param context
     */
    MergeableCommand.prototype.merge = function (command, context) {
        return false;
    };
    MergeableCommand = __decorate([
        (0, inversify_1.injectable)()
    ], MergeableCommand);
    return MergeableCommand;
}(Command));
exports.MergeableCommand = MergeableCommand;
/**
 * A hidden command is used to trigger the rendering of a model on a
 * hidden canvas.
 *
 * Some graphical elements are styled using CSS, others have bounds that
 * require to layout their children before being computed. In such cases
 * we cannot tell about the size of elements without acutally rendering
 * the DOM. We render them to an invisible canvas. This can be achieved
 * using hidden commands.
 *
 * Hidden commands do not change the model directly, and are as such
 * neither undoable nor redoable. The command stack does not push them on
 * any stack and forwards the resulting model to the invisible viewer.
 */
var HiddenCommand = /** @class */ (function (_super) {
    __extends(HiddenCommand, _super);
    function HiddenCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HiddenCommand.prototype.undo = function (context) {
        context.logger.error(this, 'Cannot undo a hidden command');
        return context.root;
    };
    HiddenCommand.prototype.redo = function (context) {
        context.logger.error(this, 'Cannot redo a hidden command');
        return context.root;
    };
    HiddenCommand = __decorate([
        (0, inversify_1.injectable)()
    ], HiddenCommand);
    return HiddenCommand;
}(Command));
exports.HiddenCommand = HiddenCommand;
var PopupCommand = /** @class */ (function (_super) {
    __extends(PopupCommand, _super);
    function PopupCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PopupCommand = __decorate([
        (0, inversify_1.injectable)()
    ], PopupCommand);
    return PopupCommand;
}(Command));
exports.PopupCommand = PopupCommand;
/**
 * A system command is triggered by the system, e.g. in order to update bounds
 * in the model with data fetched from the DOM.
 *
 * As it is automatically triggered it should not count as a single command in
 * undo/redo operations. Into the bargain, such an automatic command could occur
 * after an undo and as such make the next redo command invalid because it is
 * based on a model state that has changed. The command stack handles system
 * commands in a special way to overcome these issues.
 */
var SystemCommand = /** @class */ (function (_super) {
    __extends(SystemCommand, _super);
    function SystemCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SystemCommand = __decorate([
        (0, inversify_1.injectable)()
    ], SystemCommand);
    return SystemCommand;
}(Command));
exports.SystemCommand = SystemCommand;
/**
 * A reset command deletes all undo/redo stacks and cannot be undone.
 *
 * It marks a point of no return.
 */
var ResetCommand = /** @class */ (function (_super) {
    __extends(ResetCommand, _super);
    function ResetCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ResetCommand = __decorate([
        (0, inversify_1.injectable)()
    ], ResetCommand);
    return ResetCommand;
}(Command));
exports.ResetCommand = ResetCommand;


/***/ }),

/***/ "./node_modules/sprotty/lib/base/commands/request-command.js":
/*!*******************************************************************!*\
  !*** ./node_modules/sprotty/lib/base/commands/request-command.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ModelRequestCommand = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../types */ "./node_modules/sprotty/lib/base/types.js");
var command_1 = __webpack_require__(/*! ./command */ "./node_modules/sprotty/lib/base/commands/command.js");
/**
 * A command that does not modify the internal model, but retrieves information
 * from it by dispatching a response action.
 */
var ModelRequestCommand = /** @class */ (function (_super) {
    __extends(ModelRequestCommand, _super);
    function ModelRequestCommand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ModelRequestCommand.prototype.execute = function (context) {
        var result = this.retrieveResult(context);
        this.actionDispatcher.dispatch(result);
        return { model: context.root, modelChanged: false };
    };
    ModelRequestCommand.prototype.undo = function (context) {
        return { model: context.root, modelChanged: false };
    };
    ModelRequestCommand.prototype.redo = function (context) {
        return { model: context.root, modelChanged: false };
    };
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.IActionDispatcher),
        __metadata("design:type", Object)
    ], ModelRequestCommand.prototype, "actionDispatcher", void 0);
    ModelRequestCommand = __decorate([
        (0, inversify_1.injectable)()
    ], ModelRequestCommand);
    return ModelRequestCommand;
}(command_1.SystemCommand));
exports.ModelRequestCommand = ModelRequestCommand;


/***/ }),

/***/ "./node_modules/sprotty/lib/base/di.config.js":
/*!****************************************************!*\
  !*** ./node_modules/sprotty/lib/base/di.config.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ./types */ "./node_modules/sprotty/lib/base/types.js");
var initialize_canvas_1 = __webpack_require__(/*! ./features/initialize-canvas */ "./node_modules/sprotty/lib/base/features/initialize-canvas.js");
var logging_1 = __webpack_require__(/*! ../utils/logging */ "./node_modules/sprotty/lib/utils/logging.js");
var action_dispatcher_1 = __webpack_require__(/*! ./actions/action-dispatcher */ "./node_modules/sprotty/lib/base/actions/action-dispatcher.js");
var action_handler_1 = __webpack_require__(/*! ./actions/action-handler */ "./node_modules/sprotty/lib/base/actions/action-handler.js");
var command_stack_1 = __webpack_require__(/*! ./commands/command-stack */ "./node_modules/sprotty/lib/base/commands/command-stack.js");
var smodel_factory_1 = __webpack_require__(/*! ./model/smodel-factory */ "./node_modules/sprotty/lib/base/model/smodel-factory.js");
var animation_frame_syncer_1 = __webpack_require__(/*! ./animations/animation-frame-syncer */ "./node_modules/sprotty/lib/base/animations/animation-frame-syncer.js");
var viewer_1 = __webpack_require__(/*! ./views/viewer */ "./node_modules/sprotty/lib/base/views/viewer.js");
var viewer_options_1 = __webpack_require__(/*! ./views/viewer-options */ "./node_modules/sprotty/lib/base/views/viewer-options.js");
var mouse_tool_1 = __webpack_require__(/*! ./views/mouse-tool */ "./node_modules/sprotty/lib/base/views/mouse-tool.js");
var key_tool_1 = __webpack_require__(/*! ./views/key-tool */ "./node_modules/sprotty/lib/base/views/key-tool.js");
var vnode_postprocessor_1 = __webpack_require__(/*! ./views/vnode-postprocessor */ "./node_modules/sprotty/lib/base/views/vnode-postprocessor.js");
var view_1 = __webpack_require__(/*! ./views/view */ "./node_modules/sprotty/lib/base/views/view.js");
var viewer_cache_1 = __webpack_require__(/*! ./views/viewer-cache */ "./node_modules/sprotty/lib/base/views/viewer-cache.js");
var dom_helper_1 = __webpack_require__(/*! ./views/dom-helper */ "./node_modules/sprotty/lib/base/views/dom-helper.js");
var id_postprocessor_1 = __webpack_require__(/*! ./views/id-postprocessor */ "./node_modules/sprotty/lib/base/views/id-postprocessor.js");
var command_registration_1 = __webpack_require__(/*! ./commands/command-registration */ "./node_modules/sprotty/lib/base/commands/command-registration.js");
var css_class_postprocessor_1 = __webpack_require__(/*! ./views/css-class-postprocessor */ "./node_modules/sprotty/lib/base/views/css-class-postprocessor.js");
var tool_manager_1 = __webpack_require__(/*! ./tool-manager/tool-manager */ "./node_modules/sprotty/lib/base/tool-manager/tool-manager.js");
var tool_1 = __webpack_require__(/*! ./tool-manager/tool */ "./node_modules/sprotty/lib/base/tool-manager/tool.js");
var set_model_1 = __webpack_require__(/*! ./features/set-model */ "./node_modules/sprotty/lib/base/features/set-model.js");
var ui_extension_registry_1 = __webpack_require__(/*! ./ui-extensions/ui-extension-registry */ "./node_modules/sprotty/lib/base/ui-extensions/ui-extension-registry.js");
var diagram_locker_1 = __webpack_require__(/*! ./actions/diagram-locker */ "./node_modules/sprotty/lib/base/actions/diagram-locker.js");
var defaultContainerModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    // Logging ---------------------------------------------
    bind(types_1.TYPES.ILogger).to(logging_1.NullLogger).inSingletonScope();
    bind(types_1.TYPES.LogLevel).toConstantValue(logging_1.LogLevel.warn);
    // Registries ---------------------------------------------
    bind(types_1.TYPES.SModelRegistry).to(smodel_factory_1.SModelRegistry).inSingletonScope();
    bind(action_handler_1.ActionHandlerRegistry).toSelf().inSingletonScope();
    bind(types_1.TYPES.ActionHandlerRegistryProvider).toProvider(function (ctx) {
        return function () {
            return new Promise(function (resolve) {
                resolve(ctx.container.get(action_handler_1.ActionHandlerRegistry));
            });
        };
    });
    bind(types_1.TYPES.ViewRegistry).to(view_1.ViewRegistry).inSingletonScope();
    // Model Creation ---------------------------------------------
    bind(types_1.TYPES.IModelFactory).to(smodel_factory_1.SModelFactory).inSingletonScope();
    // Action Dispatcher ---------------------------------------------
    bind(types_1.TYPES.IActionDispatcher).to(action_dispatcher_1.ActionDispatcher).inSingletonScope();
    bind(types_1.TYPES.IActionDispatcherProvider).toProvider(function (ctx) {
        return function () {
            return new Promise(function (resolve) {
                resolve(ctx.container.get(types_1.TYPES.IActionDispatcher));
            });
        };
    });
    bind(types_1.TYPES.IDiagramLocker).to(diagram_locker_1.DefaultDiagramLocker).inSingletonScope();
    // Action handler
    bind(types_1.TYPES.IActionHandlerInitializer).to(command_registration_1.CommandActionHandlerInitializer);
    // Command Stack ---------------------------------------------
    bind(types_1.TYPES.ICommandStack).to(command_stack_1.CommandStack).inSingletonScope();
    bind(types_1.TYPES.ICommandStackProvider).toProvider(function (ctx) {
        return function () {
            return new Promise(function (resolve) {
                resolve(ctx.container.get(types_1.TYPES.ICommandStack));
            });
        };
    });
    bind(types_1.TYPES.CommandStackOptions).toConstantValue({
        defaultDuration: 250,
        undoHistoryLimit: 50
    });
    // Viewer ---------------------------------------------
    bind(viewer_1.ModelViewer).toSelf().inSingletonScope();
    bind(viewer_1.HiddenModelViewer).toSelf().inSingletonScope();
    bind(viewer_1.PopupModelViewer).toSelf().inSingletonScope();
    bind(types_1.TYPES.ModelViewer).toDynamicValue(function (ctx) {
        var container = ctx.container.createChild();
        container.bind(types_1.TYPES.IViewer).toService(viewer_1.ModelViewer);
        container.bind(viewer_cache_1.ViewerCache).toSelf();
        return container.get(viewer_cache_1.ViewerCache);
    }).inSingletonScope();
    bind(types_1.TYPES.PopupModelViewer).toDynamicValue(function (ctx) {
        var container = ctx.container.createChild();
        container.bind(types_1.TYPES.IViewer).toService(viewer_1.PopupModelViewer);
        container.bind(viewer_cache_1.ViewerCache).toSelf();
        return container.get(viewer_cache_1.ViewerCache);
    }).inSingletonScope();
    bind(types_1.TYPES.HiddenModelViewer).toService(viewer_1.HiddenModelViewer);
    bind(types_1.TYPES.IViewerProvider).toDynamicValue(function (ctx) {
        return {
            get modelViewer() {
                return ctx.container.get(types_1.TYPES.ModelViewer);
            },
            get hiddenModelViewer() {
                return ctx.container.get(types_1.TYPES.HiddenModelViewer);
            },
            get popupModelViewer() {
                return ctx.container.get(types_1.TYPES.PopupModelViewer);
            }
        };
    });
    bind(types_1.TYPES.ViewerOptions).toConstantValue((0, viewer_options_1.defaultViewerOptions)());
    bind(types_1.TYPES.PatcherProvider).to(viewer_1.PatcherProvider).inSingletonScope();
    bind(types_1.TYPES.DOMHelper).to(dom_helper_1.DOMHelper).inSingletonScope();
    bind(types_1.TYPES.ModelRendererFactory).toFactory(function (ctx) {
        return function (targetKind, processors, args) {
            if (args === void 0) { args = {}; }
            var viewRegistry = ctx.container.get(types_1.TYPES.ViewRegistry);
            return new viewer_1.ModelRenderer(viewRegistry, targetKind, processors, args);
        };
    });
    // Tools & Postprocessors --------------------------------------
    bind(id_postprocessor_1.IdPostprocessor).toSelf().inSingletonScope();
    bind(types_1.TYPES.IVNodePostprocessor).toService(id_postprocessor_1.IdPostprocessor);
    bind(types_1.TYPES.HiddenVNodePostprocessor).toService(id_postprocessor_1.IdPostprocessor);
    bind(css_class_postprocessor_1.CssClassPostprocessor).toSelf().inSingletonScope();
    bind(types_1.TYPES.IVNodePostprocessor).toService(css_class_postprocessor_1.CssClassPostprocessor);
    bind(types_1.TYPES.HiddenVNodePostprocessor).toService(css_class_postprocessor_1.CssClassPostprocessor);
    bind(mouse_tool_1.MouseTool).toSelf().inSingletonScope();
    bind(types_1.TYPES.IVNodePostprocessor).toService(mouse_tool_1.MouseTool);
    bind(key_tool_1.KeyTool).toSelf().inSingletonScope();
    bind(types_1.TYPES.IVNodePostprocessor).toService(key_tool_1.KeyTool);
    bind(vnode_postprocessor_1.FocusFixPostprocessor).toSelf().inSingletonScope();
    bind(types_1.TYPES.IVNodePostprocessor).toService(vnode_postprocessor_1.FocusFixPostprocessor);
    bind(types_1.TYPES.PopupVNodePostprocessor).toService(id_postprocessor_1.IdPostprocessor);
    bind(mouse_tool_1.PopupMouseTool).toSelf().inSingletonScope();
    bind(types_1.TYPES.PopupVNodePostprocessor).toService(mouse_tool_1.PopupMouseTool);
    // Animation Frame Sync ------------------------------------------
    bind(types_1.TYPES.AnimationFrameSyncer).to(animation_frame_syncer_1.AnimationFrameSyncer).inSingletonScope();
    // Canvas Initialization ---------------------------------------------
    var context = { bind: bind, isBound: isBound };
    (0, command_registration_1.configureCommand)(context, initialize_canvas_1.InitializeCanvasBoundsCommand);
    bind(initialize_canvas_1.CanvasBoundsInitializer).toSelf().inSingletonScope();
    bind(types_1.TYPES.IVNodePostprocessor).toService(initialize_canvas_1.CanvasBoundsInitializer);
    // Model commands ---------------------------------------------
    (0, command_registration_1.configureCommand)(context, set_model_1.SetModelCommand);
    // Tool manager initialization ------------------------------------
    bind(types_1.TYPES.IToolManager).to(tool_manager_1.ToolManager).inSingletonScope();
    bind(tool_manager_1.DefaultToolsEnablingKeyListener).toSelf().inSingletonScope();
    bind(types_1.TYPES.KeyListener).toService(tool_manager_1.DefaultToolsEnablingKeyListener);
    bind(tool_manager_1.ToolManagerActionHandler).toSelf().inSingletonScope();
    (0, action_handler_1.configureActionHandler)(context, tool_1.EnableDefaultToolsAction.KIND, tool_manager_1.ToolManagerActionHandler);
    (0, action_handler_1.configureActionHandler)(context, tool_1.EnableToolsAction.KIND, tool_manager_1.ToolManagerActionHandler);
    // UIExtension registry initialization ------------------------------------
    bind(types_1.TYPES.UIExtensionRegistry).to(ui_extension_registry_1.UIExtensionRegistry).inSingletonScope();
    (0, command_registration_1.configureCommand)(context, ui_extension_registry_1.SetUIExtensionVisibilityCommand);
    // Tracker for last known mouse position on diagram ------------------------
    bind(mouse_tool_1.MousePositionTracker).toSelf().inSingletonScope();
    bind(types_1.TYPES.MouseListener).toService(mouse_tool_1.MousePositionTracker);
});
exports["default"] = defaultContainerModule;


/***/ }),

/***/ "./node_modules/sprotty/lib/base/features/initialize-canvas.js":
/*!*********************************************************************!*\
  !*** ./node_modules/sprotty/lib/base/features/initialize-canvas.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.InitializeCanvasBoundsCommand = exports.InitializeCanvasBoundsAction = exports.CanvasBoundsInitializer = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "./node_modules/sprotty-protocol/lib/utils/geometry.js");
var types_1 = __webpack_require__(/*! ../types */ "./node_modules/sprotty/lib/base/types.js");
var smodel_1 = __webpack_require__(/*! ../model/smodel */ "./node_modules/sprotty/lib/base/model/smodel.js");
var command_1 = __webpack_require__(/*! ../commands/command */ "./node_modules/sprotty/lib/base/commands/command.js");
var browser_1 = __webpack_require__(/*! ../../utils/browser */ "./node_modules/sprotty/lib/utils/browser.js");
/**
 * Grabs the bounds from the root element in page coordinates and fires a
 * InitializeCanvasBoundsAction. This size is needed for other actions such
 * as FitToScreenAction.
 */
var CanvasBoundsInitializer = /** @class */ (function () {
    function CanvasBoundsInitializer() {
    }
    CanvasBoundsInitializer.prototype.decorate = function (vnode, element) {
        if (element instanceof smodel_1.SModelRoot && !geometry_1.Dimension.isValid(element.canvasBounds)) {
            this.rootAndVnode = [element, vnode];
        }
        return vnode;
    };
    CanvasBoundsInitializer.prototype.postUpdate = function () {
        if (this.rootAndVnode !== undefined) {
            var domElement = this.rootAndVnode[1].elm;
            var oldBounds = this.rootAndVnode[0].canvasBounds;
            if (domElement !== undefined) {
                var newBounds = this.getBoundsInPage(domElement);
                if (!((0, geometry_1.almostEquals)(newBounds.x, oldBounds.x)
                    && (0, geometry_1.almostEquals)(newBounds.y, oldBounds.y)
                    && (0, geometry_1.almostEquals)(newBounds.width, oldBounds.width)
                    && (0, geometry_1.almostEquals)(newBounds.height, oldBounds.width)))
                    this.actionDispatcher.dispatch(InitializeCanvasBoundsAction.create(newBounds));
            }
            this.rootAndVnode = undefined;
        }
    };
    CanvasBoundsInitializer.prototype.getBoundsInPage = function (element) {
        var bounds = element.getBoundingClientRect();
        var scroll = (0, browser_1.getWindowScroll)();
        return {
            x: bounds.left + scroll.x,
            y: bounds.top + scroll.y,
            width: bounds.width,
            height: bounds.height
        };
    };
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.IActionDispatcher),
        __metadata("design:type", Object)
    ], CanvasBoundsInitializer.prototype, "actionDispatcher", void 0);
    CanvasBoundsInitializer = __decorate([
        (0, inversify_1.injectable)()
    ], CanvasBoundsInitializer);
    return CanvasBoundsInitializer;
}());
exports.CanvasBoundsInitializer = CanvasBoundsInitializer;
var InitializeCanvasBoundsAction;
(function (InitializeCanvasBoundsAction) {
    InitializeCanvasBoundsAction.KIND = 'initializeCanvasBounds';
    function create(newCanvasBounds) {
        return {
            kind: InitializeCanvasBoundsAction.KIND,
            newCanvasBounds: newCanvasBounds
        };
    }
    InitializeCanvasBoundsAction.create = create;
})(InitializeCanvasBoundsAction = exports.InitializeCanvasBoundsAction || (exports.InitializeCanvasBoundsAction = {}));
var InitializeCanvasBoundsCommand = /** @class */ (function (_super) {
    __extends(InitializeCanvasBoundsCommand, _super);
    function InitializeCanvasBoundsCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    InitializeCanvasBoundsCommand.prototype.execute = function (context) {
        this.newCanvasBounds = this.action.newCanvasBounds;
        context.root.canvasBounds = this.newCanvasBounds;
        return context.root;
    };
    InitializeCanvasBoundsCommand.prototype.undo = function (context) {
        return context.root;
    };
    InitializeCanvasBoundsCommand.prototype.redo = function (context) {
        return context.root;
    };
    InitializeCanvasBoundsCommand.KIND = InitializeCanvasBoundsAction.KIND;
    InitializeCanvasBoundsCommand = __decorate([
        (0, inversify_1.injectable)(),
        __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [Object])
    ], InitializeCanvasBoundsCommand);
    return InitializeCanvasBoundsCommand;
}(command_1.SystemCommand));
exports.InitializeCanvasBoundsCommand = InitializeCanvasBoundsCommand;


/***/ }),

/***/ "./node_modules/sprotty/lib/base/features/set-model.js":
/*!*************************************************************!*\
  !*** ./node_modules/sprotty/lib/base/features/set-model.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SetModelCommand = exports.SetModelAction = exports.RequestModelAction = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "./node_modules/sprotty-protocol/lib/actions.js");
var command_1 = __webpack_require__(/*! ../commands/command */ "./node_modules/sprotty/lib/base/commands/command.js");
var types_1 = __webpack_require__(/*! ../types */ "./node_modules/sprotty/lib/base/types.js");
var initialize_canvas_1 = __webpack_require__(/*! ./initialize-canvas */ "./node_modules/sprotty/lib/base/features/initialize-canvas.js");
/**
 * Sent from the client to the model source (e.g. a DiagramServer) in order to request a model. Usually this
 * is the first message that is sent to the source, so it is also used to initiate the communication.
 * The response is a SetModelAction or an UpdateModelAction.
 *
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
var RequestModelAction = /** @class */ (function () {
    function RequestModelAction(options, requestId) {
        if (requestId === void 0) { requestId = ''; }
        this.options = options;
        this.requestId = requestId;
        this.kind = RequestModelAction.KIND;
    }
    /** Factory function to dispatch a request with the `IActionDispatcher` */
    RequestModelAction.create = function (options) {
        return new RequestModelAction(options, (0, actions_1.generateRequestId)());
    };
    RequestModelAction.KIND = 'requestModel';
    return RequestModelAction;
}());
exports.RequestModelAction = RequestModelAction;
/**
 * Sent from the model source to the client in order to set the model. If a model is already present, it is replaced.
 *
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
var SetModelAction = /** @class */ (function () {
    function SetModelAction(newRoot, responseId) {
        if (responseId === void 0) { responseId = ''; }
        this.newRoot = newRoot;
        this.responseId = responseId;
        this.kind = SetModelAction.KIND;
    }
    SetModelAction.KIND = 'setModel';
    return SetModelAction;
}());
exports.SetModelAction = SetModelAction;
var SetModelCommand = /** @class */ (function (_super) {
    __extends(SetModelCommand, _super);
    function SetModelCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    SetModelCommand.prototype.execute = function (context) {
        this.oldRoot = context.modelFactory.createRoot(context.root);
        this.newRoot = context.modelFactory.createRoot(this.action.newRoot);
        return this.newRoot;
    };
    SetModelCommand.prototype.undo = function (context) {
        return this.oldRoot;
    };
    SetModelCommand.prototype.redo = function (context) {
        return this.newRoot;
    };
    Object.defineProperty(SetModelCommand.prototype, "blockUntil", {
        get: function () {
            return function (action) { return action.kind === initialize_canvas_1.InitializeCanvasBoundsCommand.KIND; };
        },
        enumerable: false,
        configurable: true
    });
    SetModelCommand.KIND = actions_1.SetModelAction.KIND;
    SetModelCommand = __decorate([
        (0, inversify_1.injectable)(),
        __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [Object])
    ], SetModelCommand);
    return SetModelCommand;
}(command_1.ResetCommand));
exports.SetModelCommand = SetModelCommand;


/***/ }),

/***/ "./node_modules/sprotty/lib/base/model/smodel-extension.js":
/*!*****************************************************************!*\
  !*** ./node_modules/sprotty/lib/base/model/smodel-extension.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./node_modules/sprotty/lib/base/model/smodel-factory.js":
/*!***************************************************************!*\
  !*** ./node_modules/sprotty/lib/base/model/smodel-factory.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createFeatureSet = exports.SModelRegistry = exports.EMPTY_ROOT = exports.SModelFactory = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../types */ "./node_modules/sprotty/lib/base/types.js");
var registry_1 = __webpack_require__(/*! ../../utils/registry */ "./node_modules/sprotty/lib/utils/registry.js");
var smodel_1 = __webpack_require__(/*! ./smodel */ "./node_modules/sprotty/lib/base/model/smodel.js");
/**
 * The default model factory creates SModelRoot for the root element and SChildElement for all other
 * model elements.
 */
var SModelFactory = /** @class */ (function () {
    function SModelFactory() {
    }
    SModelFactory.prototype.createElement = function (schema, parent) {
        var child;
        if (this.registry.hasKey(schema.type)) {
            var regElement = this.registry.get(schema.type, undefined);
            if (!(regElement instanceof smodel_1.SChildElement))
                throw new Error("Element with type ".concat(schema.type, " was expected to be an SChildElement."));
            child = regElement;
        }
        else {
            child = new smodel_1.SChildElement();
        }
        return this.initializeChild(child, schema, parent);
    };
    SModelFactory.prototype.createRoot = function (schema) {
        var root;
        if (this.registry.hasKey(schema.type)) {
            var regElement = this.registry.get(schema.type, undefined);
            if (!(regElement instanceof smodel_1.SModelRoot))
                throw new Error("Element with type ".concat(schema.type, " was expected to be an SModelRoot."));
            root = regElement;
        }
        else {
            root = new smodel_1.SModelRoot();
        }
        return this.initializeRoot(root, schema);
    };
    SModelFactory.prototype.createSchema = function (element) {
        var _this = this;
        var schema = {};
        for (var key in element) {
            if (!this.isReserved(element, key)) {
                var value = element[key];
                if (typeof value !== 'function')
                    schema[key] = value;
            }
        }
        if (element instanceof smodel_1.SParentElement)
            schema['children'] = element.children.map(function (child) { return _this.createSchema(child); });
        return schema;
    };
    SModelFactory.prototype.initializeElement = function (element, schema) {
        for (var key in schema) {
            if (!this.isReserved(element, key)) {
                var value = schema[key];
                if (typeof value !== 'function')
                    element[key] = value;
            }
        }
        return element;
    };
    SModelFactory.prototype.isReserved = function (element, propertyName) {
        if (['children', 'parent', 'index'].indexOf(propertyName) >= 0)
            return true;
        var obj = element;
        do {
            var descriptor = Object.getOwnPropertyDescriptor(obj, propertyName);
            if (descriptor !== undefined)
                return descriptor.get !== undefined;
            obj = Object.getPrototypeOf(obj);
        } while (obj);
        return false;
    };
    SModelFactory.prototype.initializeParent = function (parent, schema) {
        var _this = this;
        this.initializeElement(parent, schema);
        if ((0, smodel_1.isParent)(schema)) {
            parent.children = schema.children.map(function (childSchema) { return _this.createElement(childSchema, parent); });
        }
        return parent;
    };
    SModelFactory.prototype.initializeChild = function (child, schema, parent) {
        this.initializeParent(child, schema);
        if (parent !== undefined) {
            child.parent = parent;
        }
        return child;
    };
    SModelFactory.prototype.initializeRoot = function (root, schema) {
        this.initializeParent(root, schema);
        root.index.add(root);
        return root;
    };
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.SModelRegistry),
        __metadata("design:type", SModelRegistry)
    ], SModelFactory.prototype, "registry", void 0);
    SModelFactory = __decorate([
        (0, inversify_1.injectable)()
    ], SModelFactory);
    return SModelFactory;
}());
exports.SModelFactory = SModelFactory;
exports.EMPTY_ROOT = Object.freeze({
    type: 'NONE',
    id: 'EMPTY'
});
/**
 * Model element classes registered here are considered automatically when constructring a model from its schema.
 */
var SModelRegistry = /** @class */ (function (_super) {
    __extends(SModelRegistry, _super);
    function SModelRegistry(registrations) {
        var _this = _super.call(this) || this;
        registrations.forEach(function (registration) {
            var defaultFeatures = _this.getDefaultFeatures(registration.constr);
            if (!defaultFeatures && registration.features && registration.features.enable)
                defaultFeatures = [];
            if (defaultFeatures) {
                var featureSet_1 = createFeatureSet(defaultFeatures, registration.features);
                _this.register(registration.type, function () {
                    var element = new registration.constr();
                    element.features = featureSet_1;
                    return element;
                });
            }
            else {
                _this.register(registration.type, function () { return new registration.constr(); });
            }
        });
        return _this;
    }
    SModelRegistry.prototype.getDefaultFeatures = function (constr) {
        var obj = constr;
        do {
            var defaultFeatures = obj.DEFAULT_FEATURES;
            if (defaultFeatures)
                return defaultFeatures;
            obj = Object.getPrototypeOf(obj);
        } while (obj);
        return undefined;
    };
    SModelRegistry = __decorate([
        (0, inversify_1.injectable)(),
        __param(0, (0, inversify_1.multiInject)(types_1.TYPES.SModelElementRegistration)),
        __param(0, (0, inversify_1.optional)()),
        __metadata("design:paramtypes", [Array])
    ], SModelRegistry);
    return SModelRegistry;
}(registry_1.FactoryRegistry));
exports.SModelRegistry = SModelRegistry;
function createFeatureSet(defaults, custom) {
    var featureSet = new Set(defaults);
    if (custom && custom.enable) {
        for (var _i = 0, _a = custom.enable; _i < _a.length; _i++) {
            var f = _a[_i];
            featureSet.add(f);
        }
    }
    if (custom && custom.disable) {
        for (var _b = 0, _c = custom.disable; _b < _c.length; _b++) {
            var f = _c[_b];
            featureSet.delete(f);
        }
    }
    return featureSet;
}
exports.createFeatureSet = createFeatureSet;


/***/ }),

/***/ "./node_modules/sprotty/lib/base/model/smodel-utils.js":
/*!*************************************************************!*\
  !*** ./node_modules/sprotty/lib/base/model/smodel-utils.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.transformToRootBounds = exports.containsSome = exports.translateBounds = exports.translatePoint = exports.findParentByFeature = exports.findParent = exports.findElement = exports.getSubType = exports.getBasicType = exports.registerModelElement = void 0;
var types_1 = __webpack_require__(/*! ../types */ "./node_modules/sprotty/lib/base/types.js");
var smodel_1 = __webpack_require__(/*! ./smodel */ "./node_modules/sprotty/lib/base/model/smodel.js");
/**
 * Register a model element constructor for an element type.
 */
function registerModelElement(context, type, constr, features) {
    context.bind(types_1.TYPES.SModelElementRegistration).toConstantValue({
        type: type,
        constr: constr,
        features: features
    });
}
exports.registerModelElement = registerModelElement;
/**
 * Model element types can include a colon to separate the basic type and a sub-type. This function
 * extracts the basic type of a model element.
 *
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
function getBasicType(schema) {
    if (!schema.type)
        return '';
    var colonIndex = schema.type.indexOf(':');
    if (colonIndex >= 0)
        return schema.type.substring(0, colonIndex);
    else
        return schema.type;
}
exports.getBasicType = getBasicType;
/**
 * Model element types can include a colon to separate the basic type and a sub-type. This function
 * extracts the sub-type of a model element.
 *
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
function getSubType(schema) {
    if (!schema.type)
        return '';
    var colonIndex = schema.type.indexOf(':');
    if (colonIndex >= 0)
        return schema.type.substring(colonIndex + 1);
    else
        return schema.type;
}
exports.getSubType = getSubType;
/**
 * Find the element with the given identifier. If you need to find multiple elements, using an
 * SModelIndex might be more effective.
 *
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
function findElement(parent, elementId) {
    if (parent.id === elementId)
        return parent;
    if (parent.children !== undefined) {
        for (var _i = 0, _a = parent.children; _i < _a.length; _i++) {
            var child = _a[_i];
            var result = findElement(child, elementId);
            if (result !== undefined)
                return result;
        }
    }
    return undefined;
}
exports.findElement = findElement;
/**
 * Find a parent element that satisfies the given predicate.
 */
function findParent(element, predicate) {
    var current = element;
    while (current !== undefined) {
        if (predicate(current))
            return current;
        else if (current instanceof smodel_1.SChildElement)
            current = current.parent;
        else
            current = undefined;
    }
    return current;
}
exports.findParent = findParent;
/**
 * Find a parent element that implements the feature identified with the given predicate.
 */
function findParentByFeature(element, predicate) {
    var current = element;
    while (current !== undefined) {
        if (predicate(current))
            return current;
        else if (current instanceof smodel_1.SChildElement)
            current = current.parent;
        else
            current = undefined;
    }
    return current;
}
exports.findParentByFeature = findParentByFeature;
/**
 * Translate a point from the coordinate system of the source element to the coordinate system
 * of the target element.
 */
function translatePoint(point, source, target) {
    if (source !== target) {
        // Translate from the source to the root element
        while (source instanceof smodel_1.SChildElement) {
            point = source.localToParent(point);
            source = source.parent;
            if (source === target)
                return point;
        }
        // Translate from the root to the target element
        var targetTrace = [];
        while (target instanceof smodel_1.SChildElement) {
            targetTrace.push(target);
            target = target.parent;
        }
        if (source !== target)
            throw new Error("Incompatible source and target: " + source.id + ", " + target.id);
        for (var i = targetTrace.length - 1; i >= 0; i--) {
            point = targetTrace[i].parentToLocal(point);
        }
    }
    return point;
}
exports.translatePoint = translatePoint;
/**
 * Translate some bounds from the coordinate system of the source element to the coordinate system
 * of the target element.
 */
function translateBounds(bounds, source, target) {
    var upperLeft = translatePoint(bounds, source, target);
    var lowerRight = translatePoint({ x: bounds.x + bounds.width, y: bounds.y + bounds.height }, source, target);
    return {
        x: upperLeft.x,
        y: upperLeft.y,
        width: lowerRight.x - upperLeft.x,
        height: lowerRight.y - upperLeft.y
    };
}
exports.translateBounds = translateBounds;
/**
 * Tests if the given model contains an id of then given element or one of its descendants.
 */
function containsSome(root, element) {
    var test = function (el) { return root.index.getById(el.id) !== undefined; };
    var find = function (elements) { return elements.some(function (el) { return test(el) || find(el.children); }); };
    return find([element]);
}
exports.containsSome = containsSome;
/**
 * Transforms the local bounds all the way up to the root.
 */
function transformToRootBounds(parent, bounds) {
    while (parent instanceof smodel_1.SChildElement) {
        bounds = parent.localToParent(bounds);
        parent = parent.parent;
    }
    return bounds;
}
exports.transformToRootBounds = transformToRootBounds;


/***/ }),

/***/ "./node_modules/sprotty/lib/base/model/smodel.js":
/*!*******************************************************!*\
  !*** ./node_modules/sprotty/lib/base/model/smodel.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ModelIndexImpl = exports.createRandomId = exports.SModelRoot = exports.SChildElement = exports.SParentElement = exports.isParent = exports.SModelElement = void 0;
var geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "./node_modules/sprotty-protocol/lib/utils/geometry.js");
var iterable_1 = __webpack_require__(/*! ../../utils/iterable */ "./node_modules/sprotty/lib/utils/iterable.js");
/**
 * Base class for all elements of the diagram model.
 * Each model element must have a unique ID and a type that is used to look up its view.
 */
var SModelElement = /** @class */ (function () {
    function SModelElement() {
    }
    Object.defineProperty(SModelElement.prototype, "root", {
        get: function () {
            var current = this;
            while (current) {
                if (current instanceof SModelRoot)
                    return current;
                else if (current instanceof SChildElement)
                    current = current.parent;
                else
                    current = undefined;
            }
            throw new Error("Element has no root");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SModelElement.prototype, "index", {
        get: function () {
            return this.root.index;
        },
        enumerable: false,
        configurable: true
    });
    /**
     * A feature is a symbol identifying some functionality that can be enabled or disabled for
     * a model element. The set of supported features is determined by the `features` property.
     */
    SModelElement.prototype.hasFeature = function (feature) {
        return this.features !== undefined && this.features.has(feature);
    };
    return SModelElement;
}());
exports.SModelElement = SModelElement;
function isParent(element) {
    var children = element.children;
    return children !== undefined && children.constructor === Array;
}
exports.isParent = isParent;
/**
 * A parent element may contain child elements, thus the diagram model forms a tree.
 */
var SParentElement = /** @class */ (function (_super) {
    __extends(SParentElement, _super);
    function SParentElement() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.children = [];
        return _this;
    }
    SParentElement.prototype.add = function (child, index) {
        var children = this.children;
        if (index === undefined) {
            children.push(child);
        }
        else {
            if (index < 0 || index > this.children.length) {
                throw new Error("Child index ".concat(index, " out of bounds (0..").concat(children.length, ")"));
            }
            children.splice(index, 0, child);
        }
        child.parent = this;
        this.index.add(child);
    };
    SParentElement.prototype.remove = function (child) {
        var children = this.children;
        var i = children.indexOf(child);
        if (i < 0) {
            throw new Error("No such child ".concat(child.id));
        }
        children.splice(i, 1);
        this.index.remove(child);
    };
    SParentElement.prototype.removeAll = function (filter) {
        var _this = this;
        var children = this.children;
        if (filter !== undefined) {
            for (var i = children.length - 1; i >= 0; i--) {
                if (filter(children[i])) {
                    var child = children.splice(i, 1)[0];
                    this.index.remove(child);
                }
            }
        }
        else {
            children.forEach(function (child) {
                _this.index.remove(child);
            });
            children.splice(0, children.length);
        }
    };
    SParentElement.prototype.move = function (child, newIndex) {
        var children = this.children;
        var i = children.indexOf(child);
        if (i === -1) {
            throw new Error("No such child ".concat(child.id));
        }
        else {
            if (newIndex < 0 || newIndex > children.length - 1) {
                throw new Error("Child index ".concat(newIndex, " out of bounds (0..").concat(children.length, ")"));
            }
            children.splice(i, 1);
            children.splice(newIndex, 0, child);
        }
    };
    /**
     * Transform the given bounds from the local coordinate system of this element to the coordinate
     * system of its parent. This function should consider any transformation that is applied to the
     * view of this element and its contents.
     * The base implementation assumes that this element does not define a local coordinate system,
     * so it leaves the bounds unchanged.
     */
    SParentElement.prototype.localToParent = function (point) {
        return (0, geometry_1.isBounds)(point) ? point : { x: point.x, y: point.y, width: -1, height: -1 };
    };
    /**
     * Transform the given bounds from the coordinate system of this element's parent to its local
     * coordinate system. This function should consider any transformation that is applied to the
     * view of this element and its contents.
     * The base implementation assumes that this element does not define a local coordinate system,
     * so it leaves the bounds unchanged.
     */
    SParentElement.prototype.parentToLocal = function (point) {
        return (0, geometry_1.isBounds)(point) ? point : { x: point.x, y: point.y, width: -1, height: -1 };
    };
    return SParentElement;
}(SModelElement));
exports.SParentElement = SParentElement;
/**
 * A child element is contained in a parent element. All elements except the model root are child
 * elements. In order to keep the model class hierarchy simple, every child element is also a
 * parent element, although for many elements the array of children is empty (i.e. they are
 * leafs in the model element tree).
 */
var SChildElement = /** @class */ (function (_super) {
    __extends(SChildElement, _super);
    function SChildElement() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return SChildElement;
}(SParentElement));
exports.SChildElement = SChildElement;
/**
 * Base class for the root element of the diagram model tree.
 */
var SModelRoot = /** @class */ (function (_super) {
    __extends(SModelRoot, _super);
    function SModelRoot(index) {
        if (index === void 0) { index = new ModelIndexImpl(); }
        var _this = _super.call(this) || this;
        _this.canvasBounds = geometry_1.Bounds.EMPTY;
        // Override the index property from SModelElement, which has a getter, with a data property
        Object.defineProperty(_this, 'index', {
            value: index,
            writable: false
        });
        return _this;
    }
    return SModelRoot;
}(SParentElement));
exports.SModelRoot = SModelRoot;
var ID_CHARS = "0123456789abcdefghijklmnopqrstuvwxyz";
function createRandomId(length) {
    if (length === void 0) { length = 8; }
    var id = "";
    for (var i = 0; i < length; i++) {
        id += ID_CHARS.charAt(Math.floor(Math.random() * ID_CHARS.length));
    }
    return id;
}
exports.createRandomId = createRandomId;
/**
 * This index implementation is for the _internal model_ that is used for rendering.
 */
var ModelIndexImpl = /** @class */ (function () {
    function ModelIndexImpl() {
        this.id2element = new Map();
    }
    ModelIndexImpl.prototype.add = function (element) {
        if (!element.id) {
            do {
                element.id = createRandomId();
            } while (this.contains(element));
        }
        else if (this.contains(element)) {
            throw new Error("Duplicate ID in model: " + element.id);
        }
        this.id2element.set(element.id, element);
        if (element instanceof SParentElement) {
            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {
                var child = _a[_i];
                this.add(child);
            }
        }
    };
    ModelIndexImpl.prototype.remove = function (element) {
        this.id2element.delete(element.id);
        if (element instanceof SParentElement) {
            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {
                var child = _a[_i];
                this.remove(child);
            }
        }
    };
    ModelIndexImpl.prototype.contains = function (element) {
        return this.id2element.has(element.id);
    };
    ModelIndexImpl.prototype.getById = function (id) {
        return this.id2element.get(id);
    };
    ModelIndexImpl.prototype.getAttachedElements = function (element) {
        return [];
    };
    ModelIndexImpl.prototype.all = function () {
        return (0, iterable_1.mapIterable)(this.id2element, function (_a) {
            var key = _a[0], value = _a[1];
            return value;
        });
    };
    return ModelIndexImpl;
}());
exports.ModelIndexImpl = ModelIndexImpl;


/***/ }),

/***/ "./node_modules/sprotty/lib/base/tool-manager/tool-manager.js":
/*!********************************************************************!*\
  !*** ./node_modules/sprotty/lib/base/tool-manager/tool-manager.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DefaultToolsEnablingKeyListener = exports.ToolManagerActionHandler = exports.ToolManager = void 0;
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../types */ "./node_modules/sprotty/lib/base/types.js");
var tool_1 = __webpack_require__(/*! ./tool */ "./node_modules/sprotty/lib/base/tool-manager/tool.js");
var key_tool_1 = __webpack_require__(/*! ../views/key-tool */ "./node_modules/sprotty/lib/base/views/key-tool.js");
var keyboard_1 = __webpack_require__(/*! ../../utils/keyboard */ "./node_modules/sprotty/lib/utils/keyboard.js");
var ToolManager = /** @class */ (function () {
    function ToolManager() {
        this.tools = [];
        this.defaultTools = [];
        this.actives = [];
    }
    Object.defineProperty(ToolManager.prototype, "managedTools", {
        get: function () {
            return this.defaultTools.concat(this.tools);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolManager.prototype, "activeTools", {
        get: function () {
            return this.actives;
        },
        enumerable: false,
        configurable: true
    });
    ToolManager.prototype.disableActiveTools = function () {
        this.actives.forEach(function (tool) { return tool.disable(); });
        this.actives.splice(0, this.actives.length);
    };
    ToolManager.prototype.enableDefaultTools = function () {
        this.enable(this.defaultTools.map(function (tool) { return tool.id; }));
    };
    ToolManager.prototype.enable = function (toolIds) {
        var _this = this;
        this.disableActiveTools();
        var tools = toolIds.map(function (id) { return _this.tool(id); });
        tools.forEach(function (tool) {
            if (tool !== undefined) {
                tool.enable();
                _this.actives.push(tool);
            }
        });
    };
    ToolManager.prototype.tool = function (toolId) {
        return this.managedTools.find(function (tool) { return tool.id === toolId; });
    };
    ToolManager.prototype.registerDefaultTools = function () {
        var tools = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            tools[_i] = arguments[_i];
        }
        for (var _a = 0, tools_1 = tools; _a < tools_1.length; _a++) {
            var tool = tools_1[_a];
            this.defaultTools.push(tool);
        }
    };
    ToolManager.prototype.registerTools = function () {
        var tools = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            tools[_i] = arguments[_i];
        }
        for (var _a = 0, tools_2 = tools; _a < tools_2.length; _a++) {
            var tool = tools_2[_a];
            this.tools.push(tool);
        }
    };
    ToolManager = __decorate([
        (0, inversify_1.injectable)()
    ], ToolManager);
    return ToolManager;
}());
exports.ToolManager = ToolManager;
var ToolManagerActionHandler = /** @class */ (function () {
    function ToolManagerActionHandler() {
    }
    ToolManagerActionHandler.prototype.handle = function (action) {
        switch (action.kind) {
            case tool_1.EnableDefaultToolsAction.KIND:
                this.toolManager.enableDefaultTools();
                break;
            case tool_1.EnableToolsAction.KIND:
                this.toolManager.enable(action.toolIds);
                break;
        }
    };
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.IToolManager),
        __metadata("design:type", Object)
    ], ToolManagerActionHandler.prototype, "toolManager", void 0);
    ToolManagerActionHandler = __decorate([
        (0, inversify_1.injectable)()
    ], ToolManagerActionHandler);
    return ToolManagerActionHandler;
}());
exports.ToolManagerActionHandler = ToolManagerActionHandler;
var DefaultToolsEnablingKeyListener = /** @class */ (function (_super) {
    __extends(DefaultToolsEnablingKeyListener, _super);
    function DefaultToolsEnablingKeyListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DefaultToolsEnablingKeyListener.prototype.keyDown = function (element, event) {
        if ((0, keyboard_1.matchesKeystroke)(event, 'Escape')) {
            return [tool_1.EnableDefaultToolsAction.create()];
        }
        return [];
    };
    DefaultToolsEnablingKeyListener = __decorate([
        (0, inversify_1.injectable)()
    ], DefaultToolsEnablingKeyListener);
    return DefaultToolsEnablingKeyListener;
}(key_tool_1.KeyListener));
exports.DefaultToolsEnablingKeyListener = DefaultToolsEnablingKeyListener;


/***/ }),

/***/ "./node_modules/sprotty/lib/base/tool-manager/tool.js":
/*!************************************************************!*\
  !*** ./node_modules/sprotty/lib/base/tool-manager/tool.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EnableDefaultToolsAction = exports.EnableToolsAction = void 0;
var EnableToolsAction;
(function (EnableToolsAction) {
    EnableToolsAction.KIND = "enable-tools";
    function create(toolIds) {
        return {
            kind: EnableToolsAction.KIND,
            toolIds: toolIds
        };
    }
    EnableToolsAction.create = create;
})(EnableToolsAction = exports.EnableToolsAction || (exports.EnableToolsAction = {}));
var EnableDefaultToolsAction;
(function (EnableDefaultToolsAction) {
    EnableDefaultToolsAction.KIND = "enable-default-tools";
    function create() {
        return {
            kind: EnableDefaultToolsAction.KIND
        };
    }
    EnableDefaultToolsAction.create = create;
})(EnableDefaultToolsAction = exports.EnableDefaultToolsAction || (exports.EnableDefaultToolsAction = {}));


/***/ }),

/***/ "./node_modules/sprotty/lib/base/types.js":
/*!************************************************!*\
  !*** ./node_modules/sprotty/lib/base/types.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TYPES = void 0;
/* eslint-disable @typescript-eslint/naming-convention */
exports.TYPES = {
    Action: Symbol('Action'),
    IActionDispatcher: Symbol('IActionDispatcher'),
    IActionDispatcherProvider: Symbol('IActionDispatcherProvider'),
    IActionHandlerInitializer: Symbol('IActionHandlerInitializer'),
    ActionHandlerRegistration: Symbol('ActionHandlerRegistration'),
    ActionHandlerRegistryProvider: Symbol('ActionHandlerRegistryProvider'),
    IAnchorComputer: Symbol('IAnchor'),
    AnimationFrameSyncer: Symbol('AnimationFrameSyncer'),
    /** @deprecated deprecated since 0.12.0 - please use `configureButtonHandler` */
    IButtonHandler: Symbol('IButtonHandler'),
    IButtonHandlerRegistration: Symbol('IButtonHandlerRegistration'),
    ICommandPaletteActionProvider: Symbol('ICommandPaletteActionProvider'),
    ICommandPaletteActionProviderRegistry: Symbol('ICommandPaletteActionProviderRegistry'),
    CommandRegistration: Symbol('CommandRegistration'),
    ICommandStack: Symbol('ICommandStack'),
    CommandStackOptions: Symbol('CommandStackOptions'),
    ICommandStackProvider: Symbol('ICommandStackProvider'),
    IContextMenuItemProvider: Symbol.for("IContextMenuProvider"),
    IContextMenuProviderRegistry: Symbol.for("IContextMenuProviderRegistry"),
    IContextMenuService: Symbol.for("IContextMenuService"),
    IContextMenuServiceProvider: Symbol.for("IContextMenuServiceProvider"),
    DOMHelper: Symbol('DOMHelper'),
    IDiagramLocker: Symbol('IDiagramLocker'),
    IEdgeRouter: Symbol('IEdgeRouter'),
    IEdgeRoutePostprocessor: Symbol('IEdgeRoutePostprocessor'),
    IEditLabelValidationDecorator: Symbol('IEditLabelValidationDecorator'),
    IEditLabelValidator: Symbol('IEditLabelValidator'),
    HiddenModelViewer: Symbol('HiddenModelViewer'),
    HiddenVNodePostprocessor: Symbol('HiddenVNodeDecorator'),
    HoverState: Symbol('HoverState'),
    KeyListener: Symbol('KeyListener'),
    LayoutRegistration: Symbol('LayoutRegistration'),
    LayoutRegistry: Symbol('LayoutRegistry'),
    Layouter: Symbol('Layouter'),
    LogLevel: Symbol('LogLevel'),
    ILogger: Symbol('ILogger'),
    IModelFactory: Symbol('IModelFactory'),
    IModelLayoutEngine: Symbol('IModelLayoutEngine'),
    ModelRendererFactory: Symbol('ModelRendererFactory'),
    ModelSource: Symbol('ModelSource'),
    ModelSourceProvider: Symbol('ModelSourceProvider'),
    ModelViewer: Symbol('ModelViewer'),
    MouseListener: Symbol('MouseListener'),
    PatcherProvider: Symbol('PatcherProvider'),
    IPopupModelProvider: Symbol('IPopupModelProvider'),
    PopupModelViewer: Symbol('PopupModelViewer'),
    PopupMouseListener: Symbol('PopupMouseListener'),
    PopupVNodePostprocessor: Symbol('PopupVNodeDecorator'),
    SModelElementRegistration: Symbol('SModelElementRegistration'),
    SModelRegistry: Symbol('SModelRegistry'),
    ISnapper: Symbol('ISnapper'),
    SvgExporter: Symbol('SvgExporter'),
    IToolManager: Symbol('IToolManager'),
    IUIExtension: Symbol('IUIExtension'),
    UIExtensionRegistry: Symbol('UIExtensionRegistry'),
    IVNodePostprocessor: Symbol('IVNodePostprocessor'),
    ViewRegistration: Symbol('ViewRegistration'),
    ViewRegistry: Symbol('ViewRegistry'),
    IViewer: Symbol('IViewer'),
    ViewerOptions: Symbol('ViewerOptions'),
    IViewerProvider: Symbol('IViewerProvider'),
};
/* eslint-enable */


/***/ }),

/***/ "./node_modules/sprotty/lib/base/ui-extensions/ui-extension-registry.js":
/*!******************************************************************************!*\
  !*** ./node_modules/sprotty/lib/base/ui-extensions/ui-extension-registry.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SetUIExtensionVisibilityCommand = exports.SetUIExtensionVisibilityAction = exports.UIExtensionRegistry = void 0;
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var registry_1 = __webpack_require__(/*! ../../utils/registry */ "./node_modules/sprotty/lib/utils/registry.js");
var command_1 = __webpack_require__(/*! ../commands/command */ "./node_modules/sprotty/lib/base/commands/command.js");
var types_1 = __webpack_require__(/*! ../types */ "./node_modules/sprotty/lib/base/types.js");
/**
 * The registry maintaining UI extensions registered via `TYPES.IUIExtension`.
 */
var UIExtensionRegistry = /** @class */ (function (_super) {
    __extends(UIExtensionRegistry, _super);
    function UIExtensionRegistry(extensions) {
        if (extensions === void 0) { extensions = []; }
        var _this = _super.call(this) || this;
        extensions.forEach(function (extension) { return _this.register(extension.id(), extension); });
        return _this;
    }
    UIExtensionRegistry = __decorate([
        (0, inversify_1.injectable)(),
        __param(0, (0, inversify_1.multiInject)(types_1.TYPES.IUIExtension)),
        __param(0, (0, inversify_1.optional)()),
        __metadata("design:paramtypes", [Array])
    ], UIExtensionRegistry);
    return UIExtensionRegistry;
}(registry_1.InstanceRegistry));
exports.UIExtensionRegistry = UIExtensionRegistry;
var SetUIExtensionVisibilityAction;
(function (SetUIExtensionVisibilityAction) {
    SetUIExtensionVisibilityAction.KIND = "setUIExtensionVisibility";
    function create(options) {
        var _a;
        return {
            kind: SetUIExtensionVisibilityAction.KIND,
            extensionId: options.extensionId,
            visible: options.visible,
            contextElementsId: (_a = options.contextElementsId) !== null && _a !== void 0 ? _a : []
        };
    }
    SetUIExtensionVisibilityAction.create = create;
})(SetUIExtensionVisibilityAction = exports.SetUIExtensionVisibilityAction || (exports.SetUIExtensionVisibilityAction = {}));
var SetUIExtensionVisibilityCommand = /** @class */ (function (_super) {
    __extends(SetUIExtensionVisibilityCommand, _super);
    function SetUIExtensionVisibilityCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    SetUIExtensionVisibilityCommand.prototype.execute = function (context) {
        var extension = this.registry.get(this.action.extensionId);
        if (extension) {
            this.action.visible ? extension.show.apply(extension, __spreadArray([context.root], this.action.contextElementsId, false)) : extension.hide();
        }
        return { model: context.root, modelChanged: false };
    };
    SetUIExtensionVisibilityCommand.prototype.undo = function (context) {
        return { model: context.root, modelChanged: false };
    };
    SetUIExtensionVisibilityCommand.prototype.redo = function (context) {
        return { model: context.root, modelChanged: false };
    };
    SetUIExtensionVisibilityCommand.KIND = SetUIExtensionVisibilityAction.KIND;
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.UIExtensionRegistry),
        __metadata("design:type", UIExtensionRegistry)
    ], SetUIExtensionVisibilityCommand.prototype, "registry", void 0);
    SetUIExtensionVisibilityCommand = __decorate([
        (0, inversify_1.injectable)(),
        __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [Object])
    ], SetUIExtensionVisibilityCommand);
    return SetUIExtensionVisibilityCommand;
}(command_1.SystemCommand));
exports.SetUIExtensionVisibilityCommand = SetUIExtensionVisibilityCommand;


/***/ }),

/***/ "./node_modules/sprotty/lib/base/ui-extensions/ui-extension.js":
/*!*********************************************************************!*\
  !*** ./node_modules/sprotty/lib/base/ui-extensions/ui-extension.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AbstractUIExtension = void 0;
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../types */ "./node_modules/sprotty/lib/base/types.js");
/**
 * Abstract base class for UI extensions.
 */
var AbstractUIExtension = /** @class */ (function () {
    function AbstractUIExtension() {
    }
    AbstractUIExtension.prototype.show = function (root) {
        var contextElementIds = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            contextElementIds[_i - 1] = arguments[_i];
        }
        this.activeElement = document.activeElement;
        if (!this.containerElement) {
            if (!this.initialize())
                return;
        }
        this.onBeforeShow.apply(this, __spreadArray([this.containerElement, root], contextElementIds, false));
        this.setContainerVisible(true);
    };
    AbstractUIExtension.prototype.hide = function () {
        this.setContainerVisible(false);
        this.restoreFocus();
        this.activeElement = null;
    };
    AbstractUIExtension.prototype.restoreFocus = function () {
        var focusedElement = this.activeElement;
        if (focusedElement) {
            focusedElement.focus();
        }
    };
    AbstractUIExtension.prototype.initialize = function () {
        var baseDiv = document.getElementById(this.options.baseDiv);
        if (!baseDiv) {
            this.logger.warn(this, "Could not obtain sprotty base container for initializing UI extension ".concat(this.id), this);
            return false;
        }
        this.containerElement = this.getOrCreateContainer(baseDiv.id);
        this.initializeContents(this.containerElement);
        if (baseDiv) {
            baseDiv.insertBefore(this.containerElement, baseDiv.firstChild);
        }
        return true;
    };
    AbstractUIExtension.prototype.getOrCreateContainer = function (baseDivId) {
        var container = document.getElementById(this.id());
        if (container === null) {
            container = document.createElement('div');
            container.id = baseDivId + "_" + this.id();
            container.classList.add(this.containerClass());
        }
        return container;
    };
    AbstractUIExtension.prototype.setContainerVisible = function (visible) {
        if (this.containerElement) {
            if (visible) {
                this.containerElement.style.visibility = 'visible';
                this.containerElement.style.opacity = '1';
            }
            else {
                this.containerElement.style.visibility = 'hidden';
                this.containerElement.style.opacity = '0';
            }
        }
    };
    /**
     * Updates the `containerElement` under the given `context` before it becomes visible.
     *
     * Subclasses may override this method to, for instance, modifying the position of the
     * `containerElement`, add or remove elements, etc. depending on the specified `root`
     * or `contextElementIds`.
     */
    AbstractUIExtension.prototype.onBeforeShow = function (containerElement, root) {
        var contextElementIds = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            contextElementIds[_i - 2] = arguments[_i];
        }
        // default: do nothing
    };
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.ViewerOptions),
        __metadata("design:type", Object)
    ], AbstractUIExtension.prototype, "options", void 0);
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.ILogger),
        __metadata("design:type", Object)
    ], AbstractUIExtension.prototype, "logger", void 0);
    AbstractUIExtension = __decorate([
        (0, inversify_1.injectable)()
    ], AbstractUIExtension);
    return AbstractUIExtension;
}());
exports.AbstractUIExtension = AbstractUIExtension;


/***/ }),

/***/ "./node_modules/sprotty/lib/base/views/css-class-postprocessor.js":
/*!************************************************************************!*\
  !*** ./node_modules/sprotty/lib/base/views/css-class-postprocessor.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CssClassPostprocessor = void 0;
var model_utils_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/model-utils */ "./node_modules/sprotty-protocol/lib/utils/model-utils.js");
var vnode_utils_1 = __webpack_require__(/*! ./vnode-utils */ "./node_modules/sprotty/lib/base/views/vnode-utils.js");
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var CssClassPostprocessor = /** @class */ (function () {
    function CssClassPostprocessor() {
    }
    CssClassPostprocessor.prototype.decorate = function (vnode, element) {
        if (element.cssClasses) {
            for (var _i = 0, _a = element.cssClasses; _i < _a.length; _i++) {
                var cssClass = _a[_i];
                (0, vnode_utils_1.setClass)(vnode, cssClass, true);
            }
        }
        // append model subtype as class
        var subType = (0, model_utils_1.getSubType)(element);
        if (subType && subType !== element.type) {
            (0, vnode_utils_1.setClass)(vnode, subType, true);
        }
        return vnode;
    };
    CssClassPostprocessor.prototype.postUpdate = function () {
        // empty
    };
    CssClassPostprocessor = __decorate([
        (0, inversify_1.injectable)()
    ], CssClassPostprocessor);
    return CssClassPostprocessor;
}());
exports.CssClassPostprocessor = CssClassPostprocessor;


/***/ }),

/***/ "./node_modules/sprotty/lib/base/views/dom-helper.js":
/*!***********************************************************!*\
  !*** ./node_modules/sprotty/lib/base/views/dom-helper.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DOMHelper = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../types */ "./node_modules/sprotty/lib/base/types.js");
var DOMHelper = /** @class */ (function () {
    function DOMHelper() {
    }
    DOMHelper.prototype.getPrefix = function () {
        var prefix = this.viewerOptions !== undefined && this.viewerOptions.baseDiv !== undefined ?
            this.viewerOptions.baseDiv + "_" : "";
        return prefix;
    };
    DOMHelper.prototype.createUniqueDOMElementId = function (element) {
        return this.getPrefix() + element.id;
    };
    DOMHelper.prototype.findSModelIdByDOMElement = function (element) {
        return element.id.replace(this.getPrefix(), '');
    };
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.ViewerOptions),
        __metadata("design:type", Object)
    ], DOMHelper.prototype, "viewerOptions", void 0);
    DOMHelper = __decorate([
        (0, inversify_1.injectable)()
    ], DOMHelper);
    return DOMHelper;
}());
exports.DOMHelper = DOMHelper;


/***/ }),

/***/ "./node_modules/sprotty/lib/base/views/id-postprocessor.js":
/*!*****************************************************************!*\
  !*** ./node_modules/sprotty/lib/base/views/id-postprocessor.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.IdPostprocessor = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../types */ "./node_modules/sprotty/lib/base/types.js");
var dom_helper_1 = __webpack_require__(/*! ./dom-helper */ "./node_modules/sprotty/lib/base/views/dom-helper.js");
var vnode_utils_1 = __webpack_require__(/*! ./vnode-utils */ "./node_modules/sprotty/lib/base/views/vnode-utils.js");
var IdPostprocessor = /** @class */ (function () {
    function IdPostprocessor() {
    }
    IdPostprocessor.prototype.decorate = function (vnode, element) {
        var attrs = (0, vnode_utils_1.getAttrs)(vnode);
        if (attrs.id !== undefined)
            this.logger.warn(vnode, 'Overriding id of vnode (' + attrs.id + '). Make sure not to set it manually in view.');
        attrs.id = this.domHelper.createUniqueDOMElementId(element);
        if (!vnode.key)
            vnode.key = element.id;
        return vnode;
    };
    IdPostprocessor.prototype.postUpdate = function () {
    };
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.ILogger),
        __metadata("design:type", Object)
    ], IdPostprocessor.prototype, "logger", void 0);
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.DOMHelper),
        __metadata("design:type", dom_helper_1.DOMHelper)
    ], IdPostprocessor.prototype, "domHelper", void 0);
    IdPostprocessor = __decorate([
        (0, inversify_1.injectable)()
    ], IdPostprocessor);
    return IdPostprocessor;
}());
exports.IdPostprocessor = IdPostprocessor;


/***/ }),

/***/ "./node_modules/sprotty/lib/base/views/key-tool.js":
/*!*********************************************************!*\
  !*** ./node_modules/sprotty/lib/base/views/key-tool.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KeyListener = exports.KeyTool = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../types */ "./node_modules/sprotty/lib/base/types.js");
var smodel_1 = __webpack_require__(/*! ../model/smodel */ "./node_modules/sprotty/lib/base/model/smodel.js");
var vnode_utils_1 = __webpack_require__(/*! ./vnode-utils */ "./node_modules/sprotty/lib/base/views/vnode-utils.js");
var KeyTool = /** @class */ (function () {
    function KeyTool(keyListeners) {
        if (keyListeners === void 0) { keyListeners = []; }
        this.keyListeners = keyListeners;
    }
    KeyTool.prototype.register = function (keyListener) {
        this.keyListeners.push(keyListener);
    };
    KeyTool.prototype.deregister = function (keyListener) {
        var index = this.keyListeners.indexOf(keyListener);
        if (index >= 0)
            this.keyListeners.splice(index, 1);
    };
    KeyTool.prototype.handleEvent = function (methodName, model, event) {
        var actions = this.keyListeners
            .map(function (listener) { return listener[methodName].apply(listener, [model, event]); })
            .reduce(function (a, b) { return a.concat(b); });
        if (actions.length > 0) {
            event.preventDefault();
            this.actionDispatcher.dispatchAll(actions);
        }
    };
    KeyTool.prototype.keyDown = function (element, event) {
        this.handleEvent('keyDown', element, event);
    };
    KeyTool.prototype.keyUp = function (element, event) {
        this.handleEvent('keyUp', element, event);
    };
    KeyTool.prototype.focus = function () { };
    KeyTool.prototype.decorate = function (vnode, element) {
        if (element instanceof smodel_1.SModelRoot) {
            (0, vnode_utils_1.on)(vnode, 'focus', this.focus.bind(this, element));
            (0, vnode_utils_1.on)(vnode, 'keydown', this.keyDown.bind(this, element));
            (0, vnode_utils_1.on)(vnode, 'keyup', this.keyUp.bind(this, element));
        }
        return vnode;
    };
    KeyTool.prototype.postUpdate = function () {
    };
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.IActionDispatcher),
        __metadata("design:type", Object)
    ], KeyTool.prototype, "actionDispatcher", void 0);
    KeyTool = __decorate([
        (0, inversify_1.injectable)(),
        __param(0, (0, inversify_1.multiInject)(types_1.TYPES.KeyListener)),
        __param(0, (0, inversify_1.optional)()),
        __metadata("design:paramtypes", [Array])
    ], KeyTool);
    return KeyTool;
}());
exports.KeyTool = KeyTool;
var KeyListener = /** @class */ (function () {
    function KeyListener() {
    }
    KeyListener.prototype.keyDown = function (element, event) {
        return [];
    };
    KeyListener.prototype.keyUp = function (element, event) {
        return [];
    };
    KeyListener = __decorate([
        (0, inversify_1.injectable)()
    ], KeyListener);
    return KeyListener;
}());
exports.KeyListener = KeyListener;


/***/ }),

/***/ "./node_modules/sprotty/lib/base/views/mouse-tool.js":
/*!***********************************************************!*\
  !*** ./node_modules/sprotty/lib/base/views/mouse-tool.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MousePositionTracker = exports.MouseListener = exports.PopupMouseTool = exports.MouseTool = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "./node_modules/sprotty-protocol/lib/actions.js");
var smodel_1 = __webpack_require__(/*! ../model/smodel */ "./node_modules/sprotty/lib/base/model/smodel.js");
var types_1 = __webpack_require__(/*! ../types */ "./node_modules/sprotty/lib/base/types.js");
var dom_helper_1 = __webpack_require__(/*! ./dom-helper */ "./node_modules/sprotty/lib/base/views/dom-helper.js");
var vnode_utils_1 = __webpack_require__(/*! ./vnode-utils */ "./node_modules/sprotty/lib/base/views/vnode-utils.js");
var MouseTool = /** @class */ (function () {
    function MouseTool(mouseListeners) {
        if (mouseListeners === void 0) { mouseListeners = []; }
        this.mouseListeners = mouseListeners;
    }
    MouseTool.prototype.register = function (mouseListener) {
        this.mouseListeners.push(mouseListener);
    };
    MouseTool.prototype.deregister = function (mouseListener) {
        var index = this.mouseListeners.indexOf(mouseListener);
        if (index >= 0)
            this.mouseListeners.splice(index, 1);
    };
    MouseTool.prototype.getTargetElement = function (model, event) {
        var target = event.target;
        var index = model.index;
        while (target) {
            if (target.id) {
                var element = index.getById(this.domHelper.findSModelIdByDOMElement(target));
                if (element !== undefined)
                    return element;
            }
            target = target.parentNode;
        }
        return undefined;
    };
    MouseTool.prototype.handleEvent = function (methodName, model, event) {
        var _this = this;
        this.focusOnMouseEvent(methodName, model);
        var element = this.getTargetElement(model, event);
        if (!element)
            return;
        var actions = this.mouseListeners
            .map(function (listener) { return listener[methodName](element, event); })
            .reduce(function (a, b) { return a.concat(b); });
        if (actions.length > 0) {
            event.preventDefault();
            for (var _i = 0, actions_2 = actions; _i < actions_2.length; _i++) {
                var actionOrPromise = actions_2[_i];
                if ((0, actions_1.isAction)(actionOrPromise)) {
                    this.actionDispatcher.dispatch(actionOrPromise);
                }
                else {
                    actionOrPromise.then(function (action) {
                        _this.actionDispatcher.dispatch(action);
                    });
                }
            }
        }
    };
    MouseTool.prototype.focusOnMouseEvent = function (methodName, model) {
        if (document && methodName === 'mouseDown') {
            var domElement = document.getElementById(this.domHelper.createUniqueDOMElementId(model));
            if (domElement !== null && typeof domElement.focus === 'function')
                domElement.focus();
        }
    };
    MouseTool.prototype.mouseOver = function (model, event) {
        this.handleEvent('mouseOver', model, event);
    };
    MouseTool.prototype.mouseOut = function (model, event) {
        this.handleEvent('mouseOut', model, event);
    };
    MouseTool.prototype.mouseEnter = function (model, event) {
        this.handleEvent('mouseEnter', model, event);
    };
    MouseTool.prototype.mouseLeave = function (model, event) {
        this.handleEvent('mouseLeave', model, event);
    };
    MouseTool.prototype.mouseDown = function (model, event) {
        this.handleEvent('mouseDown', model, event);
    };
    MouseTool.prototype.mouseMove = function (model, event) {
        this.handleEvent('mouseMove', model, event);
    };
    MouseTool.prototype.mouseUp = function (model, event) {
        this.handleEvent('mouseUp', model, event);
    };
    MouseTool.prototype.wheel = function (model, event) {
        this.handleEvent('wheel', model, event);
    };
    MouseTool.prototype.contextMenu = function (model, event) {
        event.preventDefault();
        this.handleEvent('contextMenu', model, event);
    };
    MouseTool.prototype.doubleClick = function (model, event) {
        this.handleEvent('doubleClick', model, event);
    };
    MouseTool.prototype.decorate = function (vnode, element) {
        var _this = this;
        if (element instanceof smodel_1.SModelRoot) {
            (0, vnode_utils_1.on)(vnode, 'mouseover', this.mouseOver.bind(this, element));
            (0, vnode_utils_1.on)(vnode, 'mouseout', this.mouseOut.bind(this, element));
            (0, vnode_utils_1.on)(vnode, 'mouseenter', this.mouseEnter.bind(this, element));
            (0, vnode_utils_1.on)(vnode, 'mouseleave', this.mouseLeave.bind(this, element));
            (0, vnode_utils_1.on)(vnode, 'mousedown', this.mouseDown.bind(this, element));
            (0, vnode_utils_1.on)(vnode, 'mouseup', this.mouseUp.bind(this, element));
            (0, vnode_utils_1.on)(vnode, 'mousemove', this.mouseMove.bind(this, element));
            (0, vnode_utils_1.on)(vnode, 'wheel', this.wheel.bind(this, element));
            (0, vnode_utils_1.on)(vnode, 'contextmenu', this.contextMenu.bind(this, element));
            (0, vnode_utils_1.on)(vnode, 'dblclick', this.doubleClick.bind(this, element));
            (0, vnode_utils_1.on)(vnode, 'dragover', function (event) { return _this.handleEvent('dragOver', element, event); });
            (0, vnode_utils_1.on)(vnode, 'drop', function (event) { return _this.handleEvent('drop', element, event); });
        }
        vnode = this.mouseListeners.reduce(function (n, listener) { return listener.decorate(n, element); }, vnode);
        return vnode;
    };
    MouseTool.prototype.postUpdate = function () {
    };
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.IActionDispatcher),
        __metadata("design:type", Object)
    ], MouseTool.prototype, "actionDispatcher", void 0);
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.DOMHelper),
        __metadata("design:type", dom_helper_1.DOMHelper)
    ], MouseTool.prototype, "domHelper", void 0);
    MouseTool = __decorate([
        (0, inversify_1.injectable)(),
        __param(0, (0, inversify_1.multiInject)(types_1.TYPES.MouseListener)),
        __param(0, (0, inversify_1.optional)()),
        __metadata("design:paramtypes", [Array])
    ], MouseTool);
    return MouseTool;
}());
exports.MouseTool = MouseTool;
var PopupMouseTool = /** @class */ (function (_super) {
    __extends(PopupMouseTool, _super);
    function PopupMouseTool(mouseListeners) {
        if (mouseListeners === void 0) { mouseListeners = []; }
        var _this = _super.call(this, mouseListeners) || this;
        _this.mouseListeners = mouseListeners;
        return _this;
    }
    PopupMouseTool = __decorate([
        (0, inversify_1.injectable)(),
        __param(0, (0, inversify_1.multiInject)(types_1.TYPES.PopupMouseListener)),
        __param(0, (0, inversify_1.optional)()),
        __metadata("design:paramtypes", [Array])
    ], PopupMouseTool);
    return PopupMouseTool;
}(MouseTool));
exports.PopupMouseTool = PopupMouseTool;
var MouseListener = /** @class */ (function () {
    function MouseListener() {
    }
    MouseListener.prototype.mouseOver = function (target, event) {
        return [];
    };
    MouseListener.prototype.mouseOut = function (target, event) {
        return [];
    };
    MouseListener.prototype.mouseEnter = function (target, event) {
        return [];
    };
    MouseListener.prototype.mouseLeave = function (target, event) {
        return [];
    };
    MouseListener.prototype.mouseDown = function (target, event) {
        return [];
    };
    MouseListener.prototype.mouseMove = function (target, event) {
        return [];
    };
    MouseListener.prototype.mouseUp = function (target, event) {
        return [];
    };
    MouseListener.prototype.wheel = function (target, event) {
        return [];
    };
    MouseListener.prototype.doubleClick = function (target, event) {
        return [];
    };
    MouseListener.prototype.contextMenu = function (target, event) {
        return [];
    };
    MouseListener.prototype.dragOver = function (target, event) {
        return [];
    };
    MouseListener.prototype.drop = function (target, event) {
        return [];
    };
    MouseListener.prototype.decorate = function (vnode, element) {
        return vnode;
    };
    MouseListener = __decorate([
        (0, inversify_1.injectable)()
    ], MouseListener);
    return MouseListener;
}());
exports.MouseListener = MouseListener;
var MousePositionTracker = /** @class */ (function (_super) {
    __extends(MousePositionTracker, _super);
    function MousePositionTracker() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MousePositionTracker.prototype.mouseMove = function (target, event) {
        this.lastPosition = target.root.parentToLocal({ x: event.offsetX, y: event.offsetY });
        return [];
    };
    Object.defineProperty(MousePositionTracker.prototype, "lastPositionOnDiagram", {
        /**
         * Returns the last tracked mouse cursor position relative to the diagram root or `undefined`
         * if no mouse cursor position was ever tracked yet.
         */
        get: function () {
            return this.lastPosition;
        },
        enumerable: false,
        configurable: true
    });
    MousePositionTracker = __decorate([
        (0, inversify_1.injectable)()
    ], MousePositionTracker);
    return MousePositionTracker;
}(MouseListener));
exports.MousePositionTracker = MousePositionTracker;


/***/ }),

/***/ "./node_modules/sprotty/lib/base/views/thunk-view.js":
/*!***********************************************************!*\
  !*** ./node_modules/sprotty/lib/base/views/thunk-view.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isThunk = exports.ThunkView = void 0;
var snabbdom_1 = __webpack_require__(/*! snabbdom */ "./node_modules/snabbdom/build/index.js");
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
/**
 * An view that avoids calculation and patching of VNodes unless some model properties have changed.
 * Based on snabbdom's thunks.
 */
var ThunkView = /** @class */ (function () {
    function ThunkView() {
    }
    ThunkView.prototype.render = function (model, context) {
        var _this = this;
        return (0, snabbdom_1.h)(this.selector(model), {
            key: model.id,
            hook: {
                init: this.init.bind(this),
                prepatch: this.prepatch.bind(this)
            },
            fn: function () { return _this.renderAndDecorate(model, context); },
            args: this.watchedArgs(model),
            thunk: true
        });
    };
    ThunkView.prototype.renderAndDecorate = function (model, context) {
        var vnode = this.doRender(model, context);
        context.decorate(vnode, model);
        return vnode;
    };
    ThunkView.prototype.copyToThunk = function (vnode, thunk) {
        thunk.elm = vnode.elm;
        vnode.data.fn = thunk.data.fn;
        vnode.data.args = thunk.data.args;
        thunk.data = vnode.data;
        thunk.children = vnode.children;
        thunk.text = vnode.text;
        thunk.elm = vnode.elm;
    };
    ThunkView.prototype.init = function (thunk) {
        var cur = thunk.data;
        var vnode = cur.fn.apply(undefined, cur.args);
        this.copyToThunk(vnode, thunk);
    };
    ThunkView.prototype.prepatch = function (oldVnode, thunk) {
        var old = oldVnode.data, cur = thunk.data;
        if (!this.equals(old.args, cur.args))
            this.copyToThunk(cur.fn.apply(undefined, cur.args), thunk);
        else
            this.copyToThunk(oldVnode, thunk);
    };
    ThunkView.prototype.equals = function (oldArg, newArg) {
        if (Array.isArray(oldArg) && Array.isArray(newArg)) {
            if (oldArg.length !== newArg.length)
                return false;
            for (var i = 0; i < newArg.length; ++i) {
                if (!this.equals(oldArg[i], newArg[i]))
                    return false;
            }
        }
        else if (typeof oldArg === 'object' && typeof newArg === 'object') {
            if (Object.keys(oldArg).length !== Object.keys(newArg).length)
                return false;
            for (var key in oldArg) {
                if (key !== 'parent' && key !== 'root' && (!(key in newArg) || !this.equals(oldArg[key], newArg[key])))
                    return false;
            }
        }
        else if (oldArg !== newArg) {
            return false;
        }
        return true;
    };
    ThunkView = __decorate([
        (0, inversify_1.injectable)()
    ], ThunkView);
    return ThunkView;
}());
exports.ThunkView = ThunkView;
function isThunk(vnode) {
    return 'thunk' in vnode;
}
exports.isThunk = isThunk;


/***/ }),

/***/ "./node_modules/sprotty/lib/base/views/view.js":
/*!*****************************************************!*\
  !*** ./node_modules/sprotty/lib/base/views/view.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MissingView = exports.EmptyView = exports.configureView = exports.configureModelElement = exports.ViewRegistry = exports.findArgValue = void 0;
/** @jsx svg */
var jsx_1 = __webpack_require__(/*! ../../lib/jsx */ "./node_modules/sprotty/lib/lib/jsx.js");
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../types */ "./node_modules/sprotty/lib/base/types.js");
var registry_1 = __webpack_require__(/*! ../../utils/registry */ "./node_modules/sprotty/lib/utils/registry.js");
var inversify_2 = __webpack_require__(/*! ../../utils/inversify */ "./node_modules/sprotty/lib/utils/inversify.js");
var smodel_factory_1 = __webpack_require__(/*! ../model/smodel-factory */ "./node_modules/sprotty/lib/base/model/smodel-factory.js");
var smodel_utils_1 = __webpack_require__(/*! ../model/smodel-utils */ "./node_modules/sprotty/lib/base/model/smodel-utils.js");
var sprotty_protocol_1 = __webpack_require__(/*! sprotty-protocol */ "./node_modules/sprotty-protocol/lib/index.js");
/**
 * Searches for the property specified in `key` in the specified `args`,
 * including its direct or indirect `IRenderingArgs#parentArgs`.
 *
 * @param arg the rendering arguments.
 * @param key the key to search for.
 * @returns the found value or `undefined.
 */
function findArgValue(arg, key) {
    while (arg !== undefined && !(key in arg) && arg.parentArgs) {
        arg = arg.parentArgs;
    }
    return arg ? arg[key] : undefined;
}
exports.findArgValue = findArgValue;
/**
 * Allows to look up the IView for a given SModelElement based on its type.
 */
var ViewRegistry = /** @class */ (function (_super) {
    __extends(ViewRegistry, _super);
    function ViewRegistry(registrations) {
        var _this = _super.call(this) || this;
        _this.registerDefaults();
        registrations.forEach(function (registration) {
            return _this.register(registration.type, registration.factory());
        });
        return _this;
    }
    ViewRegistry.prototype.registerDefaults = function () {
        this.register(smodel_factory_1.EMPTY_ROOT.type, new EmptyView());
    };
    ViewRegistry.prototype.missing = function (key) {
        return new MissingView();
    };
    ViewRegistry = __decorate([
        (0, inversify_1.injectable)(),
        __param(0, (0, inversify_1.multiInject)(types_1.TYPES.ViewRegistration)),
        __param(0, (0, inversify_1.optional)()),
        __metadata("design:paramtypes", [Array])
    ], ViewRegistry);
    return ViewRegistry;
}(registry_1.InstanceRegistry));
exports.ViewRegistry = ViewRegistry;
/**
 * Combines `registerModelElement` and `configureView`.
 */
function configureModelElement(context, type, modelConstr, viewConstr, features) {
    (0, smodel_utils_1.registerModelElement)(context, type, modelConstr, features);
    configureView(context, type, viewConstr);
}
exports.configureModelElement = configureModelElement;
/**
 * Utility function to register a view for a model element type.
 */
function configureView(context, type, constr) {
    if (typeof constr === 'function') {
        if (!(0, inversify_2.isInjectable)(constr)) {
            throw new Error("Views should be @injectable: ".concat(constr.name));
        }
        if (!context.isBound(constr)) {
            context.bind(constr).toSelf();
        }
    }
    context.bind(types_1.TYPES.ViewRegistration).toDynamicValue(function (ctx) { return ({
        type: type,
        factory: function () { return ctx.container.get(constr); }
    }); });
}
exports.configureView = configureView;
/**
 * This view is used when the model is the EMPTY_ROOT.
 */
var EmptyView = /** @class */ (function () {
    function EmptyView() {
    }
    EmptyView.prototype.render = function (model, context) {
        return (0, jsx_1.svg)("svg", { "class-sprotty-empty": true });
    };
    EmptyView = __decorate([
        (0, inversify_1.injectable)()
    ], EmptyView);
    return EmptyView;
}());
exports.EmptyView = EmptyView;
/**
 * This view is used when no view has been registered for a model element type.
 */
var MissingView = /** @class */ (function () {
    function MissingView() {
    }
    MissingView.prototype.render = function (model, context) {
        var position = model.position || sprotty_protocol_1.Point.ORIGIN;
        return (0, jsx_1.svg)("text", { "class-sprotty-missing": true, x: position.x, y: position.y },
            "?",
            model.id,
            "?");
    };
    MissingView = __decorate([
        (0, inversify_1.injectable)()
    ], MissingView);
    return MissingView;
}());
exports.MissingView = MissingView;


/***/ }),

/***/ "./node_modules/sprotty/lib/base/views/viewer-cache.js":
/*!*************************************************************!*\
  !*** ./node_modules/sprotty/lib/base/views/viewer-cache.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ViewerCache = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../types */ "./node_modules/sprotty/lib/base/types.js");
var animation_frame_syncer_1 = __webpack_require__(/*! ../animations/animation-frame-syncer */ "./node_modules/sprotty/lib/base/animations/animation-frame-syncer.js");
/**
 * Updating the view is rather expensive, and it doesn't make sense to calculate
 * more then one update per animation (rendering) frame. So this class batches
 * all incoming model changes and only renders the last one when the next animation
 * frame comes.
 */
var ViewerCache = /** @class */ (function () {
    function ViewerCache() {
    }
    ViewerCache.prototype.update = function (model, cause) {
        if (cause !== undefined) {
            // Forward the update immediately in order to pass the cause action
            this.delegate.update(model, cause);
            this.cachedModel = undefined;
        }
        else {
            var isCacheEmpty = this.cachedModel === undefined;
            this.cachedModel = model;
            if (isCacheEmpty) {
                this.scheduleUpdate();
            }
        }
    };
    ViewerCache.prototype.scheduleUpdate = function () {
        var _this = this;
        this.syncer.onEndOfNextFrame(function () {
            if (_this.cachedModel) {
                _this.delegate.update(_this.cachedModel);
                _this.cachedModel = undefined;
            }
        });
    };
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.IViewer),
        __metadata("design:type", Object)
    ], ViewerCache.prototype, "delegate", void 0);
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.AnimationFrameSyncer),
        __metadata("design:type", animation_frame_syncer_1.AnimationFrameSyncer)
    ], ViewerCache.prototype, "syncer", void 0);
    ViewerCache = __decorate([
        (0, inversify_1.injectable)()
    ], ViewerCache);
    return ViewerCache;
}());
exports.ViewerCache = ViewerCache;


/***/ }),

/***/ "./node_modules/sprotty/lib/base/views/viewer-options.js":
/*!***************************************************************!*\
  !*** ./node_modules/sprotty/lib/base/views/viewer-options.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.overrideViewerOptions = exports.configureViewerOptions = exports.defaultViewerOptions = void 0;
var object_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/object */ "./node_modules/sprotty-protocol/lib/utils/object.js");
var types_1 = __webpack_require__(/*! ../types */ "./node_modules/sprotty/lib/base/types.js");
var defaultViewerOptions = function () { return ({
    baseDiv: 'sprotty',
    baseClass: 'sprotty',
    hiddenDiv: 'sprotty-hidden',
    hiddenClass: 'sprotty-hidden',
    popupDiv: 'sprotty-popup',
    popupClass: 'sprotty-popup',
    popupClosedClass: 'sprotty-popup-closed',
    needsClientLayout: true,
    needsServerLayout: false,
    popupOpenDelay: 1000,
    popupCloseDelay: 300
}); };
exports.defaultViewerOptions = defaultViewerOptions;
/**
 * Utility function to partially set viewer options. Default values (from `defaultViewerOptions`) are used for
 * options that are not specified.
 */
function configureViewerOptions(context, options) {
    var opt = __assign(__assign({}, (0, exports.defaultViewerOptions)()), options);
    if (context.isBound(types_1.TYPES.ViewerOptions))
        context.rebind(types_1.TYPES.ViewerOptions).toConstantValue(opt);
    else
        context.bind(types_1.TYPES.ViewerOptions).toConstantValue(opt);
}
exports.configureViewerOptions = configureViewerOptions;
/**
 * Utility function to partially override the currently configured viewer options in a DI container.
 */
function overrideViewerOptions(container, options) {
    var opt = container.get(types_1.TYPES.ViewerOptions);
    (0, object_1.safeAssign)(opt, options);
    return opt;
}
exports.overrideViewerOptions = overrideViewerOptions;


/***/ }),

/***/ "./node_modules/sprotty/lib/base/views/viewer.js":
/*!*******************************************************!*\
  !*** ./node_modules/sprotty/lib/base/views/viewer.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PopupModelViewer = exports.HiddenModelViewer = exports.ModelViewer = exports.PatcherProvider = exports.ModelRenderer = void 0;
/** @jsx html */
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var snabbdom_1 = __webpack_require__(/*! snabbdom */ "./node_modules/snabbdom/build/index.js");
var jsx_1 = __webpack_require__(/*! ../../lib/jsx */ "./node_modules/sprotty/lib/lib/jsx.js"); // must be html here, as we're creating a div
var browser_1 = __webpack_require__(/*! ../../utils/browser */ "./node_modules/sprotty/lib/utils/browser.js");
var initialize_canvas_1 = __webpack_require__(/*! ../features/initialize-canvas */ "./node_modules/sprotty/lib/base/features/initialize-canvas.js");
var smodel_factory_1 = __webpack_require__(/*! ../model/smodel-factory */ "./node_modules/sprotty/lib/base/model/smodel-factory.js");
var types_1 = __webpack_require__(/*! ../types */ "./node_modules/sprotty/lib/base/types.js");
var thunk_view_1 = __webpack_require__(/*! ./thunk-view */ "./node_modules/sprotty/lib/base/views/thunk-view.js");
var vnode_utils_1 = __webpack_require__(/*! ./vnode-utils */ "./node_modules/sprotty/lib/base/views/vnode-utils.js");
var ModelRenderer = /** @class */ (function () {
    function ModelRenderer(viewRegistry, targetKind, postprocessors, args) {
        if (args === void 0) { args = {}; }
        this.viewRegistry = viewRegistry;
        this.targetKind = targetKind;
        this.postprocessors = postprocessors;
        this.args = args;
    }
    ModelRenderer.prototype.decorate = function (vnode, element) {
        if ((0, thunk_view_1.isThunk)(vnode)) {
            return vnode;
        }
        return this.postprocessors.reduce(function (n, processor) { return processor.decorate(n, element); }, vnode);
    };
    ModelRenderer.prototype.renderElement = function (element) {
        var view = this.viewRegistry.get(element.type);
        var vnode = view.render(element, this, this.args);
        if (vnode) {
            return this.decorate(vnode, element);
        }
        else {
            return undefined;
        }
    };
    ModelRenderer.prototype.renderChildren = function (element, args) {
        var context = args ?
            new ModelRenderer(this.viewRegistry, this.targetKind, this.postprocessors, __assign(__assign({}, args), { parentArgs: this.args })) : this;
        return element.children
            .map(function (child) { return context.renderElement(child); })
            .filter(function (vnode) { return vnode !== undefined; });
    };
    ModelRenderer.prototype.postUpdate = function (cause) {
        this.postprocessors.forEach(function (processor) { return processor.postUpdate(cause); });
    };
    return ModelRenderer;
}());
exports.ModelRenderer = ModelRenderer;
var PatcherProvider = /** @class */ (function () {
    function PatcherProvider() {
        this.patcher = (0, snabbdom_1.init)(this.createModules());
    }
    PatcherProvider.prototype.createModules = function () {
        return [
            snabbdom_1.propsModule,
            snabbdom_1.attributesModule,
            snabbdom_1.classModule,
            snabbdom_1.styleModule,
            snabbdom_1.eventListenersModule
        ];
    };
    PatcherProvider = __decorate([
        (0, inversify_1.injectable)(),
        __metadata("design:paramtypes", [])
    ], PatcherProvider);
    return PatcherProvider;
}());
exports.PatcherProvider = PatcherProvider;
/**
 * The component that turns the model into an SVG DOM.
 * Uses a VDOM based on snabbdom.js for performance.
 */
var ModelViewer = /** @class */ (function () {
    function ModelViewer(modelRendererFactory, patcherProvider, postprocessors) {
        this.renderer = modelRendererFactory('main', postprocessors);
        this.patcher = patcherProvider.patcher;
    }
    ModelViewer.prototype.update = function (model, cause) {
        var _this = this;
        this.logger.log(this, 'rendering', model);
        var newVDOM = (0, jsx_1.html)("div", { id: this.options.baseDiv }, this.renderer.renderElement(model));
        if (this.lastVDOM !== undefined) {
            var hadFocus = this.hasFocus();
            (0, vnode_utils_1.copyClassesFromVNode)(this.lastVDOM, newVDOM);
            this.lastVDOM = this.patcher.call(this, this.lastVDOM, newVDOM);
            this.restoreFocus(hadFocus);
        }
        else if (typeof document !== 'undefined') {
            var placeholder = document.getElementById(this.options.baseDiv);
            if (placeholder !== null) {
                if (typeof window !== 'undefined') {
                    window.addEventListener('resize', function () {
                        _this.onWindowResize(newVDOM);
                    });
                }
                (0, vnode_utils_1.copyClassesFromElement)(placeholder, newVDOM);
                (0, vnode_utils_1.setClass)(newVDOM, this.options.baseClass, true);
                this.lastVDOM = this.patcher.call(this, placeholder, newVDOM);
            }
            else {
                this.logger.error(this, 'element not in DOM:', this.options.baseDiv);
            }
        }
        this.renderer.postUpdate(cause);
    };
    ModelViewer.prototype.hasFocus = function () {
        if (typeof document !== 'undefined' && document.activeElement && this.lastVDOM.children && this.lastVDOM.children.length > 0) {
            var lastRootVNode = this.lastVDOM.children[0];
            if (typeof lastRootVNode === 'object') {
                var lastElement = lastRootVNode.elm;
                return document.activeElement === lastElement;
            }
        }
        return false;
    };
    ModelViewer.prototype.restoreFocus = function (focus) {
        if (focus && this.lastVDOM.children && this.lastVDOM.children.length > 0) {
            var lastRootVNode = this.lastVDOM.children[0];
            if (typeof lastRootVNode === 'object') {
                var lastElement = lastRootVNode.elm;
                if (lastElement && typeof lastElement.focus === 'function')
                    lastElement.focus();
            }
        }
    };
    ModelViewer.prototype.onWindowResize = function (vdom) {
        var baseDiv = document.getElementById(this.options.baseDiv);
        if (baseDiv !== null) {
            var newBounds = this.getBoundsInPage(baseDiv);
            this.actiondispatcher.dispatch(initialize_canvas_1.InitializeCanvasBoundsAction.create(newBounds));
        }
    };
    ModelViewer.prototype.getBoundsInPage = function (element) {
        var bounds = element.getBoundingClientRect();
        var scroll = (0, browser_1.getWindowScroll)();
        return {
            x: bounds.left + scroll.x,
            y: bounds.top + scroll.y,
            width: bounds.width,
            height: bounds.height
        };
    };
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.ViewerOptions),
        __metadata("design:type", Object)
    ], ModelViewer.prototype, "options", void 0);
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.ILogger),
        __metadata("design:type", Object)
    ], ModelViewer.prototype, "logger", void 0);
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.IActionDispatcher),
        __metadata("design:type", Object)
    ], ModelViewer.prototype, "actiondispatcher", void 0);
    ModelViewer = __decorate([
        (0, inversify_1.injectable)(),
        __param(0, (0, inversify_1.inject)(types_1.TYPES.ModelRendererFactory)),
        __param(1, (0, inversify_1.inject)(types_1.TYPES.PatcherProvider)),
        __param(2, (0, inversify_1.multiInject)(types_1.TYPES.IVNodePostprocessor)),
        __param(2, (0, inversify_1.optional)()),
        __metadata("design:paramtypes", [Function, PatcherProvider, Array])
    ], ModelViewer);
    return ModelViewer;
}());
exports.ModelViewer = ModelViewer;
/**
 * Viewer for the _hidden_ model. This serves as an intermediate step to compute bounds
 * of elements. The model is rendered in a section that is not visible to the user,
 * and then the bounds are extracted from the DOM.
 */
var HiddenModelViewer = /** @class */ (function () {
    function HiddenModelViewer(modelRendererFactory, patcherProvider, hiddenPostprocessors) {
        this.hiddenRenderer = modelRendererFactory('hidden', hiddenPostprocessors);
        this.patcher = patcherProvider.patcher;
    }
    HiddenModelViewer.prototype.update = function (hiddenModel, cause) {
        this.logger.log(this, 'rendering hidden');
        var newVDOM;
        if (hiddenModel.type === smodel_factory_1.EMPTY_ROOT.type) {
            newVDOM = (0, jsx_1.html)("div", { id: this.options.hiddenDiv });
        }
        else {
            var hiddenVNode = this.hiddenRenderer.renderElement(hiddenModel);
            if (hiddenVNode) {
                (0, vnode_utils_1.setAttr)(hiddenVNode, 'opacity', 0);
            }
            newVDOM = (0, jsx_1.html)("div", { id: this.options.hiddenDiv }, hiddenVNode);
        }
        if (this.lastHiddenVDOM !== undefined) {
            (0, vnode_utils_1.copyClassesFromVNode)(this.lastHiddenVDOM, newVDOM);
            this.lastHiddenVDOM = this.patcher.call(this, this.lastHiddenVDOM, newVDOM);
        }
        else {
            var placeholder = document.getElementById(this.options.hiddenDiv);
            if (placeholder === null) {
                placeholder = document.createElement('div');
                document.body.appendChild(placeholder);
            }
            else {
                (0, vnode_utils_1.copyClassesFromElement)(placeholder, newVDOM);
            }
            (0, vnode_utils_1.setClass)(newVDOM, this.options.baseClass, true);
            (0, vnode_utils_1.setClass)(newVDOM, this.options.hiddenClass, true);
            this.lastHiddenVDOM = this.patcher.call(this, placeholder, newVDOM);
        }
        this.hiddenRenderer.postUpdate(cause);
    };
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.ViewerOptions),
        __metadata("design:type", Object)
    ], HiddenModelViewer.prototype, "options", void 0);
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.ILogger),
        __metadata("design:type", Object)
    ], HiddenModelViewer.prototype, "logger", void 0);
    HiddenModelViewer = __decorate([
        (0, inversify_1.injectable)(),
        __param(0, (0, inversify_1.inject)(types_1.TYPES.ModelRendererFactory)),
        __param(1, (0, inversify_1.inject)(types_1.TYPES.PatcherProvider)),
        __param(2, (0, inversify_1.multiInject)(types_1.TYPES.HiddenVNodePostprocessor)),
        __param(2, (0, inversify_1.optional)()),
        __metadata("design:paramtypes", [Function, PatcherProvider, Array])
    ], HiddenModelViewer);
    return HiddenModelViewer;
}());
exports.HiddenModelViewer = HiddenModelViewer;
var PopupModelViewer = /** @class */ (function () {
    function PopupModelViewer(modelRendererFactory, patcherProvider, popupPostprocessors) {
        this.modelRendererFactory = modelRendererFactory;
        this.popupRenderer = this.modelRendererFactory('popup', popupPostprocessors);
        this.patcher = patcherProvider.patcher;
    }
    PopupModelViewer.prototype.update = function (model, cause) {
        this.logger.log(this, 'rendering popup', model);
        var popupClosed = model.type === smodel_factory_1.EMPTY_ROOT.type;
        var newVDOM;
        if (popupClosed) {
            newVDOM = (0, jsx_1.html)("div", { id: this.options.popupDiv });
        }
        else {
            var position = model.canvasBounds;
            var inlineStyle = {
                top: position.y + 'px',
                left: position.x + 'px'
            };
            newVDOM = (0, jsx_1.html)("div", { id: this.options.popupDiv, style: inlineStyle }, this.popupRenderer.renderElement(model));
        }
        if (this.lastPopupVDOM !== undefined) {
            (0, vnode_utils_1.copyClassesFromVNode)(this.lastPopupVDOM, newVDOM);
            (0, vnode_utils_1.setClass)(newVDOM, this.options.popupClosedClass, popupClosed);
            this.lastPopupVDOM = this.patcher.call(this, this.lastPopupVDOM, newVDOM);
        }
        else if (typeof document !== 'undefined') {
            var placeholder = document.getElementById(this.options.popupDiv);
            if (placeholder === null) {
                placeholder = document.createElement('div');
                document.body.appendChild(placeholder);
            }
            else {
                (0, vnode_utils_1.copyClassesFromElement)(placeholder, newVDOM);
            }
            (0, vnode_utils_1.setClass)(newVDOM, this.options.popupClass, true);
            (0, vnode_utils_1.setClass)(newVDOM, this.options.popupClosedClass, popupClosed);
            this.lastPopupVDOM = this.patcher.call(this, placeholder, newVDOM);
        }
        this.popupRenderer.postUpdate(cause);
    };
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.ViewerOptions),
        __metadata("design:type", Object)
    ], PopupModelViewer.prototype, "options", void 0);
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.ILogger),
        __metadata("design:type", Object)
    ], PopupModelViewer.prototype, "logger", void 0);
    PopupModelViewer = __decorate([
        (0, inversify_1.injectable)(),
        __param(0, (0, inversify_1.inject)(types_1.TYPES.ModelRendererFactory)),
        __param(1, (0, inversify_1.inject)(types_1.TYPES.PatcherProvider)),
        __param(2, (0, inversify_1.multiInject)(types_1.TYPES.PopupVNodePostprocessor)),
        __param(2, (0, inversify_1.optional)()),
        __metadata("design:paramtypes", [Function, PatcherProvider, Array])
    ], PopupModelViewer);
    return PopupModelViewer;
}());
exports.PopupModelViewer = PopupModelViewer;


/***/ }),

/***/ "./node_modules/sprotty/lib/base/views/vnode-postprocessor.js":
/*!********************************************************************!*\
  !*** ./node_modules/sprotty/lib/base/views/vnode-postprocessor.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FocusFixPostprocessor = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var vnode_utils_1 = __webpack_require__(/*! ./vnode-utils */ "./node_modules/sprotty/lib/base/views/vnode-utils.js");
var FocusFixPostprocessor = /** @class */ (function () {
    function FocusFixPostprocessor() {
    }
    FocusFixPostprocessor.prototype.decorate = function (vnode, element) {
        if (vnode.sel && vnode.sel.startsWith('svg'))
            // allows to set focus in Firefox
            (0, vnode_utils_1.setAttr)(vnode, 'tabindex', 0);
        return vnode;
    };
    FocusFixPostprocessor.prototype.postUpdate = function () {
    };
    FocusFixPostprocessor = __decorate([
        (0, inversify_1.injectable)()
    ], FocusFixPostprocessor);
    return FocusFixPostprocessor;
}());
exports.FocusFixPostprocessor = FocusFixPostprocessor;


/***/ }),

/***/ "./node_modules/sprotty/lib/base/views/vnode-utils.js":
/*!************************************************************!*\
  !*** ./node_modules/sprotty/lib/base/views/vnode-utils.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getAttrs = exports.on = exports.mergeStyle = exports.copyClassesFromElement = exports.copyClassesFromVNode = exports.setNamespace = exports.setClass = exports.setAttr = void 0;
function setAttr(vnode, name, value) {
    getAttrs(vnode)[name] = value;
}
exports.setAttr = setAttr;
function setClass(vnode, name, value) {
    getClass(vnode)[name] = value;
}
exports.setClass = setClass;
function setNamespace(node, ns) {
    if (node.data === undefined)
        node.data = {};
    node.data.ns = ns;
    var children = node.children;
    if (children !== undefined) {
        for (var i = 0; i < children.length; i++) {
            var child = children[i];
            if (typeof child !== 'string')
                setNamespace(child, ns);
        }
    }
}
exports.setNamespace = setNamespace;
function copyClassesFromVNode(source, target) {
    var classList = getClass(source);
    Object.keys(classList).forEach(function (c) { return setClass(target, c, true); });
}
exports.copyClassesFromVNode = copyClassesFromVNode;
function copyClassesFromElement(element, target) {
    var classList = element.classList;
    for (var i = 0; i < classList.length; i++) {
        var item = classList.item(i);
        if (item)
            setClass(target, item, true);
    }
}
exports.copyClassesFromElement = copyClassesFromElement;
function mergeStyle(vnode, style) {
    getData(vnode).style = __assign(__assign({}, (getData(vnode).style || {})), style);
}
exports.mergeStyle = mergeStyle;
function on(vnode, event, listener) {
    var val = getOn(vnode);
    if (val[event]) {
        throw new Error('EventListener for ' + event + ' already registered on VNode');
    }
    val[event] = listener;
}
exports.on = on;
function getAttrs(vnode) {
    var data = getData(vnode);
    if (!data.attrs)
        data.attrs = {};
    return data.attrs;
}
exports.getAttrs = getAttrs;
function getData(vnode) {
    if (!vnode.data)
        vnode.data = {};
    return vnode.data;
}
function getClass(vnode) {
    var data = getData(vnode);
    if (!data.class)
        data.class = {};
    return data.class;
}
function getOn(vnode) {
    var data = getData(vnode);
    if (!data.on)
        data.on = {};
    return data.on;
}


/***/ }),

/***/ "./node_modules/sprotty/lib/features/bounds/abstract-layout.js":
/*!*********************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/bounds/abstract-layout.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AbstractLayout = void 0;
var geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "./node_modules/sprotty-protocol/lib/utils/geometry.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "./node_modules/sprotty/lib/base/model/smodel.js");
var model_1 = __webpack_require__(/*! ./model */ "./node_modules/sprotty/lib/features/bounds/model.js");
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var AbstractLayout = /** @class */ (function () {
    function AbstractLayout() {
    }
    AbstractLayout.prototype.layout = function (container, layouter) {
        var boundsData = layouter.getBoundsData(container);
        var options = this.getLayoutOptions(container);
        var childrenSize = this.getChildrenSize(container, options, layouter);
        var maxWidth = options.paddingFactor * (options.resizeContainer
            ? childrenSize.width
            : Math.max(0, this.getFixedContainerBounds(container, options, layouter).width) - options.paddingLeft - options.paddingRight);
        var maxHeight = options.paddingFactor * (options.resizeContainer
            ? childrenSize.height
            : Math.max(0, this.getFixedContainerBounds(container, options, layouter).height) - options.paddingTop - options.paddingBottom);
        if (maxWidth > 0 && maxHeight > 0) {
            var offset = this.layoutChildren(container, layouter, options, maxWidth, maxHeight);
            boundsData.bounds = this.getFinalContainerBounds(container, offset, options, maxWidth, maxHeight);
            boundsData.boundsChanged = true;
        }
    };
    AbstractLayout.prototype.getFinalContainerBounds = function (container, lastOffset, options, maxWidth, maxHeight) {
        return {
            x: container.bounds.x,
            y: container.bounds.y,
            width: Math.max(options.minWidth, maxWidth + options.paddingLeft + options.paddingRight),
            height: Math.max(options.minHeight, maxHeight + options.paddingTop + options.paddingBottom)
        };
    };
    AbstractLayout.prototype.getFixedContainerBounds = function (container, layoutOptions, layouter) {
        var currentContainer = container;
        while (true) {
            if ((0, model_1.isBoundsAware)(currentContainer)) {
                var bounds = currentContainer.bounds;
                if ((0, model_1.isLayoutContainer)(currentContainer) && layoutOptions.resizeContainer)
                    layouter.log.error(currentContainer, 'Resizable container found while detecting fixed bounds');
                if (geometry_1.Dimension.isValid(bounds))
                    return bounds;
            }
            if (currentContainer instanceof smodel_1.SChildElement) {
                currentContainer = currentContainer.parent;
            }
            else {
                layouter.log.error(currentContainer, 'Cannot detect fixed bounds');
                return geometry_1.Bounds.EMPTY;
            }
        }
    };
    AbstractLayout.prototype.layoutChildren = function (container, layouter, containerOptions, maxWidth, maxHeight) {
        var _this = this;
        var currentOffset = {
            x: containerOptions.paddingLeft + 0.5 * (maxWidth - (maxWidth / containerOptions.paddingFactor)),
            y: containerOptions.paddingTop + 0.5 * (maxHeight - (maxHeight / containerOptions.paddingFactor))
        };
        container.children.forEach(function (child) {
            if ((0, model_1.isLayoutableChild)(child)) {
                var boundsData = layouter.getBoundsData(child);
                var bounds = boundsData.bounds;
                var childOptions = _this.getChildLayoutOptions(child, containerOptions);
                if (bounds !== undefined && geometry_1.Dimension.isValid(bounds)) {
                    currentOffset = _this.layoutChild(child, boundsData, bounds, childOptions, containerOptions, currentOffset, maxWidth, maxHeight);
                }
            }
        });
        return currentOffset;
    };
    AbstractLayout.prototype.getDx = function (hAlign, bounds, maxWidth) {
        switch (hAlign) {
            case 'left':
                return 0;
            case 'center':
                return 0.5 * (maxWidth - bounds.width);
            case 'right':
                return maxWidth - bounds.width;
        }
    };
    AbstractLayout.prototype.getDy = function (vAlign, bounds, maxHeight) {
        switch (vAlign) {
            case 'top':
                return 0;
            case 'center':
                return 0.5 * (maxHeight - bounds.height);
            case 'bottom':
                return maxHeight - bounds.height;
        }
    };
    AbstractLayout.prototype.getChildLayoutOptions = function (child, containerOptions) {
        var layoutOptions = child.layoutOptions;
        if (layoutOptions === undefined)
            return containerOptions;
        else
            return this.spread(containerOptions, layoutOptions);
    };
    AbstractLayout.prototype.getLayoutOptions = function (element) {
        var _this = this;
        var current = element;
        var allOptions = [];
        while (current !== undefined) {
            var layoutOptions = current.layoutOptions;
            if (layoutOptions !== undefined)
                allOptions.push(layoutOptions);
            if (current instanceof smodel_1.SChildElement)
                current = current.parent;
            else
                break;
        }
        return allOptions.reverse().reduce(function (a, b) { return _this.spread(a, b); }, this.getDefaultLayoutOptions());
    };
    AbstractLayout = __decorate([
        (0, inversify_1.injectable)()
    ], AbstractLayout);
    return AbstractLayout;
}());
exports.AbstractLayout = AbstractLayout;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/bounds/bounds-manipulation.js":
/*!*************************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/bounds/bounds-manipulation.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RequestBoundsCommand = exports.SetBoundsCommand = exports.LayoutAction = exports.ComputedBoundsAction = exports.RequestBoundsAction = exports.SetBoundsAction = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "./node_modules/sprotty-protocol/lib/actions.js");
var protocol = __importStar(__webpack_require__(/*! sprotty-protocol/lib/actions */ "./node_modules/sprotty-protocol/lib/actions.js"));
var command_1 = __webpack_require__(/*! ../../base/commands/command */ "./node_modules/sprotty/lib/base/commands/command.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/sprotty/lib/base/types.js");
var model_1 = __webpack_require__(/*! ./model */ "./node_modules/sprotty/lib/features/bounds/model.js");
/**
 * Sent from the model source (e.g. a DiagramServer) to the client to update the bounds of some
 * (or all) model elements.
 *
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
var SetBoundsAction = /** @class */ (function () {
    function SetBoundsAction(bounds) {
        this.bounds = bounds;
        this.kind = SetBoundsAction.KIND;
    }
    SetBoundsAction.KIND = 'setBounds';
    return SetBoundsAction;
}());
exports.SetBoundsAction = SetBoundsAction;
/**
 * Sent from the model source to the client to request bounds for the given model. The model is
 * rendered invisibly so the bounds can derived from the DOM. The response is a ComputedBoundsAction.
 * This hidden rendering round-trip is necessary if the client is responsible for parts of the layout
 * (see `needsClientLayout` viewer option).
 *
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
var RequestBoundsAction = /** @class */ (function () {
    function RequestBoundsAction(newRoot, requestId) {
        if (requestId === void 0) { requestId = ''; }
        this.newRoot = newRoot;
        this.requestId = requestId;
        this.kind = RequestBoundsAction.KIND;
    }
    /** Factory function to dispatch a request with the `IActionDispatcher` */
    RequestBoundsAction.create = function (newRoot) {
        return new RequestBoundsAction(newRoot, (0, actions_1.generateRequestId)());
    };
    RequestBoundsAction.KIND = 'requestBounds';
    return RequestBoundsAction;
}());
exports.RequestBoundsAction = RequestBoundsAction;
/**
 * Sent from the client to the model source (e.g. a DiagramServer) to transmit the result of bounds
 * computation as a response to a RequestBoundsAction. If the server is responsible for parts of
 * the layout (see `needsServerLayout` viewer option), it can do so after applying the computed bounds
 * received with this action. Otherwise there is no need to send the computed bounds to the server,
 * so they can be processed locally by the client.
 *
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
var ComputedBoundsAction = /** @class */ (function () {
    function ComputedBoundsAction(bounds, revision, alignments, responseId) {
        if (responseId === void 0) { responseId = ''; }
        this.bounds = bounds;
        this.revision = revision;
        this.alignments = alignments;
        this.responseId = responseId;
        this.kind = ComputedBoundsAction.KIND;
    }
    ComputedBoundsAction.KIND = 'computedBounds';
    return ComputedBoundsAction;
}());
exports.ComputedBoundsAction = ComputedBoundsAction;
/**
 * Request a layout of the diagram or the selected elements only.
 *
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
var LayoutAction = /** @class */ (function () {
    function LayoutAction() {
        this.kind = LayoutAction.KIND;
    }
    LayoutAction.KIND = 'layout';
    return LayoutAction;
}());
exports.LayoutAction = LayoutAction;
var SetBoundsCommand = /** @class */ (function (_super) {
    __extends(SetBoundsCommand, _super);
    function SetBoundsCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        _this.bounds = [];
        return _this;
    }
    SetBoundsCommand.prototype.execute = function (context) {
        var _this = this;
        this.action.bounds.forEach(function (b) {
            var element = context.root.index.getById(b.elementId);
            if (element && (0, model_1.isBoundsAware)(element)) {
                _this.bounds.push({
                    element: element,
                    oldBounds: element.bounds,
                    newPosition: b.newPosition,
                    newSize: b.newSize
                });
            }
        });
        return this.redo(context);
    };
    SetBoundsCommand.prototype.undo = function (context) {
        this.bounds.forEach(function (b) { return b.element.bounds = b.oldBounds; });
        return context.root;
    };
    SetBoundsCommand.prototype.redo = function (context) {
        this.bounds.forEach(function (b) {
            if (b.newPosition)
                b.element.bounds = __assign(__assign({}, b.newPosition), b.newSize);
            else
                // keep the position
                b.element.bounds = __assign({ x: b.element.bounds.x, y: b.element.bounds.y }, b.newSize);
        });
        return context.root;
    };
    SetBoundsCommand.KIND = protocol.SetBoundsAction.KIND;
    SetBoundsCommand = __decorate([
        (0, inversify_1.injectable)(),
        __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [Object])
    ], SetBoundsCommand);
    return SetBoundsCommand;
}(command_1.SystemCommand));
exports.SetBoundsCommand = SetBoundsCommand;
var RequestBoundsCommand = /** @class */ (function (_super) {
    __extends(RequestBoundsCommand, _super);
    function RequestBoundsCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    RequestBoundsCommand.prototype.execute = function (context) {
        return {
            model: context.modelFactory.createRoot(this.action.newRoot),
            modelChanged: true,
            cause: this.action
        };
    };
    Object.defineProperty(RequestBoundsCommand.prototype, "blockUntil", {
        get: function () {
            return function (action) { return action.kind === ComputedBoundsAction.KIND; };
        },
        enumerable: false,
        configurable: true
    });
    RequestBoundsCommand.KIND = protocol.RequestBoundsAction.KIND;
    RequestBoundsCommand = __decorate([
        (0, inversify_1.injectable)(),
        __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [Object])
    ], RequestBoundsCommand);
    return RequestBoundsCommand;
}(command_1.HiddenCommand));
exports.RequestBoundsCommand = RequestBoundsCommand;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/bounds/di.config.js":
/*!***************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/bounds/di.config.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/sprotty/lib/base/types.js");
var bounds_manipulation_1 = __webpack_require__(/*! ./bounds-manipulation */ "./node_modules/sprotty/lib/features/bounds/bounds-manipulation.js");
var hidden_bounds_updater_1 = __webpack_require__(/*! ./hidden-bounds-updater */ "./node_modules/sprotty/lib/features/bounds/hidden-bounds-updater.js");
var layout_1 = __webpack_require__(/*! ./layout */ "./node_modules/sprotty/lib/features/bounds/layout.js");
var command_registration_1 = __webpack_require__(/*! ../../base/commands/command-registration */ "./node_modules/sprotty/lib/base/commands/command-registration.js");
var hbox_layout_1 = __webpack_require__(/*! ./hbox-layout */ "./node_modules/sprotty/lib/features/bounds/hbox-layout.js");
var vbox_layout_1 = __webpack_require__(/*! ./vbox-layout */ "./node_modules/sprotty/lib/features/bounds/vbox-layout.js");
var stack_layout_1 = __webpack_require__(/*! ./stack-layout */ "./node_modules/sprotty/lib/features/bounds/stack-layout.js");
var boundsModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    (0, command_registration_1.configureCommand)({ bind: bind, isBound: isBound }, bounds_manipulation_1.SetBoundsCommand);
    (0, command_registration_1.configureCommand)({ bind: bind, isBound: isBound }, bounds_manipulation_1.RequestBoundsCommand);
    bind(hidden_bounds_updater_1.HiddenBoundsUpdater).toSelf().inSingletonScope();
    bind(types_1.TYPES.HiddenVNodePostprocessor).toService(hidden_bounds_updater_1.HiddenBoundsUpdater);
    bind(types_1.TYPES.Layouter).to(layout_1.Layouter).inSingletonScope();
    bind(types_1.TYPES.LayoutRegistry).to(layout_1.LayoutRegistry).inSingletonScope();
    (0, layout_1.configureLayout)({ bind: bind, isBound: isBound }, vbox_layout_1.VBoxLayouter.KIND, vbox_layout_1.VBoxLayouter);
    (0, layout_1.configureLayout)({ bind: bind, isBound: isBound }, hbox_layout_1.HBoxLayouter.KIND, hbox_layout_1.HBoxLayouter);
    (0, layout_1.configureLayout)({ bind: bind, isBound: isBound }, stack_layout_1.StackLayouter.KIND, stack_layout_1.StackLayouter);
});
exports["default"] = boundsModule;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/bounds/hbox-layout.js":
/*!*****************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/bounds/hbox-layout.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.HBoxLayouter = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "./node_modules/sprotty-protocol/lib/utils/geometry.js");
var abstract_layout_1 = __webpack_require__(/*! ./abstract-layout */ "./node_modules/sprotty/lib/features/bounds/abstract-layout.js");
var model_1 = __webpack_require__(/*! ./model */ "./node_modules/sprotty/lib/features/bounds/model.js");
/**
 * Layouts children of a container in horizontal (left->right) direction.
 */
var HBoxLayouter = /** @class */ (function (_super) {
    __extends(HBoxLayouter, _super);
    function HBoxLayouter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HBoxLayouter.prototype.getChildrenSize = function (container, containerOptions, layouter) {
        var maxWidth = 0;
        var maxHeight = -1;
        var isFirst = true;
        container.children.forEach(function (child) {
            if ((0, model_1.isLayoutableChild)(child)) {
                var bounds = layouter.getBoundsData(child).bounds;
                if (bounds !== undefined && geometry_1.Dimension.isValid(bounds)) {
                    if (isFirst)
                        isFirst = false;
                    else
                        maxWidth += containerOptions.hGap;
                    maxWidth += bounds.width;
                    maxHeight = Math.max(maxHeight, bounds.height);
                }
            }
        });
        return {
            width: maxWidth,
            height: maxHeight
        };
    };
    HBoxLayouter.prototype.layoutChild = function (child, boundsData, bounds, childOptions, containerOptions, currentOffset, maxWidth, maxHeight) {
        var dy = this.getDy(childOptions.vAlign, bounds, maxHeight);
        boundsData.bounds = {
            x: currentOffset.x + child.bounds.x - bounds.x,
            y: containerOptions.paddingTop + child.bounds.y - bounds.y + dy,
            width: bounds.width,
            height: bounds.height
        };
        boundsData.boundsChanged = true;
        return {
            x: currentOffset.x + bounds.width + containerOptions.hGap,
            y: currentOffset.y
        };
    };
    HBoxLayouter.prototype.getDefaultLayoutOptions = function () {
        return {
            resizeContainer: true,
            paddingTop: 5,
            paddingBottom: 5,
            paddingLeft: 5,
            paddingRight: 5,
            paddingFactor: 1,
            hGap: 1,
            vAlign: 'center',
            minWidth: 0,
            minHeight: 0
        };
    };
    HBoxLayouter.prototype.spread = function (a, b) {
        return __assign(__assign({}, a), b);
    };
    HBoxLayouter.KIND = 'hbox';
    HBoxLayouter = __decorate([
        (0, inversify_1.injectable)()
    ], HBoxLayouter);
    return HBoxLayouter;
}(abstract_layout_1.AbstractLayout));
exports.HBoxLayouter = HBoxLayouter;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/bounds/hidden-bounds-updater.js":
/*!***************************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/bounds/hidden-bounds-updater.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.HiddenBoundsUpdater = exports.BoundsData = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "./node_modules/sprotty-protocol/lib/actions.js");
var geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "./node_modules/sprotty-protocol/lib/utils/geometry.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "./node_modules/sprotty/lib/base/model/smodel.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/sprotty/lib/base/types.js");
var layout_1 = __webpack_require__(/*! ./layout */ "./node_modules/sprotty/lib/features/bounds/layout.js");
var model_1 = __webpack_require__(/*! ./model */ "./node_modules/sprotty/lib/features/bounds/model.js");
var BoundsData = /** @class */ (function () {
    function BoundsData() {
    }
    return BoundsData;
}());
exports.BoundsData = BoundsData;
/**
 * Grabs the bounds from hidden SVG DOM elements, applies layouts and fires
 * ComputedBoundsActions.
 *
 * The actual bounds of an element can usually not be determined from the SModel
 * as they depend on the view implementation and CSS stylings. So the best way is
 * to grab them from a live (but hidden) SVG using getBBox().
 *
 * If an element is Alignable, and the top-left corner of its bounding box is not
 * the origin, we also issue a realign with the ComputedBoundsAction.
 */
var HiddenBoundsUpdater = /** @class */ (function () {
    function HiddenBoundsUpdater() {
        this.element2boundsData = new Map;
    }
    HiddenBoundsUpdater.prototype.decorate = function (vnode, element) {
        if ((0, model_1.isSizeable)(element) || (0, model_1.isLayoutContainer)(element)) {
            this.element2boundsData.set(element, {
                vnode: vnode,
                bounds: element.bounds,
                boundsChanged: false,
                alignmentChanged: false
            });
        }
        if (element instanceof smodel_1.SModelRoot)
            this.root = element;
        return vnode;
    };
    HiddenBoundsUpdater.prototype.postUpdate = function (cause) {
        if (cause === undefined || cause.kind !== actions_1.RequestBoundsAction.KIND) {
            return;
        }
        var request = cause;
        this.getBoundsFromDOM();
        this.layouter.layout(this.element2boundsData);
        var resizes = [];
        var alignments = [];
        this.element2boundsData.forEach(function (boundsData, element) {
            if (boundsData.boundsChanged && boundsData.bounds !== undefined) {
                var resize = {
                    elementId: element.id,
                    newSize: {
                        width: boundsData.bounds.width,
                        height: boundsData.bounds.height
                    }
                };
                // don't copy position if the element is layouted by the server
                if (element instanceof smodel_1.SChildElement && (0, model_1.isLayoutContainer)(element.parent)) {
                    resize.newPosition = {
                        x: boundsData.bounds.x,
                        y: boundsData.bounds.y,
                    };
                }
                resizes.push(resize);
            }
            if (boundsData.alignmentChanged && boundsData.alignment !== undefined) {
                alignments.push({
                    elementId: element.id,
                    newAlignment: boundsData.alignment
                });
            }
        });
        var revision = (this.root !== undefined) ? this.root.revision : undefined;
        this.actionDispatcher.dispatch(actions_1.ComputedBoundsAction.create(resizes, { revision: revision, alignments: alignments, requestId: request.requestId }));
        this.element2boundsData.clear();
    };
    HiddenBoundsUpdater.prototype.getBoundsFromDOM = function () {
        var _this = this;
        this.element2boundsData.forEach(function (boundsData, element) {
            if (boundsData.bounds && (0, model_1.isSizeable)(element)) {
                var vnode = boundsData.vnode;
                if (vnode && vnode.elm) {
                    var boundingBox = _this.getBounds(vnode.elm, element);
                    if ((0, model_1.isAlignable)(element) && !((0, geometry_1.almostEquals)(boundingBox.x, 0) && (0, geometry_1.almostEquals)(boundingBox.y, 0))) {
                        boundsData.alignment = {
                            x: -boundingBox.x,
                            y: -boundingBox.y
                        };
                        boundsData.alignmentChanged = true;
                    }
                    var newBounds = {
                        x: element.bounds.x,
                        y: element.bounds.y,
                        width: boundingBox.width,
                        height: boundingBox.height
                    };
                    if (!((0, geometry_1.almostEquals)(newBounds.x, element.bounds.x)
                        && (0, geometry_1.almostEquals)(newBounds.y, element.bounds.y)
                        && (0, geometry_1.almostEquals)(newBounds.width, element.bounds.width)
                        && (0, geometry_1.almostEquals)(newBounds.height, element.bounds.height))) {
                        boundsData.bounds = newBounds;
                        boundsData.boundsChanged = true;
                    }
                }
            }
        });
    };
    HiddenBoundsUpdater.prototype.getBounds = function (elm, element) {
        if (typeof elm.getBBox !== 'function') {
            this.logger.error(this, 'Not an SVG element:', elm);
            return geometry_1.Bounds.EMPTY;
        }
        var bounds = elm.getBBox();
        return {
            x: bounds.x,
            y: bounds.y,
            width: bounds.width,
            height: bounds.height
        };
    };
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.ILogger),
        __metadata("design:type", Object)
    ], HiddenBoundsUpdater.prototype, "logger", void 0);
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.IActionDispatcher),
        __metadata("design:type", Object)
    ], HiddenBoundsUpdater.prototype, "actionDispatcher", void 0);
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.Layouter),
        __metadata("design:type", layout_1.Layouter)
    ], HiddenBoundsUpdater.prototype, "layouter", void 0);
    HiddenBoundsUpdater = __decorate([
        (0, inversify_1.injectable)()
    ], HiddenBoundsUpdater);
    return HiddenBoundsUpdater;
}());
exports.HiddenBoundsUpdater = HiddenBoundsUpdater;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/bounds/layout.js":
/*!************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/bounds/layout.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.configureLayout = exports.StatefulLayouter = exports.Layouter = exports.LayoutRegistry = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "./node_modules/sprotty-protocol/lib/utils/geometry.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/sprotty/lib/base/types.js");
var registry_1 = __webpack_require__(/*! ../../utils/registry */ "./node_modules/sprotty/lib/utils/registry.js");
var model_1 = __webpack_require__(/*! ./model */ "./node_modules/sprotty/lib/features/bounds/model.js");
var inversify_2 = __webpack_require__(/*! ../../utils/inversify */ "./node_modules/sprotty/lib/utils/inversify.js");
var LayoutRegistry = /** @class */ (function (_super) {
    __extends(LayoutRegistry, _super);
    function LayoutRegistry(layouts) {
        if (layouts === void 0) { layouts = []; }
        var _this = _super.call(this) || this;
        layouts.forEach(function (layout) {
            if (_this.hasKey(layout.layoutKind)) {
                _this.logger.warn('Layout kind is already defined: ', layout.layoutKind);
            }
            else {
                _this.register(layout.layoutKind, layout.factory());
            }
        });
        return _this;
    }
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.ILogger),
        __metadata("design:type", Object)
    ], LayoutRegistry.prototype, "logger", void 0);
    LayoutRegistry = __decorate([
        (0, inversify_1.injectable)(),
        __param(0, (0, inversify_1.multiInject)(types_1.TYPES.LayoutRegistration)),
        __param(0, (0, inversify_1.optional)()),
        __metadata("design:paramtypes", [Array])
    ], LayoutRegistry);
    return LayoutRegistry;
}(registry_1.InstanceRegistry));
exports.LayoutRegistry = LayoutRegistry;
var Layouter = /** @class */ (function () {
    function Layouter() {
    }
    Layouter.prototype.layout = function (element2boundsData) {
        new StatefulLayouter(element2boundsData, this.layoutRegistry, this.logger).layout();
    };
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.LayoutRegistry),
        __metadata("design:type", LayoutRegistry)
    ], Layouter.prototype, "layoutRegistry", void 0);
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.ILogger),
        __metadata("design:type", Object)
    ], Layouter.prototype, "logger", void 0);
    Layouter = __decorate([
        (0, inversify_1.injectable)()
    ], Layouter);
    return Layouter;
}());
exports.Layouter = Layouter;
var StatefulLayouter = /** @class */ (function () {
    function StatefulLayouter(element2boundsData, layoutRegistry, log) {
        var _this = this;
        this.element2boundsData = element2boundsData;
        this.layoutRegistry = layoutRegistry;
        this.log = log;
        this.toBeLayouted = [];
        element2boundsData.forEach(function (data, element) {
            if ((0, model_1.isLayoutContainer)(element))
                _this.toBeLayouted.push(element);
        });
    }
    StatefulLayouter.prototype.getBoundsData = function (element) {
        var boundsData = this.element2boundsData.get(element);
        var bounds = element.bounds;
        if ((0, model_1.isLayoutContainer)(element) && this.toBeLayouted.indexOf(element) >= 0) {
            bounds = this.doLayout(element);
        }
        if (!boundsData) {
            boundsData = {
                bounds: bounds,
                boundsChanged: false,
                alignmentChanged: false
            };
            this.element2boundsData.set(element, boundsData);
        }
        return boundsData;
    };
    StatefulLayouter.prototype.layout = function () {
        while (this.toBeLayouted.length > 0) {
            var element = this.toBeLayouted[0];
            this.doLayout(element);
        }
    };
    StatefulLayouter.prototype.doLayout = function (element) {
        var index = this.toBeLayouted.indexOf(element);
        if (index >= 0)
            this.toBeLayouted.splice(index, 1);
        var layout = this.layoutRegistry.get(element.layout);
        if (layout)
            layout.layout(element, this);
        var boundsData = this.element2boundsData.get(element);
        if (boundsData !== undefined && boundsData.bounds !== undefined) {
            return boundsData.bounds;
        }
        else {
            this.log.error(element, 'Layout failed');
            return geometry_1.Bounds.EMPTY;
        }
    };
    return StatefulLayouter;
}());
exports.StatefulLayouter = StatefulLayouter;
function configureLayout(context, kind, constr) {
    if (typeof constr === 'function') {
        if (!(0, inversify_2.isInjectable)(constr)) {
            throw new Error("Layouts be @injectable: ".concat(constr.name));
        }
        if (!context.isBound(constr)) {
            context.bind(constr).toSelf();
        }
    }
    context.bind(types_1.TYPES.LayoutRegistration).toDynamicValue(function (ctx) { return ({
        layoutKind: kind,
        factory: function () { return ctx.container.get(constr); }
    }); });
}
exports.configureLayout = configureLayout;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/bounds/model.js":
/*!***********************************************************!*\
  !*** ./node_modules/sprotty/lib/features/bounds/model.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SShapeElement = exports.findChildrenAtPosition = exports.getAbsoluteClientBounds = exports.getAbsoluteBounds = exports.isAlignable = exports.isSizeable = exports.isLayoutableChild = exports.isLayoutContainer = exports.isBoundsAware = exports.alignFeature = exports.layoutableChildFeature = exports.layoutContainerFeature = exports.boundsFeature = void 0;
var geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "./node_modules/sprotty-protocol/lib/utils/geometry.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "./node_modules/sprotty/lib/base/model/smodel.js");
var smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "./node_modules/sprotty/lib/base/model/smodel-utils.js");
var browser_1 = __webpack_require__(/*! ../../utils/browser */ "./node_modules/sprotty/lib/utils/browser.js");
exports.boundsFeature = Symbol('boundsFeature');
exports.layoutContainerFeature = Symbol('layoutContainerFeature');
exports.layoutableChildFeature = Symbol('layoutableChildFeature');
exports.alignFeature = Symbol('alignFeature');
function isBoundsAware(element) {
    return 'bounds' in element;
}
exports.isBoundsAware = isBoundsAware;
function isLayoutContainer(element) {
    return isBoundsAware(element)
        && element.hasFeature(exports.layoutContainerFeature)
        && 'layout' in element;
}
exports.isLayoutContainer = isLayoutContainer;
function isLayoutableChild(element) {
    return isBoundsAware(element)
        && element.hasFeature(exports.layoutableChildFeature);
}
exports.isLayoutableChild = isLayoutableChild;
function isSizeable(element) {
    return element.hasFeature(exports.boundsFeature) && isBoundsAware(element);
}
exports.isSizeable = isSizeable;
function isAlignable(element) {
    return element.hasFeature(exports.alignFeature)
        && 'alignment' in element;
}
exports.isAlignable = isAlignable;
function getAbsoluteBounds(element) {
    var boundsAware = (0, smodel_utils_1.findParentByFeature)(element, isBoundsAware);
    if (boundsAware !== undefined) {
        var bounds = boundsAware.bounds;
        var current = boundsAware;
        while (current instanceof smodel_1.SChildElement) {
            var parent_1 = current.parent;
            bounds = parent_1.localToParent(bounds);
            current = parent_1;
        }
        return bounds;
    }
    else if (element instanceof smodel_1.SModelRoot) {
        var canvasBounds = element.canvasBounds;
        return { x: 0, y: 0, width: canvasBounds.width, height: canvasBounds.height };
    }
    else {
        return geometry_1.Bounds.EMPTY;
    }
}
exports.getAbsoluteBounds = getAbsoluteBounds;
/**
 * Returns the "client-absolute" bounds of the specified `element`.
 *
 * The client-absolute bounds are relative to the entire browser page.
 *
 * @param element The element to get the bounds for.
 * @param domHelper The dom helper to obtain the SVG element's id.
 * @param viewerOptions The viewer options to obtain sprotty's container div id.
 */
function getAbsoluteClientBounds(element, domHelper, viewerOptions) {
    var x = 0;
    var y = 0;
    var width = 0;
    var height = 0;
    var svgElementId = domHelper.createUniqueDOMElementId(element);
    var svgElement = document.getElementById(svgElementId);
    if (svgElement) {
        var rect = svgElement.getBoundingClientRect();
        var scroll_1 = (0, browser_1.getWindowScroll)();
        x = rect.left + scroll_1.x;
        y = rect.top + scroll_1.y;
        width = rect.width;
        height = rect.height;
    }
    var container = document.getElementById(viewerOptions.baseDiv);
    if (container) {
        while (container.offsetParent instanceof HTMLElement
            && (container = container.offsetParent)) {
            x -= container.offsetLeft;
            y -= container.offsetTop;
        }
    }
    return { x: x, y: y, width: width, height: height };
}
exports.getAbsoluteClientBounds = getAbsoluteClientBounds;
function findChildrenAtPosition(parent, point) {
    var matches = [];
    doFindChildrenAtPosition(parent, point, matches);
    return matches;
}
exports.findChildrenAtPosition = findChildrenAtPosition;
function doFindChildrenAtPosition(parent, point, matches) {
    parent.children.forEach(function (child) {
        if (isBoundsAware(child) && geometry_1.Bounds.includes(child.bounds, point))
            matches.push(child);
        if (child instanceof smodel_1.SParentElement) {
            var newPoint = child.parentToLocal(point);
            doFindChildrenAtPosition(child, newPoint, matches);
        }
    });
}
/**
 * Abstract class for elements with a position and a size.
 */
var SShapeElement = /** @class */ (function (_super) {
    __extends(SShapeElement, _super);
    function SShapeElement() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.position = geometry_1.Point.ORIGIN;
        _this.size = geometry_1.Dimension.EMPTY;
        return _this;
    }
    Object.defineProperty(SShapeElement.prototype, "bounds", {
        get: function () {
            return {
                x: this.position.x,
                y: this.position.y,
                width: this.size.width,
                height: this.size.height
            };
        },
        set: function (newBounds) {
            this.position = {
                x: newBounds.x,
                y: newBounds.y
            };
            this.size = {
                width: newBounds.width,
                height: newBounds.height
            };
        },
        enumerable: false,
        configurable: true
    });
    SShapeElement.prototype.localToParent = function (point) {
        var result = {
            x: point.x + this.position.x,
            y: point.y + this.position.y,
            width: -1,
            height: -1
        };
        if ((0, geometry_1.isBounds)(point)) {
            result.width = point.width;
            result.height = point.height;
        }
        return result;
    };
    SShapeElement.prototype.parentToLocal = function (point) {
        var result = {
            x: point.x - this.position.x,
            y: point.y - this.position.y,
            width: -1,
            height: -1
        };
        if ((0, geometry_1.isBounds)(point)) {
            result.width = point.width;
            result.height = point.height;
        }
        return result;
    };
    return SShapeElement;
}(smodel_1.SChildElement));
exports.SShapeElement = SShapeElement;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/bounds/resize.js":
/*!************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/bounds/resize.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ResizeAnimation = void 0;
var animation_1 = __webpack_require__(/*! ../../base/animations/animation */ "./node_modules/sprotty/lib/base/animations/animation.js");
var ResizeAnimation = /** @class */ (function (_super) {
    __extends(ResizeAnimation, _super);
    function ResizeAnimation(model, elementResizes, context, reverse) {
        if (reverse === void 0) { reverse = false; }
        var _this = _super.call(this, context) || this;
        _this.model = model;
        _this.elementResizes = elementResizes;
        _this.reverse = reverse;
        return _this;
    }
    ResizeAnimation.prototype.tween = function (t) {
        var _this = this;
        this.elementResizes.forEach(function (elementResize) {
            var element = elementResize.element;
            var newDimension = (_this.reverse) ? {
                width: (1 - t) * elementResize.toDimension.width + t * elementResize.fromDimension.width,
                height: (1 - t) * elementResize.toDimension.height + t * elementResize.fromDimension.height
            } : {
                width: (1 - t) * elementResize.fromDimension.width + t * elementResize.toDimension.width,
                height: (1 - t) * elementResize.fromDimension.height + t * elementResize.toDimension.height
            };
            element.bounds = {
                x: element.bounds.x,
                y: element.bounds.y,
                width: newDimension.width,
                height: newDimension.height
            };
        });
        return this.model;
    };
    return ResizeAnimation;
}(animation_1.Animation));
exports.ResizeAnimation = ResizeAnimation;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/bounds/stack-layout.js":
/*!******************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/bounds/stack-layout.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.StackLayouter = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "./node_modules/sprotty-protocol/lib/utils/geometry.js");
var abstract_layout_1 = __webpack_require__(/*! ./abstract-layout */ "./node_modules/sprotty/lib/features/bounds/abstract-layout.js");
var model_1 = __webpack_require__(/*! ./model */ "./node_modules/sprotty/lib/features/bounds/model.js");
var StackLayouter = /** @class */ (function (_super) {
    __extends(StackLayouter, _super);
    function StackLayouter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    StackLayouter.prototype.getChildrenSize = function (container, options, layouter) {
        var maxWidth = -1;
        var maxHeight = -1;
        container.children.forEach(function (child) {
            if ((0, model_1.isLayoutableChild)(child)) {
                var bounds = layouter.getBoundsData(child).bounds;
                if (bounds !== undefined && geometry_1.Dimension.isValid(bounds)) {
                    maxWidth = Math.max(maxWidth, bounds.width);
                    maxHeight = Math.max(maxHeight, bounds.height);
                }
            }
        });
        return {
            width: maxWidth,
            height: maxHeight
        };
    };
    StackLayouter.prototype.layoutChild = function (child, boundsData, bounds, childOptions, containerOptions, currentOffset, maxWidth, maxHeight) {
        var dx = this.getDx(childOptions.hAlign, bounds, maxWidth);
        var dy = this.getDy(childOptions.vAlign, bounds, maxHeight);
        boundsData.bounds = {
            x: containerOptions.paddingLeft + child.bounds.x - bounds.x + dx,
            y: containerOptions.paddingTop + child.bounds.y - bounds.y + dy,
            width: bounds.width,
            height: bounds.height
        };
        boundsData.boundsChanged = true;
        return currentOffset;
    };
    StackLayouter.prototype.getDefaultLayoutOptions = function () {
        return {
            resizeContainer: true,
            paddingTop: 5,
            paddingBottom: 5,
            paddingLeft: 5,
            paddingRight: 5,
            paddingFactor: 1,
            hAlign: 'center',
            vAlign: 'center',
            minWidth: 0,
            minHeight: 0
        };
    };
    StackLayouter.prototype.spread = function (a, b) {
        return __assign(__assign({}, a), b);
    };
    StackLayouter.KIND = 'stack';
    StackLayouter = __decorate([
        (0, inversify_1.injectable)()
    ], StackLayouter);
    return StackLayouter;
}(abstract_layout_1.AbstractLayout));
exports.StackLayouter = StackLayouter;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/bounds/vbox-layout.js":
/*!*****************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/bounds/vbox-layout.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.VBoxLayouter = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "./node_modules/sprotty-protocol/lib/utils/geometry.js");
var abstract_layout_1 = __webpack_require__(/*! ./abstract-layout */ "./node_modules/sprotty/lib/features/bounds/abstract-layout.js");
var model_1 = __webpack_require__(/*! ./model */ "./node_modules/sprotty/lib/features/bounds/model.js");
/**
 * Layouts children of a container in vertical (top->bottom) direction.
 */
var VBoxLayouter = /** @class */ (function (_super) {
    __extends(VBoxLayouter, _super);
    function VBoxLayouter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    VBoxLayouter.prototype.getChildrenSize = function (container, containerOptions, layouter) {
        var maxWidth = -1;
        var maxHeight = 0;
        var isFirst = true;
        container.children.forEach(function (child) {
            if ((0, model_1.isLayoutableChild)(child)) {
                var bounds = layouter.getBoundsData(child).bounds;
                if (bounds !== undefined && geometry_1.Dimension.isValid(bounds)) {
                    maxHeight += bounds.height;
                    if (isFirst)
                        isFirst = false;
                    else
                        maxHeight += containerOptions.vGap;
                    maxWidth = Math.max(maxWidth, bounds.width);
                }
            }
        });
        return {
            width: maxWidth,
            height: maxHeight
        };
    };
    VBoxLayouter.prototype.layoutChild = function (child, boundsData, bounds, childOptions, containerOptions, currentOffset, maxWidth, maxHeight) {
        var dx = this.getDx(childOptions.hAlign, bounds, maxWidth);
        boundsData.bounds = {
            x: containerOptions.paddingLeft + child.bounds.x - bounds.x + dx,
            y: currentOffset.y + child.bounds.y - bounds.y,
            width: bounds.width,
            height: bounds.height
        };
        boundsData.boundsChanged = true;
        return {
            x: currentOffset.x,
            y: currentOffset.y + bounds.height + containerOptions.vGap
        };
    };
    VBoxLayouter.prototype.getDefaultLayoutOptions = function () {
        return {
            resizeContainer: true,
            paddingTop: 5,
            paddingBottom: 5,
            paddingLeft: 5,
            paddingRight: 5,
            paddingFactor: 1,
            vGap: 1,
            hAlign: 'center',
            minWidth: 0,
            minHeight: 0
        };
    };
    VBoxLayouter.prototype.spread = function (a, b) {
        return __assign(__assign({}, a), b);
    };
    VBoxLayouter.KIND = 'vbox';
    VBoxLayouter = __decorate([
        (0, inversify_1.injectable)()
    ], VBoxLayouter);
    return VBoxLayouter;
}(abstract_layout_1.AbstractLayout));
exports.VBoxLayouter = VBoxLayouter;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/bounds/views.js":
/*!***********************************************************!*\
  !*** ./node_modules/sprotty/lib/features/bounds/views.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2020 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ShapeView = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "./node_modules/sprotty-protocol/lib/utils/geometry.js");
var model_1 = __webpack_require__(/*! ./model */ "./node_modules/sprotty/lib/features/bounds/model.js");
var ShapeView = /** @class */ (function () {
    function ShapeView() {
    }
    /**
     * Check whether the given model element is in the current viewport. Use this method
     * in your `render` implementation to skip rendering in case the element is not visible.
     * This can greatly enhance performance for large models.
     */
    ShapeView.prototype.isVisible = function (model, context) {
        if (context.targetKind === 'hidden') {
            // Don't hide any element for hidden rendering
            return true;
        }
        if (!geometry_1.Dimension.isValid(model.bounds)) {
            // We should hide only if we know the element's bounds
            return true;
        }
        var ab = (0, model_1.getAbsoluteBounds)(model);
        var canvasBounds = model.root.canvasBounds;
        return ab.x <= canvasBounds.width
            && ab.x + ab.width >= 0
            && ab.y <= canvasBounds.height
            && ab.y + ab.height >= 0;
    };
    ShapeView = __decorate([
        (0, inversify_1.injectable)()
    ], ShapeView);
    return ShapeView;
}());
exports.ShapeView = ShapeView;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/button/button-handler.js":
/*!********************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/button/button-handler.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.configureButtonHandler = exports.ButtonHandlerRegistry = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var registry_1 = __webpack_require__(/*! ../../utils/registry */ "./node_modules/sprotty/lib/utils/registry.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/sprotty/lib/base/types.js");
var inversify_2 = __webpack_require__(/*! ../../utils/inversify */ "./node_modules/sprotty/lib/utils/inversify.js");
var ButtonHandlerRegistry = /** @class */ (function (_super) {
    __extends(ButtonHandlerRegistry, _super);
    function ButtonHandlerRegistry(buttonHandlerRegistrations, 
    // deprecated, but keep support for now
    buttonHandlerFactories) {
        var _this = _super.call(this) || this;
        buttonHandlerRegistrations.forEach(function (factory) { return _this.register(factory.TYPE, factory.factory()); });
        // deprecated, but keep support for now
        buttonHandlerFactories.forEach(function (factory) { return _this.register(factory.TYPE, new factory()); });
        return _this;
    }
    ButtonHandlerRegistry = __decorate([
        (0, inversify_1.injectable)(),
        __param(0, (0, inversify_1.multiInject)(types_1.TYPES.IButtonHandlerRegistration)),
        __param(0, (0, inversify_1.optional)()),
        __param(1, (0, inversify_1.multiInject)(types_1.TYPES.IButtonHandler)),
        __param(1, (0, inversify_1.optional)()),
        __metadata("design:paramtypes", [Array, Array])
    ], ButtonHandlerRegistry);
    return ButtonHandlerRegistry;
}(registry_1.InstanceRegistry));
exports.ButtonHandlerRegistry = ButtonHandlerRegistry;
/**
 * Utility function to register a button handler for an button type.
 */
function configureButtonHandler(context, type, constr) {
    if (typeof constr === 'function') {
        if (!(0, inversify_2.isInjectable)(constr)) {
            throw new Error("Button handlers should be @injectable: ".concat(constr.name));
        }
        if (!context.isBound(constr)) {
            context.bind(constr).toSelf();
        }
    }
    context.bind(types_1.TYPES.IButtonHandlerRegistration).toDynamicValue(function (ctx) { return ({
        TYPE: type,
        factory: function () { return ctx.container.get(constr); }
    }); });
}
exports.configureButtonHandler = configureButtonHandler;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/button/di.config.js":
/*!***************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/button/di.config.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var button_handler_1 = __webpack_require__(/*! ./button-handler */ "./node_modules/sprotty/lib/features/button/button-handler.js");
var buttonModule = new inversify_1.ContainerModule(function (bind) {
    bind(button_handler_1.ButtonHandlerRegistry).toSelf().inSingletonScope();
});
exports["default"] = buttonModule;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/button/model.js":
/*!***********************************************************!*\
  !*** ./node_modules/sprotty/lib/features/button/model.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SButton = void 0;
var model_1 = __webpack_require__(/*! ../bounds/model */ "./node_modules/sprotty/lib/features/bounds/model.js");
var model_2 = __webpack_require__(/*! ../fade/model */ "./node_modules/sprotty/lib/features/fade/model.js");
var SButton = /** @class */ (function (_super) {
    __extends(SButton, _super);
    function SButton() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.enabled = true;
        return _this;
    }
    SButton.DEFAULT_FEATURES = [model_1.boundsFeature, model_1.layoutableChildFeature, model_2.fadeFeature];
    return SButton;
}(model_1.SShapeElement));
exports.SButton = SButton;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/command-palette/action-providers.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/command-palette/action-providers.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RevealNamedElementActionProvider = exports.CommandPaletteActionProviderRegistry = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "./node_modules/sprotty-protocol/lib/actions.js");
var action_1 = __webpack_require__(/*! ../../base/actions/action */ "./node_modules/sprotty/lib/base/actions/action.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/sprotty/lib/base/types.js");
var iterable_1 = __webpack_require__(/*! ../../utils/iterable */ "./node_modules/sprotty/lib/utils/iterable.js");
var model_1 = __webpack_require__(/*! ../nameable/model */ "./node_modules/sprotty/lib/features/nameable/model.js");
var CommandPaletteActionProviderRegistry = /** @class */ (function () {
    function CommandPaletteActionProviderRegistry(actionProviders) {
        if (actionProviders === void 0) { actionProviders = []; }
        this.actionProviders = actionProviders;
    }
    CommandPaletteActionProviderRegistry.prototype.getActions = function (root, text, lastMousePosition, index) {
        var actionLists = this.actionProviders.map(function (provider) { return provider.getActions(root, text, lastMousePosition, index); });
        return Promise.all(actionLists).then(function (p) { return p.reduce(function (acc, promise) { return promise !== undefined ? acc.concat(promise) : acc; }); });
    };
    CommandPaletteActionProviderRegistry = __decorate([
        (0, inversify_1.injectable)(),
        __param(0, (0, inversify_1.multiInject)(types_1.TYPES.ICommandPaletteActionProvider)),
        __param(0, (0, inversify_1.optional)()),
        __metadata("design:paramtypes", [Array])
    ], CommandPaletteActionProviderRegistry);
    return CommandPaletteActionProviderRegistry;
}());
exports.CommandPaletteActionProviderRegistry = CommandPaletteActionProviderRegistry;
var RevealNamedElementActionProvider = /** @class */ (function () {
    function RevealNamedElementActionProvider(logger) {
        this.logger = logger;
    }
    RevealNamedElementActionProvider.prototype.getActions = function (root, text, lastMousePosition, index) {
        if (index !== undefined && index % 2 === 0)
            return Promise.resolve(this.createSelectActions(root));
        else
            return Promise.resolve([new action_1.LabeledAction("Select all", [actions_1.SelectAllAction.create()])]);
    };
    RevealNamedElementActionProvider.prototype.createSelectActions = function (modelRoot) {
        var nameables = (0, iterable_1.toArray)(modelRoot.index.all().filter(function (element) { return (0, model_1.isNameable)(element); }));
        return nameables.map(function (nameable) { return new action_1.LabeledAction("Reveal ".concat((0, model_1.name)(nameable)), [actions_1.SelectAction.create({ selectedElementsIDs: [nameable.id] }), actions_1.CenterAction.create([nameable.id])], 'eye'); });
    };
    RevealNamedElementActionProvider = __decorate([
        (0, inversify_1.injectable)(),
        __param(0, (0, inversify_1.inject)(types_1.TYPES.ILogger)),
        __metadata("design:paramtypes", [Object])
    ], RevealNamedElementActionProvider);
    return RevealNamedElementActionProvider;
}());
exports.RevealNamedElementActionProvider = RevealNamedElementActionProvider;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/command-palette/command-palette.js":
/*!******************************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/command-palette/command-palette.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CommandPaletteKeyListener = exports.CommandPalette = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "./node_modules/sprotty-protocol/lib/actions.js");
var action_1 = __webpack_require__(/*! ../../base/actions/action */ "./node_modules/sprotty/lib/base/actions/action.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/sprotty/lib/base/types.js");
var ui_extension_1 = __webpack_require__(/*! ../../base/ui-extensions/ui-extension */ "./node_modules/sprotty/lib/base/ui-extensions/ui-extension.js");
var ui_extension_registry_1 = __webpack_require__(/*! ../../base/ui-extensions/ui-extension-registry */ "./node_modules/sprotty/lib/base/ui-extensions/ui-extension-registry.js");
var dom_helper_1 = __webpack_require__(/*! ../../base/views/dom-helper */ "./node_modules/sprotty/lib/base/views/dom-helper.js");
var key_tool_1 = __webpack_require__(/*! ../../base/views/key-tool */ "./node_modules/sprotty/lib/base/views/key-tool.js");
var codicon_1 = __webpack_require__(/*! ../../utils/codicon */ "./node_modules/sprotty/lib/utils/codicon.js");
var iterable_1 = __webpack_require__(/*! ../../utils/iterable */ "./node_modules/sprotty/lib/utils/iterable.js");
var keyboard_1 = __webpack_require__(/*! ../../utils/keyboard */ "./node_modules/sprotty/lib/utils/keyboard.js");
var model_1 = __webpack_require__(/*! ../bounds/model */ "./node_modules/sprotty/lib/features/bounds/model.js");
var model_2 = __webpack_require__(/*! ../select/model */ "./node_modules/sprotty/lib/features/select/model.js");
var action_providers_1 = __webpack_require__(/*! ./action-providers */ "./node_modules/sprotty/lib/features/command-palette/action-providers.js");
var mouse_tool_1 = __webpack_require__(/*! ../../base/views/mouse-tool */ "./node_modules/sprotty/lib/base/views/mouse-tool.js");
var autocompleter_1 = __importDefault(__webpack_require__(/*! autocompleter */ "./node_modules/sprotty/node_modules/autocompleter/autocomplete.js"));
var CommandPalette = /** @class */ (function (_super) {
    __extends(CommandPalette, _super);
    function CommandPalette() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.loadingIndicatorClasses = (0, codicon_1.codiconCSSClasses)('loading', false, true, ['loading']);
        _this.xOffset = 20;
        _this.yOffset = 20;
        _this.defaultWidth = 400;
        _this.debounceWaitMs = 100;
        _this.noCommandsMsg = "No commands available";
        _this.paletteIndex = 0;
        return _this;
    }
    CommandPalette_1 = CommandPalette;
    CommandPalette.prototype.id = function () { return CommandPalette_1.ID; };
    CommandPalette.prototype.containerClass = function () { return "command-palette"; };
    CommandPalette.prototype.show = function (root) {
        var contextElementIds = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            contextElementIds[_i - 1] = arguments[_i];
        }
        _super.prototype.show.apply(this, __spreadArray([root], contextElementIds, false));
        this.paletteIndex = 0;
        this.contextActions = undefined;
        this.inputElement.value = "";
        this.autoCompleteResult = (0, autocompleter_1.default)(this.autocompleteSettings(root));
        this.inputElement.focus();
    };
    CommandPalette.prototype.initializeContents = function (containerElement) {
        var _this = this;
        containerElement.style.position = "absolute";
        this.inputElement = document.createElement('input');
        this.inputElement.style.width = '100%';
        this.inputElement.addEventListener('keydown', function (event) { return _this.hideIfEscapeEvent(event); });
        this.inputElement.addEventListener('keydown', function (event) { return _this.cylceIfInvokePaletteKey(event); });
        this.inputElement.onblur = function () { return window.setTimeout(function () { return _this.hide(); }, 200); };
        containerElement.appendChild(this.inputElement);
    };
    CommandPalette.prototype.hideIfEscapeEvent = function (event) {
        if ((0, keyboard_1.matchesKeystroke)(event, 'Escape')) {
            this.hide();
        }
    };
    CommandPalette.prototype.cylceIfInvokePaletteKey = function (event) {
        if (CommandPalette_1.isInvokePaletteKey(event)) {
            this.cycle();
        }
    };
    CommandPalette.prototype.cycle = function () {
        this.contextActions = undefined;
        this.paletteIndex++;
    };
    CommandPalette.prototype.onBeforeShow = function (containerElement, root) {
        var selectedElementIds = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            selectedElementIds[_i - 2] = arguments[_i];
        }
        var x = this.xOffset;
        var y = this.yOffset;
        var selectedElements = (0, iterable_1.toArray)(root.index.all().filter(function (e) { return (0, model_2.isSelectable)(e) && e.selected; }));
        if (selectedElements.length === 1) {
            var bounds = (0, model_1.getAbsoluteClientBounds)(selectedElements[0], this.domHelper, this.viewerOptions);
            x += bounds.x + bounds.width;
            y += bounds.y;
        }
        else {
            var bounds = (0, model_1.getAbsoluteClientBounds)(root, this.domHelper, this.viewerOptions);
            x += bounds.x;
            y += bounds.y;
        }
        containerElement.style.left = "".concat(x, "px");
        containerElement.style.top = "".concat(y, "px");
        containerElement.style.width = "".concat(this.defaultWidth, "px");
    };
    CommandPalette.prototype.autocompleteSettings = function (root) {
        var _this = this;
        return {
            input: this.inputElement,
            emptyMsg: this.noCommandsMsg,
            className: "command-palette-suggestions",
            debounceWaitMs: this.debounceWaitMs,
            showOnFocus: true,
            minLength: -1,
            fetch: function (text, update) {
                return _this.updateAutoCompleteActions(update, text, root);
            },
            onSelect: function (item) { return _this.onSelect(item); },
            render: function (item, currentValue) {
                return _this.renderLabeledActionSuggestion(item, currentValue);
            },
            customize: function (input, inputRect, container, maxHeight) {
                _this.customizeSuggestionContainer(container, inputRect, maxHeight);
            }
        };
    };
    CommandPalette.prototype.onSelect = function (item) {
        this.executeAction(item);
        this.hide();
    };
    CommandPalette.prototype.updateAutoCompleteActions = function (update, text, root) {
        var _this = this;
        this.onLoading();
        if (this.contextActions) {
            update(this.filterActions(text, this.contextActions));
            this.onLoaded('success');
        }
        else {
            this.actionProviderRegistry
                .getActions(root, text, this.mousePositionTracker.lastPositionOnDiagram, this.paletteIndex)
                .then(function (actions) {
                _this.contextActions = actions;
                update(_this.filterActions(text, actions));
                _this.onLoaded('success');
            })
                .catch(function (reason) {
                _this.logger.error(_this, "Failed to obtain actions from command palette action providers", reason);
                _this.onLoaded('error');
            });
        }
    };
    CommandPalette.prototype.onLoading = function () {
        var _a;
        if (this.loadingIndicator && this.containerElement.contains(this.loadingIndicator)) {
            return;
        }
        this.loadingIndicator = document.createElement('span');
        (_a = this.loadingIndicator.classList).add.apply(_a, this.loadingIndicatorClasses);
        this.containerElement.appendChild(this.loadingIndicator);
    };
    CommandPalette.prototype.onLoaded = function (success) {
        if (this.containerElement.contains(this.loadingIndicator)) {
            this.containerElement.removeChild(this.loadingIndicator);
        }
    };
    CommandPalette.prototype.renderLabeledActionSuggestion = function (item, value) {
        var itemElement = document.createElement("div");
        var wordMatcher = espaceForRegExp(value).split(" ").join("|");
        var regex = new RegExp(wordMatcher, "gi");
        if (item.icon) {
            this.renderIcon(itemElement, item.icon);
        }
        if (value.length > 0) {
            itemElement.innerHTML += item.label.replace(regex, function (match) { return "<em>" + match + "</em>"; }).replace(/ /g, '&nbsp;');
        }
        else {
            itemElement.innerHTML += item.label.replace(/ /g, '&nbsp;');
        }
        return itemElement;
    };
    CommandPalette.prototype.renderIcon = function (itemElement, iconId) {
        itemElement.innerHTML += "<span class=\"icon ".concat(this.getCodicon(iconId), "\"></span>");
    };
    CommandPalette.prototype.getFontAwesomeIcon = function (iconId) {
        return "fa fa-".concat(iconId);
    };
    CommandPalette.prototype.getCodicon = function (iconId) {
        return (0, codicon_1.codiconCSSString)(iconId);
    };
    CommandPalette.prototype.filterActions = function (filterText, actions) {
        return (0, iterable_1.toArray)(actions.filter(function (action) {
            var label = action.label.toLowerCase();
            var searchWords = filterText.split(' ');
            return searchWords.every(function (word) { return label.indexOf(word.toLowerCase()) !== -1; });
        }));
    };
    CommandPalette.prototype.customizeSuggestionContainer = function (container, inputRect, maxHeight) {
        // move container into our command palette container as this is already positioned correctly
        if (this.containerElement) {
            this.containerElement.appendChild(container);
        }
    };
    CommandPalette.prototype.hide = function () {
        _super.prototype.hide.call(this);
        if (this.autoCompleteResult) {
            this.autoCompleteResult.destroy();
        }
    };
    CommandPalette.prototype.executeAction = function (input) {
        var _this = this;
        this.actionDispatcherProvider()
            .then(function (actionDispatcher) { return actionDispatcher.dispatchAll(toActionArray(input)); })
            .catch(function (reason) { return _this.logger.error(_this, 'No action dispatcher available to execute command palette action', reason); });
    };
    var CommandPalette_1;
    CommandPalette.ID = "command-palette";
    CommandPalette.isInvokePaletteKey = function (event) { return (0, keyboard_1.matchesKeystroke)(event, 'Space', 'ctrl'); };
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.IActionDispatcherProvider),
        __metadata("design:type", Function)
    ], CommandPalette.prototype, "actionDispatcherProvider", void 0);
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.ICommandPaletteActionProviderRegistry),
        __metadata("design:type", action_providers_1.CommandPaletteActionProviderRegistry)
    ], CommandPalette.prototype, "actionProviderRegistry", void 0);
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.ViewerOptions),
        __metadata("design:type", Object)
    ], CommandPalette.prototype, "viewerOptions", void 0);
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.DOMHelper),
        __metadata("design:type", dom_helper_1.DOMHelper)
    ], CommandPalette.prototype, "domHelper", void 0);
    __decorate([
        (0, inversify_1.inject)(mouse_tool_1.MousePositionTracker),
        __metadata("design:type", mouse_tool_1.MousePositionTracker)
    ], CommandPalette.prototype, "mousePositionTracker", void 0);
    CommandPalette = CommandPalette_1 = __decorate([
        (0, inversify_1.injectable)()
    ], CommandPalette);
    return CommandPalette;
}(ui_extension_1.AbstractUIExtension));
exports.CommandPalette = CommandPalette;
function toActionArray(input) {
    if ((0, action_1.isLabeledAction)(input)) {
        return input.actions;
    }
    else if ((0, actions_1.isAction)(input)) {
        return [input];
    }
    return [];
}
function espaceForRegExp(value) {
    return value.replace(/([.?*+^$[\]\\(){}|-])/g, '\\$1');
}
var CommandPaletteKeyListener = /** @class */ (function (_super) {
    __extends(CommandPaletteKeyListener, _super);
    function CommandPaletteKeyListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CommandPaletteKeyListener.prototype.keyDown = function (element, event) {
        if ((0, keyboard_1.matchesKeystroke)(event, 'Escape')) {
            return [ui_extension_registry_1.SetUIExtensionVisibilityAction.create({ extensionId: CommandPalette.ID, visible: false, contextElementsId: [] })];
        }
        else if (CommandPalette.isInvokePaletteKey(event)) {
            var selectedElements = (0, iterable_1.toArray)(element.index.all().filter(function (e) { return (0, model_2.isSelectable)(e) && e.selected; }).map(function (e) { return e.id; }));
            return [ui_extension_registry_1.SetUIExtensionVisibilityAction.create({ extensionId: CommandPalette.ID, visible: true, contextElementsId: selectedElements })];
        }
        return [];
    };
    return CommandPaletteKeyListener;
}(key_tool_1.KeyListener));
exports.CommandPaletteKeyListener = CommandPaletteKeyListener;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/command-palette/di.config.js":
/*!************************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/command-palette/di.config.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/sprotty/lib/base/types.js");
var action_providers_1 = __webpack_require__(/*! ./action-providers */ "./node_modules/sprotty/lib/features/command-palette/action-providers.js");
var command_palette_1 = __webpack_require__(/*! ./command-palette */ "./node_modules/sprotty/lib/features/command-palette/command-palette.js");
var commandPaletteModule = new inversify_1.ContainerModule(function (bind) {
    bind(command_palette_1.CommandPalette).toSelf().inSingletonScope();
    bind(types_1.TYPES.IUIExtension).toService(command_palette_1.CommandPalette);
    bind(command_palette_1.CommandPaletteKeyListener).toSelf().inSingletonScope();
    bind(types_1.TYPES.KeyListener).toService(command_palette_1.CommandPaletteKeyListener);
    bind(action_providers_1.CommandPaletteActionProviderRegistry).toSelf().inSingletonScope();
    bind(types_1.TYPES.ICommandPaletteActionProviderRegistry).toService(action_providers_1.CommandPaletteActionProviderRegistry);
});
exports["default"] = commandPaletteModule;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/context-menu/context-menu-service.js":
/*!********************************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/context-menu/context-menu-service.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toAnchor = void 0;
function toAnchor(anchor) {
    return anchor instanceof HTMLElement ? { x: anchor.offsetLeft, y: anchor.offsetTop } : anchor;
}
exports.toAnchor = toAnchor;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/context-menu/di.config.js":
/*!*********************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/context-menu/di.config.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var menu_providers_1 = __webpack_require__(/*! ./menu-providers */ "./node_modules/sprotty/lib/features/context-menu/menu-providers.js");
var mouse_listener_1 = __webpack_require__(/*! ./mouse-listener */ "./node_modules/sprotty/lib/features/context-menu/mouse-listener.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/sprotty/lib/base/types.js");
var contextMenuModule = new inversify_1.ContainerModule(function (bind) {
    bind(types_1.TYPES.IContextMenuServiceProvider).toProvider(function (ctx) {
        return function () {
            return new Promise(function (resolve, reject) {
                if (ctx.container.isBound(types_1.TYPES.IContextMenuService)) {
                    resolve(ctx.container.get(types_1.TYPES.IContextMenuService));
                }
                else {
                    reject();
                }
            });
        };
    });
    bind(mouse_listener_1.ContextMenuMouseListener).toSelf().inSingletonScope();
    bind(types_1.TYPES.MouseListener).toService(mouse_listener_1.ContextMenuMouseListener);
    bind(types_1.TYPES.IContextMenuProviderRegistry).to(menu_providers_1.ContextMenuProviderRegistry);
});
exports["default"] = contextMenuModule;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/context-menu/menu-providers.js":
/*!**************************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/context-menu/menu-providers.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DeleteContextMenuItemProvider = exports.ContextMenuProviderRegistry = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/sprotty/lib/base/types.js");
var delete_1 = __webpack_require__(/*! ../edit/delete */ "./node_modules/sprotty/lib/features/edit/delete.js");
var model_1 = __webpack_require__(/*! ../select/model */ "./node_modules/sprotty/lib/features/select/model.js");
var sprotty_protocol_1 = __webpack_require__(/*! sprotty-protocol */ "./node_modules/sprotty-protocol/lib/index.js");
var ContextMenuProviderRegistry = /** @class */ (function () {
    function ContextMenuProviderRegistry(menuProviders) {
        if (menuProviders === void 0) { menuProviders = []; }
        this.menuProviders = menuProviders;
    }
    ContextMenuProviderRegistry.prototype.getItems = function (root, lastMousePosition) {
        var menues = this.menuProviders.map(function (provider) { return provider.getItems(root, lastMousePosition); });
        return Promise.all(menues).then(this.flattenAndRestructure);
    };
    ContextMenuProviderRegistry.prototype.flattenAndRestructure = function (p) {
        var menuItems = p.reduce(function (acc, promise) { return promise !== undefined ? acc.concat(promise) : acc; }, []);
        var menuItemsWithParentId = menuItems.filter(function (menuItem) { return menuItem.parentId; });
        var _loop_1 = function (menuItem) {
            if (menuItem.parentId) {
                var fragments = menuItem.parentId.split('.');
                var matchingParent = undefined;
                var nextParents = menuItems;
                var _loop_2 = function (fragment) {
                    matchingParent = nextParents.find(function (item) { return fragment === item.id; });
                    if (matchingParent && matchingParent.children)
                        nextParents = matchingParent.children;
                };
                for (var _a = 0, fragments_1 = fragments; _a < fragments_1.length; _a++) {
                    var fragment = fragments_1[_a];
                    _loop_2(fragment);
                }
                if (matchingParent) {
                    if (matchingParent.children) {
                        matchingParent.children.push(menuItem);
                    }
                    else {
                        matchingParent.children = [menuItem];
                    }
                    menuItems = menuItems.filter(function (item) { return item !== menuItem; });
                }
            }
        };
        for (var _i = 0, menuItemsWithParentId_1 = menuItemsWithParentId; _i < menuItemsWithParentId_1.length; _i++) {
            var menuItem = menuItemsWithParentId_1[_i];
            _loop_1(menuItem);
        }
        return menuItems;
    };
    ContextMenuProviderRegistry = __decorate([
        (0, inversify_1.injectable)(),
        __param(0, (0, inversify_1.multiInject)(types_1.TYPES.IContextMenuItemProvider)),
        __param(0, (0, inversify_1.optional)()),
        __metadata("design:paramtypes", [Array])
    ], ContextMenuProviderRegistry);
    return ContextMenuProviderRegistry;
}());
exports.ContextMenuProviderRegistry = ContextMenuProviderRegistry;
var DeleteContextMenuItemProvider = /** @class */ (function () {
    function DeleteContextMenuItemProvider() {
    }
    DeleteContextMenuItemProvider.prototype.getItems = function (root, lastMousePosition) {
        var selectedElements = Array.from(root.index.all().filter(model_1.isSelected).filter(delete_1.isDeletable));
        return Promise.resolve([
            {
                id: 'delete',
                label: 'Delete',
                sortString: 'd',
                group: 'edit',
                actions: [sprotty_protocol_1.DeleteElementAction.create(selectedElements.map(function (e) { return e.id; }))],
                isEnabled: function () { return selectedElements.length > 0; }
            }
        ]);
    };
    DeleteContextMenuItemProvider = __decorate([
        (0, inversify_1.injectable)()
    ], DeleteContextMenuItemProvider);
    return DeleteContextMenuItemProvider;
}());
exports.DeleteContextMenuItemProvider = DeleteContextMenuItemProvider;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/context-menu/mouse-listener.js":
/*!**************************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/context-menu/mouse-listener.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ContextMenuMouseListener = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "./node_modules/sprotty-protocol/lib/actions.js");
var menu_providers_1 = __webpack_require__(/*! ./menu-providers */ "./node_modules/sprotty/lib/features/context-menu/menu-providers.js");
var mouse_tool_1 = __webpack_require__(/*! ../../base/views/mouse-tool */ "./node_modules/sprotty/lib/base/views/mouse-tool.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/sprotty/lib/base/types.js");
var model_1 = __webpack_require__(/*! ../select/model */ "./node_modules/sprotty/lib/features/select/model.js");
var smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "./node_modules/sprotty/lib/base/model/smodel-utils.js");
var ContextMenuMouseListener = /** @class */ (function (_super) {
    __extends(ContextMenuMouseListener, _super);
    function ContextMenuMouseListener(contextMenuService, menuProvider) {
        var _this = _super.call(this) || this;
        _this.contextMenuService = contextMenuService;
        _this.menuProvider = menuProvider;
        return _this;
    }
    ContextMenuMouseListener.prototype.contextMenu = function (target, event) {
        this.showContextMenu(target, event);
        return [];
    };
    ContextMenuMouseListener.prototype.showContextMenu = function (target, event) {
        return __awaiter(this, void 0, void 0, function () {
            var menuService, rejected_1, mousePosition, root, id, isTargetSelected, selectableTarget, restoreSelection, menuItems, options, items;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4 /*yield*/, this.contextMenuService()];
                    case 1:
                        menuService = _a.sent();
                        return [3 /*break*/, 3];
                    case 2:
                        rejected_1 = _a.sent();
                        // IContextMenuService is not bound => do nothing
                        return [2 /*return*/];
                    case 3:
                        mousePosition = { x: event.x, y: event.y };
                        root = target.root;
                        id = target.id;
                        isTargetSelected = false;
                        selectableTarget = (0, smodel_utils_1.findParentByFeature)(target, model_1.isSelectable);
                        if (selectableTarget) {
                            isTargetSelected = selectableTarget.selected;
                            selectableTarget.selected = true;
                        }
                        restoreSelection = function () { if (selectableTarget)
                            selectableTarget.selected = isTargetSelected; };
                        if (!(0, model_1.isSelectable)(target)) return [3 /*break*/, 8];
                        if (!(0, model_1.isSelected)(target)) return [3 /*break*/, 5];
                        return [4 /*yield*/, this.menuProvider.getItems(target.root, mousePosition)];
                    case 4:
                        menuItems = _a.sent();
                        menuService.show(menuItems, mousePosition, restoreSelection);
                        return [3 /*break*/, 8];
                    case 5:
                        options = { selectedElementsIDs: [id], deselectedElementsIDs: Array.from(root.index.all().filter(model_1.isSelected), function (val) { return val.id; }) };
                        return [4 /*yield*/, this.actionDispatcher.dispatch(actions_1.SelectAction.create(options))];
                    case 6:
                        _a.sent();
                        return [4 /*yield*/, this.menuProvider.getItems(root, mousePosition)];
                    case 7:
                        items = _a.sent();
                        menuService.show(items, mousePosition);
                        _a.label = 8;
                    case 8: return [2 /*return*/];
                }
            });
        });
    };
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.IActionDispatcher),
        __metadata("design:type", Object)
    ], ContextMenuMouseListener.prototype, "actionDispatcher", void 0);
    ContextMenuMouseListener = __decorate([
        __param(0, (0, inversify_1.inject)(types_1.TYPES.IContextMenuServiceProvider)),
        __param(1, (0, inversify_1.inject)(types_1.TYPES.IContextMenuProviderRegistry)),
        __metadata("design:paramtypes", [Function, menu_providers_1.ContextMenuProviderRegistry])
    ], ContextMenuMouseListener);
    return ContextMenuMouseListener;
}(mouse_tool_1.MouseListener));
exports.ContextMenuMouseListener = ContextMenuMouseListener;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/decoration/decoration-placer.js":
/*!***************************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/decoration/decoration-placer.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DecorationPlacer = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "./node_modules/sprotty/lib/base/model/smodel.js");
var model_1 = __webpack_require__(/*! ./model */ "./node_modules/sprotty/lib/features/decoration/model.js");
var vnode_utils_1 = __webpack_require__(/*! ../../base/views/vnode-utils */ "./node_modules/sprotty/lib/base/views/vnode-utils.js");
var model_2 = __webpack_require__(/*! ../bounds/model */ "./node_modules/sprotty/lib/features/bounds/model.js");
var model_3 = __webpack_require__(/*! ../routing/model */ "./node_modules/sprotty/lib/features/routing/model.js");
var routing_1 = __webpack_require__(/*! ../routing/routing */ "./node_modules/sprotty/lib/features/routing/routing.js");
var sprotty_protocol_1 = __webpack_require__(/*! sprotty-protocol */ "./node_modules/sprotty-protocol/lib/index.js");
var DecorationPlacer = /** @class */ (function () {
    function DecorationPlacer() {
    }
    DecorationPlacer.prototype.decorate = function (vnode, element) {
        if ((0, model_1.isDecoration)(element)) {
            var position = this.getPosition(element);
            var translate = 'translate(' + position.x + ', ' + position.y + ')';
            (0, vnode_utils_1.setAttr)(vnode, 'transform', translate);
        }
        return vnode;
    };
    DecorationPlacer.prototype.getPosition = function (element) {
        if (element instanceof smodel_1.SChildElement && element.parent instanceof model_3.SRoutableElement) {
            var route = this.edgeRouterRegistry.route(element.parent);
            if (route.length > 1) {
                var index = Math.floor(0.5 * (route.length - 1));
                var offset = (0, model_2.isSizeable)(element)
                    ? {
                        x: -0.5 * element.bounds.width,
                        y: -0.5 * element.bounds.width
                    }
                    : sprotty_protocol_1.Point.ORIGIN;
                return {
                    x: 0.5 * (route[index].x + route[index + 1].x) + offset.x,
                    y: 0.5 * (route[index].y + route[index + 1].y) + offset.y
                };
            }
        }
        if ((0, model_2.isSizeable)(element))
            return {
                x: -0.666 * element.bounds.width,
                y: -0.666 * element.bounds.height
            };
        return sprotty_protocol_1.Point.ORIGIN;
    };
    DecorationPlacer.prototype.postUpdate = function () {
    };
    __decorate([
        (0, inversify_1.inject)(routing_1.EdgeRouterRegistry),
        __metadata("design:type", routing_1.EdgeRouterRegistry)
    ], DecorationPlacer.prototype, "edgeRouterRegistry", void 0);
    DecorationPlacer = __decorate([
        (0, inversify_1.injectable)()
    ], DecorationPlacer);
    return DecorationPlacer;
}());
exports.DecorationPlacer = DecorationPlacer;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/decoration/di.config.js":
/*!*******************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/decoration/di.config.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
var view_1 = __webpack_require__(/*! ../../base/views/view */ "./node_modules/sprotty/lib/base/views/view.js");
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var model_1 = __webpack_require__(/*! ./model */ "./node_modules/sprotty/lib/features/decoration/model.js");
var views_1 = __webpack_require__(/*! ./views */ "./node_modules/sprotty/lib/features/decoration/views.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/sprotty/lib/base/types.js");
var decoration_placer_1 = __webpack_require__(/*! ./decoration-placer */ "./node_modules/sprotty/lib/features/decoration/decoration-placer.js");
var decorationModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    (0, view_1.configureModelElement)({ bind: bind, isBound: isBound }, 'marker', model_1.SIssueMarker, views_1.IssueMarkerView);
    bind(decoration_placer_1.DecorationPlacer).toSelf().inSingletonScope();
    bind(types_1.TYPES.IVNodePostprocessor).toService(decoration_placer_1.DecorationPlacer);
});
exports["default"] = decorationModule;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/decoration/model.js":
/*!***************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/decoration/model.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SIssue = exports.SIssueMarker = exports.SDecoration = exports.isDecoration = exports.decorationFeature = void 0;
var model_1 = __webpack_require__(/*! ../hover/model */ "./node_modules/sprotty/lib/features/hover/model.js");
var model_2 = __webpack_require__(/*! ../bounds/model */ "./node_modules/sprotty/lib/features/bounds/model.js");
exports.decorationFeature = Symbol('decorationFeature');
function isDecoration(e) {
    return e.hasFeature(exports.decorationFeature);
}
exports.isDecoration = isDecoration;
var SDecoration = /** @class */ (function (_super) {
    __extends(SDecoration, _super);
    function SDecoration() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SDecoration.DEFAULT_FEATURES = [exports.decorationFeature, model_2.boundsFeature, model_1.hoverFeedbackFeature, model_1.popupFeature];
    return SDecoration;
}(model_2.SShapeElement));
exports.SDecoration = SDecoration;
var SIssueMarker = /** @class */ (function (_super) {
    __extends(SIssueMarker, _super);
    function SIssueMarker() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return SIssueMarker;
}(SDecoration));
exports.SIssueMarker = SIssueMarker;
var SIssue = /** @class */ (function () {
    function SIssue() {
    }
    return SIssue;
}());
exports.SIssue = SIssue;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/decoration/views.js":
/*!***************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/decoration/views.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.IssueMarkerView = void 0;
/** @jsx svg */
var jsx_1 = __webpack_require__(/*! ../../lib/jsx */ "./node_modules/sprotty/lib/lib/jsx.js");
var vnode_utils_1 = __webpack_require__(/*! ../../base/views/vnode-utils */ "./node_modules/sprotty/lib/base/views/vnode-utils.js");
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var IssueMarkerView = /** @class */ (function () {
    function IssueMarkerView() {
    }
    IssueMarkerView.prototype.render = function (marker, context) {
        var scale = 16 / 1792;
        var trafo = "scale(".concat(scale, ", ").concat(scale, ")");
        var maxSeverity = this.getMaxSeverity(marker);
        var group = (0, jsx_1.svg)("g", { "class-sprotty-issue": true },
            (0, jsx_1.svg)("g", { transform: trafo },
                (0, jsx_1.svg)("path", { d: this.getPath(maxSeverity) })));
        (0, vnode_utils_1.setClass)(group, 'sprotty-' + maxSeverity, true);
        return group;
    };
    IssueMarkerView.prototype.getMaxSeverity = function (marker) {
        var currentSeverity = 'info';
        for (var _i = 0, _a = marker.issues.map(function (s) { return s.severity; }); _i < _a.length; _i++) {
            var severity = _a[_i];
            if (severity === 'error' || (severity === 'warning' && currentSeverity === 'info'))
                currentSeverity = severity;
        }
        return currentSeverity;
    };
    IssueMarkerView.prototype.getPath = function (severity) {
        switch (severity) {
            case 'error':
            case 'warning':
                // eslint-disable-next-line max-len
                return "M768 128q209 0 385.5 103t279.5 279.5 103 385.5-103 385.5-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103zm128 1247v-190q0-14-9-23.5t-22-9.5h-192q-13 0-23 10t-10 23v190q0 13 10 23t23 10h192q13 0 22-9.5t9-23.5zm-2-344l18-621q0-12-10-18-10-8-24-8h-220q-14 0-24 8-10 6-10 18l17 621q0 10 10 17.5t24 7.5h185q14 0 23.5-7.5t10.5-17.5z";
            case 'info':
                // eslint-disable-next-line max-len
                return "M1024 1376v-160q0-14-9-23t-23-9h-96v-512q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v160q0 14 9 23t23 9h96v320h-96q-14 0-23 9t-9 23v160q0 14 9 23t23 9h448q14 0 23-9t9-23zm-128-896v-160q0-14-9-23t-23-9h-192q-14 0-23 9t-9 23v160q0 14 9 23t23 9h192q14 0 23-9t9-23zm640 416q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z";
        }
    };
    IssueMarkerView = __decorate([
        (0, inversify_1.injectable)()
    ], IssueMarkerView);
    return IssueMarkerView;
}());
exports.IssueMarkerView = IssueMarkerView;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/edge-intersection/di.config.js":
/*!**************************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/edge-intersection/di.config.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2021 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/sprotty/lib/base/types.js");
var intersection_finder_1 = __webpack_require__(/*! ../edge-intersection/intersection-finder */ "./node_modules/sprotty/lib/features/edge-intersection/intersection-finder.js");
var edgeIntersectionModule = new inversify_1.ContainerModule(function (bind) {
    bind(intersection_finder_1.IntersectionFinder).toSelf().inSingletonScope();
    bind(types_1.TYPES.IEdgeRoutePostprocessor).toService(intersection_finder_1.IntersectionFinder);
});
exports["default"] = edgeIntersectionModule;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/edge-intersection/intersection-finder.js":
/*!************************************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/edge-intersection/intersection-finder.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2021-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.IntersectionFinder = exports.BY_DESCENDING_X_THEN_DESCENDING_Y = exports.BY_X_THEN_DESCENDING_Y = exports.BY_DESCENDING_X_THEN_Y = exports.BY_X_THEN_Y = exports.isIntersectingRoutedPoint = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var tinyqueue_1 = __importDefault(__webpack_require__(/*! tinyqueue */ "./node_modules/tinyqueue/index.js"));
var sweepline_1 = __webpack_require__(/*! ./sweepline */ "./node_modules/sprotty/lib/features/edge-intersection/sweepline.js");
function isIntersectingRoutedPoint(routedPoint) {
    return routedPoint !== undefined && 'intersections' in routedPoint && 'kind' in routedPoint;
}
exports.isIntersectingRoutedPoint = isIntersectingRoutedPoint;
var BY_X_THEN_Y = function (a, b) {
    if (a.intersectionPoint.x === b.intersectionPoint.x) {
        return a.intersectionPoint.y - b.intersectionPoint.y;
    }
    return a.intersectionPoint.x - b.intersectionPoint.x;
};
exports.BY_X_THEN_Y = BY_X_THEN_Y;
var BY_DESCENDING_X_THEN_Y = function (a, b) {
    if (a.intersectionPoint.x === b.intersectionPoint.x) {
        return a.intersectionPoint.y - b.intersectionPoint.y;
    }
    return b.intersectionPoint.x - a.intersectionPoint.x;
};
exports.BY_DESCENDING_X_THEN_Y = BY_DESCENDING_X_THEN_Y;
var BY_X_THEN_DESCENDING_Y = function (a, b) {
    if (a.intersectionPoint.x === b.intersectionPoint.x) {
        return b.intersectionPoint.y - a.intersectionPoint.y;
    }
    return a.intersectionPoint.x - b.intersectionPoint.x;
};
exports.BY_X_THEN_DESCENDING_Y = BY_X_THEN_DESCENDING_Y;
var BY_DESCENDING_X_THEN_DESCENDING_Y = function (a, b) {
    if (a.intersectionPoint.x === b.intersectionPoint.x) {
        return b.intersectionPoint.y - a.intersectionPoint.y;
    }
    return b.intersectionPoint.x - a.intersectionPoint.x;
};
exports.BY_DESCENDING_X_THEN_DESCENDING_Y = BY_DESCENDING_X_THEN_DESCENDING_Y;
/**
 * Finds intersections among edges and updates routed points to reflect those intersections.
 *
 * This only yields correct intersections among straight line segments and doesn't work with bezier curves.
 */
var IntersectionFinder = /** @class */ (function () {
    function IntersectionFinder() {
    }
    /**
     * Finds all intersections in the specified `routing` and replaces the `RoutedPoints` that are
     * intersecting by adding intersection information to routing points (@see `IntersectingRoutedPoints`).
     * @param routing the edge routing to find intersections for and update.
     */
    IntersectionFinder.prototype.apply = function (routing) {
        var intersections = this.find(routing);
        this.addToRouting(intersections, routing);
    };
    /**
     * Finds the intersections in the specified `routing` and returns them.
     * @param routing the edge routing to find intersections for and update.
     * @returns the identified intersections.
     */
    IntersectionFinder.prototype.find = function (routing) {
        var _this = this;
        var eventQueue = new tinyqueue_1.default(undefined, sweepline_1.checkWhichEventIsLeft);
        routing.routes.forEach(function (route, routeId) {
            if (_this.isSupportedRoute(route)) {
                (0, sweepline_1.addRoute)(routeId, route, eventQueue);
            }
        });
        return (0, sweepline_1.runSweep)(eventQueue);
    };
    /**
     * Specifies whether or not a specific route should be included in this intersection search or not.
     *
     * As this intersection finder only supports linear line segments, this method only returns `true`
     * for routes that only contain routed points, which are either 'source', 'target' or 'linear'.
     */
    IntersectionFinder.prototype.isSupportedRoute = function (route) {
        return route.find(function (point) { return point.kind !== 'source' && point.kind !== 'target' && point.kind !== 'linear'; }) === undefined;
    };
    IntersectionFinder.prototype.addToRouting = function (intersections, routing) {
        for (var _i = 0, intersections_1 = intersections; _i < intersections_1.length; _i++) {
            var intersection = intersections_1[_i];
            var routable1 = routing.get(intersection.routable1);
            var routable2 = routing.get(intersection.routable2);
            this.addIntersectionToRoutedPoint(intersection, routable1, intersection.segmentIndex1);
            this.addIntersectionToRoutedPoint(intersection, routable2, intersection.segmentIndex2);
        }
    };
    IntersectionFinder.prototype.addIntersectionToRoutedPoint = function (intersection, routedPoint, segmentIndex) {
        if (routedPoint && routedPoint.length > segmentIndex) {
            var segment = routedPoint[segmentIndex + 1];
            if (isIntersectingRoutedPoint(segment)) {
                segment.intersections.push(intersection);
            }
            else {
                var intersectingRoutedPoint = __assign(__assign({}, segment), { intersections: [intersection] });
                routedPoint[segmentIndex + 1] = intersectingRoutedPoint;
            }
        }
    };
    IntersectionFinder = __decorate([
        (0, inversify_1.injectable)()
    ], IntersectionFinder);
    return IntersectionFinder;
}());
exports.IntersectionFinder = IntersectionFinder;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/edge-intersection/sweepline.js":
/*!**************************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/edge-intersection/sweepline.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.intersectionOfSegments = exports.getSegmentIndex = exports.checkWhichSegmentHasRightEndpointFirst = exports.runSweep = exports.Segment = exports.SweepEvent = exports.checkWhichEventIsLeft = exports.addRoute = void 0;
/********************************************************************************
 * Copyright (c) 2019 Rowan Winsemius and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
// Based on the sweepline implementation at https://github.com/rowanwins/sweepline-intersections
// which is published under the terms of MIT, but has been adapted to the use case of sprotty.
var tinyqueue_1 = __importDefault(__webpack_require__(/*! tinyqueue */ "./node_modules/tinyqueue/index.js"));
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "./node_modules/sprotty/lib/utils/geometry.js");
/*
 * The algorithm implemented in this module is loosely based on the Bentley-Ottmann algorithm for
 * finding intersection among line segments in `O((n+k) log n)`, whereas `n` is the number of line
 * segments and `k` is the number of intersections.
 * The underlying idea is to use a imaginary sweep line that moves over the x/y plane and testing
 * only the line segments for intersection that the sweepline currently crosses, instead of
 * testing all segment with each other, which would be `O(n^2)`.
 * It does so by generating a prioritized event queue for start and end events of the line segments
 * and working its way through the queue (i.e., sweeping).
 * More information can be found at https://en.wikipedia.org/wiki/Bentley%E2%80%93Ottmann_algorithm
 * In contrast to the original Bently-Ottmann algorithm, the implementation below does not use a tree
 * data structure to store the segments in order to simplify the implementation.
 * See also https://github.com/rowanwins/sweepline-intersections#algorithm-notes
 */
/**
 * Add the specified `route` to the event `queue` from left to right.
 * @param routeId id of the route.
 * @param route the route as array of points.
 * @param queue the queue to add the route to.
 */
function addRoute(routeId, route, queue) {
    if (route.length < 1)
        return;
    var currentPoint = route[0];
    var nextPoint = undefined;
    for (var i = 0; i < route.length - 1; i++) {
        nextPoint = route[i + 1];
        var e1 = new SweepEvent(routeId, currentPoint, i);
        var e2 = new SweepEvent(routeId, nextPoint, i + 1);
        e1.otherEvent = e2;
        e2.otherEvent = e1;
        if (checkWhichEventIsLeft(e1, e2) > 0) {
            e2.isLeftEndpoint = true;
            e1.isLeftEndpoint = false;
        }
        else {
            e1.isLeftEndpoint = true;
            e2.isLeftEndpoint = false;
        }
        queue.push(e1);
        queue.push(e2);
        currentPoint = nextPoint;
    }
}
exports.addRoute = addRoute;
/**
 * Returns which of the two events is left.
 * This is used to classify the endpoints of a segment when generating the
 * event queue.
 */
function checkWhichEventIsLeft(e1, e2) {
    if (e1.point.x > e2.point.x)
        return 1;
    if (e1.point.x < e2.point.x)
        return -1;
    if (e1.point.y !== e2.point.y)
        return e1.point.y > e2.point.y ? 1 : -1;
    return 1;
}
exports.checkWhichEventIsLeft = checkWhichEventIsLeft;
/**
 * An event -- or with other words a start or end point of a segment -- in the context
 * of the event queue for the sweep.
 *
 * Stores the original Sprotty `edgeId` and the segment index of this segment in the edge
 * to keep track of which edge and segment this event originated from.
 */
var SweepEvent = /** @class */ (function () {
    function SweepEvent(edgeId, point, segmentIndex) {
        this.edgeId = edgeId;
        this.point = point;
        this.segmentIndex = segmentIndex;
    }
    return SweepEvent;
}());
exports.SweepEvent = SweepEvent;
/**
 * A line segment consists of a start and a stop event.
 */
var Segment = /** @class */ (function () {
    function Segment(event) {
        this.leftSweepEvent = event;
        this.rightSweepEvent = event.otherEvent;
    }
    return Segment;
}());
exports.Segment = Segment;
/**
 * Performs the main sweep algorithm on the specified event queue.
 *
 * An empty priority queue is created to store segments encountered.
 * An item is removed from the priority queue if the vertex is the left endpoint
 * of a segment, we test it against every other segment in the segment queue for
 * intersections with any intersection recorded. We then add the vertex (and it's
 * associated right endpoint) to the segment queue.
 * If we encounter a right endpoint we remove the first item from the segment queue.
 *
 * Each pair of segments are only tested once. And only segments that overlap on the
 * x plane are tested against each other.
 *
 * @param eventQueue the event queue.
 * @returns the identified intersections.
 */
function runSweep(eventQueue) {
    var intersectionPoints = [];
    var outQueue = new tinyqueue_1.default([], checkWhichSegmentHasRightEndpointFirst);
    while (eventQueue.length) {
        var event_1 = eventQueue.pop();
        if (event_1 === null || event_1 === void 0 ? void 0 : event_1.isLeftEndpoint) {
            var segment = new Segment(event_1);
            for (var i = 0; i < outQueue.data.length; i++) {
                var otherSegment = outQueue.data[i];
                var intersection = intersectionOfSegments(segment, otherSegment);
                if (intersection) {
                    intersectionPoints.push({
                        routable1: event_1.edgeId,
                        routable2: otherSegment.leftSweepEvent.edgeId,
                        segmentIndex1: getSegmentIndex(segment),
                        segmentIndex2: getSegmentIndex(otherSegment),
                        intersectionPoint: intersection
                    });
                }
            }
            outQueue.push(segment);
        }
        else if ((event_1 === null || event_1 === void 0 ? void 0 : event_1.isLeftEndpoint) === false) {
            outQueue.pop();
        }
    }
    return intersectionPoints;
}
exports.runSweep = runSweep;
/**
 * Specifies which of the two specified segments has a right endpoint first.
 * Used as a comparator to sort the event queue.
 */
function checkWhichSegmentHasRightEndpointFirst(seg1, seg2) {
    if (seg1.rightSweepEvent.point.x > seg2.rightSweepEvent.point.x)
        return 1;
    if (seg1.rightSweepEvent.point.x < seg2.rightSweepEvent.point.x)
        return -1;
    if (seg1.rightSweepEvent.point.y !== seg2.rightSweepEvent.point.y)
        return seg1.rightSweepEvent.point.y < seg2.rightSweepEvent.point.y ? 1 : -1;
    return 1;
}
exports.checkWhichSegmentHasRightEndpointFirst = checkWhichSegmentHasRightEndpointFirst;
function getSegmentIndex(segment) {
    return Math.min(segment.leftSweepEvent.segmentIndex, segment.rightSweepEvent.segmentIndex);
}
exports.getSegmentIndex = getSegmentIndex;
/**
 * Tests whether two segments intersect and returns the intersection point if existing.
 */
function intersectionOfSegments(seg1, seg2) {
    if (seg1.leftSweepEvent.edgeId === seg2.leftSweepEvent.edgeId) {
        return undefined;
    }
    var seg1Line = new geometry_1.PointToPointLine(seg1.leftSweepEvent.point, seg1.rightSweepEvent.point);
    var seg2Line = new geometry_1.PointToPointLine(seg2.leftSweepEvent.point, seg2.rightSweepEvent.point);
    return seg1Line.intersection(seg2Line);
}
exports.intersectionOfSegments = intersectionOfSegments;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/edge-layout/di.config.js":
/*!********************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/edge-layout/di.config.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/sprotty/lib/base/types.js");
var edge_layout_1 = __webpack_require__(/*! ./edge-layout */ "./node_modules/sprotty/lib/features/edge-layout/edge-layout.js");
var edgeLayoutModule = new inversify_1.ContainerModule(function (bind) {
    bind(edge_layout_1.EdgeLayoutPostprocessor).toSelf().inSingletonScope();
    bind(types_1.TYPES.IVNodePostprocessor).toService(edge_layout_1.EdgeLayoutPostprocessor);
    bind(types_1.TYPES.HiddenVNodePostprocessor).toService(edge_layout_1.EdgeLayoutPostprocessor);
});
exports["default"] = edgeLayoutModule;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/edge-layout/edge-layout.js":
/*!**********************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/edge-layout/edge-layout.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EdgeLayoutPostprocessor = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "./node_modules/sprotty-protocol/lib/utils/geometry.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "./node_modules/sprotty/lib/base/model/smodel.js");
var vnode_utils_1 = __webpack_require__(/*! ../../base/views/vnode-utils */ "./node_modules/sprotty/lib/base/views/vnode-utils.js");
var sgraph_1 = __webpack_require__(/*! ../../graph/sgraph */ "./node_modules/sprotty/lib/graph/sgraph.js");
var model_1 = __webpack_require__(/*! ../bounds/model */ "./node_modules/sprotty/lib/features/bounds/model.js");
var model_2 = __webpack_require__(/*! ./model */ "./node_modules/sprotty/lib/features/edge-layout/model.js");
var routing_1 = __webpack_require__(/*! ../routing/routing */ "./node_modules/sprotty/lib/features/routing/routing.js");
var EdgeLayoutPostprocessor = /** @class */ (function () {
    function EdgeLayoutPostprocessor() {
    }
    EdgeLayoutPostprocessor.prototype.decorate = function (vnode, element) {
        if ((0, model_2.isEdgeLayoutable)(element) && element.parent instanceof sgraph_1.SEdge) {
            if (element.bounds !== geometry_1.Bounds.EMPTY) {
                var placement = this.getEdgePlacement(element);
                var edge = element.parent;
                var position = Math.min(1, Math.max(0, placement.position));
                var router = this.edgeRouterRegistry.get(edge.routerKind);
                var pointOnEdge = router.pointAt(edge, position);
                var derivativeOnEdge = router.derivativeAt(edge, position);
                var transform = '';
                if (pointOnEdge && derivativeOnEdge) {
                    transform += "translate(".concat(pointOnEdge.x, ", ").concat(pointOnEdge.y, ")");
                    var angle = (0, geometry_1.toDegrees)(Math.atan2(derivativeOnEdge.y, derivativeOnEdge.x));
                    if (placement.rotate) {
                        var flippedAngle = angle;
                        if (Math.abs(angle) > 90) {
                            if (angle < 0)
                                flippedAngle += 180;
                            else if (angle > 0)
                                flippedAngle -= 180;
                        }
                        transform += " rotate(".concat(flippedAngle, ")");
                        var alignment = this.getRotatedAlignment(element, placement, flippedAngle !== angle);
                        transform += " translate(".concat(alignment.x, ", ").concat(alignment.y, ")");
                    }
                    else {
                        var alignment = this.getAlignment(element, placement, angle);
                        transform += " translate(".concat(alignment.x, ", ").concat(alignment.y, ")");
                    }
                    (0, vnode_utils_1.setAttr)(vnode, 'transform', transform);
                }
            }
        }
        return vnode;
    };
    EdgeLayoutPostprocessor.prototype.getRotatedAlignment = function (element, placement, flip) {
        var x = (0, model_1.isAlignable)(element) ? element.alignment.x : 0;
        var y = (0, model_1.isAlignable)(element) ? element.alignment.y : 0;
        var bounds = element.bounds;
        if (placement.side === 'on')
            return { x: x - 0.5 * bounds.height, y: y - 0.5 * bounds.height };
        if (flip) {
            if (placement.position < 0.3333333)
                x -= bounds.width + placement.offset;
            else if (placement.position < 0.6666666)
                x -= 0.5 * bounds.width;
            else
                x += placement.offset;
            switch (placement.side) {
                case 'left':
                case 'bottom':
                    y -= placement.offset + bounds.height;
                    break;
                case 'right':
                case 'top':
                    y += placement.offset;
            }
        }
        else {
            if (placement.position < 0.3333333)
                x += placement.offset;
            else if (placement.position < 0.6666666)
                x -= 0.5 * bounds.width;
            else
                x -= bounds.width + placement.offset;
            switch (placement.side) {
                case 'right':
                case 'bottom':
                    y += -placement.offset - bounds.height;
                    break;
                case 'left':
                case 'top':
                    y += placement.offset;
            }
        }
        return { x: x, y: y };
    };
    EdgeLayoutPostprocessor.prototype.getEdgePlacement = function (element) {
        var current = element;
        var allPlacements = [];
        while (current !== undefined) {
            var placement = current.edgePlacement;
            if (placement !== undefined)
                allPlacements.push(placement);
            if (current instanceof smodel_1.SChildElement)
                current = current.parent;
            else
                break;
        }
        return allPlacements.reverse().reduce(function (a, b) { return __assign(__assign({}, a), b); }, model_2.DEFAULT_EDGE_PLACEMENT);
    };
    EdgeLayoutPostprocessor.prototype.getAlignment = function (label, placement, angle) {
        var bounds = label.bounds;
        var x = (0, model_1.isAlignable)(label) ? label.alignment.x - bounds.width : 0;
        var y = (0, model_1.isAlignable)(label) ? label.alignment.y - bounds.height : 0;
        if (placement.side === 'on')
            return { x: x + 0.5 * bounds.height, y: y + 0.5 * bounds.height };
        var quadrant = this.getQuadrant(angle);
        var midLeft = { x: placement.offset, y: y + 0.5 * bounds.height };
        var topLeft = { x: placement.offset, y: y + bounds.height + placement.offset };
        var topRight = { x: -bounds.width - placement.offset, y: y + bounds.height + placement.offset };
        var midRight = { x: -bounds.width - placement.offset, y: y + 0.5 * bounds.height };
        var bottomRight = { x: -bounds.width - placement.offset, y: y - placement.offset };
        var bottomLeft = { x: placement.offset, y: y - placement.offset };
        switch (placement.side) {
            case 'left':
                switch (quadrant.orientation) {
                    case 'west':
                        return geometry_1.Point.linear(topLeft, topRight, quadrant.position);
                    case 'north':
                        return geometry_1.Point.linear(topRight, bottomRight, quadrant.position);
                    case 'east':
                        return geometry_1.Point.linear(bottomRight, bottomLeft, quadrant.position);
                    case 'south':
                        return geometry_1.Point.linear(bottomLeft, topLeft, quadrant.position);
                }
                break;
            case 'right':
                switch (quadrant.orientation) {
                    case 'west':
                        return geometry_1.Point.linear(bottomRight, bottomLeft, quadrant.position);
                    case 'north':
                        return geometry_1.Point.linear(bottomLeft, topLeft, quadrant.position);
                    case 'east':
                        return geometry_1.Point.linear(topLeft, topRight, quadrant.position);
                    case 'south':
                        return geometry_1.Point.linear(topRight, bottomRight, quadrant.position);
                }
                break;
            case 'top':
                switch (quadrant.orientation) {
                    case 'west':
                        return geometry_1.Point.linear(bottomRight, bottomLeft, quadrant.position);
                    case 'north':
                        return this.linearFlip(bottomLeft, midLeft, midRight, bottomRight, quadrant.position);
                    case 'east':
                        return geometry_1.Point.linear(bottomRight, bottomLeft, quadrant.position);
                    case 'south':
                        return this.linearFlip(bottomLeft, midLeft, midRight, bottomRight, quadrant.position);
                }
                break;
            case 'bottom':
                switch (quadrant.orientation) {
                    case 'west':
                        return geometry_1.Point.linear(topLeft, topRight, quadrant.position);
                    case 'north':
                        return this.linearFlip(topRight, midRight, midLeft, topLeft, quadrant.position);
                    case 'east':
                        return geometry_1.Point.linear(topLeft, topRight, quadrant.position);
                    case 'south':
                        return this.linearFlip(topRight, midRight, midLeft, topLeft, quadrant.position);
                }
                break;
        }
        return { x: 0, y: 0 };
    };
    EdgeLayoutPostprocessor.prototype.getQuadrant = function (angle) {
        if (Math.abs(angle) > 135)
            return { orientation: 'west', position: (angle > 0 ? angle - 135 : angle + 225) / 90 };
        else if (angle < -45)
            return { orientation: 'north', position: (angle + 135) / 90 };
        else if (angle < 45)
            return { orientation: 'east', position: (angle + 45) / 90 };
        else
            return { orientation: 'south', position: (angle - 45) / 90 };
    };
    EdgeLayoutPostprocessor.prototype.linearFlip = function (p0, p1, p2, p3, position) {
        return position < 0.5 ? geometry_1.Point.linear(p0, p1, 2 * position) : geometry_1.Point.linear(p2, p3, 2 * position - 1);
    };
    EdgeLayoutPostprocessor.prototype.postUpdate = function () { };
    __decorate([
        (0, inversify_1.inject)(routing_1.EdgeRouterRegistry),
        __metadata("design:type", routing_1.EdgeRouterRegistry)
    ], EdgeLayoutPostprocessor.prototype, "edgeRouterRegistry", void 0);
    EdgeLayoutPostprocessor = __decorate([
        (0, inversify_1.injectable)()
    ], EdgeLayoutPostprocessor);
    return EdgeLayoutPostprocessor;
}());
exports.EdgeLayoutPostprocessor = EdgeLayoutPostprocessor;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/edge-layout/model.js":
/*!****************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/edge-layout/model.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DEFAULT_EDGE_PLACEMENT = exports.EdgePlacement = exports.isEdgeLayoutable = exports.edgeLayoutFeature = void 0;
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "./node_modules/sprotty/lib/base/model/smodel.js");
var model_1 = __webpack_require__(/*! ../bounds/model */ "./node_modules/sprotty/lib/features/bounds/model.js");
var model_2 = __webpack_require__(/*! ../routing/model */ "./node_modules/sprotty/lib/features/routing/model.js");
exports.edgeLayoutFeature = Symbol('edgeLayout');
function isEdgeLayoutable(element) {
    return element instanceof smodel_1.SChildElement
        && element.parent instanceof model_2.SRoutableElement
        && checkEdgeLayoutable(element)
        && (0, model_1.isBoundsAware)(element)
        && element.hasFeature(exports.edgeLayoutFeature);
}
exports.isEdgeLayoutable = isEdgeLayoutable;
function checkEdgeLayoutable(element) {
    return 'edgePlacement' in element;
}
var EdgePlacement = /** @class */ (function (_super) {
    __extends(EdgePlacement, _super);
    function EdgePlacement() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return EdgePlacement;
}(Object));
exports.EdgePlacement = EdgePlacement;
exports.DEFAULT_EDGE_PLACEMENT = {
    rotate: true,
    side: 'top',
    position: 0.5,
    offset: 7
};


/***/ }),

/***/ "./node_modules/sprotty/lib/features/edit/create-on-drag.js":
/*!******************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/edit/create-on-drag.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isCreatingOnDrag = exports.creatingOnDragFeature = void 0;
exports.creatingOnDragFeature = Symbol('creatingOnDragFeature');
function isCreatingOnDrag(element) {
    return element.hasFeature(exports.creatingOnDragFeature) && element.createAction !== undefined;
}
exports.isCreatingOnDrag = isCreatingOnDrag;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/edit/create.js":
/*!**********************************************************!*\
  !*** ./node_modules/sprotty/lib/features/edit/create.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreateElementCommand = exports.CreateElementAction = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var command_1 = __webpack_require__(/*! ../../base/commands/command */ "./node_modules/sprotty/lib/base/commands/command.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "./node_modules/sprotty/lib/base/model/smodel.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/sprotty/lib/base/types.js");
var CreateElementAction;
(function (CreateElementAction) {
    CreateElementAction.KIND = 'createElement';
    function create(elementSchema, options) {
        return {
            kind: CreateElementAction.KIND,
            elementSchema: elementSchema,
            containerId: options.containerId
        };
    }
    CreateElementAction.create = create;
})(CreateElementAction = exports.CreateElementAction || (exports.CreateElementAction = {}));
var CreateElementCommand = /** @class */ (function (_super) {
    __extends(CreateElementCommand, _super);
    function CreateElementCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    CreateElementCommand.prototype.execute = function (context) {
        var container = context.root.index.getById(this.action.containerId);
        if (container instanceof smodel_1.SParentElement) {
            this.container = container;
            this.newElement = context.modelFactory.createElement(this.action.elementSchema);
            this.container.add(this.newElement);
        }
        return context.root;
    };
    CreateElementCommand.prototype.undo = function (context) {
        this.container.remove(this.newElement);
        return context.root;
    };
    CreateElementCommand.prototype.redo = function (context) {
        this.container.add(this.newElement);
        return context.root;
    };
    CreateElementCommand.KIND = CreateElementAction.KIND;
    CreateElementCommand = __decorate([
        (0, inversify_1.injectable)(),
        __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [Object])
    ], CreateElementCommand);
    return CreateElementCommand;
}(command_1.Command));
exports.CreateElementCommand = CreateElementCommand;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/edit/delete.js":
/*!**********************************************************!*\
  !*** ./node_modules/sprotty/lib/features/edit/delete.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DeleteElementCommand = exports.ResolvedDelete = exports.DeleteElementAction = exports.isDeletable = exports.deletableFeature = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var command_1 = __webpack_require__(/*! ../../base/commands/command */ "./node_modules/sprotty/lib/base/commands/command.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "./node_modules/sprotty/lib/base/model/smodel.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/sprotty/lib/base/types.js");
exports.deletableFeature = Symbol('deletableFeature');
function isDeletable(element) {
    return element instanceof smodel_1.SChildElement && element.hasFeature(exports.deletableFeature);
}
exports.isDeletable = isDeletable;
var DeleteElementAction;
(function (DeleteElementAction) {
    DeleteElementAction.KIND = 'delete';
    function create(elementIds) {
        return {
            kind: DeleteElementAction.KIND,
            elementIds: elementIds
        };
    }
    DeleteElementAction.create = create;
})(DeleteElementAction = exports.DeleteElementAction || (exports.DeleteElementAction = {}));
var ResolvedDelete = /** @class */ (function () {
    function ResolvedDelete() {
    }
    return ResolvedDelete;
}());
exports.ResolvedDelete = ResolvedDelete;
var DeleteElementCommand = /** @class */ (function (_super) {
    __extends(DeleteElementCommand, _super);
    function DeleteElementCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        _this.resolvedDeletes = [];
        return _this;
    }
    DeleteElementCommand.prototype.execute = function (context) {
        var index = context.root.index;
        for (var _i = 0, _a = this.action.elementIds; _i < _a.length; _i++) {
            var id = _a[_i];
            var element = index.getById(id);
            if (element && isDeletable(element)) {
                this.resolvedDeletes.push({ child: element, parent: element.parent });
                element.parent.remove(element);
            }
        }
        return context.root;
    };
    DeleteElementCommand.prototype.undo = function (context) {
        for (var _i = 0, _a = this.resolvedDeletes; _i < _a.length; _i++) {
            var resolvedDelete = _a[_i];
            resolvedDelete.parent.add(resolvedDelete.child);
        }
        return context.root;
    };
    DeleteElementCommand.prototype.redo = function (context) {
        for (var _i = 0, _a = this.resolvedDeletes; _i < _a.length; _i++) {
            var resolvedDelete = _a[_i];
            resolvedDelete.parent.remove(resolvedDelete.child);
        }
        return context.root;
    };
    DeleteElementCommand.KIND = DeleteElementAction.KIND;
    DeleteElementCommand = __decorate([
        (0, inversify_1.injectable)(),
        __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [Object])
    ], DeleteElementCommand);
    return DeleteElementCommand;
}(command_1.Command));
exports.DeleteElementCommand = DeleteElementCommand;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/edit/di.config.js":
/*!*************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/edit/di.config.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.labelEditUiModule = exports.labelEditModule = exports.edgeEditModule = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/sprotty/lib/base/types.js");
var command_registration_1 = __webpack_require__(/*! ../../base/commands/command-registration */ "./node_modules/sprotty/lib/base/commands/command-registration.js");
var action_handler_1 = __webpack_require__(/*! ../../base/actions/action-handler */ "./node_modules/sprotty/lib/base/actions/action-handler.js");
var view_1 = __webpack_require__(/*! ../../base/views/view */ "./node_modules/sprotty/lib/base/views/view.js");
var model_1 = __webpack_require__(/*! ../../features/routing/model */ "./node_modules/sprotty/lib/features/routing/model.js");
var svg_views_1 = __webpack_require__(/*! ../../lib/svg-views */ "./node_modules/sprotty/lib/lib/svg-views.js");
var delete_1 = __webpack_require__(/*! ./delete */ "./node_modules/sprotty/lib/features/edit/delete.js");
var edit_label_1 = __webpack_require__(/*! ./edit-label */ "./node_modules/sprotty/lib/features/edit/edit-label.js");
var edit_label_ui_1 = __webpack_require__(/*! ./edit-label-ui */ "./node_modules/sprotty/lib/features/edit/edit-label-ui.js");
var edit_routing_1 = __webpack_require__(/*! ./edit-routing */ "./node_modules/sprotty/lib/features/edit/edit-routing.js");
var reconnect_1 = __webpack_require__(/*! ./reconnect */ "./node_modules/sprotty/lib/features/edit/reconnect.js");
exports.edgeEditModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    var context = { bind: bind, isBound: isBound };
    (0, command_registration_1.configureCommand)(context, edit_routing_1.SwitchEditModeCommand);
    (0, command_registration_1.configureCommand)(context, reconnect_1.ReconnectCommand);
    (0, command_registration_1.configureCommand)(context, delete_1.DeleteElementCommand);
    (0, view_1.configureModelElement)(context, 'dangling-anchor', model_1.SDanglingAnchor, svg_views_1.EmptyGroupView);
});
exports.labelEditModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    bind(edit_label_1.EditLabelMouseListener).toSelf().inSingletonScope();
    bind(types_1.TYPES.MouseListener).toService(edit_label_1.EditLabelMouseListener);
    bind(edit_label_1.EditLabelKeyListener).toSelf().inSingletonScope();
    bind(types_1.TYPES.KeyListener).toService(edit_label_1.EditLabelKeyListener);
    (0, command_registration_1.configureCommand)({ bind: bind, isBound: isBound }, edit_label_1.ApplyLabelEditCommand);
});
exports.labelEditUiModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    var context = { bind: bind, isBound: isBound };
    (0, action_handler_1.configureActionHandler)(context, edit_label_1.EditLabelAction.KIND, edit_label_ui_1.EditLabelActionHandler);
    bind(edit_label_ui_1.EditLabelUI).toSelf().inSingletonScope();
    bind(types_1.TYPES.IUIExtension).toService(edit_label_ui_1.EditLabelUI);
});


/***/ }),

/***/ "./node_modules/sprotty/lib/features/edit/edit-label-ui.js":
/*!*****************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/edit/edit-label-ui.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019-2022 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EditLabelUI = exports.EditLabelActionHandler = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "./node_modules/sprotty-protocol/lib/actions.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/sprotty/lib/base/types.js");
var ui_extension_1 = __webpack_require__(/*! ../../base/ui-extensions/ui-extension */ "./node_modules/sprotty/lib/base/ui-extensions/ui-extension.js");
var ui_extension_registry_1 = __webpack_require__(/*! ../../base/ui-extensions/ui-extension-registry */ "./node_modules/sprotty/lib/base/ui-extensions/ui-extension-registry.js");
var dom_helper_1 = __webpack_require__(/*! ../../base/views/dom-helper */ "./node_modules/sprotty/lib/base/views/dom-helper.js");
var commit_model_1 = __webpack_require__(/*! ../../model-source/commit-model */ "./node_modules/sprotty/lib/model-source/commit-model.js");
var keyboard_1 = __webpack_require__(/*! ../../utils/keyboard */ "./node_modules/sprotty/lib/utils/keyboard.js");
var model_1 = __webpack_require__(/*! ../bounds/model */ "./node_modules/sprotty/lib/features/bounds/model.js");
var zoom_1 = __webpack_require__(/*! ../viewport/zoom */ "./node_modules/sprotty/lib/features/viewport/zoom.js");
var edit_label_1 = __webpack_require__(/*! ./edit-label */ "./node_modules/sprotty/lib/features/edit/edit-label.js");
var model_2 = __webpack_require__(/*! ./model */ "./node_modules/sprotty/lib/features/edit/model.js");
/** Shows a UI extension for editing a label on emitted `EditLabelAction`s. */
var EditLabelActionHandler = /** @class */ (function () {
    function EditLabelActionHandler() {
    }
    EditLabelActionHandler.prototype.handle = function (action) {
        if ((0, edit_label_1.isEditLabelAction)(action)) {
            return ui_extension_registry_1.SetUIExtensionVisibilityAction.create({ extensionId: EditLabelUI.ID, visible: true, contextElementsId: [action.labelId] });
        }
    };
    EditLabelActionHandler = __decorate([
        (0, inversify_1.injectable)()
    ], EditLabelActionHandler);
    return EditLabelActionHandler;
}());
exports.EditLabelActionHandler = EditLabelActionHandler;
var EditLabelUI = /** @class */ (function (_super) {
    __extends(EditLabelUI, _super);
    function EditLabelUI() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.validationTimeout = undefined;
        _this.isActive = false;
        _this.blockApplyEditOnInvalidInput = true;
        _this.isCurrentLabelValid = true;
        return _this;
    }
    EditLabelUI_1 = EditLabelUI;
    EditLabelUI.prototype.id = function () { return EditLabelUI_1.ID; };
    EditLabelUI.prototype.containerClass = function () { return 'label-edit'; };
    Object.defineProperty(EditLabelUI.prototype, "labelId", {
        get: function () { return this.label ? this.label.id : 'unknown'; },
        enumerable: false,
        configurable: true
    });
    EditLabelUI.prototype.initializeContents = function (containerElement) {
        var _this = this;
        containerElement.style.position = 'absolute';
        this.inputElement = document.createElement('input');
        this.textAreaElement = document.createElement('textarea');
        [this.inputElement, this.textAreaElement].forEach(function (element) {
            element.onkeydown = function (event) { return _this.applyLabelEditOnEvent(event, 'Enter'); };
            _this.configureAndAdd(element, containerElement);
        });
    };
    EditLabelUI.prototype.configureAndAdd = function (element, containerElement) {
        var _this = this;
        element.style.visibility = 'hidden';
        element.style.position = 'absolute';
        element.style.top = '0px';
        element.style.left = '0px';
        element.addEventListener('keydown', function (event) { return _this.hideIfEscapeEvent(event); });
        element.addEventListener('keyup', function (event) { return _this.validateLabelIfContentChange(event, element.value); });
        element.addEventListener('blur', function () { return window.setTimeout(function () { return _this.applyLabelEdit(); }, 200); });
        containerElement.appendChild(element);
    };
    Object.defineProperty(EditLabelUI.prototype, "editControl", {
        get: function () {
            if (this.label && this.label.isMultiLine) {
                return this.textAreaElement;
            }
            return this.inputElement;
        },
        enumerable: false,
        configurable: true
    });
    EditLabelUI.prototype.hideIfEscapeEvent = function (event) {
        if ((0, keyboard_1.matchesKeystroke)(event, 'Escape')) {
            this.hide();
        }
    };
    EditLabelUI.prototype.applyLabelEditOnEvent = function (event, code) {
        var modifiers = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            modifiers[_i - 2] = arguments[_i];
        }
        if (keyboard_1.matchesKeystroke.apply(void 0, __spreadArray([event, code ? code : 'Enter'], modifiers, false))) {
            event.preventDefault();
            this.applyLabelEdit();
        }
    };
    EditLabelUI.prototype.validateLabelIfContentChange = function (event, value) {
        if (this.previousLabelContent === undefined || this.previousLabelContent !== value) {
            this.previousLabelContent = value;
            this.performLabelValidation(event, this.editControl.value);
        }
    };
    EditLabelUI.prototype.applyLabelEdit = function () {
        var _a;
        return __awaiter(this, void 0, void 0, function () {
            var result;
            var _this = this;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (!this.isActive) {
                            return [2 /*return*/];
                        }
                        if (((_a = this.label) === null || _a === void 0 ? void 0 : _a.text) === this.editControl.value) {
                            // no action necessary
                            this.hide();
                            return [2 /*return*/];
                        }
                        if (!this.blockApplyEditOnInvalidInput) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.validateLabel(this.editControl.value)];
                    case 1:
                        result = _b.sent();
                        if ('error' === result.severity) {
                            this.editControl.focus();
                            return [2 /*return*/];
                        }
                        _b.label = 2;
                    case 2:
                        this.actionDispatcherProvider()
                            .then(function (actionDispatcher) { return actionDispatcher.dispatchAll([actions_1.ApplyLabelEditAction.create(_this.labelId, _this.editControl.value), commit_model_1.CommitModelAction.create()]); })
                            .catch(function (reason) { return _this.logger.error(_this, 'No action dispatcher available to execute apply label edit action', reason); });
                        this.hide();
                        return [2 /*return*/];
                }
            });
        });
    };
    EditLabelUI.prototype.performLabelValidation = function (event, value) {
        var _this = this;
        if (this.validationTimeout) {
            window.clearTimeout(this.validationTimeout);
        }
        this.validationTimeout = window.setTimeout(function () { return _this.validateLabel(value); }, 200);
    };
    EditLabelUI.prototype.validateLabel = function (value) {
        return __awaiter(this, void 0, void 0, function () {
            var result, reason_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(this.labelValidator && this.label)) return [3 /*break*/, 4];
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 3, , 4]);
                        return [4 /*yield*/, this.labelValidator.validate(value, this.label)];
                    case 2:
                        result = _a.sent();
                        this.isCurrentLabelValid = 'error' !== result.severity;
                        this.showValidationResult(result);
                        return [2 /*return*/, result];
                    case 3:
                        reason_1 = _a.sent();
                        this.logger.error(this, 'Error validating edited label', reason_1);
                        return [3 /*break*/, 4];
                    case 4:
                        this.isCurrentLabelValid = true;
                        return [2 /*return*/, { severity: 'ok', message: undefined }];
                }
            });
        });
    };
    EditLabelUI.prototype.showValidationResult = function (result) {
        this.clearValidationResult();
        if (this.validationDecorator) {
            this.validationDecorator.decorate(this.editControl, result);
        }
    };
    EditLabelUI.prototype.clearValidationResult = function () {
        if (this.validationDecorator) {
            this.validationDecorator.dispose(this.editControl);
        }
    };
    EditLabelUI.prototype.show = function (root) {
        var contextElementIds = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            contextElementIds[_i - 1] = arguments[_i];
        }
        if (!hasEditableLabel(contextElementIds, root) || this.isActive) {
            return;
        }
        _super.prototype.show.apply(this, __spreadArray([root], contextElementIds, false));
        this.isActive = true;
    };
    EditLabelUI.prototype.hide = function () {
        this.editControl.style.visibility = 'hidden';
        _super.prototype.hide.call(this);
        this.clearValidationResult();
        this.isActive = false;
        this.isCurrentLabelValid = true;
        this.previousLabelContent = undefined;
        if (this.labelElement) {
            this.labelElement.style.visibility = 'visible';
        }
    };
    EditLabelUI.prototype.onBeforeShow = function (containerElement, root) {
        var contextElementIds = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            contextElementIds[_i - 2] = arguments[_i];
        }
        this.label = getEditableLabels(contextElementIds, root)[0];
        this.previousLabelContent = this.label.text;
        this.setPosition(containerElement);
        this.applyTextContents();
        this.applyFontStyling();
        this.editControl.style.visibility = 'visible';
        this.editControl.focus();
    };
    EditLabelUI.prototype.setPosition = function (containerElement) {
        var x = 0;
        var y = 0;
        var width = 100;
        var height = 20;
        if (this.label) {
            var zoom = (0, zoom_1.getZoom)(this.label);
            var bounds = (0, model_1.getAbsoluteClientBounds)(this.label, this.domHelper, this.viewerOptions);
            x = bounds.x + (this.label.editControlPositionCorrection ? this.label.editControlPositionCorrection.x : 0) * zoom;
            y = bounds.y + (this.label.editControlPositionCorrection ? this.label.editControlPositionCorrection.y : 0) * zoom;
            height = (this.label.editControlDimension ? this.label.editControlDimension.height : height) * zoom;
            width = (this.label.editControlDimension ? this.label.editControlDimension.width : width) * zoom;
        }
        containerElement.style.left = "".concat(x, "px");
        containerElement.style.top = "".concat(y, "px");
        containerElement.style.width = "".concat(width, "px");
        this.editControl.style.width = "".concat(width, "px");
        containerElement.style.height = "".concat(height, "px");
        this.editControl.style.height = "".concat(height, "px");
    };
    EditLabelUI.prototype.applyTextContents = function () {
        if (this.label) {
            this.editControl.value = this.label.text;
            if (this.editControl instanceof HTMLTextAreaElement) {
                this.editControl.selectionStart = 0;
                this.editControl.selectionEnd = 0;
                this.editControl.scrollTop = 0;
                this.editControl.scrollLeft = 0;
            }
            else {
                this.editControl.setSelectionRange(0, this.editControl.value.length);
            }
        }
    };
    EditLabelUI.prototype.applyFontStyling = function () {
        if (this.label) {
            this.labelElement = document.getElementById(this.domHelper.createUniqueDOMElementId(this.label));
            if (this.labelElement) {
                this.labelElement.style.visibility = 'hidden';
                var style = window.getComputedStyle(this.labelElement);
                this.editControl.style.font = style.font;
                this.editControl.style.fontStyle = style.fontStyle;
                this.editControl.style.fontFamily = style.fontFamily;
                this.editControl.style.fontSize = scaledFont(style.fontSize, (0, zoom_1.getZoom)(this.label));
                this.editControl.style.fontWeight = style.fontWeight;
                this.editControl.style.lineHeight = style.lineHeight;
            }
        }
    };
    var EditLabelUI_1;
    EditLabelUI.ID = 'editLabelUi';
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.IActionDispatcherProvider),
        __metadata("design:type", Function)
    ], EditLabelUI.prototype, "actionDispatcherProvider", void 0);
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.ViewerOptions),
        __metadata("design:type", Object)
    ], EditLabelUI.prototype, "viewerOptions", void 0);
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.DOMHelper),
        __metadata("design:type", dom_helper_1.DOMHelper)
    ], EditLabelUI.prototype, "domHelper", void 0);
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.IEditLabelValidator),
        (0, inversify_1.optional)(),
        __metadata("design:type", Object)
    ], EditLabelUI.prototype, "labelValidator", void 0);
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.IEditLabelValidationDecorator),
        (0, inversify_1.optional)(),
        __metadata("design:type", Object)
    ], EditLabelUI.prototype, "validationDecorator", void 0);
    EditLabelUI = EditLabelUI_1 = __decorate([
        (0, inversify_1.injectable)()
    ], EditLabelUI);
    return EditLabelUI;
}(ui_extension_1.AbstractUIExtension));
exports.EditLabelUI = EditLabelUI;
function hasEditableLabel(contextElementIds, root) {
    return getEditableLabels(contextElementIds, root).length === 1;
}
function getEditableLabels(contextElementIds, root) {
    return contextElementIds.map(function (id) { return root.index.getById(id); }).filter(model_2.isEditableLabel);
}
function scaledFont(font, zoom) {
    return font.replace(/([0-9]+)/, function (match) {
        return String(Number.parseInt(match, 10) * zoom);
    });
}


/***/ }),

/***/ "./node_modules/sprotty/lib/features/edit/edit-label.js":
/*!**************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/edit/edit-label.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getEditableLabel = exports.EditLabelKeyListener = exports.EditLabelMouseListener = exports.ApplyLabelEditCommand = exports.ResolvedLabelEdit = exports.isApplyLabelEditAction = exports.ApplyLabelEditAction = exports.isEditLabelAction = exports.EditLabelAction = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "./node_modules/sprotty-protocol/lib/actions.js");
var command_1 = __webpack_require__(/*! ../../base/commands/command */ "./node_modules/sprotty/lib/base/commands/command.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/sprotty/lib/base/types.js");
var mouse_tool_1 = __webpack_require__(/*! ../../base/views/mouse-tool */ "./node_modules/sprotty/lib/base/views/mouse-tool.js");
var key_tool_1 = __webpack_require__(/*! ../../base/views/key-tool */ "./node_modules/sprotty/lib/base/views/key-tool.js");
var keyboard_1 = __webpack_require__(/*! ../../utils/keyboard */ "./node_modules/sprotty/lib/utils/keyboard.js");
var model_1 = __webpack_require__(/*! ../select/model */ "./node_modules/sprotty/lib/features/select/model.js");
var iterable_1 = __webpack_require__(/*! ../../utils/iterable */ "./node_modules/sprotty/lib/utils/iterable.js");
var model_2 = __webpack_require__(/*! ./model */ "./node_modules/sprotty/lib/features/edit/model.js");
var EditLabelAction;
(function (EditLabelAction) {
    EditLabelAction.KIND = 'EditLabel';
    function create(labelId) {
        return {
            kind: EditLabelAction.KIND,
            labelId: labelId
        };
    }
    EditLabelAction.create = create;
})(EditLabelAction = exports.EditLabelAction || (exports.EditLabelAction = {}));
function isEditLabelAction(element) {
    return (0, actions_1.isAction)(element) && element.kind === EditLabelAction.KIND && 'labelId' in element;
}
exports.isEditLabelAction = isEditLabelAction;
var ApplyLabelEditAction;
(function (ApplyLabelEditAction) {
    ApplyLabelEditAction.KIND = 'applyLabelEdit';
    function create(labelId, text) {
        return {
            kind: ApplyLabelEditAction.KIND,
            labelId: labelId,
            text: text
        };
    }
    ApplyLabelEditAction.create = create;
})(ApplyLabelEditAction = exports.ApplyLabelEditAction || (exports.ApplyLabelEditAction = {}));
function isApplyLabelEditAction(element) {
    return (0, actions_1.isAction)(element) && element.kind === ApplyLabelEditAction.KIND && 'labelId' in element && 'text' in element;
}
exports.isApplyLabelEditAction = isApplyLabelEditAction;
var ResolvedLabelEdit = /** @class */ (function () {
    function ResolvedLabelEdit() {
    }
    return ResolvedLabelEdit;
}());
exports.ResolvedLabelEdit = ResolvedLabelEdit;
var ApplyLabelEditCommand = /** @class */ (function (_super) {
    __extends(ApplyLabelEditCommand, _super);
    function ApplyLabelEditCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    ApplyLabelEditCommand.prototype.execute = function (context) {
        var index = context.root.index;
        var label = index.getById(this.action.labelId);
        if (label && (0, model_2.isEditableLabel)(label)) {
            this.resolvedLabelEdit = { label: label, oldLabel: label.text, newLabel: this.action.text };
            label.text = this.action.text;
        }
        return context.root;
    };
    ApplyLabelEditCommand.prototype.undo = function (context) {
        if (this.resolvedLabelEdit) {
            this.resolvedLabelEdit.label.text = this.resolvedLabelEdit.oldLabel;
        }
        return context.root;
    };
    ApplyLabelEditCommand.prototype.redo = function (context) {
        if (this.resolvedLabelEdit) {
            this.resolvedLabelEdit.label.text = this.resolvedLabelEdit.newLabel;
        }
        return context.root;
    };
    ApplyLabelEditCommand.KIND = ApplyLabelEditAction.KIND;
    ApplyLabelEditCommand = __decorate([
        __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [Object])
    ], ApplyLabelEditCommand);
    return ApplyLabelEditCommand;
}(command_1.Command));
exports.ApplyLabelEditCommand = ApplyLabelEditCommand;
var EditLabelMouseListener = /** @class */ (function (_super) {
    __extends(EditLabelMouseListener, _super);
    function EditLabelMouseListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    EditLabelMouseListener.prototype.doubleClick = function (target, event) {
        var editableLabel = getEditableLabel(target);
        if (editableLabel) {
            return [EditLabelAction.create(editableLabel.id)];
        }
        return [];
    };
    return EditLabelMouseListener;
}(mouse_tool_1.MouseListener));
exports.EditLabelMouseListener = EditLabelMouseListener;
var EditLabelKeyListener = /** @class */ (function (_super) {
    __extends(EditLabelKeyListener, _super);
    function EditLabelKeyListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    EditLabelKeyListener.prototype.keyDown = function (element, event) {
        if ((0, keyboard_1.matchesKeystroke)(event, 'F2')) {
            var editableLabels = (0, iterable_1.toArray)(element.index.all()
                .filter(function (e) { return (0, model_1.isSelectable)(e) && e.selected; })).map(getEditableLabel)
                .filter(function (e) { return e !== undefined; });
            if (editableLabels.length === 1) {
                return [EditLabelAction.create(editableLabels[0].id)];
            }
        }
        return [];
    };
    return EditLabelKeyListener;
}(key_tool_1.KeyListener));
exports.EditLabelKeyListener = EditLabelKeyListener;
function getEditableLabel(element) {
    if ((0, model_2.isEditableLabel)(element)) {
        return element;
    }
    else if ((0, model_2.isWithEditableLabel)(element) && element.editableLabel) {
        return element.editableLabel;
    }
    return undefined;
}
exports.getEditableLabel = getEditableLabel;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/edit/edit-routing.js":
/*!****************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/edit/edit-routing.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SwitchEditModeCommand = exports.SwitchEditModeAction = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var command_1 = __webpack_require__(/*! ../../base/commands/command */ "./node_modules/sprotty/lib/base/commands/command.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "./node_modules/sprotty/lib/base/model/smodel.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/sprotty/lib/base/types.js");
var model_1 = __webpack_require__(/*! ../routing/model */ "./node_modules/sprotty/lib/features/routing/model.js");
var routing_1 = __webpack_require__(/*! ../routing/routing */ "./node_modules/sprotty/lib/features/routing/routing.js");
var model_2 = __webpack_require__(/*! ./model */ "./node_modules/sprotty/lib/features/edit/model.js");
var SwitchEditModeAction;
(function (SwitchEditModeAction) {
    SwitchEditModeAction.KIND = "switchEditMode";
    function create(options) {
        var _a, _b;
        return {
            kind: SwitchEditModeAction.KIND,
            elementsToActivate: (_a = options.elementsToActivate) !== null && _a !== void 0 ? _a : [],
            elementsToDeactivate: (_b = options.elementsToDeactivate) !== null && _b !== void 0 ? _b : []
        };
    }
    SwitchEditModeAction.create = create;
})(SwitchEditModeAction = exports.SwitchEditModeAction || (exports.SwitchEditModeAction = {}));
var SwitchEditModeCommand = /** @class */ (function (_super) {
    __extends(SwitchEditModeCommand, _super);
    function SwitchEditModeCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        _this.elementsToActivate = [];
        _this.elementsToDeactivate = [];
        _this.handlesToRemove = [];
        return _this;
    }
    SwitchEditModeCommand.prototype.execute = function (context) {
        var _this = this;
        var index = context.root.index;
        this.action.elementsToActivate.forEach(function (id) {
            var element = index.getById(id);
            if (element !== undefined)
                _this.elementsToActivate.push(element);
        });
        this.action.elementsToDeactivate.forEach(function (id) {
            var element = index.getById(id);
            if (element !== undefined)
                _this.elementsToDeactivate.push(element);
            if (element instanceof model_1.SRoutingHandle && element.parent instanceof model_1.SRoutableElement) {
                var parent_1 = element.parent;
                if (_this.shouldRemoveHandle(element, parent_1)) {
                    _this.handlesToRemove.push({ handle: element, parent: parent_1 });
                    _this.elementsToDeactivate.push(parent_1);
                    _this.elementsToActivate.push(parent_1);
                }
            }
        });
        return this.doExecute(context);
    };
    SwitchEditModeCommand.prototype.doExecute = function (context) {
        var _this = this;
        this.handlesToRemove.forEach(function (entry) {
            entry.point = entry.parent.routingPoints.splice(entry.handle.pointIndex, 1)[0];
        });
        this.elementsToDeactivate.forEach(function (element) {
            if (element instanceof model_1.SRoutableElement)
                element.removeAll(function (child) { return child instanceof model_1.SRoutingHandle; });
            else if (element instanceof model_1.SRoutingHandle) {
                element.editMode = false;
                if (element.danglingAnchor) {
                    if (element.parent instanceof model_1.SRoutableElement && element.danglingAnchor.original) {
                        if (element.parent.source === element.danglingAnchor)
                            element.parent.sourceId = element.danglingAnchor.original.id;
                        else if (element.parent.target === element.danglingAnchor)
                            element.parent.targetId = element.danglingAnchor.original.id;
                        element.danglingAnchor.parent.remove(element.danglingAnchor);
                        element.danglingAnchor = undefined;
                    }
                }
            }
        });
        this.elementsToActivate.forEach(function (element) {
            if ((0, model_2.canEditRouting)(element) && element instanceof smodel_1.SParentElement) {
                var router = _this.edgeRouterRegistry.get(element.routerKind);
                router.createRoutingHandles(element);
            }
            else if (element instanceof model_1.SRoutingHandle)
                element.editMode = true;
        });
        return context.root;
    };
    SwitchEditModeCommand.prototype.shouldRemoveHandle = function (handle, parent) {
        if (handle.kind === 'junction') {
            var route = this.edgeRouterRegistry.route(parent);
            return route.find(function (rp) { return rp.pointIndex === handle.pointIndex; }) === undefined;
        }
        return false;
    };
    SwitchEditModeCommand.prototype.undo = function (context) {
        var _this = this;
        this.handlesToRemove.forEach(function (entry) {
            if (entry.point !== undefined)
                entry.parent.routingPoints.splice(entry.handle.pointIndex, 0, entry.point);
        });
        this.elementsToActivate.forEach(function (element) {
            if (element instanceof model_1.SRoutableElement)
                element.removeAll(function (child) { return child instanceof model_1.SRoutingHandle; });
            else if (element instanceof model_1.SRoutingHandle)
                element.editMode = false;
        });
        this.elementsToDeactivate.forEach(function (element) {
            if ((0, model_2.canEditRouting)(element)) {
                var router = _this.edgeRouterRegistry.get(element.routerKind);
                router.createRoutingHandles(element);
            }
            else if (element instanceof model_1.SRoutingHandle)
                element.editMode = true;
        });
        return context.root;
    };
    SwitchEditModeCommand.prototype.redo = function (context) {
        return this.doExecute(context);
    };
    SwitchEditModeCommand.KIND = SwitchEditModeAction.KIND;
    __decorate([
        (0, inversify_1.inject)(routing_1.EdgeRouterRegistry),
        __metadata("design:type", routing_1.EdgeRouterRegistry)
    ], SwitchEditModeCommand.prototype, "edgeRouterRegistry", void 0);
    SwitchEditModeCommand = __decorate([
        (0, inversify_1.injectable)(),
        __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [Object])
    ], SwitchEditModeCommand);
    return SwitchEditModeCommand;
}(command_1.Command));
exports.SwitchEditModeCommand = SwitchEditModeCommand;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/edit/model.js":
/*!*********************************************************!*\
  !*** ./node_modules/sprotty/lib/features/edit/model.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2020 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isWithEditableLabel = exports.withEditLabelFeature = exports.isEditableLabel = exports.editLabelFeature = exports.canEditRouting = exports.editFeature = void 0;
var model_1 = __webpack_require__(/*! ../routing/model */ "./node_modules/sprotty/lib/features/routing/model.js");
exports.editFeature = Symbol('editFeature');
function canEditRouting(element) {
    return element instanceof model_1.SRoutableElement && element.hasFeature(exports.editFeature);
}
exports.canEditRouting = canEditRouting;
exports.editLabelFeature = Symbol('editLabelFeature');
function isEditableLabel(element) {
    return 'text' in element && element.hasFeature(exports.editLabelFeature);
}
exports.isEditableLabel = isEditableLabel;
exports.withEditLabelFeature = Symbol('withEditLabelFeature');
function isWithEditableLabel(element) {
    return 'editableLabel' in element && element.hasFeature(exports.withEditLabelFeature);
}
exports.isWithEditableLabel = isWithEditableLabel;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/edit/reconnect.js":
/*!*************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/edit/reconnect.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ReconnectCommand = exports.ReconnectAction = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var command_1 = __webpack_require__(/*! ../../base/commands/command */ "./node_modules/sprotty/lib/base/commands/command.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/sprotty/lib/base/types.js");
var model_1 = __webpack_require__(/*! ../routing/model */ "./node_modules/sprotty/lib/features/routing/model.js");
var routing_1 = __webpack_require__(/*! ../routing/routing */ "./node_modules/sprotty/lib/features/routing/routing.js");
var ReconnectAction;
(function (ReconnectAction) {
    ReconnectAction.KIND = 'reconnect';
    function create(options) {
        return {
            kind: ReconnectAction.KIND,
            routableId: options.routableId,
            newSourceId: options.newSourceId,
            newTargetId: options.newTargetId
        };
    }
    ReconnectAction.create = create;
})(ReconnectAction = exports.ReconnectAction || (exports.ReconnectAction = {}));
var ReconnectCommand = /** @class */ (function (_super) {
    __extends(ReconnectCommand, _super);
    function ReconnectCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    ReconnectCommand.prototype.execute = function (context) {
        this.doExecute(context);
        return context.root;
    };
    ReconnectCommand.prototype.doExecute = function (context) {
        var index = context.root.index;
        var edge = index.getById(this.action.routableId);
        if (edge instanceof model_1.SRoutableElement) {
            var router = this.edgeRouterRegistry.get(edge.routerKind);
            var before = router.takeSnapshot(edge);
            router.applyReconnect(edge, this.action.newSourceId, this.action.newTargetId);
            var after = router.takeSnapshot(edge);
            this.memento = {
                edge: edge,
                before: before,
                after: after
            };
        }
    };
    ReconnectCommand.prototype.undo = function (context) {
        if (this.memento) {
            var router = this.edgeRouterRegistry.get(this.memento.edge.routerKind);
            router.applySnapshot(this.memento.edge, this.memento.before);
        }
        return context.root;
    };
    ReconnectCommand.prototype.redo = function (context) {
        if (this.memento) {
            var router = this.edgeRouterRegistry.get(this.memento.edge.routerKind);
            router.applySnapshot(this.memento.edge, this.memento.after);
        }
        return context.root;
    };
    ReconnectCommand.KIND = ReconnectAction.KIND;
    __decorate([
        (0, inversify_1.inject)(routing_1.EdgeRouterRegistry),
        __metadata("design:type", routing_1.EdgeRouterRegistry)
    ], ReconnectCommand.prototype, "edgeRouterRegistry", void 0);
    ReconnectCommand = __decorate([
        (0, inversify_1.injectable)(),
        __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [Object])
    ], ReconnectCommand);
    return ReconnectCommand;
}(command_1.Command));
exports.ReconnectCommand = ReconnectCommand;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/expand/di.config.js":
/*!***************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/expand/di.config.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var button_handler_1 = __webpack_require__(/*! ../button/button-handler */ "./node_modules/sprotty/lib/features/button/button-handler.js");
var expand_1 = __webpack_require__(/*! ./expand */ "./node_modules/sprotty/lib/features/expand/expand.js");
var expandModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    (0, button_handler_1.configureButtonHandler)({ bind: bind, isBound: isBound }, expand_1.ExpandButtonHandler.TYPE, expand_1.ExpandButtonHandler);
});
exports["default"] = expandModule;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/expand/expand.js":
/*!************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/expand/expand.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ExpandButtonHandler = exports.CollapseExpandAllAction = exports.CollapseExpandAction = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "./node_modules/sprotty-protocol/lib/actions.js");
var smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "./node_modules/sprotty/lib/base/model/smodel-utils.js");
var model_1 = __webpack_require__(/*! ./model */ "./node_modules/sprotty/lib/features/expand/model.js");
/**
 * Sent from the client to the model source to recalculate a diagram when elements
 * are collapsed/expanded by the client.
 *
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
var CollapseExpandAction = /** @class */ (function () {
    function CollapseExpandAction(expandIds, collapseIds) {
        this.expandIds = expandIds;
        this.collapseIds = collapseIds;
        this.kind = CollapseExpandAction.KIND;
    }
    CollapseExpandAction.KIND = 'collapseExpand';
    return CollapseExpandAction;
}());
exports.CollapseExpandAction = CollapseExpandAction;
/**
 * Programmatic action for expanding or collapsing all elements.
 *
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
var CollapseExpandAllAction = /** @class */ (function () {
    /**
     * If `expand` is true, all elements are expanded, othewise they are collapsed.
     */
    function CollapseExpandAllAction(expand) {
        if (expand === void 0) { expand = true; }
        this.expand = expand;
        this.kind = CollapseExpandAllAction.KIND;
    }
    CollapseExpandAllAction.KIND = 'collapseExpandAll';
    return CollapseExpandAllAction;
}());
exports.CollapseExpandAllAction = CollapseExpandAllAction;
var ExpandButtonHandler = /** @class */ (function () {
    function ExpandButtonHandler() {
    }
    ExpandButtonHandler.prototype.buttonPressed = function (button) {
        var expandable = (0, smodel_utils_1.findParentByFeature)(button, model_1.isExpandable);
        if (expandable !== undefined) {
            return [actions_1.CollapseExpandAction.create({
                    expandIds: expandable.expanded ? [] : [expandable.id],
                    collapseIds: expandable.expanded ? [expandable.id] : []
                })];
        }
        else {
            return [];
        }
    };
    ExpandButtonHandler.TYPE = 'button:expand';
    ExpandButtonHandler = __decorate([
        (0, inversify_1.injectable)()
    ], ExpandButtonHandler);
    return ExpandButtonHandler;
}());
exports.ExpandButtonHandler = ExpandButtonHandler;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/expand/model.js":
/*!***********************************************************!*\
  !*** ./node_modules/sprotty/lib/features/expand/model.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isExpandable = exports.expandFeature = void 0;
exports.expandFeature = Symbol('expandFeature');
function isExpandable(element) {
    return element.hasFeature(exports.expandFeature) && 'expanded' in element;
}
exports.isExpandable = isExpandable;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/expand/views.js":
/*!***********************************************************!*\
  !*** ./node_modules/sprotty/lib/features/expand/views.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ExpandButtonView = void 0;
/** @jsx svg */
var jsx_1 = __webpack_require__(/*! ../../lib/jsx */ "./node_modules/sprotty/lib/lib/jsx.js");
var model_1 = __webpack_require__(/*! ./model */ "./node_modules/sprotty/lib/features/expand/model.js");
var smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "./node_modules/sprotty/lib/base/model/smodel-utils.js");
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var ExpandButtonView = /** @class */ (function () {
    function ExpandButtonView() {
    }
    ExpandButtonView.prototype.render = function (button, context) {
        var expandable = (0, smodel_utils_1.findParentByFeature)(button, model_1.isExpandable);
        var path = (expandable !== undefined && expandable.expanded)
            ? 'M 1,5 L 8,12 L 15,5 Z'
            : 'M 1,8 L 8,15 L 8,1 Z';
        return (0, jsx_1.svg)("g", { "class-sprotty-button": "{true}", "class-enabled": "{button.enabled}" },
            (0, jsx_1.svg)("rect", { x: 0, y: 0, width: 16, height: 16, opacity: 0 }),
            (0, jsx_1.svg)("path", { d: path }));
    };
    ExpandButtonView = __decorate([
        (0, inversify_1.injectable)()
    ], ExpandButtonView);
    return ExpandButtonView;
}());
exports.ExpandButtonView = ExpandButtonView;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/export/di.config.js":
/*!***************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/export/di.config.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/sprotty/lib/base/types.js");
var export_1 = __webpack_require__(/*! ./export */ "./node_modules/sprotty/lib/features/export/export.js");
var svg_exporter_1 = __webpack_require__(/*! ./svg-exporter */ "./node_modules/sprotty/lib/features/export/svg-exporter.js");
var command_registration_1 = __webpack_require__(/*! ../../base/commands/command-registration */ "./node_modules/sprotty/lib/base/commands/command-registration.js");
var exportSvgModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    bind(export_1.ExportSvgKeyListener).toSelf().inSingletonScope();
    bind(types_1.TYPES.KeyListener).toService(export_1.ExportSvgKeyListener);
    bind(types_1.TYPES.HiddenVNodePostprocessor).to(export_1.ExportSvgPostprocessor).inSingletonScope();
    (0, command_registration_1.configureCommand)({ bind: bind, isBound: isBound }, export_1.ExportSvgCommand);
    bind(types_1.TYPES.SvgExporter).to(svg_exporter_1.SvgExporter).inSingletonScope();
});
exports["default"] = exportSvgModule;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/export/export.js":
/*!************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/export/export.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ExportSvgPostprocessor = exports.ExportSvgCommand = exports.RequestExportSvgAction = exports.ExportSvgKeyListener = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "./node_modules/sprotty-protocol/lib/actions.js");
var command_1 = __webpack_require__(/*! ../../base/commands/command */ "./node_modules/sprotty/lib/base/commands/command.js");
var model_1 = __webpack_require__(/*! ../select/model */ "./node_modules/sprotty/lib/features/select/model.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "./node_modules/sprotty/lib/base/model/smodel.js");
var key_tool_1 = __webpack_require__(/*! ../../base/views/key-tool */ "./node_modules/sprotty/lib/base/views/key-tool.js");
var keyboard_1 = __webpack_require__(/*! ../../utils/keyboard */ "./node_modules/sprotty/lib/utils/keyboard.js");
var model_2 = __webpack_require__(/*! ./model */ "./node_modules/sprotty/lib/features/export/model.js");
var svg_exporter_1 = __webpack_require__(/*! ./svg-exporter */ "./node_modules/sprotty/lib/features/export/svg-exporter.js");
var model_3 = __webpack_require__(/*! ../viewport/model */ "./node_modules/sprotty/lib/features/viewport/model.js");
var model_4 = __webpack_require__(/*! ../hover/model */ "./node_modules/sprotty/lib/features/hover/model.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/sprotty/lib/base/types.js");
var ExportSvgKeyListener = /** @class */ (function (_super) {
    __extends(ExportSvgKeyListener, _super);
    function ExportSvgKeyListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ExportSvgKeyListener.prototype.keyDown = function (element, event) {
        if ((0, keyboard_1.matchesKeystroke)(event, 'KeyE', 'ctrlCmd', 'shift'))
            return [RequestExportSvgAction.create()];
        else
            return [];
    };
    ExportSvgKeyListener = __decorate([
        (0, inversify_1.injectable)()
    ], ExportSvgKeyListener);
    return ExportSvgKeyListener;
}(key_tool_1.KeyListener));
exports.ExportSvgKeyListener = ExportSvgKeyListener;
var RequestExportSvgAction;
(function (RequestExportSvgAction) {
    RequestExportSvgAction.KIND = 'requestExportSvg';
    function create() {
        return {
            kind: RequestExportSvgAction.KIND,
            requestId: (0, actions_1.generateRequestId)()
        };
    }
    RequestExportSvgAction.create = create;
})(RequestExportSvgAction = exports.RequestExportSvgAction || (exports.RequestExportSvgAction = {}));
var ExportSvgCommand = /** @class */ (function (_super) {
    __extends(ExportSvgCommand, _super);
    function ExportSvgCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    ExportSvgCommand.prototype.execute = function (context) {
        if ((0, model_2.isExportable)(context.root)) {
            var root = context.modelFactory.createRoot(context.root);
            if ((0, model_2.isExportable)(root)) {
                if ((0, model_3.isViewport)(root)) {
                    root.zoom = 1;
                    root.scroll = { x: 0, y: 0 };
                }
                root.index.all().forEach(function (element) {
                    if ((0, model_1.isSelectable)(element) && element.selected)
                        element.selected = false;
                    if ((0, model_4.isHoverable)(element) && element.hoverFeedback)
                        element.hoverFeedback = false;
                });
                return {
                    model: root,
                    modelChanged: true,
                    cause: this.action
                };
            }
        }
        return {
            model: context.root,
            modelChanged: false
        };
    };
    ExportSvgCommand.KIND = RequestExportSvgAction.KIND;
    ExportSvgCommand = __decorate([
        __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [Object])
    ], ExportSvgCommand);
    return ExportSvgCommand;
}(command_1.HiddenCommand));
exports.ExportSvgCommand = ExportSvgCommand;
var ExportSvgPostprocessor = /** @class */ (function () {
    function ExportSvgPostprocessor() {
    }
    ExportSvgPostprocessor.prototype.decorate = function (vnode, element) {
        if (element instanceof smodel_1.SModelRoot)
            this.root = element;
        return vnode;
    };
    ExportSvgPostprocessor.prototype.postUpdate = function (cause) {
        if (this.root && cause !== undefined && cause.kind === RequestExportSvgAction.KIND) {
            this.svgExporter.export(this.root, cause);
        }
    };
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.SvgExporter),
        __metadata("design:type", svg_exporter_1.SvgExporter)
    ], ExportSvgPostprocessor.prototype, "svgExporter", void 0);
    ExportSvgPostprocessor = __decorate([
        (0, inversify_1.injectable)()
    ], ExportSvgPostprocessor);
    return ExportSvgPostprocessor;
}());
exports.ExportSvgPostprocessor = ExportSvgPostprocessor;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/export/model.js":
/*!***********************************************************!*\
  !*** ./node_modules/sprotty/lib/features/export/model.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isExportable = exports.exportFeature = void 0;
exports.exportFeature = Symbol('exportFeature');
function isExportable(element) {
    return element.hasFeature(exports.exportFeature);
}
exports.isExportable = isExportable;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/export/svg-exporter.js":
/*!******************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/export/svg-exporter.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SvgExporter = exports.ExportSvgAction = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "./node_modules/sprotty-protocol/lib/utils/geometry.js");
var model_1 = __webpack_require__(/*! ../bounds/model */ "./node_modules/sprotty/lib/features/bounds/model.js");
var action_dispatcher_1 = __webpack_require__(/*! ../../base/actions/action-dispatcher */ "./node_modules/sprotty/lib/base/actions/action-dispatcher.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/sprotty/lib/base/types.js");
var ExportSvgAction;
(function (ExportSvgAction) {
    ExportSvgAction.KIND = 'exportSvg';
    function create(svg, requestId) {
        return {
            kind: ExportSvgAction.KIND,
            svg: svg,
            responseId: requestId
        };
    }
    ExportSvgAction.create = create;
})(ExportSvgAction = exports.ExportSvgAction || (exports.ExportSvgAction = {}));
var SvgExporter = /** @class */ (function () {
    function SvgExporter() {
    }
    SvgExporter.prototype.export = function (root, request) {
        if (typeof document !== 'undefined') {
            var div = document.getElementById(this.options.hiddenDiv);
            if (div !== null && div.firstElementChild && div.firstElementChild.tagName === 'svg') {
                var svgElement = div.firstElementChild;
                var svg = this.createSvg(svgElement, root);
                this.actionDispatcher.dispatch(ExportSvgAction.create(svg, request ? request.requestId : ''));
            }
        }
    };
    SvgExporter.prototype.createSvg = function (svgElementOrig, root) {
        var serializer = new XMLSerializer();
        var svgCopy = serializer.serializeToString(svgElementOrig);
        var iframe = document.createElement('iframe');
        document.body.appendChild(iframe);
        if (!iframe.contentWindow)
            throw new Error('IFrame has no contentWindow');
        var docCopy = iframe.contentWindow.document;
        docCopy.open();
        docCopy.write(svgCopy);
        docCopy.close();
        var svgElementNew = docCopy.getElementById(svgElementOrig.id);
        svgElementNew.removeAttribute('opacity');
        this.copyStyles(svgElementOrig, svgElementNew, ['width', 'height', 'opacity']);
        svgElementNew.setAttribute('version', '1.1');
        var bounds = this.getBounds(root);
        svgElementNew.setAttribute('viewBox', "".concat(bounds.x, " ").concat(bounds.y, " ").concat(bounds.width, " ").concat(bounds.height));
        var svgCode = serializer.serializeToString(svgElementNew);
        document.body.removeChild(iframe);
        return svgCode;
    };
    SvgExporter.prototype.copyStyles = function (source, target, skipedProperties) {
        var sourceStyle = getComputedStyle(source);
        var targetStyle = getComputedStyle(target);
        var diffStyle = '';
        for (var i = 0; i < sourceStyle.length; i++) {
            var key = sourceStyle[i];
            if (skipedProperties.indexOf(key) === -1) {
                var value = sourceStyle.getPropertyValue(key);
                if (targetStyle.getPropertyValue(key) !== value) {
                    diffStyle += key + ":" + value + ";";
                }
            }
        }
        if (diffStyle !== '')
            target.setAttribute('style', diffStyle);
        // IE doesn't retrun anything on source.children
        for (var i = 0; i < source.childNodes.length; ++i) {
            var sourceChild = source.childNodes[i];
            var targetChild = target.childNodes[i];
            if (sourceChild instanceof Element)
                this.copyStyles(sourceChild, targetChild, []);
        }
    };
    SvgExporter.prototype.getBounds = function (root) {
        var allBounds = [geometry_1.Bounds.EMPTY];
        root.children.forEach(function (element) {
            if ((0, model_1.isBoundsAware)(element)) {
                allBounds.push(element.bounds);
            }
        });
        return allBounds.reduce(function (one, two) { return geometry_1.Bounds.combine(one, two); });
    };
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.ViewerOptions),
        __metadata("design:type", Object)
    ], SvgExporter.prototype, "options", void 0);
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.IActionDispatcher),
        __metadata("design:type", action_dispatcher_1.ActionDispatcher)
    ], SvgExporter.prototype, "actionDispatcher", void 0);
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.ILogger),
        __metadata("design:type", Object)
    ], SvgExporter.prototype, "log", void 0);
    SvgExporter = __decorate([
        (0, inversify_1.injectable)()
    ], SvgExporter);
    return SvgExporter;
}());
exports.SvgExporter = SvgExporter;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/fade/di.config.js":
/*!*************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/fade/di.config.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/sprotty/lib/base/types.js");
var fade_1 = __webpack_require__(/*! ./fade */ "./node_modules/sprotty/lib/features/fade/fade.js");
var fadeModule = new inversify_1.ContainerModule(function (bind) {
    bind(types_1.TYPES.IVNodePostprocessor).to(fade_1.ElementFader).inSingletonScope();
});
exports["default"] = fadeModule;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/fade/fade.js":
/*!********************************************************!*\
  !*** ./node_modules/sprotty/lib/features/fade/fade.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ElementFader = exports.FadeAnimation = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var animation_1 = __webpack_require__(/*! ../../base/animations/animation */ "./node_modules/sprotty/lib/base/animations/animation.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "./node_modules/sprotty/lib/base/model/smodel.js");
var vnode_utils_1 = __webpack_require__(/*! ../../base/views/vnode-utils */ "./node_modules/sprotty/lib/base/views/vnode-utils.js");
var model_1 = __webpack_require__(/*! ./model */ "./node_modules/sprotty/lib/features/fade/model.js");
var FadeAnimation = /** @class */ (function (_super) {
    __extends(FadeAnimation, _super);
    function FadeAnimation(model, elementFades, context, removeAfterFadeOut) {
        if (removeAfterFadeOut === void 0) { removeAfterFadeOut = false; }
        var _this = _super.call(this, context) || this;
        _this.model = model;
        _this.elementFades = elementFades;
        _this.removeAfterFadeOut = removeAfterFadeOut;
        return _this;
    }
    FadeAnimation.prototype.tween = function (t, context) {
        for (var _i = 0, _a = this.elementFades; _i < _a.length; _i++) {
            var elementFade = _a[_i];
            var element = elementFade.element;
            if (elementFade.type === 'in') {
                element.opacity = t;
            }
            else if (elementFade.type === 'out') {
                element.opacity = 1 - t;
                if (t === 1 && this.removeAfterFadeOut && element instanceof smodel_1.SChildElement) {
                    element.parent.remove(element);
                }
            }
        }
        return this.model;
    };
    return FadeAnimation;
}(animation_1.Animation));
exports.FadeAnimation = FadeAnimation;
var ElementFader = /** @class */ (function () {
    function ElementFader() {
    }
    ElementFader.prototype.decorate = function (vnode, element) {
        if ((0, model_1.isFadeable)(element) && element.opacity !== 1) {
            (0, vnode_utils_1.setAttr)(vnode, 'opacity', element.opacity);
        }
        return vnode;
    };
    ElementFader.prototype.postUpdate = function () {
    };
    ElementFader = __decorate([
        (0, inversify_1.injectable)()
    ], ElementFader);
    return ElementFader;
}());
exports.ElementFader = ElementFader;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/fade/model.js":
/*!*********************************************************!*\
  !*** ./node_modules/sprotty/lib/features/fade/model.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isFadeable = exports.fadeFeature = void 0;
exports.fadeFeature = Symbol('fadeFeature');
function isFadeable(element) {
    return element.hasFeature(exports.fadeFeature) && element['opacity'] !== undefined;
}
exports.isFadeable = isFadeable;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/hover/di.config.js":
/*!**************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/hover/di.config.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/sprotty/lib/base/types.js");
var hover_1 = __webpack_require__(/*! ./hover */ "./node_modules/sprotty/lib/features/hover/hover.js");
var popup_position_updater_1 = __webpack_require__(/*! ./popup-position-updater */ "./node_modules/sprotty/lib/features/hover/popup-position-updater.js");
var command_registration_1 = __webpack_require__(/*! ../../base/commands/command-registration */ "./node_modules/sprotty/lib/base/commands/command-registration.js");
var action_handler_1 = __webpack_require__(/*! ../../base/actions/action-handler */ "./node_modules/sprotty/lib/base/actions/action-handler.js");
var center_fit_1 = __webpack_require__(/*! ../viewport/center-fit */ "./node_modules/sprotty/lib/features/viewport/center-fit.js");
var viewport_1 = __webpack_require__(/*! ../viewport/viewport */ "./node_modules/sprotty/lib/features/viewport/viewport.js");
var move_1 = __webpack_require__(/*! ../move/move */ "./node_modules/sprotty/lib/features/move/move.js");
var hoverModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    bind(types_1.TYPES.PopupVNodePostprocessor).to(popup_position_updater_1.PopupPositionUpdater).inSingletonScope();
    bind(hover_1.HoverMouseListener).toSelf().inSingletonScope();
    bind(types_1.TYPES.MouseListener).toService(hover_1.HoverMouseListener);
    bind(hover_1.PopupHoverMouseListener).toSelf().inSingletonScope();
    bind(types_1.TYPES.PopupMouseListener).toService(hover_1.PopupHoverMouseListener);
    bind(hover_1.HoverKeyListener).toSelf().inSingletonScope();
    bind(types_1.TYPES.KeyListener).toService(hover_1.HoverKeyListener);
    bind(types_1.TYPES.HoverState).toConstantValue({
        mouseOverTimer: undefined,
        mouseOutTimer: undefined,
        popupOpen: false,
        previousPopupElement: undefined
    });
    bind(hover_1.ClosePopupActionHandler).toSelf().inSingletonScope();
    var context = { bind: bind, isBound: isBound };
    (0, command_registration_1.configureCommand)(context, hover_1.HoverFeedbackCommand);
    (0, command_registration_1.configureCommand)(context, hover_1.SetPopupModelCommand);
    (0, action_handler_1.configureActionHandler)(context, hover_1.SetPopupModelCommand.KIND, hover_1.ClosePopupActionHandler);
    (0, action_handler_1.configureActionHandler)(context, center_fit_1.FitToScreenCommand.KIND, hover_1.ClosePopupActionHandler);
    (0, action_handler_1.configureActionHandler)(context, center_fit_1.CenterCommand.KIND, hover_1.ClosePopupActionHandler);
    (0, action_handler_1.configureActionHandler)(context, viewport_1.SetViewportCommand.KIND, hover_1.ClosePopupActionHandler);
    (0, action_handler_1.configureActionHandler)(context, move_1.MoveCommand.KIND, hover_1.ClosePopupActionHandler);
});
exports["default"] = hoverModule;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/hover/hover.js":
/*!**********************************************************!*\
  !*** ./node_modules/sprotty/lib/features/hover/hover.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ClosePopupActionHandler = exports.HoverKeyListener = exports.PopupHoverMouseListener = exports.HoverMouseListener = exports.AbstractHoverMouseListener = exports.SetPopupModelCommand = exports.SetPopupModelAction = exports.RequestPopupModelAction = exports.HoverFeedbackCommand = exports.HoverFeedbackAction = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "./node_modules/sprotty-protocol/lib/actions.js");
var geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "./node_modules/sprotty-protocol/lib/utils/geometry.js");
var keyboard_1 = __webpack_require__(/*! ../../utils/keyboard */ "./node_modules/sprotty/lib/utils/keyboard.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/sprotty/lib/base/types.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "./node_modules/sprotty/lib/base/model/smodel.js");
var mouse_tool_1 = __webpack_require__(/*! ../../base/views/mouse-tool */ "./node_modules/sprotty/lib/base/views/mouse-tool.js");
var command_1 = __webpack_require__(/*! ../../base/commands/command */ "./node_modules/sprotty/lib/base/commands/command.js");
var smodel_factory_1 = __webpack_require__(/*! ../../base/model/smodel-factory */ "./node_modules/sprotty/lib/base/model/smodel-factory.js");
var key_tool_1 = __webpack_require__(/*! ../../base/views/key-tool */ "./node_modules/sprotty/lib/base/views/key-tool.js");
var smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "./node_modules/sprotty/lib/base/model/smodel-utils.js");
var model_1 = __webpack_require__(/*! ../bounds/model */ "./node_modules/sprotty/lib/features/bounds/model.js");
var model_2 = __webpack_require__(/*! ./model */ "./node_modules/sprotty/lib/features/hover/model.js");
var HoverFeedbackAction;
(function (HoverFeedbackAction) {
    HoverFeedbackAction.KIND = 'hoverFeedback';
    function create(options) {
        return {
            kind: HoverFeedbackAction.KIND,
            mouseoverElement: options.mouseoverElement,
            mouseIsOver: options.mouseIsOver
        };
    }
    HoverFeedbackAction.create = create;
})(HoverFeedbackAction = exports.HoverFeedbackAction || (exports.HoverFeedbackAction = {}));
var HoverFeedbackCommand = /** @class */ (function (_super) {
    __extends(HoverFeedbackCommand, _super);
    function HoverFeedbackCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    HoverFeedbackCommand.prototype.execute = function (context) {
        var model = context.root;
        var modelElement = model.index.getById(this.action.mouseoverElement);
        if (modelElement) {
            if ((0, model_2.isHoverable)(modelElement)) {
                modelElement.hoverFeedback = this.action.mouseIsOver;
            }
        }
        return this.redo(context);
    };
    HoverFeedbackCommand.prototype.undo = function (context) {
        return context.root;
    };
    HoverFeedbackCommand.prototype.redo = function (context) {
        return context.root;
    };
    HoverFeedbackCommand.KIND = HoverFeedbackAction.KIND;
    HoverFeedbackCommand = __decorate([
        (0, inversify_1.injectable)(),
        __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [Object])
    ], HoverFeedbackCommand);
    return HoverFeedbackCommand;
}(command_1.SystemCommand));
exports.HoverFeedbackCommand = HoverFeedbackCommand;
/**
 * Triggered when the user hovers the mouse pointer over an element to get a popup with details on
 * that element. This action is sent from the client to the model source, e.g. a DiagramServer.
 * The response is a SetPopupModelAction.
 *
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
var RequestPopupModelAction = /** @class */ (function () {
    function RequestPopupModelAction(elementId, bounds, requestId) {
        if (requestId === void 0) { requestId = ''; }
        this.elementId = elementId;
        this.bounds = bounds;
        this.requestId = requestId;
        this.kind = RequestPopupModelAction.KIND;
    }
    /** Factory function to dispatch a request with the `IActionDispatcher` */
    RequestPopupModelAction.create = function (elementId, bounds) {
        return new RequestPopupModelAction(elementId, bounds, (0, actions_1.generateRequestId)());
    };
    RequestPopupModelAction.KIND = 'requestPopupModel';
    return RequestPopupModelAction;
}());
exports.RequestPopupModelAction = RequestPopupModelAction;
/**
 * Sent from the model source to the client to display a popup in response to a RequestPopupModelAction.
 * This action can also be used to remove any existing popup by choosing EMPTY_ROOT as root element.
 *
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
var SetPopupModelAction = /** @class */ (function () {
    function SetPopupModelAction(newRoot, responseId) {
        if (responseId === void 0) { responseId = ''; }
        this.newRoot = newRoot;
        this.responseId = responseId;
        this.kind = SetPopupModelAction.KIND;
    }
    SetPopupModelAction.KIND = 'setPopupModel';
    return SetPopupModelAction;
}());
exports.SetPopupModelAction = SetPopupModelAction;
var SetPopupModelCommand = /** @class */ (function (_super) {
    __extends(SetPopupModelCommand, _super);
    function SetPopupModelCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    SetPopupModelCommand.prototype.execute = function (context) {
        this.oldRoot = context.root;
        this.newRoot = context.modelFactory.createRoot(this.action.newRoot);
        return this.newRoot;
    };
    SetPopupModelCommand.prototype.undo = function (context) {
        return this.oldRoot;
    };
    SetPopupModelCommand.prototype.redo = function (context) {
        return this.newRoot;
    };
    SetPopupModelCommand.KIND = actions_1.SetPopupModelAction.KIND;
    SetPopupModelCommand = __decorate([
        (0, inversify_1.injectable)(),
        __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [Object])
    ], SetPopupModelCommand);
    return SetPopupModelCommand;
}(command_1.PopupCommand));
exports.SetPopupModelCommand = SetPopupModelCommand;
var AbstractHoverMouseListener = /** @class */ (function (_super) {
    __extends(AbstractHoverMouseListener, _super);
    function AbstractHoverMouseListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AbstractHoverMouseListener.prototype.mouseDown = function (target, event) {
        this.mouseIsDown = true;
        return [];
    };
    AbstractHoverMouseListener.prototype.mouseUp = function (target, event) {
        this.mouseIsDown = false;
        return [];
    };
    AbstractHoverMouseListener.prototype.stopMouseOutTimer = function () {
        if (this.state.mouseOutTimer !== undefined) {
            window.clearTimeout(this.state.mouseOutTimer);
            this.state.mouseOutTimer = undefined;
        }
    };
    AbstractHoverMouseListener.prototype.startMouseOutTimer = function () {
        var _this = this;
        this.stopMouseOutTimer();
        return new Promise(function (resolve) {
            _this.state.mouseOutTimer = window.setTimeout(function () {
                _this.state.popupOpen = false;
                _this.state.previousPopupElement = undefined;
                resolve(new SetPopupModelAction({ type: smodel_factory_1.EMPTY_ROOT.type, id: smodel_factory_1.EMPTY_ROOT.id }));
            }, _this.options.popupCloseDelay);
        });
    };
    AbstractHoverMouseListener.prototype.stopMouseOverTimer = function () {
        if (this.state.mouseOverTimer !== undefined) {
            window.clearTimeout(this.state.mouseOverTimer);
            this.state.mouseOverTimer = undefined;
        }
    };
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.ViewerOptions),
        __metadata("design:type", Object)
    ], AbstractHoverMouseListener.prototype, "options", void 0);
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.HoverState),
        __metadata("design:type", Object)
    ], AbstractHoverMouseListener.prototype, "state", void 0);
    return AbstractHoverMouseListener;
}(mouse_tool_1.MouseListener));
exports.AbstractHoverMouseListener = AbstractHoverMouseListener;
var HoverMouseListener = /** @class */ (function (_super) {
    __extends(HoverMouseListener, _super);
    function HoverMouseListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HoverMouseListener.prototype.computePopupBounds = function (target, mousePosition) {
        // Default position: below the mouse cursor
        var offset = { x: -5, y: 20 };
        var targetBounds = (0, model_1.getAbsoluteBounds)(target);
        var canvasBounds = target.root.canvasBounds;
        var boundsInWindow = geometry_1.Bounds.translate(targetBounds, canvasBounds);
        var distRight = boundsInWindow.x + boundsInWindow.width - mousePosition.x;
        var distBottom = boundsInWindow.y + boundsInWindow.height - mousePosition.y;
        if (distBottom <= distRight && this.allowSidePosition(target, 'below', distBottom)) {
            // Put the popup below the target element
            offset = { x: -5, y: Math.round(distBottom + 5) };
        }
        else if (distRight <= distBottom && this.allowSidePosition(target, 'right', distRight)) {
            // Put the popup right of the target element
            offset = { x: Math.round(distRight + 5), y: -5 };
        }
        var leftPopupPosition = mousePosition.x + offset.x;
        var canvasRightBorderPosition = canvasBounds.x + canvasBounds.width;
        if (leftPopupPosition > canvasRightBorderPosition) {
            leftPopupPosition = canvasRightBorderPosition;
        }
        var topPopupPosition = mousePosition.y + offset.y;
        var canvasBottomBorderPosition = canvasBounds.y + canvasBounds.height;
        if (topPopupPosition > canvasBottomBorderPosition) {
            topPopupPosition = canvasBottomBorderPosition;
        }
        return { x: leftPopupPosition, y: topPopupPosition, width: -1, height: -1 };
    };
    HoverMouseListener.prototype.allowSidePosition = function (target, side, distance) {
        return !(target instanceof smodel_1.SModelRoot) && distance <= 150;
    };
    HoverMouseListener.prototype.startMouseOverTimer = function (target, event) {
        var _this = this;
        this.stopMouseOverTimer();
        return new Promise(function (resolve) {
            _this.state.mouseOverTimer = window.setTimeout(function () {
                var popupBounds = _this.computePopupBounds(target, { x: event.pageX, y: event.pageY });
                resolve(new RequestPopupModelAction(target.id, popupBounds));
                _this.state.popupOpen = true;
                _this.state.previousPopupElement = target;
            }, _this.options.popupOpenDelay);
        });
    };
    HoverMouseListener.prototype.mouseOver = function (target, event) {
        var result = [];
        if (!this.mouseIsDown) {
            var popupTarget = (0, smodel_utils_1.findParent)(target, model_2.hasPopupFeature);
            if (this.state.popupOpen && (popupTarget === undefined ||
                this.state.previousPopupElement !== undefined && this.state.previousPopupElement.id !== popupTarget.id)) {
                result.push(this.startMouseOutTimer());
            }
            else {
                this.stopMouseOverTimer();
                this.stopMouseOutTimer();
            }
            if (popupTarget !== undefined &&
                (this.state.previousPopupElement === undefined || this.state.previousPopupElement.id !== popupTarget.id)) {
                result.push(this.startMouseOverTimer(popupTarget, event));
            }
            if (this.lastHoverFeedbackElementId) {
                result.push(HoverFeedbackAction.create({ mouseoverElement: this.lastHoverFeedbackElementId, mouseIsOver: false }));
                this.lastHoverFeedbackElementId = undefined;
            }
            var hoverTarget = (0, smodel_utils_1.findParentByFeature)(target, model_2.isHoverable);
            if (hoverTarget !== undefined) {
                result.push(HoverFeedbackAction.create({ mouseoverElement: hoverTarget.id, mouseIsOver: true }));
                this.lastHoverFeedbackElementId = hoverTarget.id;
            }
        }
        return result;
    };
    HoverMouseListener.prototype.mouseOut = function (target, event) {
        var result = [];
        if (!this.mouseIsDown) {
            var elementUnderMouse = this.getElementFromEventPosition(event);
            if (!this.isSprottyPopup(elementUnderMouse)) {
                if (this.state.popupOpen) {
                    var popupTarget = (0, smodel_utils_1.findParent)(target, model_2.hasPopupFeature);
                    if (this.state.previousPopupElement !== undefined && popupTarget !== undefined
                        && this.state.previousPopupElement.id === popupTarget.id)
                        result.push(this.startMouseOutTimer());
                }
                this.stopMouseOverTimer();
                var hoverTarget = (0, smodel_utils_1.findParentByFeature)(target, model_2.isHoverable);
                if (hoverTarget !== undefined) {
                    result.push(HoverFeedbackAction.create({ mouseoverElement: hoverTarget.id, mouseIsOver: false }));
                    if (this.lastHoverFeedbackElementId && this.lastHoverFeedbackElementId !== hoverTarget.id) {
                        result.push(HoverFeedbackAction.create({ mouseoverElement: this.lastHoverFeedbackElementId, mouseIsOver: false }));
                    }
                    this.lastHoverFeedbackElementId = undefined;
                }
            }
        }
        return result;
    };
    HoverMouseListener.prototype.getElementFromEventPosition = function (event) {
        return document.elementFromPoint(event.x, event.y);
    };
    HoverMouseListener.prototype.isSprottyPopup = function (element) {
        return element
            ? (element.id === this.options.popupDiv
                || (!!element.parentElement && this.isSprottyPopup(element.parentElement)))
            : false;
    };
    HoverMouseListener.prototype.mouseMove = function (target, event) {
        var result = [];
        if (!this.mouseIsDown) {
            if (this.state.previousPopupElement !== undefined && this.closeOnMouseMove(this.state.previousPopupElement, event)) {
                result.push(this.startMouseOutTimer());
            }
            var popupTarget = (0, smodel_utils_1.findParent)(target, model_2.hasPopupFeature);
            if (popupTarget !== undefined && (this.state.previousPopupElement === undefined
                || this.state.previousPopupElement.id !== popupTarget.id)) {
                result.push(this.startMouseOverTimer(popupTarget, event));
            }
        }
        return result;
    };
    HoverMouseListener.prototype.closeOnMouseMove = function (target, event) {
        return target instanceof smodel_1.SModelRoot;
    };
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.ViewerOptions),
        __metadata("design:type", Object)
    ], HoverMouseListener.prototype, "options", void 0);
    HoverMouseListener = __decorate([
        (0, inversify_1.injectable)()
    ], HoverMouseListener);
    return HoverMouseListener;
}(AbstractHoverMouseListener));
exports.HoverMouseListener = HoverMouseListener;
var PopupHoverMouseListener = /** @class */ (function (_super) {
    __extends(PopupHoverMouseListener, _super);
    function PopupHoverMouseListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PopupHoverMouseListener.prototype.mouseOut = function (target, event) {
        return [this.startMouseOutTimer()];
    };
    PopupHoverMouseListener.prototype.mouseOver = function (target, event) {
        this.stopMouseOutTimer();
        this.stopMouseOverTimer();
        return [];
    };
    PopupHoverMouseListener = __decorate([
        (0, inversify_1.injectable)()
    ], PopupHoverMouseListener);
    return PopupHoverMouseListener;
}(AbstractHoverMouseListener));
exports.PopupHoverMouseListener = PopupHoverMouseListener;
var HoverKeyListener = /** @class */ (function (_super) {
    __extends(HoverKeyListener, _super);
    function HoverKeyListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HoverKeyListener.prototype.keyDown = function (element, event) {
        if ((0, keyboard_1.matchesKeystroke)(event, 'Escape')) {
            return [new SetPopupModelAction({ type: smodel_factory_1.EMPTY_ROOT.type, id: smodel_factory_1.EMPTY_ROOT.id })];
        }
        return [];
    };
    return HoverKeyListener;
}(key_tool_1.KeyListener));
exports.HoverKeyListener = HoverKeyListener;
var ClosePopupActionHandler = /** @class */ (function () {
    function ClosePopupActionHandler() {
        this.popupOpen = false;
    }
    ClosePopupActionHandler.prototype.handle = function (action) {
        if (action.kind === SetPopupModelCommand.KIND) {
            this.popupOpen = action.newRoot.type !== smodel_factory_1.EMPTY_ROOT.type;
        }
        else if (this.popupOpen) {
            return new SetPopupModelAction({ id: smodel_factory_1.EMPTY_ROOT.id, type: smodel_factory_1.EMPTY_ROOT.type });
        }
    };
    ClosePopupActionHandler = __decorate([
        (0, inversify_1.injectable)()
    ], ClosePopupActionHandler);
    return ClosePopupActionHandler;
}());
exports.ClosePopupActionHandler = ClosePopupActionHandler;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/hover/model.js":
/*!**********************************************************!*\
  !*** ./node_modules/sprotty/lib/features/hover/model.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.hasPopupFeature = exports.popupFeature = exports.isHoverable = exports.hoverFeedbackFeature = void 0;
exports.hoverFeedbackFeature = Symbol('hoverFeedbackFeature');
function isHoverable(element) {
    return element.hasFeature(exports.hoverFeedbackFeature);
}
exports.isHoverable = isHoverable;
exports.popupFeature = Symbol('popupFeature');
function hasPopupFeature(element) {
    return element.hasFeature(exports.popupFeature);
}
exports.hasPopupFeature = hasPopupFeature;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/hover/popup-position-updater.js":
/*!***************************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/hover/popup-position-updater.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PopupPositionUpdater = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/sprotty/lib/base/types.js");
var PopupPositionUpdater = /** @class */ (function () {
    function PopupPositionUpdater() {
    }
    PopupPositionUpdater.prototype.decorate = function (vnode, element) {
        return vnode;
    };
    PopupPositionUpdater.prototype.postUpdate = function () {
        var popupDiv = document.getElementById(this.options.popupDiv);
        if (popupDiv !== null && typeof window !== 'undefined') {
            var boundingClientRect = popupDiv.getBoundingClientRect();
            if (window.innerHeight < boundingClientRect.height + boundingClientRect.top) {
                popupDiv.style.top = (window.pageYOffset + window.innerHeight - boundingClientRect.height - 5) + 'px';
            }
            if (window.innerWidth < boundingClientRect.left + boundingClientRect.width) {
                popupDiv.style.left = (window.pageXOffset + window.innerWidth - boundingClientRect.width - 5) + 'px';
            }
            if (boundingClientRect.left < 0) {
                popupDiv.style.left = '0px';
            }
            if (boundingClientRect.top < 0) {
                popupDiv.style.top = '0px';
            }
        }
    };
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.ViewerOptions),
        __metadata("design:type", Object)
    ], PopupPositionUpdater.prototype, "options", void 0);
    PopupPositionUpdater = __decorate([
        (0, inversify_1.injectable)()
    ], PopupPositionUpdater);
    return PopupPositionUpdater;
}());
exports.PopupPositionUpdater = PopupPositionUpdater;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/move/di.config.js":
/*!*************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/move/di.config.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/sprotty/lib/base/types.js");
var move_1 = __webpack_require__(/*! ./move */ "./node_modules/sprotty/lib/features/move/move.js");
var command_registration_1 = __webpack_require__(/*! ../../base/commands/command-registration */ "./node_modules/sprotty/lib/base/commands/command-registration.js");
var moveModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    bind(move_1.MoveMouseListener).toSelf().inSingletonScope();
    bind(types_1.TYPES.MouseListener).toService(move_1.MoveMouseListener);
    (0, command_registration_1.configureCommand)({ bind: bind, isBound: isBound }, move_1.MoveCommand);
    bind(move_1.LocationPostprocessor).toSelf().inSingletonScope();
    bind(types_1.TYPES.IVNodePostprocessor).toService(move_1.LocationPostprocessor);
    bind(types_1.TYPES.HiddenVNodePostprocessor).toService(move_1.LocationPostprocessor);
});
exports["default"] = moveModule;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/move/model.js":
/*!*********************************************************!*\
  !*** ./node_modules/sprotty/lib/features/move/model.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isMoveable = exports.isLocateable = exports.moveFeature = void 0;
exports.moveFeature = Symbol('moveFeature');
function isLocateable(element) {
    return element['position'] !== undefined;
}
exports.isLocateable = isLocateable;
function isMoveable(element) {
    return element.hasFeature(exports.moveFeature) && isLocateable(element);
}
exports.isMoveable = isMoveable;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/move/move.js":
/*!********************************************************!*\
  !*** ./node_modules/sprotty/lib/features/move/move.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2020 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LocationPostprocessor = exports.MoveMouseListener = exports.MorphEdgesAnimation = exports.MoveAnimation = exports.MoveCommand = exports.MoveAction = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "./node_modules/sprotty-protocol/lib/utils/geometry.js");
var actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "./node_modules/sprotty-protocol/lib/actions.js");
var animation_1 = __webpack_require__(/*! ../../base/animations/animation */ "./node_modules/sprotty/lib/base/animations/animation.js");
var command_1 = __webpack_require__(/*! ../../base/commands/command */ "./node_modules/sprotty/lib/base/commands/command.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "./node_modules/sprotty/lib/base/model/smodel.js");
var smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "./node_modules/sprotty/lib/base/model/smodel-utils.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/sprotty/lib/base/types.js");
var mouse_tool_1 = __webpack_require__(/*! ../../base/views/mouse-tool */ "./node_modules/sprotty/lib/base/views/mouse-tool.js");
var vnode_utils_1 = __webpack_require__(/*! ../../base/views/vnode-utils */ "./node_modules/sprotty/lib/base/views/vnode-utils.js");
var sgraph_1 = __webpack_require__(/*! ../../graph/sgraph */ "./node_modules/sprotty/lib/graph/sgraph.js");
var commit_model_1 = __webpack_require__(/*! ../../model-source/commit-model */ "./node_modules/sprotty/lib/model-source/commit-model.js");
var model_1 = __webpack_require__(/*! ../bounds/model */ "./node_modules/sprotty/lib/features/bounds/model.js");
var create_on_drag_1 = __webpack_require__(/*! ../edit/create-on-drag */ "./node_modules/sprotty/lib/features/edit/create-on-drag.js");
var edit_routing_1 = __webpack_require__(/*! ../edit/edit-routing */ "./node_modules/sprotty/lib/features/edit/edit-routing.js");
var reconnect_1 = __webpack_require__(/*! ../edit/reconnect */ "./node_modules/sprotty/lib/features/edit/reconnect.js");
var model_2 = __webpack_require__(/*! ../routing/model */ "./node_modules/sprotty/lib/features/routing/model.js");
var routing_1 = __webpack_require__(/*! ../routing/routing */ "./node_modules/sprotty/lib/features/routing/routing.js");
var model_3 = __webpack_require__(/*! ../edge-layout/model */ "./node_modules/sprotty/lib/features/edge-layout/model.js");
var model_4 = __webpack_require__(/*! ../select/model */ "./node_modules/sprotty/lib/features/select/model.js");
var model_5 = __webpack_require__(/*! ../viewport/model */ "./node_modules/sprotty/lib/features/viewport/model.js");
var model_6 = __webpack_require__(/*! ./model */ "./node_modules/sprotty/lib/features/move/model.js");
var MoveAction;
(function (MoveAction) {
    MoveAction.KIND = 'move';
    function create(moves, options) {
        var _a, _b;
        if (options === void 0) { options = {}; }
        return {
            kind: MoveAction.KIND,
            moves: moves,
            animate: (_a = options.animate) !== null && _a !== void 0 ? _a : true,
            finished: (_b = options.finished) !== null && _b !== void 0 ? _b : false
        };
    }
    MoveAction.create = create;
})(MoveAction = exports.MoveAction || (exports.MoveAction = {}));
var MoveCommand = /** @class */ (function (_super) {
    __extends(MoveCommand, _super);
    function MoveCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        _this.resolvedMoves = new Map;
        _this.edgeMementi = [];
        return _this;
    }
    MoveCommand_1 = MoveCommand;
    MoveCommand.prototype.execute = function (context) {
        var _this = this;
        var index = context.root.index;
        var edge2handleMoves = new Map();
        var attachedEdgeShifts = new Map();
        this.action.moves.forEach(function (move) {
            var element = index.getById(move.elementId);
            if (element instanceof model_2.SRoutingHandle && _this.edgeRouterRegistry) {
                var edge = element.parent;
                if (edge instanceof model_2.SRoutableElement) {
                    var resolvedMove = _this.resolveHandleMove(element, edge, move);
                    if (resolvedMove) {
                        var movesByEdge = edge2handleMoves.get(edge);
                        if (!movesByEdge) {
                            movesByEdge = [];
                            edge2handleMoves.set(edge, movesByEdge);
                        }
                        movesByEdge.push(resolvedMove);
                    }
                }
            }
            else if (element && (0, model_6.isLocateable)(element)) {
                var resolvedMove_1 = _this.resolveElementMove(element, move);
                if (resolvedMove_1) {
                    _this.resolvedMoves.set(resolvedMove_1.element.id, resolvedMove_1);
                    if (_this.edgeRouterRegistry) {
                        index.getAttachedElements(element).forEach(function (edge) {
                            if (edge instanceof model_2.SRoutableElement) {
                                var existingDelta = attachedEdgeShifts.get(edge);
                                var newDelta = geometry_1.Point.subtract(resolvedMove_1.toPosition, resolvedMove_1.fromPosition);
                                var delta = (existingDelta)
                                    ? geometry_1.Point.linear(existingDelta, newDelta, 0.5)
                                    : newDelta;
                                attachedEdgeShifts.set(edge, delta);
                            }
                        });
                    }
                }
            }
        });
        this.doMove(edge2handleMoves, attachedEdgeShifts);
        if (this.action.animate) {
            this.undoMove();
            return new animation_1.CompoundAnimation(context.root, context, [
                new MoveAnimation(context.root, this.resolvedMoves, context, false),
                new MorphEdgesAnimation(context.root, this.edgeMementi, context, false)
            ]).start();
        }
        return context.root;
    };
    MoveCommand.prototype.resolveHandleMove = function (handle, edge, move) {
        var fromPosition = move.fromPosition;
        if (!fromPosition) {
            var router = this.edgeRouterRegistry.get(edge.routerKind);
            fromPosition = router.getHandlePosition(edge, router.route(edge), handle);
        }
        if (fromPosition)
            return {
                handle: handle,
                fromPosition: fromPosition,
                toPosition: move.toPosition
            };
        return undefined;
    };
    MoveCommand.prototype.resolveElementMove = function (element, move) {
        var fromPosition = move.fromPosition
            || { x: element.position.x, y: element.position.y };
        return {
            element: element,
            fromPosition: fromPosition,
            toPosition: move.toPosition
        };
    };
    MoveCommand.prototype.doMove = function (edge2move, attachedEdgeShifts) {
        var _this = this;
        this.resolvedMoves.forEach(function (res) {
            res.element.position = res.toPosition;
        });
        // reset edges to state before
        edge2move.forEach(function (moves, edge) {
            var router = _this.edgeRouterRegistry.get(edge.routerKind);
            var before = router.takeSnapshot(edge);
            router.applyHandleMoves(edge, moves);
            var after = router.takeSnapshot(edge);
            _this.edgeMementi.push({ edge: edge, before: before, after: after });
        });
        attachedEdgeShifts.forEach(function (delta, edge) {
            if (!edge2move.get(edge)) {
                var router = _this.edgeRouterRegistry.get(edge.routerKind);
                var before = router.takeSnapshot(edge);
                if (edge.source
                    && edge.target
                    && _this.resolvedMoves.get(edge.source.id)
                    && _this.resolvedMoves.get(edge.target.id)) {
                    // move the entire edge when both source and target are moved
                    edge.routingPoints = edge.routingPoints.map(function (rp) { return geometry_1.Point.add(rp, delta); });
                }
                else {
                    // add/remove RPs according to the new source/target positions
                    var updateHandles = (0, model_4.isSelectable)(edge) && edge.selected;
                    router.cleanupRoutingPoints(edge, edge.routingPoints, updateHandles, _this.action.finished);
                }
                var after = router.takeSnapshot(edge);
                _this.edgeMementi.push({ edge: edge, before: before, after: after });
            }
        });
    };
    MoveCommand.prototype.undoMove = function () {
        var _this = this;
        this.resolvedMoves.forEach(function (res) {
            res.element.position = res.fromPosition;
        });
        this.edgeMementi.forEach(function (memento) {
            var router = _this.edgeRouterRegistry.get(memento.edge.routerKind);
            router.applySnapshot(memento.edge, memento.before);
        });
    };
    MoveCommand.prototype.undo = function (context) {
        return new animation_1.CompoundAnimation(context.root, context, [
            new MoveAnimation(context.root, this.resolvedMoves, context, true),
            new MorphEdgesAnimation(context.root, this.edgeMementi, context, true)
        ]).start();
    };
    MoveCommand.prototype.redo = function (context) {
        return new animation_1.CompoundAnimation(context.root, context, [
            new MoveAnimation(context.root, this.resolvedMoves, context, false),
            new MorphEdgesAnimation(context.root, this.edgeMementi, context, false)
        ]).start();
    };
    MoveCommand.prototype.merge = function (other, context) {
        var _this = this;
        if (!this.action.animate && other instanceof MoveCommand_1) {
            other.resolvedMoves.forEach(function (otherMove, otherElementId) {
                var existingMove = _this.resolvedMoves.get(otherElementId);
                if (existingMove) {
                    existingMove.toPosition = otherMove.toPosition;
                }
                else {
                    _this.resolvedMoves.set(otherElementId, otherMove);
                }
            });
            other.edgeMementi.forEach(function (otherMemento) {
                var existingMemento = _this.edgeMementi.find(function (edgeMemento) { return edgeMemento.edge.id === otherMemento.edge.id; });
                if (existingMemento) {
                    existingMemento.after = otherMemento.after;
                }
                else {
                    _this.edgeMementi.push(otherMemento);
                }
            });
            return true;
        }
        else if (other instanceof reconnect_1.ReconnectCommand) {
            var otherMemento_1 = other.memento;
            if (otherMemento_1) {
                var existingMemento = this.edgeMementi.find(function (edgeMemento) { return edgeMemento.edge.id === otherMemento_1.edge.id; });
                if (existingMemento) {
                    existingMemento.after = otherMemento_1.after;
                }
                else {
                    this.edgeMementi.push(otherMemento_1);
                }
            }
            return true;
        }
        return false;
    };
    var MoveCommand_1;
    MoveCommand.KIND = MoveAction.KIND;
    __decorate([
        (0, inversify_1.inject)(routing_1.EdgeRouterRegistry),
        (0, inversify_1.optional)(),
        __metadata("design:type", routing_1.EdgeRouterRegistry)
    ], MoveCommand.prototype, "edgeRouterRegistry", void 0);
    MoveCommand = MoveCommand_1 = __decorate([
        (0, inversify_1.injectable)(),
        __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [Object])
    ], MoveCommand);
    return MoveCommand;
}(command_1.MergeableCommand));
exports.MoveCommand = MoveCommand;
var MoveAnimation = /** @class */ (function (_super) {
    __extends(MoveAnimation, _super);
    function MoveAnimation(model, elementMoves, context, reverse) {
        if (reverse === void 0) { reverse = false; }
        var _this = _super.call(this, context) || this;
        _this.model = model;
        _this.elementMoves = elementMoves;
        _this.reverse = reverse;
        return _this;
    }
    MoveAnimation.prototype.tween = function (t) {
        var _this = this;
        this.elementMoves.forEach(function (elementMove) {
            if (_this.reverse) {
                elementMove.element.position = {
                    x: (1 - t) * elementMove.toPosition.x + t * elementMove.fromPosition.x,
                    y: (1 - t) * elementMove.toPosition.y + t * elementMove.fromPosition.y
                };
            }
            else {
                elementMove.element.position = {
                    x: (1 - t) * elementMove.fromPosition.x + t * elementMove.toPosition.x,
                    y: (1 - t) * elementMove.fromPosition.y + t * elementMove.toPosition.y
                };
            }
        });
        return this.model;
    };
    return MoveAnimation;
}(animation_1.Animation));
exports.MoveAnimation = MoveAnimation;
var MorphEdgesAnimation = /** @class */ (function (_super) {
    __extends(MorphEdgesAnimation, _super);
    function MorphEdgesAnimation(model, originalMementi, context, reverse) {
        if (reverse === void 0) { reverse = false; }
        var _this = _super.call(this, context) || this;
        _this.model = model;
        _this.reverse = reverse;
        _this.expanded = [];
        originalMementi.forEach(function (edgeMemento) {
            var start = _this.reverse ? edgeMemento.after : edgeMemento.before;
            var end = _this.reverse ? edgeMemento.before : edgeMemento.after;
            var startRoute = start.routedPoints;
            var endRoute = end.routedPoints;
            var maxRoutingPoints = Math.max(startRoute.length, endRoute.length);
            _this.expanded.push({
                startExpandedRoute: _this.growToSize(startRoute, maxRoutingPoints),
                endExpandedRoute: _this.growToSize(endRoute, maxRoutingPoints),
                memento: edgeMemento
            });
        });
        return _this;
    }
    MorphEdgesAnimation.prototype.midPoint = function (edgeMemento) {
        var edge = edgeMemento.edge;
        var source = edgeMemento.edge.source;
        var target = edgeMemento.edge.target;
        return geometry_1.Point.linear((0, smodel_utils_1.translatePoint)(geometry_1.Bounds.center(source.bounds), source.parent, edge.parent), (0, smodel_utils_1.translatePoint)(geometry_1.Bounds.center(target.bounds), target.parent, edge.parent), 0.5);
    };
    MorphEdgesAnimation.prototype.start = function () {
        this.expanded.forEach(function (morph) {
            morph.memento.edge.removeAll(function (e) { return e instanceof model_2.SRoutingHandle; });
        });
        return _super.prototype.start.call(this);
    };
    MorphEdgesAnimation.prototype.tween = function (t) {
        var _this = this;
        if (t === 1) {
            this.expanded.forEach(function (morph) {
                var memento = morph.memento;
                if (_this.reverse)
                    memento.before.router.applySnapshot(memento.edge, memento.before);
                else
                    memento.after.router.applySnapshot(memento.edge, memento.after);
            });
        }
        else {
            this.expanded.forEach(function (morph) {
                var newRoutingPoints = [];
                // ignore source and target anchor
                for (var i = 1; i < morph.startExpandedRoute.length - 1; ++i)
                    newRoutingPoints.push(geometry_1.Point.linear(morph.startExpandedRoute[i], morph.endExpandedRoute[i], t));
                var closestSnapshot = t < 0.5 ? morph.memento.before : morph.memento.after;
                var newSnapshot = __assign(__assign({}, closestSnapshot), { routingPoints: newRoutingPoints, routingHandles: [] });
                closestSnapshot.router.applySnapshot(morph.memento.edge, newSnapshot);
            });
        }
        return this.model;
    };
    MorphEdgesAnimation.prototype.growToSize = function (route, targetSize) {
        var diff = targetSize - route.length;
        if (diff <= 0)
            return route;
        var result = [];
        result.push(route[0]);
        var deltaDiff = 1 / (diff + 1);
        var deltaSmaller = 1 / (route.length - 1);
        var nextInsertion = 1;
        for (var i = 1; i < route.length; ++i) {
            var pos = deltaSmaller * i;
            var insertions = 0;
            while (pos > (nextInsertion + insertions) * deltaDiff)
                ++insertions;
            nextInsertion += insertions;
            for (var j = 0; j < insertions; ++j) {
                var p = geometry_1.Point.linear(route[i - 1], route[i], (j + 1) / (insertions + 1));
                result.push(p);
            }
            result.push(route[i]);
        }
        return result;
    };
    return MorphEdgesAnimation;
}(animation_1.Animation));
exports.MorphEdgesAnimation = MorphEdgesAnimation;
var MoveMouseListener = /** @class */ (function (_super) {
    __extends(MoveMouseListener, _super);
    function MoveMouseListener() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.hasDragged = false;
        _this.elementId2startPos = new Map();
        return _this;
    }
    MoveMouseListener.prototype.mouseDown = function (target, event) {
        if (event.button === 0) {
            var moveable = (0, smodel_utils_1.findParentByFeature)(target, model_6.isMoveable);
            var isRoutingHandle = target instanceof model_2.SRoutingHandle;
            if (moveable !== undefined || isRoutingHandle || (0, create_on_drag_1.isCreatingOnDrag)(target)) {
                this.startDragPosition = { x: event.pageX, y: event.pageY };
            }
            else {
                this.startDragPosition = undefined;
            }
            this.hasDragged = false;
            if ((0, create_on_drag_1.isCreatingOnDrag)(target)) {
                this.startCreatingOnDrag(target, event);
            }
            else if (isRoutingHandle) {
                this.activateRoutingHandle(target, event);
            }
        }
        return [];
    };
    MoveMouseListener.prototype.startCreatingOnDrag = function (target, event) {
        var result = [];
        result.push(actions_1.SelectAllAction.create({ select: false }));
        result.push(target.createAction(model_2.edgeInProgressID));
        result.push(actions_1.SelectAction.create({ selectedElementsIDs: [model_2.edgeInProgressID] }));
        result.push(edit_routing_1.SwitchEditModeAction.create({ elementsToActivate: [model_2.edgeInProgressID] }));
        result.push(actions_1.SelectAction.create({ selectedElementsIDs: [model_2.edgeInProgressTargetHandleID] }));
        result.push(edit_routing_1.SwitchEditModeAction.create({ elementsToActivate: [model_2.edgeInProgressTargetHandleID] }));
        return result;
    };
    MoveMouseListener.prototype.activateRoutingHandle = function (target, event) {
        return [edit_routing_1.SwitchEditModeAction.create({ elementsToActivate: [target.id] })];
    };
    MoveMouseListener.prototype.mouseMove = function (target, event) {
        var result = [];
        if (event.buttons === 0)
            this.mouseUp(target, event);
        else if (this.startDragPosition) {
            if (this.elementId2startPos.size === 0) {
                this.collectStartPositions(target.root);
            }
            this.hasDragged = true;
            var moveAction = this.getElementMoves(target, event, false);
            if (moveAction)
                result.push(moveAction);
        }
        return result;
    };
    MoveMouseListener.prototype.collectStartPositions = function (root) {
        var _this = this;
        var selectedElements = new Set(root.index.all()
            .filter(function (element) { return (0, model_4.isSelectable)(element) && element.selected; }));
        selectedElements.forEach(function (element) {
            if (!_this.isChildOfSelected(selectedElements, element)) {
                if ((0, model_6.isMoveable)(element))
                    _this.elementId2startPos.set(element.id, element.position);
                else if (element instanceof model_2.SRoutingHandle) {
                    var position = _this.getHandlePosition(element);
                    if (position)
                        _this.elementId2startPos.set(element.id, position);
                }
            }
        });
    };
    MoveMouseListener.prototype.isChildOfSelected = function (selectedElements, element) {
        while (element instanceof smodel_1.SChildElement) {
            element = element.parent;
            if ((0, model_6.isMoveable)(element) && selectedElements.has(element)) {
                return true;
            }
        }
        return false;
    };
    MoveMouseListener.prototype.getElementMoves = function (target, event, isFinished) {
        var _this = this;
        if (!this.startDragPosition)
            return undefined;
        var elementMoves = [];
        var viewport = (0, smodel_utils_1.findParentByFeature)(target, model_5.isViewport);
        var zoom = viewport ? viewport.zoom : 1;
        var delta = {
            x: (event.pageX - this.startDragPosition.x) / zoom,
            y: (event.pageY - this.startDragPosition.y) / zoom
        };
        this.elementId2startPos.forEach(function (startPosition, elementId) {
            var element = target.root.index.getById(elementId);
            if (element) {
                var move = _this.createElementMove(element, startPosition, delta, event);
                if (move) {
                    elementMoves.push(move);
                }
            }
        });
        if (elementMoves.length > 0)
            return MoveAction.create(elementMoves, { animate: false, finished: isFinished });
        else
            return undefined;
    };
    MoveMouseListener.prototype.createElementMove = function (element, startPosition, delta, event) {
        var toPosition = this.snap({
            x: startPosition.x + delta.x,
            y: startPosition.y + delta.y
        }, element, !event.shiftKey);
        if ((0, model_6.isMoveable)(element)) {
            return {
                elementId: element.id,
                elementType: element.type,
                fromPosition: {
                    x: element.position.x,
                    y: element.position.y
                },
                toPosition: toPosition
            };
        }
        else if (element instanceof model_2.SRoutingHandle) {
            var point = this.getHandlePosition(element);
            if (point !== undefined) {
                return {
                    elementId: element.id,
                    elementType: element.type,
                    fromPosition: point,
                    toPosition: toPosition
                };
            }
        }
        return undefined;
    };
    MoveMouseListener.prototype.snap = function (position, element, isSnap) {
        if (isSnap && this.snapper)
            return this.snapper.snap(position, element);
        else
            return position;
    };
    MoveMouseListener.prototype.getHandlePosition = function (handle) {
        if (this.edgeRouterRegistry) {
            var parent_1 = handle.parent;
            if (!(parent_1 instanceof model_2.SRoutableElement))
                return undefined;
            var router = this.edgeRouterRegistry.get(parent_1.routerKind);
            var route = router.route(parent_1);
            return router.getHandlePosition(parent_1, route, handle);
        }
        return undefined;
    };
    MoveMouseListener.prototype.mouseEnter = function (target, event) {
        if (target instanceof smodel_1.SModelRoot && event.buttons === 0 && !this.startDragPosition)
            this.mouseUp(target, event);
        return [];
    };
    MoveMouseListener.prototype.mouseUp = function (target, event) {
        var _this = this;
        var result = [];
        if (this.startDragPosition) {
            var moveAction = this.getElementMoves(target, event, true);
            if (moveAction) {
                result.push(moveAction);
            }
            target.root.index.all().forEach(function (element) {
                if (element instanceof model_2.SRoutingHandle) {
                    result.push.apply(result, _this.deactivateRoutingHandle(element, target, event));
                }
            });
        }
        if (!result.some(function (a) { return a.kind === actions_1.ReconnectAction.KIND; })) {
            var edgeInProgress = target.root.index.getById(model_2.edgeInProgressID);
            if (edgeInProgress instanceof smodel_1.SChildElement) {
                result.push(this.deleteEdgeInProgress(edgeInProgress));
            }
        }
        if (this.hasDragged) {
            result.push(commit_model_1.CommitModelAction.create());
        }
        this.hasDragged = false;
        this.startDragPosition = undefined;
        this.elementId2startPos.clear();
        return result;
    };
    MoveMouseListener.prototype.deactivateRoutingHandle = function (element, target, event) {
        var result = [];
        var parent = element.parent;
        if (parent instanceof model_2.SRoutableElement && element.danglingAnchor) {
            var handlePos = this.getHandlePosition(element);
            if (handlePos) {
                var handlePosAbs = (0, smodel_utils_1.translatePoint)(handlePos, element.parent, element.root);
                var newEnd = (0, model_1.findChildrenAtPosition)(target.root, handlePosAbs)
                    .find(function (e) { return (0, model_2.isConnectable)(e) && e.canConnect(parent, element.kind); });
                if (newEnd && this.hasDragged) {
                    result.push(actions_1.ReconnectAction.create({
                        routableId: element.parent.id,
                        newSourceId: element.kind === 'source' ? newEnd.id : parent.sourceId,
                        newTargetId: element.kind === 'target' ? newEnd.id : parent.targetId
                    }));
                }
            }
        }
        if (element.editMode) {
            result.push(edit_routing_1.SwitchEditModeAction.create({ elementsToDeactivate: [element.id] }));
        }
        return result;
    };
    MoveMouseListener.prototype.deleteEdgeInProgress = function (edgeInProgress) {
        var deleteIds = [];
        deleteIds.push(model_2.edgeInProgressID);
        edgeInProgress.children.forEach(function (c) {
            if (c instanceof model_2.SRoutingHandle && c.danglingAnchor)
                deleteIds.push(c.danglingAnchor.id);
        });
        return actions_1.DeleteElementAction.create(deleteIds);
    };
    MoveMouseListener.prototype.decorate = function (vnode, element) {
        return vnode;
    };
    __decorate([
        (0, inversify_1.inject)(routing_1.EdgeRouterRegistry),
        (0, inversify_1.optional)(),
        __metadata("design:type", routing_1.EdgeRouterRegistry)
    ], MoveMouseListener.prototype, "edgeRouterRegistry", void 0);
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.ISnapper),
        (0, inversify_1.optional)(),
        __metadata("design:type", Object)
    ], MoveMouseListener.prototype, "snapper", void 0);
    return MoveMouseListener;
}(mouse_tool_1.MouseListener));
exports.MoveMouseListener = MoveMouseListener;
var LocationPostprocessor = /** @class */ (function () {
    function LocationPostprocessor() {
    }
    LocationPostprocessor.prototype.decorate = function (vnode, element) {
        if ((0, model_3.isEdgeLayoutable)(element) && element.parent instanceof sgraph_1.SEdge) {
            // The element is handled by EdgeLayoutDecorator
            return vnode;
        }
        var translate = '';
        if ((0, model_6.isLocateable)(element) && element instanceof smodel_1.SChildElement && element.parent !== undefined) {
            var pos = element.position;
            if (pos.x !== 0 || pos.y !== 0) {
                translate = 'translate(' + pos.x + ', ' + pos.y + ')';
            }
        }
        if ((0, model_1.isAlignable)(element)) {
            var ali = element.alignment;
            if (ali.x !== 0 || ali.y !== 0) {
                if (translate.length > 0) {
                    translate += ' ';
                }
                translate += 'translate(' + ali.x + ', ' + ali.y + ')';
            }
        }
        if (translate.length > 0) {
            (0, vnode_utils_1.setAttr)(vnode, 'transform', translate);
        }
        return vnode;
    };
    LocationPostprocessor.prototype.postUpdate = function () {
    };
    LocationPostprocessor = __decorate([
        (0, inversify_1.injectable)()
    ], LocationPostprocessor);
    return LocationPostprocessor;
}());
exports.LocationPostprocessor = LocationPostprocessor;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/move/snap.js":
/*!********************************************************!*\
  !*** ./node_modules/sprotty/lib/features/move/snap.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CenterGridSnapper = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var model_1 = __webpack_require__(/*! ../bounds/model */ "./node_modules/sprotty/lib/features/bounds/model.js");
/**
 * A simple snapper that snaps the center of nodes and routing points to a grid.
 */
var CenterGridSnapper = /** @class */ (function () {
    function CenterGridSnapper() {
    }
    Object.defineProperty(CenterGridSnapper.prototype, "gridX", {
        get: function () {
            return 10;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CenterGridSnapper.prototype, "gridY", {
        get: function () {
            return 10;
        },
        enumerable: false,
        configurable: true
    });
    CenterGridSnapper.prototype.snap = function (position, element) {
        if (element && (0, model_1.isBoundsAware)(element))
            return {
                x: Math.round((position.x + 0.5 * element.bounds.width) / this.gridX) * this.gridX - 0.5 * element.bounds.width,
                y: Math.round((position.y + 0.5 * element.bounds.height) / this.gridY) * this.gridY - 0.5 * element.bounds.height
            };
        else
            return {
                x: Math.round(position.x / this.gridX) * this.gridX,
                y: Math.round(position.y / this.gridY) * this.gridY
            };
    };
    CenterGridSnapper = __decorate([
        (0, inversify_1.injectable)()
    ], CenterGridSnapper);
    return CenterGridSnapper;
}());
exports.CenterGridSnapper = CenterGridSnapper;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/nameable/model.js":
/*!*************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/nameable/model.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.name = exports.isNameable = exports.nameFeature = void 0;
exports.nameFeature = Symbol('nameableFeature');
function isNameable(element) {
    return element.hasFeature(exports.nameFeature);
}
exports.isNameable = isNameable;
function name(element) {
    if (isNameable(element)) {
        return element.name;
    }
    else {
        return undefined;
    }
}
exports.name = name;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/open/di.config.js":
/*!*************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/open/di.config.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/sprotty/lib/base/types.js");
var open_1 = __webpack_require__(/*! ./open */ "./node_modules/sprotty/lib/features/open/open.js");
var openModule = new inversify_1.ContainerModule(function (bind) {
    bind(open_1.OpenMouseListener).toSelf().inSingletonScope();
    bind(types_1.TYPES.MouseListener).toService(open_1.OpenMouseListener);
});
exports["default"] = openModule;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/open/model.js":
/*!*********************************************************!*\
  !*** ./node_modules/sprotty/lib/features/open/model.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isOpenable = exports.openFeature = void 0;
exports.openFeature = Symbol('openFeature');
function isOpenable(element) {
    return element.hasFeature(exports.openFeature);
}
exports.isOpenable = isOpenable;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/open/open.js":
/*!********************************************************!*\
  !*** ./node_modules/sprotty/lib/features/open/open.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.OpenMouseListener = void 0;
var actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "./node_modules/sprotty-protocol/lib/actions.js");
var mouse_tool_1 = __webpack_require__(/*! ../../base/views/mouse-tool */ "./node_modules/sprotty/lib/base/views/mouse-tool.js");
var smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "./node_modules/sprotty/lib/base/model/smodel-utils.js");
var model_1 = __webpack_require__(/*! ./model */ "./node_modules/sprotty/lib/features/open/model.js");
var OpenMouseListener = /** @class */ (function (_super) {
    __extends(OpenMouseListener, _super);
    function OpenMouseListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    OpenMouseListener.prototype.doubleClick = function (target, event) {
        var openableTarget = (0, smodel_utils_1.findParentByFeature)(target, model_1.isOpenable);
        if (openableTarget !== undefined) {
            return [actions_1.OpenAction.create(openableTarget.id)];
        }
        return [];
    };
    return OpenMouseListener;
}(mouse_tool_1.MouseListener));
exports.OpenMouseListener = OpenMouseListener;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/projection/model.js":
/*!***************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/projection/model.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getModelBounds = exports.getProjectedBounds = exports.getProjections = exports.isProjectable = void 0;
var geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "./node_modules/sprotty-protocol/lib/utils/geometry.js");
var object_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/object */ "./node_modules/sprotty-protocol/lib/utils/object.js");
var smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "./node_modules/sprotty/lib/base/model/smodel-utils.js");
var model_1 = __webpack_require__(/*! ../bounds/model */ "./node_modules/sprotty/lib/features/bounds/model.js");
function isProjectable(arg) {
    return (0, object_1.hasOwnProperty)(arg, 'projectionCssClasses');
}
exports.isProjectable = isProjectable;
/**
 * Gather all projections of elements contained in the given parent element.
 */
function getProjections(parent) {
    var result;
    for (var _i = 0, _a = parent.children; _i < _a.length; _i++) {
        var child = _a[_i];
        if (isProjectable(child) && child.projectionCssClasses.length > 0) {
            var projectedBounds = getProjectedBounds(child);
            if (projectedBounds) {
                var projection = {
                    elementId: child.id,
                    projectedBounds: projectedBounds,
                    cssClasses: child.projectionCssClasses
                };
                if (result) {
                    result.push(projection);
                }
                else {
                    result = [projection];
                }
            }
        }
        if (child.children.length > 0) {
            var childProj = getProjections(child);
            if (childProj) {
                if (result) {
                    result.push.apply(result, childProj);
                }
                else {
                    result = childProj;
                }
            }
        }
    }
    return result;
}
exports.getProjections = getProjections;
/**
 * Compute the projected bounds of the given model element, that is the absolute position in the diagram.
 */
function getProjectedBounds(model) {
    var parent = model.parent;
    if (model.projectedBounds) {
        var bounds = model.projectedBounds;
        if ((0, model_1.isBoundsAware)(parent)) {
            bounds = (0, smodel_utils_1.transformToRootBounds)(parent, bounds);
        }
        return bounds;
    }
    else if ((0, model_1.isBoundsAware)(model)) {
        var bounds = model.bounds;
        bounds = (0, smodel_utils_1.transformToRootBounds)(parent, bounds);
        return bounds;
    }
    return undefined;
}
exports.getProjectedBounds = getProjectedBounds;
var MAX_COORD = 1000000000;
/**
 * Determine the total bounds of a model; this takes the viewport into consideration
 * so it can be shown in the projections.
 */
function getModelBounds(model) {
    var minX = MAX_COORD;
    var minY = MAX_COORD;
    var maxX = -MAX_COORD;
    var maxY = -MAX_COORD;
    var bounds = (0, model_1.isBoundsAware)(model) ? model.bounds : undefined;
    if (bounds && geometry_1.Dimension.isValid(bounds)) {
        // Get the bounds directly from the model if it returns a valid size
        minX = bounds.x;
        minY = bounds.y;
        maxX = minX + bounds.width;
        maxY = minY + bounds.height;
    }
    else {
        // Determine the min. / max coordinates of top-level model elements
        // Note that this approach is slower, so provide valid bounds to speed up the process.
        for (var _i = 0, _a = model.children; _i < _a.length; _i++) {
            var element = _a[_i];
            if ((0, model_1.isBoundsAware)(element)) {
                var b = element.bounds;
                minX = Math.min(minX, b.x);
                minY = Math.min(minY, b.y);
                maxX = Math.max(maxX, b.x + b.width);
                maxY = Math.max(maxY, b.y + b.height);
            }
        }
    }
    // Enlarge the bounds by the current viewport to ensure it always fits into the projection
    minX = Math.min(minX, model.scroll.x);
    minY = Math.min(minY, model.scroll.y);
    maxX = Math.max(maxX, model.scroll.x + model.canvasBounds.width / model.zoom);
    maxY = Math.max(maxY, model.scroll.y + model.canvasBounds.height / model.zoom);
    if (minX < maxX && minY < maxY) {
        return {
            x: minX,
            y: minY,
            width: maxX - minX,
            height: maxY - minY
        };
    }
    return undefined;
}
exports.getModelBounds = getModelBounds;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/projection/views.js":
/*!***************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/projection/views.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ProjectedViewportView = void 0;
/** @jsx html */
var jsx_1 = __webpack_require__(/*! ../../lib/jsx */ "./node_modules/sprotty/lib/lib/jsx.js");
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var snabbdom_1 = __webpack_require__(/*! snabbdom */ "./node_modules/snabbdom/build/index.js");
var vnode_utils_1 = __webpack_require__(/*! ../../base/views/vnode-utils */ "./node_modules/sprotty/lib/base/views/vnode-utils.js");
var model_1 = __webpack_require__(/*! ./model */ "./node_modules/sprotty/lib/features/projection/model.js");
/**
 * Special viewport root view that renders horizontal and vertical projection bars for quick navigation.
 */
var ProjectedViewportView = /** @class */ (function () {
    function ProjectedViewportView() {
    }
    ProjectedViewportView.prototype.render = function (model, context, args) {
        var rootNode = (0, jsx_1.html)("div", { "class-sprotty-root": true },
            this.renderSvg(model, context, args),
            this.renderProjections(model, context, args));
        (0, vnode_utils_1.setAttr)(rootNode, 'tabindex', 0); // make root div focus-able
        return rootNode;
    };
    ProjectedViewportView.prototype.renderSvg = function (model, context, args) {
        var transform = "scale(".concat(model.zoom, ") translate(").concat(-model.scroll.x, ",").concat(-model.scroll.y, ")");
        var ns = 'http://www.w3.org/2000/svg';
        return (0, snabbdom_1.h)('svg', { ns: ns }, (0, snabbdom_1.h)('g', { ns: ns, attrs: { transform: transform } }, context.renderChildren(model)));
    };
    ProjectedViewportView.prototype.renderProjections = function (model, context, args) {
        var _a;
        if (model.zoom <= 0) {
            return [];
        }
        var modelBounds = (0, model_1.getModelBounds)(model);
        if (!modelBounds) {
            return [];
        }
        var projections = (_a = (0, model_1.getProjections)(model)) !== null && _a !== void 0 ? _a : [];
        return [
            this.renderProjectionBar(projections, model, modelBounds, 'vertical'),
            this.renderProjectionBar(projections, model, modelBounds, 'horizontal')
        ];
    };
    ProjectedViewportView.prototype.renderProjectionBar = function (projections, model, modelBounds, orientation) {
        var _this = this;
        var params = { modelBounds: modelBounds, orientation: orientation };
        // NOTE: Here we assume that the projection bars have the same size as the diagram canvas, i.e. they are drawn as overlay above the canvas.
        params.factor = orientation === 'horizontal' ? model.canvasBounds.width / modelBounds.width : model.canvasBounds.height / modelBounds.height;
        params.zoomedFactor = params.factor / model.zoom;
        return (0, jsx_1.html)("div", { "class-sprotty-projection-bar": true, "class-horizontal": orientation === 'horizontal', "class-vertical": orientation === 'vertical' },
            this.renderViewport(model, params),
            projections.map(function (p) { return _this.renderProjection(p, model, params); }));
    };
    ProjectedViewportView.prototype.renderViewport = function (model, params) {
        var canvasSize, viewportPos;
        if (params.orientation === 'horizontal') {
            canvasSize = model.canvasBounds.width;
            viewportPos = (model.scroll.x - params.modelBounds.x) * params.factor;
        }
        else {
            canvasSize = model.canvasBounds.height;
            viewportPos = (model.scroll.y - params.modelBounds.y) * params.factor;
        }
        var viewportSize = canvasSize * params.zoomedFactor;
        if (viewportPos < 0) {
            viewportSize += viewportPos;
            viewportPos = 0;
        }
        else if (viewportPos > canvasSize) {
            viewportPos = canvasSize;
        }
        if (viewportSize < 0) {
            viewportSize = 0;
        }
        else if (viewportPos + viewportSize > canvasSize) {
            viewportSize = canvasSize - viewportPos;
        }
        var style = params.orientation === 'horizontal' ? {
            left: "".concat(viewportPos, "px"),
            width: "".concat(viewportSize, "px")
        } : {
            top: "".concat(viewportPos, "px"),
            height: "".concat(viewportSize, "px")
        };
        return (0, jsx_1.html)("div", { "class-sprotty-viewport": true, style: style });
    };
    ProjectedViewportView.prototype.renderProjection = function (projection, model, params) {
        var canvasSize, projPos, projSize;
        if (params.orientation === 'horizontal') {
            canvasSize = model.canvasBounds.width;
            projPos = (projection.projectedBounds.x - params.modelBounds.x) * params.factor;
            projSize = projection.projectedBounds.width * params.factor;
        }
        else {
            canvasSize = model.canvasBounds.height;
            projPos = (projection.projectedBounds.y - params.modelBounds.y) * params.factor;
            projSize = projection.projectedBounds.height * params.factor;
        }
        if (projPos < 0) {
            projSize += projPos;
            projPos = 0;
        }
        else if (projPos > canvasSize) {
            projPos = canvasSize;
        }
        if (projSize < 0) {
            projSize = 0;
        }
        else if (projPos + projSize > canvasSize) {
            projSize = canvasSize - projPos;
        }
        var style = params.orientation === 'horizontal' ? {
            left: "".concat(projPos, "px"),
            width: "".concat(projSize, "px")
        } : {
            top: "".concat(projPos, "px"),
            height: "".concat(projSize, "px")
        };
        var result = (0, jsx_1.html)("div", { id: "".concat(params.orientation, "-projection:").concat(projection.elementId), "class-sprotty-projection": true, style: style });
        projection.cssClasses.forEach(function (cl) { return (0, vnode_utils_1.setClass)(result, cl, true); });
        return result;
    };
    ProjectedViewportView = __decorate([
        (0, inversify_1.injectable)()
    ], ProjectedViewportView);
    return ProjectedViewportView;
}());
exports.ProjectedViewportView = ProjectedViewportView;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/routing/abstract-edge-router.js":
/*!***************************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/routing/abstract-edge-router.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019-2020 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AbstractEdgeRouter = exports.DefaultAnchors = exports.Side = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "./node_modules/sprotty-protocol/lib/utils/geometry.js");
var smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "./node_modules/sprotty/lib/base/model/smodel-utils.js");
var model_1 = __webpack_require__(/*! ./model */ "./node_modules/sprotty/lib/features/routing/model.js");
var anchor_1 = __webpack_require__(/*! ./anchor */ "./node_modules/sprotty/lib/features/routing/anchor.js");
var model_2 = __webpack_require__(/*! ./model */ "./node_modules/sprotty/lib/features/routing/model.js");
var Side;
(function (Side) {
    Side[Side["RIGHT"] = 0] = "RIGHT";
    Side[Side["LEFT"] = 1] = "LEFT";
    Side[Side["TOP"] = 2] = "TOP";
    Side[Side["BOTTOM"] = 3] = "BOTTOM";
})(Side = exports.Side || (exports.Side = {}));
var DefaultAnchors = /** @class */ (function () {
    function DefaultAnchors(element, edgeParent, kind) {
        this.element = element;
        this.kind = kind;
        var bounds = element.bounds;
        this.bounds = (0, smodel_utils_1.translateBounds)(bounds, element.parent, edgeParent);
        this.left = { x: this.bounds.x, y: this.bounds.y + 0.5 * this.bounds.height, kind: kind };
        this.right = { x: this.bounds.x + this.bounds.width, y: this.bounds.y + 0.5 * this.bounds.height, kind: kind };
        this.top = { x: this.bounds.x + 0.5 * this.bounds.width, y: this.bounds.y, kind: kind };
        this.bottom = { x: this.bounds.x + 0.5 * this.bounds.width, y: this.bounds.y + this.bounds.height, kind: kind };
    }
    DefaultAnchors.prototype.get = function (side) {
        return this[Side[side].toLowerCase()];
    };
    DefaultAnchors.prototype.getNearestSide = function (point) {
        var leftDistance = geometry_1.Point.euclideanDistance(point, this.left);
        var rightDistance = geometry_1.Point.euclideanDistance(point, this.right);
        var topDistance = geometry_1.Point.euclideanDistance(point, this.top);
        var bottomDistance = geometry_1.Point.euclideanDistance(point, this.bottom);
        var currentNearestSide = Side.LEFT;
        var currentMinDist = leftDistance;
        if (rightDistance < currentMinDist) {
            currentMinDist = rightDistance;
            currentNearestSide = Side.RIGHT;
        }
        if (topDistance < currentMinDist) {
            currentMinDist = topDistance;
            currentNearestSide = Side.TOP;
        }
        if (bottomDistance < currentMinDist) {
            currentMinDist = bottomDistance;
            currentNearestSide = Side.BOTTOM;
        }
        return currentNearestSide;
    };
    return DefaultAnchors;
}());
exports.DefaultAnchors = DefaultAnchors;
var AbstractEdgeRouter = /** @class */ (function () {
    function AbstractEdgeRouter() {
    }
    AbstractEdgeRouter.prototype.pointAt = function (edge, t) {
        var segments = this.calculateSegment(edge, t);
        if (!segments)
            return undefined;
        var segmentStart = segments.segmentStart, segmentEnd = segments.segmentEnd, lambda = segments.lambda;
        return geometry_1.Point.linear(segmentStart, segmentEnd, lambda);
    };
    AbstractEdgeRouter.prototype.derivativeAt = function (edge, t) {
        var segments = this.calculateSegment(edge, t);
        if (!segments)
            return undefined;
        var segmentStart = segments.segmentStart, segmentEnd = segments.segmentEnd;
        return {
            x: segmentEnd.x - segmentStart.x,
            y: segmentEnd.y - segmentStart.y
        };
    };
    AbstractEdgeRouter.prototype.calculateSegment = function (edge, t) {
        if (t < 0 || t > 1)
            return undefined;
        var routedPoints = this.route(edge);
        if (routedPoints.length < 2)
            return undefined;
        var segmentLengths = [];
        var totalLength = 0;
        for (var i = 0; i < routedPoints.length - 1; ++i) {
            segmentLengths[i] = geometry_1.Point.euclideanDistance(routedPoints[i], routedPoints[i + 1]);
            totalLength += segmentLengths[i];
        }
        var currentLenght = 0;
        var tAsLenght = t * totalLength;
        for (var i = 0; i < routedPoints.length - 1; ++i) {
            var newLength = currentLenght + segmentLengths[i];
            // avoid division by (almost) zero
            if (segmentLengths[i] > 1E-8) {
                if (newLength >= tAsLenght) {
                    var lambda = Math.max(0, (tAsLenght - currentLenght)) / segmentLengths[i];
                    return {
                        segmentStart: routedPoints[i],
                        segmentEnd: routedPoints[i + 1],
                        lambda: lambda
                    };
                }
            }
            currentLenght = newLength;
        }
        return {
            segmentEnd: routedPoints.pop(),
            segmentStart: routedPoints.pop(),
            lambda: 1
        };
    };
    AbstractEdgeRouter.prototype.addHandle = function (edge, kind, type, routingPointIndex) {
        var handle = new model_1.SRoutingHandle();
        handle.kind = kind;
        handle.pointIndex = routingPointIndex;
        handle.type = type;
        if (kind === 'target' && edge.id === model_1.edgeInProgressID)
            handle.id = model_1.edgeInProgressTargetHandleID;
        edge.add(handle);
        return handle;
    };
    AbstractEdgeRouter.prototype.getHandlePosition = function (edge, route, handle) {
        switch (handle.kind) {
            case 'source':
                if (edge.source instanceof model_1.SDanglingAnchor)
                    return edge.source.position;
                else
                    return route[0];
            case 'target':
                if (edge.target instanceof model_1.SDanglingAnchor)
                    return edge.target.position;
                else {
                    return route[route.length - 1];
                }
            default:
                var position = this.getInnerHandlePosition(edge, route, handle);
                if (position !== undefined)
                    return position;
                if (handle.pointIndex >= 0 && handle.pointIndex < edge.routingPoints.length)
                    return edge.routingPoints[handle.pointIndex];
        }
        return undefined;
    };
    AbstractEdgeRouter.prototype.findRouteSegment = function (edge, route, handleIndex) {
        var getIndex = function (rp) {
            if (rp.pointIndex !== undefined)
                return rp.pointIndex;
            else if (rp.kind === 'target')
                return edge.routingPoints.length;
            else
                return -2;
        };
        var start, end;
        for (var _i = 0, route_1 = route; _i < route_1.length; _i++) {
            var rp = route_1[_i];
            var i = getIndex(rp);
            if (i <= handleIndex && (start === undefined || i > getIndex(start)))
                start = rp;
            if (i > handleIndex && (end === undefined || i < getIndex(end)))
                end = rp;
        }
        return { start: start, end: end };
    };
    AbstractEdgeRouter.prototype.getTranslatedAnchor = function (connectable, refPoint, refContainer, edge, anchorCorrection) {
        if (anchorCorrection === void 0) { anchorCorrection = 0; }
        var translatedRefPoint = (0, smodel_utils_1.translatePoint)(refPoint, refContainer, connectable.parent);
        var anchorComputer = this.getAnchorComputer(connectable);
        var strokeCorrection = 0.5 * connectable.strokeWidth;
        var anchor = anchorComputer.getAnchor(connectable, translatedRefPoint, anchorCorrection + strokeCorrection);
        return (0, smodel_utils_1.translatePoint)(anchor, connectable.parent, edge.parent);
    };
    AbstractEdgeRouter.prototype.getAnchorComputer = function (connectable) {
        return this.anchorRegistry.get(this.kind, connectable.anchorKind);
    };
    AbstractEdgeRouter.prototype.applyHandleMoves = function (edge, moves) {
        var remainingMoves = moves.slice();
        moves.forEach(function (move) {
            var handle = move.handle;
            if (handle.kind === 'source' && !(edge.source instanceof model_1.SDanglingAnchor)) {
                // detach source
                var anchor = new model_1.SDanglingAnchor();
                anchor.id = edge.id + '_dangling-source';
                anchor.original = edge.source;
                anchor.position = move.toPosition;
                handle.root.add(anchor);
                handle.danglingAnchor = anchor;
                edge.sourceId = anchor.id;
            }
            else if (handle.kind === 'target' && !(edge.target instanceof model_1.SDanglingAnchor)) {
                // detach target
                var anchor = new model_1.SDanglingAnchor();
                anchor.id = edge.id + '_dangling-target';
                anchor.original = edge.target;
                anchor.position = move.toPosition;
                handle.root.add(anchor);
                handle.danglingAnchor = anchor;
                edge.targetId = anchor.id;
            }
            if (handle.danglingAnchor) {
                handle.danglingAnchor.position = move.toPosition;
                remainingMoves.splice(remainingMoves.indexOf(move), 1);
            }
        });
        if (remainingMoves.length > 0)
            this.applyInnerHandleMoves(edge, remainingMoves);
        this.cleanupRoutingPoints(edge, edge.routingPoints, true, true);
    };
    AbstractEdgeRouter.prototype.cleanupRoutingPoints = function (edge, routingPoints, updateHandles, addRoutingPoints) {
        var sourceAnchors = new DefaultAnchors(edge.source, edge.parent, "source");
        var targetAnchors = new DefaultAnchors(edge.target, edge.parent, "target");
        this.resetRoutingPointsOnReconnect(edge, routingPoints, updateHandles, sourceAnchors, targetAnchors);
    };
    AbstractEdgeRouter.prototype.resetRoutingPointsOnReconnect = function (edge, routingPoints, updateHandles, sourceAnchors, targetAnchors) {
        if (routingPoints.length === 0 || edge.source instanceof model_1.SDanglingAnchor || edge.target instanceof model_1.SDanglingAnchor) {
            var options = this.getOptions(edge);
            var corners = this.calculateDefaultCorners(edge, sourceAnchors, targetAnchors, options);
            routingPoints.splice.apply(routingPoints, __spreadArray([0, routingPoints.length], corners, false));
            if (updateHandles) {
                var maxPointIndex_1 = -2;
                edge.children.forEach(function (child) {
                    if (child instanceof model_1.SRoutingHandle) {
                        if (child.kind === 'target')
                            child.pointIndex = routingPoints.length;
                        else if (child.kind === 'line' && child.pointIndex >= routingPoints.length)
                            edge.remove(child);
                        else
                            maxPointIndex_1 = Math.max(child.pointIndex, maxPointIndex_1);
                    }
                });
                for (var i = maxPointIndex_1; i < routingPoints.length - 1; ++i)
                    this.addHandle(edge, 'manhattan-50%', 'volatile-routing-point', i);
            }
            return true;
        }
        return false;
    };
    AbstractEdgeRouter.prototype.applyReconnect = function (edge, newSourceId, newTargetId) {
        var hasChanged = false;
        if (newSourceId) {
            var newSource = edge.root.index.getById(newSourceId);
            if (newSource instanceof model_2.SConnectableElement) {
                edge.sourceId = newSource.id;
                hasChanged = true;
            }
        }
        if (newTargetId) {
            var newTarget = edge.root.index.getById(newTargetId);
            if (newTarget instanceof model_2.SConnectableElement) {
                edge.targetId = newTarget.id;
                hasChanged = true;
            }
        }
        if (hasChanged) {
            // reset attached elements in index
            edge.index.remove(edge);
            edge.index.add(edge);
            if (this.getSelfEdgeIndex(edge) > -1) {
                edge.routingPoints = [];
                this.cleanupRoutingPoints(edge, edge.routingPoints, true, true);
            }
        }
    };
    AbstractEdgeRouter.prototype.takeSnapshot = function (edge) {
        return {
            routingPoints: edge.routingPoints.slice(),
            routingHandles: edge.children
                .filter(function (child) { return child instanceof model_1.SRoutingHandle; })
                .map(function (child) { return child; }),
            routedPoints: this.route(edge),
            router: this,
            source: edge.source,
            target: edge.target
        };
    };
    AbstractEdgeRouter.prototype.applySnapshot = function (edge, snapshot) {
        edge.routingPoints = snapshot.routingPoints;
        edge.removeAll(function (child) { return child instanceof model_1.SRoutingHandle; });
        edge.routerKind = snapshot.router.kind;
        snapshot.routingHandles.forEach(function (handle) { return edge.add(handle); });
        if (snapshot.source)
            edge.sourceId = snapshot.source.id;
        if (snapshot.target)
            edge.targetId = snapshot.target.id;
        // update index
        edge.root.index.remove(edge);
        edge.root.index.add(edge);
    };
    AbstractEdgeRouter.prototype.calculateDefaultCorners = function (edge, sourceAnchors, targetAnchors, options) {
        var selfEdgeIndex = this.getSelfEdgeIndex(edge);
        if (selfEdgeIndex >= 0) {
            var standardDist = options.standardDistance;
            var delta = options.selfEdgeOffset * Math.min(sourceAnchors.bounds.width, sourceAnchors.bounds.height);
            switch (selfEdgeIndex % 4) {
                case 0:
                    return [
                        { x: sourceAnchors.get(Side.RIGHT).x + standardDist, y: sourceAnchors.get(Side.RIGHT).y + delta },
                        { x: sourceAnchors.get(Side.RIGHT).x + standardDist, y: sourceAnchors.get(Side.BOTTOM).y + standardDist },
                        { x: sourceAnchors.get(Side.BOTTOM).x + delta, y: sourceAnchors.get(Side.BOTTOM).y + standardDist },
                    ];
                case 1:
                    return [
                        { x: sourceAnchors.get(Side.BOTTOM).x - delta, y: sourceAnchors.get(Side.BOTTOM).y + standardDist },
                        { x: sourceAnchors.get(Side.LEFT).x - standardDist, y: sourceAnchors.get(Side.BOTTOM).y + standardDist },
                        { x: sourceAnchors.get(Side.LEFT).x - standardDist, y: sourceAnchors.get(Side.LEFT).y + delta },
                    ];
                case 2:
                    return [
                        { x: sourceAnchors.get(Side.LEFT).x - standardDist, y: sourceAnchors.get(Side.LEFT).y - delta },
                        { x: sourceAnchors.get(Side.LEFT).x - standardDist, y: sourceAnchors.get(Side.TOP).y - standardDist },
                        { x: sourceAnchors.get(Side.TOP).x - delta, y: sourceAnchors.get(Side.TOP).y - standardDist },
                    ];
                case 3:
                    return [
                        { x: sourceAnchors.get(Side.TOP).x + delta, y: sourceAnchors.get(Side.TOP).y - standardDist },
                        { x: sourceAnchors.get(Side.RIGHT).x + standardDist, y: sourceAnchors.get(Side.TOP).y - standardDist },
                        { x: sourceAnchors.get(Side.RIGHT).x + standardDist, y: sourceAnchors.get(Side.RIGHT).y - delta },
                    ];
            }
        }
        return [];
    };
    AbstractEdgeRouter.prototype.getSelfEdgeIndex = function (edge) {
        if (!edge.source || edge.source !== edge.target)
            return -1;
        return edge.source.outgoingEdges
            .filter(function (otherEdge) { return otherEdge.target === edge.source; })
            .indexOf(edge);
    };
    AbstractEdgeRouter.prototype.commitRoute = function (edge, routedPoints) {
        var newRoutingPoints = [];
        for (var i = 1; i < routedPoints.length - 1; ++i)
            newRoutingPoints.push({ x: routedPoints[i].x, y: routedPoints[i].y });
        edge.routingPoints = newRoutingPoints;
    };
    __decorate([
        (0, inversify_1.inject)(anchor_1.AnchorComputerRegistry),
        __metadata("design:type", anchor_1.AnchorComputerRegistry)
    ], AbstractEdgeRouter.prototype, "anchorRegistry", void 0);
    AbstractEdgeRouter = __decorate([
        (0, inversify_1.injectable)()
    ], AbstractEdgeRouter);
    return AbstractEdgeRouter;
}());
exports.AbstractEdgeRouter = AbstractEdgeRouter;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/routing/anchor.js":
/*!*************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/routing/anchor.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AnchorComputerRegistry = exports.RECTANGULAR_ANCHOR_KIND = exports.ELLIPTIC_ANCHOR_KIND = exports.DIAMOND_ANCHOR_KIND = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/sprotty/lib/base/types.js");
var registry_1 = __webpack_require__(/*! ../../utils/registry */ "./node_modules/sprotty/lib/utils/registry.js");
exports.DIAMOND_ANCHOR_KIND = 'diamond';
exports.ELLIPTIC_ANCHOR_KIND = 'elliptic';
exports.RECTANGULAR_ANCHOR_KIND = 'rectangular';
var AnchorComputerRegistry = /** @class */ (function (_super) {
    __extends(AnchorComputerRegistry, _super);
    function AnchorComputerRegistry(anchors) {
        var _this = _super.call(this) || this;
        anchors.forEach(function (anchor) { return _this.register(anchor.kind, anchor); });
        return _this;
    }
    Object.defineProperty(AnchorComputerRegistry.prototype, "defaultAnchorKind", {
        get: function () {
            return exports.RECTANGULAR_ANCHOR_KIND;
        },
        enumerable: false,
        configurable: true
    });
    AnchorComputerRegistry.prototype.get = function (routerKind, anchorKind) {
        return _super.prototype.get.call(this, "".concat(routerKind, ":").concat(anchorKind || this.defaultAnchorKind));
    };
    AnchorComputerRegistry = __decorate([
        (0, inversify_1.injectable)(),
        __param(0, (0, inversify_1.multiInject)(types_1.TYPES.IAnchorComputer)),
        __metadata("design:paramtypes", [Array])
    ], AnchorComputerRegistry);
    return AnchorComputerRegistry;
}(registry_1.InstanceRegistry));
exports.AnchorComputerRegistry = AnchorComputerRegistry;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/routing/bezier-anchors.js":
/*!*********************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/routing/bezier-anchors.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BezierDiamondAnchor = exports.BezierRectangleAnchor = exports.BezierEllipseAnchor = void 0;
var anchor_1 = __webpack_require__(/*! ./anchor */ "./node_modules/sprotty/lib/features/routing/anchor.js");
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var polyline_anchors_1 = __webpack_require__(/*! ./polyline-anchors */ "./node_modules/sprotty/lib/features/routing/polyline-anchors.js");
var bezier_edge_router_1 = __webpack_require__(/*! ./bezier-edge-router */ "./node_modules/sprotty/lib/features/routing/bezier-edge-router.js");
var BezierEllipseAnchor = /** @class */ (function (_super) {
    __extends(BezierEllipseAnchor, _super);
    function BezierEllipseAnchor() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(BezierEllipseAnchor.prototype, "kind", {
        get: function () {
            return bezier_edge_router_1.BezierEdgeRouter.KIND + ':' + anchor_1.ELLIPTIC_ANCHOR_KIND;
        },
        enumerable: false,
        configurable: true
    });
    BezierEllipseAnchor = __decorate([
        (0, inversify_1.injectable)()
    ], BezierEllipseAnchor);
    return BezierEllipseAnchor;
}(polyline_anchors_1.EllipseAnchor));
exports.BezierEllipseAnchor = BezierEllipseAnchor;
var BezierRectangleAnchor = /** @class */ (function (_super) {
    __extends(BezierRectangleAnchor, _super);
    function BezierRectangleAnchor() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(BezierRectangleAnchor.prototype, "kind", {
        get: function () {
            return bezier_edge_router_1.BezierEdgeRouter.KIND + ':' + anchor_1.RECTANGULAR_ANCHOR_KIND;
        },
        enumerable: false,
        configurable: true
    });
    BezierRectangleAnchor = __decorate([
        (0, inversify_1.injectable)()
    ], BezierRectangleAnchor);
    return BezierRectangleAnchor;
}(polyline_anchors_1.RectangleAnchor));
exports.BezierRectangleAnchor = BezierRectangleAnchor;
var BezierDiamondAnchor = /** @class */ (function (_super) {
    __extends(BezierDiamondAnchor, _super);
    function BezierDiamondAnchor() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(BezierDiamondAnchor.prototype, "kind", {
        get: function () {
            return bezier_edge_router_1.BezierEdgeRouter.KIND + ':' + anchor_1.DIAMOND_ANCHOR_KIND;
        },
        enumerable: false,
        configurable: true
    });
    BezierDiamondAnchor = __decorate([
        (0, inversify_1.injectable)()
    ], BezierDiamondAnchor);
    return BezierDiamondAnchor;
}(polyline_anchors_1.DiamondAnchor));
exports.BezierDiamondAnchor = BezierDiamondAnchor;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/routing/bezier-edge-router.js":
/*!*************************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/routing/bezier-edge-router.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AddRemoveBezierSegmentCommand = exports.AddRemoveBezierSegmentAction = exports.BezierMouseListener = exports.BezierEdgeRouter = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "./node_modules/sprotty-protocol/lib/utils/geometry.js");
var model_1 = __webpack_require__(/*! ./model */ "./node_modules/sprotty/lib/features/routing/model.js");
var routing_1 = __webpack_require__(/*! ./routing */ "./node_modules/sprotty/lib/features/routing/routing.js");
var abstract_edge_router_1 = __webpack_require__(/*! ./abstract-edge-router */ "./node_modules/sprotty/lib/features/routing/abstract-edge-router.js");
var mouse_tool_1 = __webpack_require__(/*! ../../base/views/mouse-tool */ "./node_modules/sprotty/lib/base/views/mouse-tool.js");
var command_1 = __webpack_require__(/*! ../../base/commands/command */ "./node_modules/sprotty/lib/base/commands/command.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/sprotty/lib/base/types.js");
var BezierEdgeRouter = /** @class */ (function (_super) {
    __extends(BezierEdgeRouter, _super);
    function BezierEdgeRouter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BezierEdgeRouter_1 = BezierEdgeRouter;
    Object.defineProperty(BezierEdgeRouter.prototype, "kind", {
        get: function () {
            return BezierEdgeRouter_1.KIND;
        },
        enumerable: false,
        configurable: true
    });
    BezierEdgeRouter.prototype.route = function (edge) {
        if (!edge.source || !edge.target)
            return [];
        var rpCount = edge.routingPoints.length;
        var source = edge.source;
        var target = edge.target;
        var result = [];
        result.push({ kind: 'source', x: 0, y: 0 });
        if (rpCount === 0) {
            // initial values
            var _a = this.createDefaultBezierHandles(source.position, target.position), h1 = _a[0], h2 = _a[1];
            result.push({ kind: 'bezier-control-after', x: h1.x, y: h1.y, pointIndex: 0 });
            result.push({ kind: 'bezier-control-before', x: h2.x, y: h2.y, pointIndex: 1 });
            edge.routingPoints.push(h1);
            edge.routingPoints.push(h2);
        }
        else if (rpCount >= 2) {
            for (var i = 0; i < rpCount; i++) {
                var p = edge.routingPoints[i];
                if (i % 3 === 0) {
                    result.push({ kind: 'bezier-control-after', x: p.x, y: p.y, pointIndex: i });
                }
                if ((i + 1) % 3 === 0) {
                    result.push({ kind: 'bezier-junction', x: p.x, y: p.y, pointIndex: i });
                }
                else if ((i + 2) % 3 === 0) {
                    result.push({ kind: 'bezier-control-before', x: p.x, y: p.y, pointIndex: i });
                }
            }
        }
        result.push({ kind: 'target', x: 0, y: 0 });
        // use "ends" of edge as reference or next bezier-junction
        var p0 = rpCount > 2 ? edge.routingPoints[2] : target.position;
        var pn = rpCount > 2 ? edge.routingPoints[edge.routingPoints.length - 3] : source.position;
        var sourceAnchor = this.getTranslatedAnchor(source, p0, target.parent, edge, edge.sourceAnchorCorrection);
        var targetAnchor = this.getTranslatedAnchor(target, pn, source.parent, edge, edge.targetAnchorCorrection);
        result[0] = { kind: 'source', x: sourceAnchor.x, y: sourceAnchor.y };
        result[result.length - 1] = { kind: 'target', x: targetAnchor.x, y: targetAnchor.y };
        return result;
    };
    BezierEdgeRouter.prototype.createDefaultBezierHandles = function (relH1, relH2) {
        var h1 = {
            x: relH1.x - BezierEdgeRouter_1.DEFAULT_BEZIER_HANDLE_OFFSET,
            y: relH1.y
        };
        var h2 = {
            x: relH2.x + BezierEdgeRouter_1.DEFAULT_BEZIER_HANDLE_OFFSET,
            y: relH2.y
        };
        return [h1, h2];
    };
    BezierEdgeRouter.prototype.createRoutingHandles = function (edge) {
        // route ensure there are at least 2 routed points
        this.route(edge);
        this.rebuildHandles(edge);
    };
    BezierEdgeRouter.prototype.rebuildHandles = function (edge) {
        this.addHandle(edge, 'source', 'routing-point', -2);
        this.addHandle(edge, 'bezier-control-after', 'bezier-routing-point', 0);
        this.addHandle(edge, 'bezier-add', 'bezier-create-routing-point', 0);
        var rpCount = edge.routingPoints.length;
        if (rpCount > 2) {
            for (var i = 1; i < rpCount - 1; i += 3) {
                this.addHandle(edge, 'bezier-control-before', 'bezier-routing-point', i);
                // Add two circle for add/remove segments
                this.addHandle(edge, 'bezier-add', 'bezier-create-routing-point', i + 1);
                this.addHandle(edge, 'bezier-junction', 'routing-point', i + 1);
                this.addHandle(edge, 'bezier-remove', 'bezier-remove-routing-point', i + 1);
                this.addHandle(edge, 'bezier-control-after', 'bezier-routing-point', i + 2);
                // re-position control-pairs
                this.moveBezierControlPair(edge.routingPoints[i], i, edge);
            }
        }
        this.addHandle(edge, 'bezier-control-before', 'bezier-routing-point', rpCount - 1);
        this.addHandle(edge, 'target', 'routing-point', -1);
    };
    BezierEdgeRouter.prototype.getInnerHandlePosition = function (edge, route, handle) {
        if (handle.kind === 'bezier-control-before' || handle.kind === 'bezier-junction' || handle.kind === 'bezier-control-after') {
            for (var i = 0; i < route.length; i++) {
                var p = route[i];
                if (p.pointIndex === handle.pointIndex && p.kind === handle.kind)
                    return p;
            }
        }
        else if (handle.kind === 'bezier-add') {
            var ctrlPoint = this.findBezierControl(edge, route, handle.pointIndex);
            return { x: ctrlPoint.x, y: ctrlPoint.y + 12.5 };
        }
        else if (handle.kind === 'bezier-remove') {
            var ctrlPoint = this.findBezierControl(edge, route, handle.pointIndex);
            return { x: ctrlPoint.x, y: ctrlPoint.y - 12.5 };
        }
        return undefined;
    };
    BezierEdgeRouter.prototype.findBezierControl = function (edge, route, handleIndex) {
        var result = { x: route[0].x, y: route[0].y };
        if (handleIndex > 0) {
            for (var _i = 0, route_1 = route; _i < route_1.length; _i++) {
                var rp = route_1[_i];
                if (rp.pointIndex !== undefined && rp.pointIndex === handleIndex && rp.kind === 'bezier-junction') {
                    result = { x: rp.x, y: rp.y };
                    break;
                }
            }
        }
        return result;
    };
    BezierEdgeRouter.prototype.applyHandleMoves = function (edge, moves) {
        var _this = this;
        moves.forEach(function (move) {
            var handle = move.handle;
            var orgPosition = { x: 0, y: 0 };
            var relativePos, newControlPos, ctrlPointIndex;
            var moveToPos = move.toPosition;
            switch (handle.kind) {
                case 'bezier-control-before':
                case 'bezier-control-after':
                    // find potential other handle/rp and move
                    _this.moveBezierControlPair(moveToPos, move.handle.pointIndex, edge);
                    break;
                case 'bezier-junction':
                    var index = handle.pointIndex;
                    if (index >= 0 && index < edge.routingPoints.length) {
                        ctrlPointIndex = index - 1;
                        orgPosition = edge.routingPoints[index];
                        relativePos = edge.routingPoints[ctrlPointIndex];
                        newControlPos = _this.calcRelativeMove(orgPosition, moveToPos, relativePos);
                        edge.routingPoints[index] = moveToPos;
                        _this.moveBezierControlPair(newControlPos, ctrlPointIndex, edge);
                    }
                    break;
                case 'source':
                    ctrlPointIndex = 0;
                    relativePos = edge.routingPoints[ctrlPointIndex];
                    if (!(edge.source instanceof model_1.SDanglingAnchor)) {
                        // detach source
                        var anchor = new model_1.SDanglingAnchor();
                        anchor.id = edge.id + '_dangling-source';
                        anchor.original = edge.source;
                        anchor.position = move.toPosition;
                        handle.root.add(anchor);
                        handle.danglingAnchor = anchor;
                        edge.sourceId = anchor.id;
                        if (edge.source)
                            orgPosition = edge.source.position;
                    }
                    else if (handle.danglingAnchor) {
                        orgPosition = handle.danglingAnchor.position;
                        handle.danglingAnchor.position = moveToPos;
                    }
                    newControlPos = _this.calcRelativeMove(orgPosition, moveToPos, relativePos);
                    _this.moveBezierControlPair(newControlPos, ctrlPointIndex, edge);
                    break;
                case 'target':
                    ctrlPointIndex = edge.routingPoints.length - 1;
                    relativePos = edge.routingPoints[ctrlPointIndex];
                    if (!(edge.target instanceof model_1.SDanglingAnchor)) {
                        // detach target
                        var anchor = new model_1.SDanglingAnchor();
                        anchor.id = edge.id + '_dangling-target';
                        anchor.original = edge.target;
                        anchor.position = moveToPos;
                        handle.root.add(anchor);
                        handle.danglingAnchor = anchor;
                        edge.targetId = anchor.id;
                        if (edge.target)
                            orgPosition = edge.target.position;
                    }
                    else if (handle.danglingAnchor) {
                        orgPosition = handle.danglingAnchor.position;
                        handle.danglingAnchor.position = moveToPos;
                    }
                    newControlPos = _this.calcRelativeMove(orgPosition, moveToPos, relativePos);
                    _this.moveBezierControlPair(newControlPos, ctrlPointIndex, edge);
                    break;
                default:
                    break;
            }
        });
    };
    BezierEdgeRouter.prototype.applyInnerHandleMoves = function (edge, moves) {
        // not required
    };
    BezierEdgeRouter.prototype.getOptions = function (edge) {
        return {
            minimalPointDistance: 2,
            standardDistance: 0.1,
            selfEdgeOffset: 20
        };
    };
    BezierEdgeRouter.prototype.calcRelativeMove = function (oldPos, newPos, relativePoint) {
        return {
            x: relativePoint.x - (oldPos.x - newPos.x),
            y: relativePoint.y - (oldPos.y - newPos.y)
        };
    };
    BezierEdgeRouter.prototype.createNewBezierSegment = function (index, edge) {
        var routingPoints = edge.routingPoints;
        var bezierJunctionPos, start, end;
        if (routingPoints.length === 2) {
            start = routingPoints[index < 0 ? 0 : index];
            end = routingPoints[routingPoints.length - 1];
            bezierJunctionPos = (0, geometry_1.centerOfLine)(start, end);
        }
        else {
            start = routingPoints[index];
            end = routingPoints[index + 2];
            bezierJunctionPos = (0, geometry_1.centerOfLine)(start, end);
        }
        var _a = this.createDefaultBezierHandles(bezierJunctionPos, bezierJunctionPos), h1 = _a[0], h2 = _a[1];
        routingPoints.splice(index + 1, 0, h1);
        routingPoints.splice(index + 2, 0, bezierJunctionPos);
        routingPoints.splice(index + 3, 0, h2);
        // ensure handles are correctly positioned
        this.moveBezierControlPair(h1, index + 1, edge);
        // simple solution for now: just rebuildHandles
        edge.removeAll(function (c) { return c instanceof model_1.SRoutingHandle; });
        this.rebuildHandles(edge);
    };
    BezierEdgeRouter.prototype.removeBezierSegment = function (index, edge) {
        var routingPoints = edge.routingPoints;
        routingPoints.splice(index - 1, 3);
        // simple solution for now: just rebuildHandles
        edge.removeAll(function (c) { return c instanceof model_1.SRoutingHandle; });
        this.rebuildHandles(edge);
    };
    BezierEdgeRouter.prototype.moveBezierControlPair = function (newPos, ctrlPointIndex, edge) {
        if (ctrlPointIndex >= 0 && ctrlPointIndex < edge.routingPoints.length) {
            // find neighbors
            var before = ctrlPointIndex - 1;
            var after = ctrlPointIndex + 1;
            // this is the first control or the last control => nothing to do further
            if (before < 0 || after === edge.routingPoints.length) {
                edge.routingPoints[ctrlPointIndex] = newPos;
            }
            else {
                // behind bezier-junction
                if (ctrlPointIndex % 3 === 0) {
                    this.setBezierMirror(edge, newPos, ctrlPointIndex, false);
                    // before bezier-junction
                }
                else if ((ctrlPointIndex + 2) % 3 === 0) {
                    this.setBezierMirror(edge, newPos, ctrlPointIndex, true);
                }
            }
        }
    };
    BezierEdgeRouter.prototype.setBezierMirror = function (edge, newPos, pointIndex, before) {
        edge.routingPoints[pointIndex] = newPos;
        var jct = edge.routingPoints[before ? (pointIndex + 1) : (pointIndex - 1)];
        edge.routingPoints[before ? (pointIndex + 2) : (pointIndex - 2)] = {
            x: jct.x - (newPos.x - jct.x),
            y: jct.y - (newPos.y - jct.y)
        };
    };
    var BezierEdgeRouter_1;
    BezierEdgeRouter.KIND = 'bezier';
    BezierEdgeRouter.DEFAULT_BEZIER_HANDLE_OFFSET = 25;
    BezierEdgeRouter = BezierEdgeRouter_1 = __decorate([
        (0, inversify_1.injectable)()
    ], BezierEdgeRouter);
    return BezierEdgeRouter;
}(abstract_edge_router_1.AbstractEdgeRouter));
exports.BezierEdgeRouter = BezierEdgeRouter;
/**
 * Reacts on mouseDown events if the target kind is bezier-add or bezier-remove
 */
var BezierMouseListener = /** @class */ (function (_super) {
    __extends(BezierMouseListener, _super);
    function BezierMouseListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BezierMouseListener.prototype.mouseDown = function (target, event) {
        var result = [];
        if (target instanceof model_1.SRoutingHandle && (target.kind === 'bezier-add' || target.kind === 'bezier-remove')) {
            if (target.type === 'bezier-create-routing-point') {
                result.push(AddRemoveBezierSegmentAction.create('add', target.id));
            }
            else if (target.type === 'bezier-remove-routing-point') {
                result.push(AddRemoveBezierSegmentAction.create('remove', target.id));
            }
        }
        return result;
    };
    return BezierMouseListener;
}(mouse_tool_1.MouseListener));
exports.BezierMouseListener = BezierMouseListener;
;
var AddRemoveBezierSegmentAction;
(function (AddRemoveBezierSegmentAction) {
    AddRemoveBezierSegmentAction.KIND = 'addRemoveBezierSegment';
    function create(actionTask, targetId) {
        return {
            kind: AddRemoveBezierSegmentAction.KIND,
            actionTask: actionTask,
            targetId: targetId
        };
    }
    AddRemoveBezierSegmentAction.create = create;
})(AddRemoveBezierSegmentAction = exports.AddRemoveBezierSegmentAction || (exports.AddRemoveBezierSegmentAction = {}));
var AddRemoveBezierSegmentCommand = /** @class */ (function (_super) {
    __extends(AddRemoveBezierSegmentCommand, _super);
    function AddRemoveBezierSegmentCommand(action, edgeRouterRegistry) {
        var _this = _super.call(this) || this;
        _this.action = action;
        _this.edgeRouterRegistry = edgeRouterRegistry;
        return _this;
    }
    AddRemoveBezierSegmentCommand.prototype.execute = function (context) {
        var index = context.root.index;
        var target = index.getById(this.action.targetId);
        if (this.edgeRouterRegistry && target instanceof model_1.SRoutingHandle) {
            var raw = this.edgeRouterRegistry.get(target.parent.routerKind);
            if (raw instanceof BezierEdgeRouter) {
                var router = raw;
                for (var _i = 0, _a = context.root.children; _i < _a.length; _i++) {
                    var child = _a[_i];
                    if (child.id === target.parent.id) {
                        if (this.action.actionTask === 'add') {
                            router.createNewBezierSegment(target.pointIndex, child);
                        }
                        else if (this.action.actionTask === 'remove') {
                            router.removeBezierSegment(target.pointIndex, child);
                        }
                        break;
                    }
                }
            }
        }
        return context.root;
    };
    AddRemoveBezierSegmentCommand.prototype.undo = function (context) {
        throw new Error('Method not implemented.');
    };
    AddRemoveBezierSegmentCommand.prototype.redo = function (context) {
        throw new Error('Method not implemented.');
    };
    AddRemoveBezierSegmentCommand.KIND = AddRemoveBezierSegmentAction.KIND;
    AddRemoveBezierSegmentCommand = __decorate([
        (0, inversify_1.injectable)(),
        __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
        __param(1, (0, inversify_1.inject)(routing_1.EdgeRouterRegistry)),
        __metadata("design:paramtypes", [Object, routing_1.EdgeRouterRegistry])
    ], AddRemoveBezierSegmentCommand);
    return AddRemoveBezierSegmentCommand;
}(command_1.Command));
exports.AddRemoveBezierSegmentCommand = AddRemoveBezierSegmentCommand;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/routing/di.config.js":
/*!****************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/routing/di.config.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/sprotty/lib/base/types.js");
var manhattan_edge_router_1 = __webpack_require__(/*! ./manhattan-edge-router */ "./node_modules/sprotty/lib/features/routing/manhattan-edge-router.js");
var polyline_edge_router_1 = __webpack_require__(/*! ./polyline-edge-router */ "./node_modules/sprotty/lib/features/routing/polyline-edge-router.js");
var manhattan_anchors_1 = __webpack_require__(/*! ./manhattan-anchors */ "./node_modules/sprotty/lib/features/routing/manhattan-anchors.js");
var polyline_anchors_1 = __webpack_require__(/*! ./polyline-anchors */ "./node_modules/sprotty/lib/features/routing/polyline-anchors.js");
var anchor_1 = __webpack_require__(/*! ./anchor */ "./node_modules/sprotty/lib/features/routing/anchor.js");
var routing_1 = __webpack_require__(/*! ./routing */ "./node_modules/sprotty/lib/features/routing/routing.js");
var bezier_edge_router_1 = __webpack_require__(/*! ./bezier-edge-router */ "./node_modules/sprotty/lib/features/routing/bezier-edge-router.js");
var bezier_anchors_1 = __webpack_require__(/*! ./bezier-anchors */ "./node_modules/sprotty/lib/features/routing/bezier-anchors.js");
var command_registration_1 = __webpack_require__(/*! ../../base/commands/command-registration */ "./node_modules/sprotty/lib/base/commands/command-registration.js");
var routingModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    bind(routing_1.EdgeRouterRegistry).toSelf().inSingletonScope();
    bind(anchor_1.AnchorComputerRegistry).toSelf().inSingletonScope();
    bind(manhattan_edge_router_1.ManhattanEdgeRouter).toSelf().inSingletonScope();
    bind(types_1.TYPES.IEdgeRouter).toService(manhattan_edge_router_1.ManhattanEdgeRouter);
    bind(types_1.TYPES.IAnchorComputer).to(manhattan_anchors_1.ManhattanEllipticAnchor).inSingletonScope();
    bind(types_1.TYPES.IAnchorComputer).to(manhattan_anchors_1.ManhattanRectangularAnchor).inSingletonScope();
    bind(types_1.TYPES.IAnchorComputer).to(manhattan_anchors_1.ManhattanDiamondAnchor).inSingletonScope();
    bind(polyline_edge_router_1.PolylineEdgeRouter).toSelf().inSingletonScope();
    bind(types_1.TYPES.IEdgeRouter).toService(polyline_edge_router_1.PolylineEdgeRouter);
    bind(types_1.TYPES.IAnchorComputer).to(polyline_anchors_1.EllipseAnchor);
    bind(types_1.TYPES.IAnchorComputer).to(polyline_anchors_1.RectangleAnchor);
    bind(types_1.TYPES.IAnchorComputer).to(polyline_anchors_1.DiamondAnchor);
    bind(bezier_edge_router_1.BezierEdgeRouter).toSelf().inSingletonScope();
    bind(types_1.TYPES.IEdgeRouter).toService(bezier_edge_router_1.BezierEdgeRouter);
    bind(types_1.TYPES.IAnchorComputer).to(bezier_anchors_1.BezierEllipseAnchor);
    bind(types_1.TYPES.IAnchorComputer).to(bezier_anchors_1.BezierRectangleAnchor);
    bind(types_1.TYPES.IAnchorComputer).to(bezier_anchors_1.BezierDiamondAnchor);
    (0, command_registration_1.configureCommand)({ bind: bind, isBound: isBound }, bezier_edge_router_1.AddRemoveBezierSegmentCommand);
});
exports["default"] = routingModule;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/routing/manhattan-anchors.js":
/*!************************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/routing/manhattan-anchors.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ManhattanEllipticAnchor = exports.ManhattanDiamondAnchor = exports.ManhattanRectangularAnchor = void 0;
var geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "./node_modules/sprotty-protocol/lib/utils/geometry.js");
var geometry_2 = __webpack_require__(/*! ../../utils/geometry */ "./node_modules/sprotty/lib/utils/geometry.js");
var anchor_1 = __webpack_require__(/*! ./anchor */ "./node_modules/sprotty/lib/features/routing/anchor.js");
var manhattan_edge_router_1 = __webpack_require__(/*! ./manhattan-edge-router */ "./node_modules/sprotty/lib/features/routing/manhattan-edge-router.js");
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var ManhattanRectangularAnchor = /** @class */ (function () {
    function ManhattanRectangularAnchor() {
    }
    ManhattanRectangularAnchor_1 = ManhattanRectangularAnchor;
    Object.defineProperty(ManhattanRectangularAnchor.prototype, "kind", {
        get: function () {
            return ManhattanRectangularAnchor_1.KIND;
        },
        enumerable: false,
        configurable: true
    });
    ManhattanRectangularAnchor.prototype.getAnchor = function (connectable, refPoint, offset) {
        var b = connectable.bounds;
        if (b.width <= 0 || b.height <= 0) {
            return b;
        }
        var bounds = {
            x: b.x - offset,
            y: b.y - offset,
            width: b.width + 2 * offset,
            height: b.height + 2 * offset
        };
        if (refPoint.x >= bounds.x && bounds.x + bounds.width >= refPoint.x) {
            if (refPoint.y < bounds.y + 0.5 * bounds.height)
                return { x: refPoint.x, y: bounds.y };
            else
                return { x: refPoint.x, y: bounds.y + bounds.height };
        }
        if (refPoint.y >= bounds.y && bounds.y + bounds.height >= refPoint.y) {
            if (refPoint.x < bounds.x + 0.5 * bounds.width)
                return { x: bounds.x, y: refPoint.y };
            else
                return { x: bounds.x + bounds.width, y: refPoint.y };
        }
        return geometry_1.Bounds.center(bounds);
    };
    var ManhattanRectangularAnchor_1;
    ManhattanRectangularAnchor.KIND = manhattan_edge_router_1.ManhattanEdgeRouter.KIND + ':' + anchor_1.RECTANGULAR_ANCHOR_KIND;
    ManhattanRectangularAnchor = ManhattanRectangularAnchor_1 = __decorate([
        (0, inversify_1.injectable)()
    ], ManhattanRectangularAnchor);
    return ManhattanRectangularAnchor;
}());
exports.ManhattanRectangularAnchor = ManhattanRectangularAnchor;
var ManhattanDiamondAnchor = /** @class */ (function () {
    function ManhattanDiamondAnchor() {
    }
    ManhattanDiamondAnchor_1 = ManhattanDiamondAnchor;
    Object.defineProperty(ManhattanDiamondAnchor.prototype, "kind", {
        get: function () {
            return ManhattanDiamondAnchor_1.KIND;
        },
        enumerable: false,
        configurable: true
    });
    ManhattanDiamondAnchor.prototype.getAnchor = function (connectable, refPoint, offset) {
        if (offset === void 0) { offset = 0; }
        var b = connectable.bounds;
        if (b.width <= 0 || b.height <= 0) {
            return b;
        }
        var bounds = {
            x: b.x - offset,
            y: b.y - offset,
            width: b.width + 2 * offset,
            height: b.height + 2 * offset
        };
        var c = geometry_1.Bounds.center(bounds);
        var outline = undefined;
        var refLine = undefined;
        if (refPoint.x >= bounds.x && refPoint.x <= bounds.x + bounds.width) {
            if (bounds.x + 0.5 * bounds.width >= refPoint.x) {
                refLine = new geometry_2.PointToPointLine(refPoint, { x: refPoint.x, y: c.y });
                if (refPoint.y < c.y)
                    outline = new geometry_2.PointToPointLine({ x: bounds.x, y: c.y }, { x: c.x, y: bounds.y });
                else
                    outline = new geometry_2.PointToPointLine({ x: bounds.x, y: c.y }, { x: c.x, y: bounds.y + bounds.height });
            }
            else {
                refLine = new geometry_2.PointToPointLine(refPoint, { x: refPoint.x, y: c.y });
                if (refPoint.y < c.y)
                    outline = new geometry_2.PointToPointLine({ x: bounds.x + bounds.width, y: c.y }, { x: c.x, y: bounds.y });
                else
                    outline = new geometry_2.PointToPointLine({ x: bounds.x + bounds.width, y: c.y }, { x: c.x, y: bounds.y + bounds.height });
            }
        }
        else if (refPoint.y >= bounds.y && refPoint.y <= bounds.y + bounds.height) {
            if (bounds.y + 0.5 * bounds.height >= refPoint.y) {
                refLine = new geometry_2.PointToPointLine(refPoint, { x: c.x, y: refPoint.y });
                if (refPoint.x < c.x)
                    outline = new geometry_2.PointToPointLine({ x: bounds.x, y: c.y }, { x: c.x, y: bounds.y });
                else
                    outline = new geometry_2.PointToPointLine({ x: bounds.x + bounds.width, y: c.y }, { x: c.x, y: bounds.y });
            }
            else {
                refLine = new geometry_2.PointToPointLine(refPoint, { x: c.x, y: refPoint.y });
                if (refPoint.x < c.x)
                    outline = new geometry_2.PointToPointLine({ x: bounds.x, y: c.y }, { x: c.x, y: bounds.y + bounds.height });
                else
                    outline = new geometry_2.PointToPointLine({ x: bounds.x + bounds.width, y: c.y }, { x: c.x, y: bounds.y + bounds.height });
            }
        }
        if (!!refLine && !!outline)
            return (0, geometry_2.intersection)(outline, refLine);
        else
            return c;
    };
    var ManhattanDiamondAnchor_1;
    ManhattanDiamondAnchor.KIND = manhattan_edge_router_1.ManhattanEdgeRouter.KIND + ':' + anchor_1.DIAMOND_ANCHOR_KIND;
    ManhattanDiamondAnchor = ManhattanDiamondAnchor_1 = __decorate([
        (0, inversify_1.injectable)()
    ], ManhattanDiamondAnchor);
    return ManhattanDiamondAnchor;
}());
exports.ManhattanDiamondAnchor = ManhattanDiamondAnchor;
var ManhattanEllipticAnchor = /** @class */ (function () {
    function ManhattanEllipticAnchor() {
    }
    ManhattanEllipticAnchor_1 = ManhattanEllipticAnchor;
    Object.defineProperty(ManhattanEllipticAnchor.prototype, "kind", {
        get: function () {
            return ManhattanEllipticAnchor_1.KIND;
        },
        enumerable: false,
        configurable: true
    });
    ManhattanEllipticAnchor.prototype.getAnchor = function (connectable, refPoint, offset) {
        if (offset === void 0) { offset = 0; }
        var b = connectable.bounds;
        if (b.width <= 0 || b.height <= 0) {
            return b;
        }
        var bounds = {
            x: b.x - offset,
            y: b.y - offset,
            width: b.width + 2 * offset,
            height: b.height + 2 * offset
        };
        var c = geometry_1.Bounds.center(bounds);
        var refRelative = geometry_1.Point.subtract(refPoint, c);
        var x = c.x;
        var y = c.y;
        if (refPoint.x >= bounds.x && bounds.x + bounds.width >= refPoint.x) {
            x += refRelative.x;
            var dy = 0.5 * bounds.height * Math.sqrt(1 - (refRelative.x * refRelative.x) / (0.25 * bounds.width * bounds.width));
            if (refRelative.y < 0)
                y -= dy;
            else
                y += dy;
        }
        else if (refPoint.y >= bounds.y && bounds.y + bounds.height >= refPoint.y) {
            y += refRelative.y;
            var dx = 0.5 * bounds.width * Math.sqrt(1 - (refRelative.y * refRelative.y) / (0.25 * bounds.height * bounds.height));
            if (refRelative.x < 0)
                x -= dx;
            else
                x += dx;
        }
        return { x: x, y: y };
    };
    var ManhattanEllipticAnchor_1;
    ManhattanEllipticAnchor.KIND = manhattan_edge_router_1.ManhattanEdgeRouter.KIND + ':' + anchor_1.ELLIPTIC_ANCHOR_KIND;
    ManhattanEllipticAnchor = ManhattanEllipticAnchor_1 = __decorate([
        (0, inversify_1.injectable)()
    ], ManhattanEllipticAnchor);
    return ManhattanEllipticAnchor;
}());
exports.ManhattanEllipticAnchor = ManhattanEllipticAnchor;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/routing/manhattan-edge-router.js":
/*!****************************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/routing/manhattan-edge-router.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019-2020 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ManhattanEdgeRouter = void 0;
var geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "./node_modules/sprotty-protocol/lib/utils/geometry.js");
var smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "./node_modules/sprotty/lib/base/model/smodel-utils.js");
var abstract_edge_router_1 = __webpack_require__(/*! ./abstract-edge-router */ "./node_modules/sprotty/lib/features/routing/abstract-edge-router.js");
var model_1 = __webpack_require__(/*! ./model */ "./node_modules/sprotty/lib/features/routing/model.js");
var ManhattanEdgeRouter = /** @class */ (function (_super) {
    __extends(ManhattanEdgeRouter, _super);
    function ManhattanEdgeRouter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(ManhattanEdgeRouter.prototype, "kind", {
        get: function () {
            return ManhattanEdgeRouter.KIND;
        },
        enumerable: false,
        configurable: true
    });
    ManhattanEdgeRouter.prototype.getOptions = function (edge) {
        return {
            standardDistance: 20,
            minimalPointDistance: 3,
            selfEdgeOffset: 0.25
        };
    };
    ManhattanEdgeRouter.prototype.route = function (edge) {
        if (!edge.source || !edge.target)
            return [];
        var routedCorners = this.createRoutedCorners(edge);
        var sourceRefPoint = routedCorners[0]
            || (0, smodel_utils_1.translatePoint)(geometry_1.Bounds.center(edge.target.bounds), edge.target.parent, edge.parent);
        var sourceAnchor = this.getTranslatedAnchor(edge.source, sourceRefPoint, edge.parent, edge, edge.sourceAnchorCorrection);
        var targetRefPoint = routedCorners[routedCorners.length - 1]
            || (0, smodel_utils_1.translatePoint)(geometry_1.Bounds.center(edge.source.bounds), edge.source.parent, edge.parent);
        var targetAnchor = this.getTranslatedAnchor(edge.target, targetRefPoint, edge.parent, edge, edge.targetAnchorCorrection);
        if (!sourceAnchor || !targetAnchor)
            return [];
        var routedPoints = [];
        routedPoints.push(__assign({ kind: 'source' }, sourceAnchor));
        routedCorners.forEach(function (corner) { return routedPoints.push(corner); });
        routedPoints.push(__assign({ kind: 'target' }, targetAnchor));
        return routedPoints;
    };
    ManhattanEdgeRouter.prototype.createRoutedCorners = function (edge) {
        var sourceAnchors = new abstract_edge_router_1.DefaultAnchors(edge.source, edge.parent, 'source');
        var targetAnchors = new abstract_edge_router_1.DefaultAnchors(edge.target, edge.parent, 'target');
        if (edge.routingPoints.length > 0) {
            var routingPointsCopy = edge.routingPoints.slice();
            this.cleanupRoutingPoints(edge, routingPointsCopy, false, true);
            if (routingPointsCopy.length > 0)
                return routingPointsCopy.map(function (routingPoint, index) {
                    return __assign({ kind: 'linear', pointIndex: index }, routingPoint);
                });
        }
        var options = this.getOptions(edge);
        var corners = this.calculateDefaultCorners(edge, sourceAnchors, targetAnchors, options);
        return corners.map(function (corner) {
            return __assign({ kind: 'linear' }, corner);
        });
    };
    ManhattanEdgeRouter.prototype.createRoutingHandles = function (edge) {
        var routedPoints = this.route(edge);
        this.commitRoute(edge, routedPoints);
        if (routedPoints.length > 0) {
            this.addHandle(edge, 'source', 'routing-point', -2);
            for (var i = 0; i < routedPoints.length - 1; ++i)
                this.addHandle(edge, 'manhattan-50%', 'volatile-routing-point', i - 1);
            this.addHandle(edge, 'target', 'routing-point', routedPoints.length - 2);
        }
    };
    ManhattanEdgeRouter.prototype.getInnerHandlePosition = function (edge, route, handle) {
        var fraction = this.getFraction(handle.kind);
        if (fraction !== undefined) {
            var _a = this.findRouteSegment(edge, route, handle.pointIndex), start = _a.start, end = _a.end;
            if (start !== undefined && end !== undefined)
                return geometry_1.Point.linear(start, end, fraction);
        }
        return undefined;
    };
    ManhattanEdgeRouter.prototype.getFraction = function (kind) {
        switch (kind) {
            case 'manhattan-50%': return 0.5;
            default: return undefined;
        }
    };
    ManhattanEdgeRouter.prototype.applyInnerHandleMoves = function (edge, moves) {
        var _this = this;
        var route = this.route(edge);
        var routingPoints = edge.routingPoints;
        var minimalPointDistance = this.getOptions(edge).minimalPointDistance;
        moves.forEach(function (move) {
            var handle = move.handle;
            var index = handle.pointIndex;
            var correctedX = _this.correctX(routingPoints, index, move.toPosition.x, minimalPointDistance);
            var correctedY = _this.correctY(routingPoints, index, move.toPosition.y, minimalPointDistance);
            switch (handle.kind) {
                case 'manhattan-50%':
                    if (index < 0) {
                        if ((0, geometry_1.almostEquals)(route[0].x, route[1].x))
                            _this.alignX(routingPoints, 0, correctedX);
                        else
                            _this.alignY(routingPoints, 0, correctedY);
                    }
                    else if (index < routingPoints.length - 1) {
                        if ((0, geometry_1.almostEquals)(routingPoints[index].x, routingPoints[index + 1].x)) {
                            _this.alignX(routingPoints, index, correctedX);
                            _this.alignX(routingPoints, index + 1, correctedX);
                        }
                        else {
                            _this.alignY(routingPoints, index, correctedY);
                            _this.alignY(routingPoints, index + 1, correctedY);
                        }
                    }
                    else {
                        if ((0, geometry_1.almostEquals)(route[route.length - 2].x, route[route.length - 1].x))
                            _this.alignX(routingPoints, routingPoints.length - 1, correctedX);
                        else
                            _this.alignY(routingPoints, routingPoints.length - 1, correctedY);
                    }
                    break;
            }
        });
    };
    ManhattanEdgeRouter.prototype.correctX = function (routingPoints, index, x, minimalPointDistance) {
        if (index > 0 && Math.abs(x - routingPoints[index - 1].x) < minimalPointDistance)
            return routingPoints[index - 1].x;
        else if (index < routingPoints.length - 2 && Math.abs(x - routingPoints[index + 2].x) < minimalPointDistance)
            return routingPoints[index + 2].x;
        else
            return x;
    };
    ManhattanEdgeRouter.prototype.alignX = function (routingPoints, index, x) {
        if (index >= 0 && index < routingPoints.length)
            routingPoints[index] = {
                x: x,
                y: routingPoints[index].y
            };
    };
    ManhattanEdgeRouter.prototype.correctY = function (routingPoints, index, y, minimalPointDistance) {
        if (index > 0 && Math.abs(y - routingPoints[index - 1].y) < minimalPointDistance)
            return routingPoints[index - 1].y;
        else if (index < routingPoints.length - 2 && Math.abs(y - routingPoints[index + 2].y) < minimalPointDistance)
            return routingPoints[index + 2].y;
        else
            return y;
    };
    ManhattanEdgeRouter.prototype.alignY = function (routingPoints, index, y) {
        if (index >= 0 && index < routingPoints.length)
            routingPoints[index] = {
                x: routingPoints[index].x,
                y: y
            };
    };
    ManhattanEdgeRouter.prototype.cleanupRoutingPoints = function (edge, routingPoints, updateHandles, addRoutingPoints) {
        var sourceAnchors = new abstract_edge_router_1.DefaultAnchors(edge.source, edge.parent, "source");
        var targetAnchors = new abstract_edge_router_1.DefaultAnchors(edge.target, edge.parent, "target");
        if (this.resetRoutingPointsOnReconnect(edge, routingPoints, updateHandles, sourceAnchors, targetAnchors))
            return;
        // delete leading RPs inside the bounds of the source
        for (var i = 0; i < routingPoints.length; ++i)
            if (geometry_1.Bounds.includes(sourceAnchors.bounds, routingPoints[i])) {
                routingPoints.splice(0, 1);
                if (updateHandles) {
                    this.removeHandle(edge, -1);
                }
            }
            else {
                break;
            }
        // delete trailing RPs inside the bounds of the target
        for (var i = routingPoints.length - 1; i >= 0; --i)
            if (geometry_1.Bounds.includes(targetAnchors.bounds, routingPoints[i])) {
                routingPoints.splice(i, 1);
                if (updateHandles) {
                    this.removeHandle(edge, i);
                }
            }
            else {
                break;
            }
        if (routingPoints.length >= 2) {
            var options = this.getOptions(edge);
            for (var i = routingPoints.length - 2; i >= 0; --i) {
                if (geometry_1.Point.manhattanDistance(routingPoints[i], routingPoints[i + 1]) < options.minimalPointDistance) {
                    routingPoints.splice(i, 2);
                    --i;
                    if (updateHandles) {
                        this.removeHandle(edge, i - 1);
                        this.removeHandle(edge, i);
                    }
                }
            }
        }
        if (addRoutingPoints) {
            this.addAdditionalCorner(edge, routingPoints, sourceAnchors, targetAnchors, updateHandles);
            this.addAdditionalCorner(edge, routingPoints, targetAnchors, sourceAnchors, updateHandles);
            this.manhattanify(edge, routingPoints);
        }
    };
    ManhattanEdgeRouter.prototype.removeHandle = function (edge, pointIndex) {
        var toBeRemoved = [];
        edge.children.forEach(function (child) {
            if (child instanceof model_1.SRoutingHandle) {
                if (child.pointIndex > pointIndex)
                    --child.pointIndex;
                else if (child.pointIndex === pointIndex)
                    toBeRemoved.push(child);
            }
        });
        toBeRemoved.forEach(function (child) { return edge.remove(child); });
    };
    ManhattanEdgeRouter.prototype.addAdditionalCorner = function (edge, routingPoints, currentAnchors, otherAnchors, updateHandles) {
        if (routingPoints.length === 0)
            return;
        var refPoint = currentAnchors.kind === 'source' ? routingPoints[0] : routingPoints[routingPoints.length - 1];
        var index = currentAnchors.kind === 'source' ? 0 : routingPoints.length;
        var shiftIndex = index - (currentAnchors.kind === 'source' ? 1 : 0);
        var isHorizontal;
        if (routingPoints.length > 1) {
            isHorizontal = index === 0
                ? (0, geometry_1.almostEquals)(routingPoints[0].x, routingPoints[1].x)
                : (0, geometry_1.almostEquals)(routingPoints[routingPoints.length - 1].x, routingPoints[routingPoints.length - 2].x);
        }
        else {
            var nearestSide = otherAnchors.getNearestSide(refPoint);
            isHorizontal = nearestSide === abstract_edge_router_1.Side.TOP || nearestSide === abstract_edge_router_1.Side.BOTTOM;
        }
        if (isHorizontal) {
            if (refPoint.y < currentAnchors.get(abstract_edge_router_1.Side.TOP).y || refPoint.y > currentAnchors.get(abstract_edge_router_1.Side.BOTTOM).y) {
                var newPoint = { x: currentAnchors.get(abstract_edge_router_1.Side.TOP).x, y: refPoint.y };
                routingPoints.splice(index, 0, newPoint);
                if (updateHandles) {
                    edge.children.forEach(function (child) {
                        if (child instanceof model_1.SRoutingHandle && child.pointIndex >= shiftIndex)
                            ++child.pointIndex;
                    });
                    this.addHandle(edge, 'manhattan-50%', 'volatile-routing-point', shiftIndex);
                }
            }
        }
        else {
            if (refPoint.x < currentAnchors.get(abstract_edge_router_1.Side.LEFT).x || refPoint.x > currentAnchors.get(abstract_edge_router_1.Side.RIGHT).x) {
                var newPoint = { x: refPoint.x, y: currentAnchors.get(abstract_edge_router_1.Side.LEFT).y };
                routingPoints.splice(index, 0, newPoint);
                if (updateHandles) {
                    edge.children.forEach(function (child) {
                        if (child instanceof model_1.SRoutingHandle && child.pointIndex >= shiftIndex)
                            ++child.pointIndex;
                    });
                    this.addHandle(edge, 'manhattan-50%', 'volatile-routing-point', shiftIndex);
                }
            }
        }
    };
    /**
     * Add artificial routing points to keep all angles rectilinear.
     *
     * This makes edge morphing look a lot smoother, where RP positions are interpolated
     * linearly probably resulting in non-rectilinear angles. We don't add handles for
     * these additional RPs.
     */
    ManhattanEdgeRouter.prototype.manhattanify = function (edge, routingPoints) {
        for (var i = 1; i < routingPoints.length; ++i) {
            var isVertical = Math.abs(routingPoints[i - 1].x - routingPoints[i].x) < 1;
            var isHorizontal = Math.abs(routingPoints[i - 1].y - routingPoints[i].y) < 1;
            if (!isVertical && !isHorizontal) {
                routingPoints.splice(i, 0, {
                    x: routingPoints[i - 1].x,
                    y: routingPoints[i].y
                });
                ++i;
            }
        }
    };
    ManhattanEdgeRouter.prototype.calculateDefaultCorners = function (edge, sourceAnchors, targetAnchors, options) {
        var selfEdge = _super.prototype.calculateDefaultCorners.call(this, edge, sourceAnchors, targetAnchors, options);
        if (selfEdge.length > 0)
            return selfEdge;
        var bestAnchors = this.getBestConnectionAnchors(edge, sourceAnchors, targetAnchors, options);
        var sourceSide = bestAnchors.source;
        var targetSide = bestAnchors.target;
        var corners = [];
        var startPoint = sourceAnchors.get(sourceSide);
        var endPoint = targetAnchors.get(targetSide);
        switch (sourceSide) {
            case abstract_edge_router_1.Side.RIGHT:
                switch (targetSide) {
                    case abstract_edge_router_1.Side.BOTTOM:
                        corners.push({ x: endPoint.x, y: startPoint.y });
                        break;
                    case abstract_edge_router_1.Side.TOP:
                        corners.push({ x: endPoint.x, y: startPoint.y });
                        break;
                    case abstract_edge_router_1.Side.RIGHT:
                        corners.push({ x: Math.max(startPoint.x, endPoint.x) + 1.5 * options.standardDistance, y: startPoint.y });
                        corners.push({ x: Math.max(startPoint.x, endPoint.x) + 1.5 * options.standardDistance, y: endPoint.y });
                        break;
                    case abstract_edge_router_1.Side.LEFT:
                        if (endPoint.y !== startPoint.y) {
                            corners.push({ x: (startPoint.x + endPoint.x) / 2, y: startPoint.y });
                            corners.push({ x: (startPoint.x + endPoint.x) / 2, y: endPoint.y });
                        }
                        break;
                }
                break;
            case abstract_edge_router_1.Side.LEFT:
                switch (targetSide) {
                    case abstract_edge_router_1.Side.BOTTOM:
                        corners.push({ x: endPoint.x, y: startPoint.y });
                        break;
                    case abstract_edge_router_1.Side.TOP:
                        corners.push({ x: endPoint.x, y: startPoint.y });
                        break;
                    default:
                        endPoint = targetAnchors.get(abstract_edge_router_1.Side.RIGHT);
                        if (endPoint.y !== startPoint.y) {
                            corners.push({ x: (startPoint.x + endPoint.x) / 2, y: startPoint.y });
                            corners.push({ x: (startPoint.x + endPoint.x) / 2, y: endPoint.y });
                        }
                        break;
                }
                break;
            case abstract_edge_router_1.Side.TOP:
                switch (targetSide) {
                    case abstract_edge_router_1.Side.RIGHT:
                        if ((endPoint.x - startPoint.x) > 0) {
                            corners.push({ x: startPoint.x, y: startPoint.y - options.standardDistance });
                            corners.push({ x: endPoint.x + 1.5 * options.standardDistance, y: startPoint.y - options.standardDistance });
                            corners.push({ x: endPoint.x + 1.5 * options.standardDistance, y: endPoint.y });
                        }
                        else {
                            corners.push({ x: startPoint.x, y: endPoint.y });
                        }
                        break;
                    case abstract_edge_router_1.Side.LEFT:
                        if ((endPoint.x - startPoint.x) < 0) {
                            corners.push({ x: startPoint.x, y: startPoint.y - options.standardDistance });
                            corners.push({ x: endPoint.x - 1.5 * options.standardDistance, y: startPoint.y - options.standardDistance });
                            corners.push({ x: endPoint.x - 1.5 * options.standardDistance, y: endPoint.y });
                        }
                        else {
                            corners.push({ x: startPoint.x, y: endPoint.y });
                        }
                        break;
                    case abstract_edge_router_1.Side.TOP:
                        corners.push({ x: startPoint.x, y: Math.min(startPoint.y, endPoint.y) - 1.5 * options.standardDistance });
                        corners.push({ x: endPoint.x, y: Math.min(startPoint.y, endPoint.y) - 1.5 * options.standardDistance });
                        break;
                    case abstract_edge_router_1.Side.BOTTOM:
                        if (endPoint.x !== startPoint.x) {
                            corners.push({ x: startPoint.x, y: (startPoint.y + endPoint.y) / 2 });
                            corners.push({ x: endPoint.x, y: (startPoint.y + endPoint.y) / 2 });
                        }
                        break;
                }
                break;
            case abstract_edge_router_1.Side.BOTTOM:
                switch (targetSide) {
                    case abstract_edge_router_1.Side.RIGHT:
                        if ((endPoint.x - startPoint.x) > 0) {
                            corners.push({ x: startPoint.x, y: startPoint.y + options.standardDistance });
                            corners.push({ x: endPoint.x + 1.5 * options.standardDistance, y: startPoint.y + options.standardDistance });
                            corners.push({ x: endPoint.x + 1.5 * options.standardDistance, y: endPoint.y });
                        }
                        else {
                            corners.push({ x: startPoint.x, y: endPoint.y });
                        }
                        break;
                    case abstract_edge_router_1.Side.LEFT:
                        if ((endPoint.x - startPoint.x) < 0) {
                            corners.push({ x: startPoint.x, y: startPoint.y + options.standardDistance });
                            corners.push({ x: endPoint.x - 1.5 * options.standardDistance, y: startPoint.y + options.standardDistance });
                            corners.push({ x: endPoint.x - 1.5 * options.standardDistance, y: endPoint.y });
                        }
                        else {
                            corners.push({ x: startPoint.x, y: endPoint.y });
                        }
                        break;
                    default:
                        endPoint = targetAnchors.get(abstract_edge_router_1.Side.TOP);
                        if (endPoint.x !== startPoint.x) {
                            corners.push({ x: startPoint.x, y: (startPoint.y + endPoint.y) / 2 });
                            corners.push({ x: endPoint.x, y: (startPoint.y + endPoint.y) / 2 });
                        }
                        break;
                }
                break;
        }
        return corners;
    };
    ManhattanEdgeRouter.prototype.getBestConnectionAnchors = function (edge, sourceAnchors, targetAnchors, options) {
        // distance is enough
        var sourcePoint = sourceAnchors.get(abstract_edge_router_1.Side.RIGHT);
        var targetPoint = targetAnchors.get(abstract_edge_router_1.Side.LEFT);
        if ((targetPoint.x - sourcePoint.x) > options.standardDistance)
            return { source: abstract_edge_router_1.Side.RIGHT, target: abstract_edge_router_1.Side.LEFT };
        sourcePoint = sourceAnchors.get(abstract_edge_router_1.Side.LEFT);
        targetPoint = targetAnchors.get(abstract_edge_router_1.Side.RIGHT);
        if ((sourcePoint.x - targetPoint.x) > options.standardDistance)
            return { source: abstract_edge_router_1.Side.LEFT, target: abstract_edge_router_1.Side.RIGHT };
        sourcePoint = sourceAnchors.get(abstract_edge_router_1.Side.TOP);
        targetPoint = targetAnchors.get(abstract_edge_router_1.Side.BOTTOM);
        if ((sourcePoint.y - targetPoint.y) > options.standardDistance)
            return { source: abstract_edge_router_1.Side.TOP, target: abstract_edge_router_1.Side.BOTTOM };
        sourcePoint = sourceAnchors.get(abstract_edge_router_1.Side.BOTTOM);
        targetPoint = targetAnchors.get(abstract_edge_router_1.Side.TOP);
        if ((targetPoint.y - sourcePoint.y) > options.standardDistance)
            return { source: abstract_edge_router_1.Side.BOTTOM, target: abstract_edge_router_1.Side.TOP };
        // One additional point
        sourcePoint = sourceAnchors.get(abstract_edge_router_1.Side.RIGHT);
        targetPoint = targetAnchors.get(abstract_edge_router_1.Side.TOP);
        if (((targetPoint.x - sourcePoint.x) > 0.5 * options.standardDistance) && ((targetPoint.y - sourcePoint.y) > options.standardDistance))
            return { source: abstract_edge_router_1.Side.RIGHT, target: abstract_edge_router_1.Side.TOP };
        targetPoint = targetAnchors.get(abstract_edge_router_1.Side.BOTTOM);
        if (((targetPoint.x - sourcePoint.x) > 0.5 * options.standardDistance) && ((sourcePoint.y - targetPoint.y) > options.standardDistance))
            return { source: abstract_edge_router_1.Side.RIGHT, target: abstract_edge_router_1.Side.BOTTOM };
        sourcePoint = sourceAnchors.get(abstract_edge_router_1.Side.LEFT);
        targetPoint = targetAnchors.get(abstract_edge_router_1.Side.BOTTOM);
        if (((sourcePoint.x - targetPoint.x) > 0.5 * options.standardDistance) && ((sourcePoint.y - targetPoint.y) > options.standardDistance))
            return { source: abstract_edge_router_1.Side.LEFT, target: abstract_edge_router_1.Side.BOTTOM };
        targetPoint = targetAnchors.get(abstract_edge_router_1.Side.TOP);
        if (((sourcePoint.x - targetPoint.x) > 0.5 * options.standardDistance) && ((targetPoint.y - sourcePoint.y) > options.standardDistance))
            return { source: abstract_edge_router_1.Side.LEFT, target: abstract_edge_router_1.Side.TOP };
        sourcePoint = sourceAnchors.get(abstract_edge_router_1.Side.TOP);
        targetPoint = targetAnchors.get(abstract_edge_router_1.Side.RIGHT);
        if (((sourcePoint.y - targetPoint.y) > 0.5 * options.standardDistance) && ((sourcePoint.x - targetPoint.x) > options.standardDistance))
            return { source: abstract_edge_router_1.Side.TOP, target: abstract_edge_router_1.Side.RIGHT };
        targetPoint = targetAnchors.get(abstract_edge_router_1.Side.LEFT);
        if (((sourcePoint.y - targetPoint.y) > 0.5 * options.standardDistance) && ((targetPoint.x - sourcePoint.x) > options.standardDistance))
            return { source: abstract_edge_router_1.Side.TOP, target: abstract_edge_router_1.Side.LEFT };
        sourcePoint = sourceAnchors.get(abstract_edge_router_1.Side.BOTTOM);
        targetPoint = targetAnchors.get(abstract_edge_router_1.Side.RIGHT);
        if (((targetPoint.y - sourcePoint.y) > 0.5 * options.standardDistance) && ((sourcePoint.x - targetPoint.x) > options.standardDistance))
            return { source: abstract_edge_router_1.Side.BOTTOM, target: abstract_edge_router_1.Side.RIGHT };
        targetPoint = targetAnchors.get(abstract_edge_router_1.Side.LEFT);
        if (((targetPoint.y - sourcePoint.y) > 0.5 * options.standardDistance) && ((targetPoint.x - sourcePoint.x) > options.standardDistance))
            return { source: abstract_edge_router_1.Side.BOTTOM, target: abstract_edge_router_1.Side.LEFT };
        // Two points
        // priority NN >> EE >> NE >> NW >> SE >> SW
        sourcePoint = sourceAnchors.get(abstract_edge_router_1.Side.TOP);
        targetPoint = targetAnchors.get(abstract_edge_router_1.Side.TOP);
        if (!geometry_1.Bounds.includes(targetAnchors.bounds, sourcePoint) && !geometry_1.Bounds.includes(sourceAnchors.bounds, targetPoint)) {
            if ((sourcePoint.y - targetPoint.y) < 0) {
                if (Math.abs(sourcePoint.x - targetPoint.x) > ((sourceAnchors.bounds.width + options.standardDistance) / 2))
                    return { source: abstract_edge_router_1.Side.TOP, target: abstract_edge_router_1.Side.TOP };
            }
            else {
                if (Math.abs(sourcePoint.x - targetPoint.x) > (targetAnchors.bounds.width / 2))
                    return { source: abstract_edge_router_1.Side.TOP, target: abstract_edge_router_1.Side.TOP };
            }
        }
        sourcePoint = sourceAnchors.get(abstract_edge_router_1.Side.RIGHT);
        targetPoint = targetAnchors.get(abstract_edge_router_1.Side.RIGHT);
        if (!geometry_1.Bounds.includes(targetAnchors.bounds, sourcePoint) && !geometry_1.Bounds.includes(sourceAnchors.bounds, targetPoint)) {
            if ((sourcePoint.x - targetPoint.x) > 0) {
                if (Math.abs(sourcePoint.y - targetPoint.y) > ((sourceAnchors.bounds.height + options.standardDistance) / 2))
                    return { source: abstract_edge_router_1.Side.RIGHT, target: abstract_edge_router_1.Side.RIGHT };
            }
            else if (Math.abs(sourcePoint.y - targetPoint.y) > (targetAnchors.bounds.height / 2))
                return { source: abstract_edge_router_1.Side.RIGHT, target: abstract_edge_router_1.Side.RIGHT };
        }
        // Secondly, judge NE NW is available
        sourcePoint = sourceAnchors.get(abstract_edge_router_1.Side.TOP);
        targetPoint = targetAnchors.get(abstract_edge_router_1.Side.RIGHT);
        if (!geometry_1.Bounds.includes(targetAnchors.bounds, sourcePoint) && !geometry_1.Bounds.includes(sourceAnchors.bounds, targetPoint))
            return { source: abstract_edge_router_1.Side.TOP, target: abstract_edge_router_1.Side.RIGHT };
        targetPoint = targetAnchors.get(abstract_edge_router_1.Side.LEFT);
        if (!geometry_1.Bounds.includes(targetAnchors.bounds, sourcePoint) && !geometry_1.Bounds.includes(sourceAnchors.bounds, targetPoint))
            return { source: abstract_edge_router_1.Side.TOP, target: abstract_edge_router_1.Side.LEFT };
        // Finally, judge SE SW is available
        sourcePoint = sourceAnchors.get(abstract_edge_router_1.Side.BOTTOM);
        targetPoint = targetAnchors.get(abstract_edge_router_1.Side.RIGHT);
        if (!geometry_1.Bounds.includes(targetAnchors.bounds, sourcePoint) && !geometry_1.Bounds.includes(sourceAnchors.bounds, targetPoint))
            return { source: abstract_edge_router_1.Side.BOTTOM, target: abstract_edge_router_1.Side.RIGHT };
        targetPoint = targetAnchors.get(abstract_edge_router_1.Side.LEFT);
        if (!geometry_1.Bounds.includes(targetAnchors.bounds, sourcePoint) && !geometry_1.Bounds.includes(sourceAnchors.bounds, targetPoint))
            return { source: abstract_edge_router_1.Side.BOTTOM, target: abstract_edge_router_1.Side.LEFT };
        // Only to return to the
        return { source: abstract_edge_router_1.Side.RIGHT, target: abstract_edge_router_1.Side.BOTTOM };
    };
    ManhattanEdgeRouter.KIND = 'manhattan';
    return ManhattanEdgeRouter;
}(abstract_edge_router_1.AbstractEdgeRouter));
exports.ManhattanEdgeRouter = ManhattanEdgeRouter;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/routing/model.js":
/*!************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/routing/model.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.edgeInProgressTargetHandleID = exports.edgeInProgressID = exports.SDanglingAnchor = exports.SRoutingHandle = exports.SConnectableElement = exports.getRouteBounds = exports.getAbsoluteRouteBounds = exports.isConnectable = exports.connectableFeature = exports.SRoutableElement = void 0;
var geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "./node_modules/sprotty-protocol/lib/utils/geometry.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "./node_modules/sprotty/lib/base/model/smodel.js");
var model_1 = __webpack_require__(/*! ../bounds/model */ "./node_modules/sprotty/lib/features/bounds/model.js");
var delete_1 = __webpack_require__(/*! ../edit/delete */ "./node_modules/sprotty/lib/features/edit/delete.js");
var model_2 = __webpack_require__(/*! ../select/model */ "./node_modules/sprotty/lib/features/select/model.js");
var model_3 = __webpack_require__(/*! ../hover/model */ "./node_modules/sprotty/lib/features/hover/model.js");
var model_4 = __webpack_require__(/*! ../move/model */ "./node_modules/sprotty/lib/features/move/model.js");
var SRoutableElement = /** @class */ (function (_super) {
    __extends(SRoutableElement, _super);
    function SRoutableElement() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.routingPoints = [];
        return _this;
    }
    Object.defineProperty(SRoutableElement.prototype, "source", {
        get: function () {
            return this.index.getById(this.sourceId);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SRoutableElement.prototype, "target", {
        get: function () {
            return this.index.getById(this.targetId);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SRoutableElement.prototype, "bounds", {
        get: function () {
            // this should also work for splines, which have the convex hull property
            return this.routingPoints.reduce(function (bounds, routingPoint) { return geometry_1.Bounds.combine(bounds, {
                x: routingPoint.x,
                y: routingPoint.y,
                width: 0,
                height: 0
            }); }, geometry_1.Bounds.EMPTY);
        },
        enumerable: false,
        configurable: true
    });
    return SRoutableElement;
}(smodel_1.SChildElement));
exports.SRoutableElement = SRoutableElement;
exports.connectableFeature = Symbol('connectableFeature');
function isConnectable(element) {
    return element.hasFeature(exports.connectableFeature) && element.canConnect;
}
exports.isConnectable = isConnectable;
function getAbsoluteRouteBounds(model, route) {
    if (route === void 0) { route = model.routingPoints; }
    var bounds = getRouteBounds(route);
    var current = model;
    while (current instanceof smodel_1.SChildElement) {
        var parent_1 = current.parent;
        bounds = parent_1.localToParent(bounds);
        current = parent_1;
    }
    return bounds;
}
exports.getAbsoluteRouteBounds = getAbsoluteRouteBounds;
function getRouteBounds(route) {
    var bounds = { x: NaN, y: NaN, width: 0, height: 0 };
    for (var _i = 0, route_1 = route; _i < route_1.length; _i++) {
        var point = route_1[_i];
        if (isNaN(bounds.x)) {
            bounds.x = point.x;
            bounds.y = point.y;
        }
        else {
            if (point.x < bounds.x) {
                bounds.width += bounds.x - point.x;
                bounds.x = point.x;
            }
            else if (point.x > bounds.x + bounds.width) {
                bounds.width = point.x - bounds.x;
            }
            if (point.y < bounds.y) {
                bounds.height += bounds.y - point.y;
                bounds.y = point.y;
            }
            else if (point.y > bounds.y + bounds.height) {
                bounds.height = point.y - bounds.y;
            }
        }
    }
    return bounds;
}
exports.getRouteBounds = getRouteBounds;
/**
 * A connectable element is one that can have outgoing and incoming edges, i.e. it can be the source
 * or target element of an edge. There are two kinds of connectable elements: nodes (`SNode`) and
 * ports (`SPort`). A node represents a main entity, while a port is a connection point inside a node.
 */
var SConnectableElement = /** @class */ (function (_super) {
    __extends(SConnectableElement, _super);
    function SConnectableElement() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.strokeWidth = 0;
        return _this;
    }
    Object.defineProperty(SConnectableElement.prototype, "anchorKind", {
        get: function () {
            return undefined;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SConnectableElement.prototype, "incomingEdges", {
        /**
         * The incoming edges of this connectable element. They are resolved by the index, which must
         * be an `SGraphIndex`.
         */
        get: function () {
            return this.index.getIncomingEdges(this);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(SConnectableElement.prototype, "outgoingEdges", {
        /**
         * The outgoing edges of this connectable element. They are resolved by the index, which must
         * be an `SGraphIndex`.
         */
        get: function () {
            return this.index.getOutgoingEdges(this);
        },
        enumerable: false,
        configurable: true
    });
    SConnectableElement.prototype.canConnect = function (routable, role) {
        return true;
    };
    return SConnectableElement;
}(model_1.SShapeElement));
exports.SConnectableElement = SConnectableElement;
var SRoutingHandle = /** @class */ (function (_super) {
    __extends(SRoutingHandle, _super);
    function SRoutingHandle() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /** Whether the routing point is being dragged. */
        _this.editMode = false;
        _this.hoverFeedback = false;
        _this.selected = false;
        return _this;
    }
    /**
     * SRoutingHandles are created using the constructor, so we hard-wire the
     * default features
     */
    SRoutingHandle.prototype.hasFeature = function (feature) {
        return SRoutingHandle.DEFAULT_FEATURES.indexOf(feature) !== -1;
    };
    SRoutingHandle.DEFAULT_FEATURES = [model_2.selectFeature, model_4.moveFeature, model_3.hoverFeedbackFeature];
    return SRoutingHandle;
}(smodel_1.SChildElement));
exports.SRoutingHandle = SRoutingHandle;
var SDanglingAnchor = /** @class */ (function (_super) {
    __extends(SDanglingAnchor, _super);
    function SDanglingAnchor() {
        var _this = _super.call(this) || this;
        _this.type = 'dangling-anchor';
        _this.size = { width: 0, height: 0 };
        return _this;
    }
    SDanglingAnchor.DEFAULT_FEATURES = [delete_1.deletableFeature];
    return SDanglingAnchor;
}(SConnectableElement));
exports.SDanglingAnchor = SDanglingAnchor;
exports.edgeInProgressID = 'edge-in-progress';
exports.edgeInProgressTargetHandleID = exports.edgeInProgressID + '-target-anchor';


/***/ }),

/***/ "./node_modules/sprotty/lib/features/routing/polyline-anchors.js":
/*!***********************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/routing/polyline-anchors.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DiamondAnchor = exports.RectangleAnchor = exports.EllipseAnchor = void 0;
var anchor_1 = __webpack_require__(/*! ./anchor */ "./node_modules/sprotty/lib/features/routing/anchor.js");
var geometry_1 = __webpack_require__(/*! ../../utils/geometry */ "./node_modules/sprotty/lib/utils/geometry.js");
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var polyline_edge_router_1 = __webpack_require__(/*! ./polyline-edge-router */ "./node_modules/sprotty/lib/features/routing/polyline-edge-router.js");
var geometry_2 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "./node_modules/sprotty-protocol/lib/utils/geometry.js");
var EllipseAnchor = /** @class */ (function () {
    function EllipseAnchor() {
    }
    Object.defineProperty(EllipseAnchor.prototype, "kind", {
        get: function () {
            return polyline_edge_router_1.PolylineEdgeRouter.KIND + ':' + anchor_1.ELLIPTIC_ANCHOR_KIND;
        },
        enumerable: false,
        configurable: true
    });
    EllipseAnchor.prototype.getAnchor = function (connectable, refPoint, offset) {
        if (offset === void 0) { offset = 0; }
        var bounds = connectable.bounds;
        var c = geometry_2.Bounds.center(bounds);
        var dx = c.x - refPoint.x;
        var dy = c.y - refPoint.y;
        var distance = Math.sqrt(dx * dx + dy * dy);
        var normX = (dx / distance) || 0;
        var normY = (dy / distance) || 0;
        return {
            x: c.x - normX * (0.5 * bounds.width + offset),
            y: c.y - normY * (0.5 * bounds.height + offset)
        };
    };
    EllipseAnchor = __decorate([
        (0, inversify_1.injectable)()
    ], EllipseAnchor);
    return EllipseAnchor;
}());
exports.EllipseAnchor = EllipseAnchor;
var RectangleAnchor = /** @class */ (function () {
    function RectangleAnchor() {
    }
    Object.defineProperty(RectangleAnchor.prototype, "kind", {
        get: function () {
            return polyline_edge_router_1.PolylineEdgeRouter.KIND + ':' + anchor_1.RECTANGULAR_ANCHOR_KIND;
        },
        enumerable: false,
        configurable: true
    });
    RectangleAnchor.prototype.getAnchor = function (connectable, refPoint, offset) {
        if (offset === void 0) { offset = 0; }
        var bounds = connectable.bounds;
        var c = geometry_2.Bounds.center(bounds);
        var finder = new NearestPointFinder(c, refPoint);
        if (!(0, geometry_2.almostEquals)(c.y, refPoint.y)) {
            var xTop = this.getXIntersection(bounds.y, c, refPoint);
            if (xTop >= bounds.x && xTop <= bounds.x + bounds.width)
                finder.addCandidate(xTop, bounds.y - offset);
            var xBottom = this.getXIntersection(bounds.y + bounds.height, c, refPoint);
            if (xBottom >= bounds.x && xBottom <= bounds.x + bounds.width)
                finder.addCandidate(xBottom, bounds.y + bounds.height + offset);
        }
        if (!(0, geometry_2.almostEquals)(c.x, refPoint.x)) {
            var yLeft = this.getYIntersection(bounds.x, c, refPoint);
            if (yLeft >= bounds.y && yLeft <= bounds.y + bounds.height)
                finder.addCandidate(bounds.x - offset, yLeft);
            var yRight = this.getYIntersection(bounds.x + bounds.width, c, refPoint);
            if (yRight >= bounds.y && yRight <= bounds.y + bounds.height)
                finder.addCandidate(bounds.x + bounds.width + offset, yRight);
        }
        return finder.best;
    };
    RectangleAnchor.prototype.getXIntersection = function (yIntersection, centerPoint, point) {
        var t = (yIntersection - centerPoint.y) / (point.y - centerPoint.y);
        return (point.x - centerPoint.x) * t + centerPoint.x;
    };
    RectangleAnchor.prototype.getYIntersection = function (xIntersection, centerPoint, point) {
        var t = (xIntersection - centerPoint.x) / (point.x - centerPoint.x);
        return (point.y - centerPoint.y) * t + centerPoint.y;
    };
    RectangleAnchor = __decorate([
        (0, inversify_1.injectable)()
    ], RectangleAnchor);
    return RectangleAnchor;
}());
exports.RectangleAnchor = RectangleAnchor;
var NearestPointFinder = /** @class */ (function () {
    function NearestPointFinder(centerPoint, refPoint) {
        this.centerPoint = centerPoint;
        this.refPoint = refPoint;
        this.currentDist = -1;
    }
    NearestPointFinder.prototype.addCandidate = function (x, y) {
        var dx = this.refPoint.x - x;
        var dy = this.refPoint.y - y;
        var dist = dx * dx + dy * dy;
        if (this.currentDist < 0 || dist < this.currentDist) {
            this.currentBest = {
                x: x,
                y: y
            };
            this.currentDist = dist;
        }
    };
    Object.defineProperty(NearestPointFinder.prototype, "best", {
        get: function () {
            if (this.currentBest === undefined)
                return this.centerPoint;
            else
                return this.currentBest;
        },
        enumerable: false,
        configurable: true
    });
    return NearestPointFinder;
}());
var DiamondAnchor = /** @class */ (function () {
    function DiamondAnchor() {
    }
    Object.defineProperty(DiamondAnchor.prototype, "kind", {
        get: function () {
            return polyline_edge_router_1.PolylineEdgeRouter.KIND + ':' + anchor_1.DIAMOND_ANCHOR_KIND;
        },
        enumerable: false,
        configurable: true
    });
    DiamondAnchor.prototype.getAnchor = function (connectable, refPoint, offset) {
        var bounds = connectable.bounds;
        var referenceLine = new geometry_1.PointToPointLine(geometry_2.Bounds.center(bounds), refPoint);
        var closestDiamondSide = new geometry_1.Diamond(bounds).closestSideLine(refPoint);
        var anchorPoint = (0, geometry_1.intersection)(closestDiamondSide, referenceLine);
        return geometry_2.Point.shiftTowards(anchorPoint, refPoint, offset);
    };
    DiamondAnchor = __decorate([
        (0, inversify_1.injectable)()
    ], DiamondAnchor);
    return DiamondAnchor;
}());
exports.DiamondAnchor = DiamondAnchor;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/routing/polyline-edge-router.js":
/*!***************************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/routing/polyline-edge-router.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PolylineEdgeRouter = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "./node_modules/sprotty-protocol/lib/utils/geometry.js");
var model_1 = __webpack_require__(/*! ./model */ "./node_modules/sprotty/lib/features/routing/model.js");
var anchor_1 = __webpack_require__(/*! ./anchor */ "./node_modules/sprotty/lib/features/routing/anchor.js");
var abstract_edge_router_1 = __webpack_require__(/*! ./abstract-edge-router */ "./node_modules/sprotty/lib/features/routing/abstract-edge-router.js");
var PolylineEdgeRouter = /** @class */ (function (_super) {
    __extends(PolylineEdgeRouter, _super);
    function PolylineEdgeRouter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PolylineEdgeRouter_1 = PolylineEdgeRouter;
    Object.defineProperty(PolylineEdgeRouter.prototype, "kind", {
        get: function () {
            return PolylineEdgeRouter_1.KIND;
        },
        enumerable: false,
        configurable: true
    });
    PolylineEdgeRouter.prototype.getOptions = function (edge) {
        return {
            minimalPointDistance: 2,
            removeAngleThreshold: 0.1,
            standardDistance: 20,
            selfEdgeOffset: 0.25
        };
    };
    PolylineEdgeRouter.prototype.route = function (edge) {
        var source = edge.source;
        var target = edge.target;
        if (source === undefined || target === undefined) {
            return [];
        }
        var sourceAnchor;
        var targetAnchor;
        var options = this.getOptions(edge);
        var routingPoints = edge.routingPoints.length > 0
            ? edge.routingPoints
            : [];
        this.cleanupRoutingPoints(edge, routingPoints, false, false);
        var rpCount = routingPoints !== undefined ? routingPoints.length : 0;
        if (rpCount === 0) {
            // Use the target center as start anchor reference
            var startRef = geometry_1.Bounds.center(target.bounds);
            sourceAnchor = this.getTranslatedAnchor(source, startRef, target.parent, edge, edge.sourceAnchorCorrection);
            // Use the source center as end anchor reference
            var endRef = geometry_1.Bounds.center(source.bounds);
            targetAnchor = this.getTranslatedAnchor(target, endRef, source.parent, edge, edge.targetAnchorCorrection);
        }
        else {
            // Use the first routing point as start anchor reference
            var p0 = routingPoints[0];
            sourceAnchor = this.getTranslatedAnchor(source, p0, edge.parent, edge, edge.sourceAnchorCorrection);
            // Use the last routing point as end anchor reference
            var pn = routingPoints[rpCount - 1];
            targetAnchor = this.getTranslatedAnchor(target, pn, edge.parent, edge, edge.targetAnchorCorrection);
        }
        var result = [];
        result.push({ kind: 'source', x: sourceAnchor.x, y: sourceAnchor.y });
        for (var i = 0; i < rpCount; i++) {
            var p = routingPoints[i];
            if (i > 0 && i < rpCount - 1
                || i === 0 && geometry_1.Point.maxDistance(sourceAnchor, p) >= options.minimalPointDistance + (edge.sourceAnchorCorrection || 0)
                || i === rpCount - 1 && geometry_1.Point.maxDistance(p, targetAnchor) >= options.minimalPointDistance + (edge.targetAnchorCorrection || 0)) {
                result.push({ kind: 'linear', x: p.x, y: p.y, pointIndex: i });
            }
        }
        result.push({ kind: 'target', x: targetAnchor.x, y: targetAnchor.y });
        return this.filterEditModeHandles(result, edge, options);
    };
    /**
     * Remove routed points that are in edit mode and for which the angle between the preceding and
     * following points falls below a threshold.
     */
    PolylineEdgeRouter.prototype.filterEditModeHandles = function (route, edge, options) {
        if (edge.children.length === 0)
            return route;
        var i = 0;
        var _loop_1 = function () {
            var curr = route[i];
            if (curr.pointIndex !== undefined) {
                var handle = edge.children.find(function (child) {
                    return child instanceof model_1.SRoutingHandle && child.kind === 'junction' && child.pointIndex === curr.pointIndex;
                });
                if (handle !== undefined && handle.editMode && i > 0 && i < route.length - 1) {
                    var prev = route[i - 1], next = route[i + 1];
                    var prevDiff = { x: prev.x - curr.x, y: prev.y - curr.y };
                    var nextDiff = { x: next.x - curr.x, y: next.y - curr.y };
                    var angle = (0, geometry_1.angleBetweenPoints)(prevDiff, nextDiff);
                    if (Math.abs(Math.PI - angle) < options.removeAngleThreshold) {
                        route.splice(i, 1);
                        return "continue";
                    }
                }
            }
            i++;
        };
        while (i < route.length) {
            _loop_1();
        }
        return route;
    };
    PolylineEdgeRouter.prototype.createRoutingHandles = function (edge) {
        var rpCount = edge.routingPoints.length;
        this.addHandle(edge, 'source', 'routing-point', -2);
        this.addHandle(edge, 'line', 'volatile-routing-point', -1);
        for (var i = 0; i < rpCount; i++) {
            this.addHandle(edge, 'junction', 'routing-point', i);
            this.addHandle(edge, 'line', 'volatile-routing-point', i);
        }
        this.addHandle(edge, 'target', 'routing-point', rpCount);
    };
    PolylineEdgeRouter.prototype.getInnerHandlePosition = function (edge, route, handle) {
        if (handle.kind === 'line') {
            var _a = this.findRouteSegment(edge, route, handle.pointIndex), start = _a.start, end = _a.end;
            if (start !== undefined && end !== undefined)
                return (0, geometry_1.centerOfLine)(start, end);
        }
        return undefined;
    };
    PolylineEdgeRouter.prototype.applyInnerHandleMoves = function (edge, moves) {
        var _this = this;
        moves.forEach(function (move) {
            var handle = move.handle;
            var points = edge.routingPoints;
            var index = handle.pointIndex;
            if (handle.kind === 'line') {
                // Upgrade to a proper routing point
                handle.kind = 'junction';
                handle.type = 'routing-point';
                points.splice(index + 1, 0, move.fromPosition || points[Math.max(index, 0)]);
                edge.children.forEach(function (child) {
                    if (child instanceof model_1.SRoutingHandle && (child === handle || child.pointIndex > index))
                        child.pointIndex++;
                });
                _this.addHandle(edge, 'line', 'volatile-routing-point', index);
                index++;
                _this.addHandle(edge, 'line', 'volatile-routing-point', index);
            }
            if (index >= 0 && index < points.length) {
                points[index] = move.toPosition;
            }
        });
    };
    var PolylineEdgeRouter_1;
    PolylineEdgeRouter.KIND = 'polyline';
    __decorate([
        (0, inversify_1.inject)(anchor_1.AnchorComputerRegistry),
        __metadata("design:type", anchor_1.AnchorComputerRegistry)
    ], PolylineEdgeRouter.prototype, "anchorRegistry", void 0);
    PolylineEdgeRouter = PolylineEdgeRouter_1 = __decorate([
        (0, inversify_1.injectable)()
    ], PolylineEdgeRouter);
    return PolylineEdgeRouter;
}(abstract_edge_router_1.AbstractEdgeRouter));
exports.PolylineEdgeRouter = PolylineEdgeRouter;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/routing/routing.js":
/*!**************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/routing/routing.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2018-2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EdgeRouting = exports.EdgeRouterRegistry = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "./node_modules/sprotty/lib/base/model/smodel.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/sprotty/lib/base/types.js");
var view_1 = __webpack_require__(/*! ../../base/views/view */ "./node_modules/sprotty/lib/base/views/view.js");
var registry_1 = __webpack_require__(/*! ../../utils/registry */ "./node_modules/sprotty/lib/utils/registry.js");
var model_1 = __webpack_require__(/*! ./model */ "./node_modules/sprotty/lib/features/routing/model.js");
var polyline_edge_router_1 = __webpack_require__(/*! ./polyline-edge-router */ "./node_modules/sprotty/lib/features/routing/polyline-edge-router.js");
function isMultipleEdgesRouter(router) {
    return router.routeAll !== undefined;
}
var EdgeRouterRegistry = /** @class */ (function (_super) {
    __extends(EdgeRouterRegistry, _super);
    function EdgeRouterRegistry(edgeRouters) {
        var _this = _super.call(this) || this;
        edgeRouters.forEach(function (router) { return _this.register(router.kind, router); });
        return _this;
    }
    Object.defineProperty(EdgeRouterRegistry.prototype, "defaultKind", {
        get: function () {
            return polyline_edge_router_1.PolylineEdgeRouter.KIND;
        },
        enumerable: false,
        configurable: true
    });
    EdgeRouterRegistry.prototype.get = function (kind) {
        return _super.prototype.get.call(this, kind || this.defaultKind);
    };
    /**
     * Computes the routes of all edges contained by the specified `parent`.
     * After all routes are available, it'll apply the registered `EdgeRoutePostProcessors`.
     * @param parent the parent to traverse for edges
     * @returns the routes of all edges that are children of `parent`
     */
    EdgeRouterRegistry.prototype.routeAllChildren = function (parent) {
        var routing = this.doRouteAllChildren(parent);
        for (var _i = 0, _a = this.postProcessors; _i < _a.length; _i++) {
            var postProcessor = _a[_i];
            postProcessor.apply(routing);
        }
        return routing;
    };
    /**
     * Recursively traverses the children of `parent`, collects children grouped by router kind,
     * and then routes them either.
     * @param parent the parent to traverse for edges
     * @returns the routes of all edges that are children of `parent`
     */
    EdgeRouterRegistry.prototype.doRouteAllChildren = function (parent) {
        var _this = this;
        var routing = new EdgeRouting();
        var routersEdges = new Map();
        var elementsToProcess = [parent];
        while (elementsToProcess.length > 0) {
            var element = elementsToProcess.shift();
            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {
                var child = _a[_i];
                if (child instanceof model_1.SRoutableElement) {
                    var routerKind = child.routerKind || this.defaultKind;
                    if (routersEdges.has(routerKind)) {
                        routersEdges.get(routerKind).push(child);
                    }
                    else {
                        routersEdges.set(routerKind, [child]);
                    }
                }
                if (child instanceof smodel_1.SParentElement) {
                    elementsToProcess.push(child);
                }
            }
        }
        routersEdges.forEach(function (edges, routerKind) {
            var childRouter = _this.get(routerKind);
            if (isMultipleEdgesRouter(childRouter)) {
                routing.setAll(childRouter.routeAll(edges, parent));
            }
            else {
                for (var _i = 0, edges_1 = edges; _i < edges_1.length; _i++) {
                    var edge = edges_1[_i];
                    routing.set(edge.id, _this.route(edge));
                }
            }
        });
        return routing;
    };
    /**
     * Computes or obtains the route of a single edge.
     * @param edge the edge to be routed
     * @param args arguments that may contain an `EdgeRouting` already
     * @returns the route of the specified `edge`
     */
    EdgeRouterRegistry.prototype.route = function (edge, args) {
        var edgeRouting = (0, view_1.findArgValue)(args, 'edgeRouting');
        if (edgeRouting) {
            var route = edgeRouting.get(edge.id);
            if (route) {
                return route;
            }
        }
        var router = this.get(edge.routerKind);
        return router.route(edge);
    };
    __decorate([
        (0, inversify_1.multiInject)(types_1.TYPES.IEdgeRoutePostprocessor),
        (0, inversify_1.optional)(),
        __metadata("design:type", Array)
    ], EdgeRouterRegistry.prototype, "postProcessors", void 0);
    EdgeRouterRegistry = __decorate([
        (0, inversify_1.injectable)(),
        __param(0, (0, inversify_1.multiInject)(types_1.TYPES.IEdgeRouter)),
        __metadata("design:paramtypes", [Array])
    ], EdgeRouterRegistry);
    return EdgeRouterRegistry;
}(registry_1.InstanceRegistry));
exports.EdgeRouterRegistry = EdgeRouterRegistry;
/**
 * Map of edges and their computed routes.
 */
var EdgeRouting = /** @class */ (function () {
    function EdgeRouting() {
        this.routesMap = new Map();
    }
    EdgeRouting.prototype.set = function (routableId, route) {
        this.routesMap.set(routableId, route);
    };
    EdgeRouting.prototype.setAll = function (otherRoutes) {
        var _this = this;
        otherRoutes.routes.forEach(function (route, routableId) { return _this.set(routableId, route); });
    };
    EdgeRouting.prototype.get = function (routableId) {
        return this.routesMap.get(routableId);
    };
    Object.defineProperty(EdgeRouting.prototype, "routes", {
        get: function () {
            return this.routesMap;
        },
        enumerable: false,
        configurable: true
    });
    return EdgeRouting;
}());
exports.EdgeRouting = EdgeRouting;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/routing/views.js":
/*!************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/routing/views.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2020 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RoutableView = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var model_1 = __webpack_require__(/*! ./model */ "./node_modules/sprotty/lib/features/routing/model.js");
var RoutableView = /** @class */ (function () {
    function RoutableView() {
    }
    /**
     * Check whether the given model element is in the current viewport. Use this method
     * in your `render` implementation to skip rendering in case the element is not visible.
     * This can greatly enhance performance for large models.
     */
    RoutableView.prototype.isVisible = function (model, route, context) {
        if (context.targetKind === 'hidden') {
            // Don't hide any element for hidden rendering
            return true;
        }
        if (route.length === 0) {
            // We should hide only if we know the element's route
            return true;
        }
        var ab = (0, model_1.getAbsoluteRouteBounds)(model, route);
        var canvasBounds = model.root.canvasBounds;
        return ab.x <= canvasBounds.width
            && ab.x + ab.width >= 0
            && ab.y <= canvasBounds.height
            && ab.y + ab.height >= 0;
    };
    RoutableView = __decorate([
        (0, inversify_1.injectable)()
    ], RoutableView);
    return RoutableView;
}());
exports.RoutableView = RoutableView;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/select/di.config.js":
/*!***************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/select/di.config.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/sprotty/lib/base/types.js");
var select_1 = __webpack_require__(/*! ./select */ "./node_modules/sprotty/lib/features/select/select.js");
var command_registration_1 = __webpack_require__(/*! ../../base/commands/command-registration */ "./node_modules/sprotty/lib/base/commands/command-registration.js");
var selectModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    (0, command_registration_1.configureCommand)({ bind: bind, isBound: isBound }, select_1.SelectCommand);
    (0, command_registration_1.configureCommand)({ bind: bind, isBound: isBound }, select_1.SelectAllCommand);
    (0, command_registration_1.configureCommand)({ bind: bind, isBound: isBound }, select_1.GetSelectionCommand);
    bind(select_1.SelectKeyboardListener).toSelf().inSingletonScope();
    bind(types_1.TYPES.KeyListener).toService(select_1.SelectKeyboardListener);
    bind(select_1.SelectMouseListener).toSelf().inSingletonScope();
    bind(types_1.TYPES.MouseListener).toService(select_1.SelectMouseListener);
});
exports["default"] = selectModule;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/select/model.js":
/*!***********************************************************!*\
  !*** ./node_modules/sprotty/lib/features/select/model.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isSelected = exports.isSelectable = exports.selectFeature = void 0;
exports.selectFeature = Symbol('selectFeature');
function isSelectable(element) {
    return element.hasFeature(exports.selectFeature);
}
exports.isSelectable = isSelectable;
function isSelected(element) {
    return element !== undefined && isSelectable(element) && element.selected;
}
exports.isSelected = isSelected;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/select/select.js":
/*!************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/select/select.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SelectKeyboardListener = exports.GetSelectionCommand = exports.SelectMouseListener = exports.SelectAllCommand = exports.SelectCommand = exports.SelectionResult = exports.GetSelectionAction = exports.SelectAllAction = exports.SelectAction = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "./node_modules/sprotty-protocol/lib/actions.js");
var command_1 = __webpack_require__(/*! ../../base/commands/command */ "./node_modules/sprotty/lib/base/commands/command.js");
var request_command_1 = __webpack_require__(/*! ../../base/commands/request-command */ "./node_modules/sprotty/lib/base/commands/request-command.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "./node_modules/sprotty/lib/base/model/smodel.js");
var smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "./node_modules/sprotty/lib/base/model/smodel-utils.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/sprotty/lib/base/types.js");
var key_tool_1 = __webpack_require__(/*! ../../base/views/key-tool */ "./node_modules/sprotty/lib/base/views/key-tool.js");
var mouse_tool_1 = __webpack_require__(/*! ../../base/views/mouse-tool */ "./node_modules/sprotty/lib/base/views/mouse-tool.js");
var vnode_utils_1 = __webpack_require__(/*! ../../base/views/vnode-utils */ "./node_modules/sprotty/lib/base/views/vnode-utils.js");
var browser_1 = __webpack_require__(/*! ../../utils/browser */ "./node_modules/sprotty/lib/utils/browser.js");
var iterable_1 = __webpack_require__(/*! ../../utils/iterable */ "./node_modules/sprotty/lib/utils/iterable.js");
var keyboard_1 = __webpack_require__(/*! ../../utils/keyboard */ "./node_modules/sprotty/lib/utils/keyboard.js");
var button_handler_1 = __webpack_require__(/*! ../button/button-handler */ "./node_modules/sprotty/lib/features/button/button-handler.js");
var model_1 = __webpack_require__(/*! ../button/model */ "./node_modules/sprotty/lib/features/button/model.js");
var edit_routing_1 = __webpack_require__(/*! ../edit/edit-routing */ "./node_modules/sprotty/lib/features/edit/edit-routing.js");
var model_2 = __webpack_require__(/*! ../routing/model */ "./node_modules/sprotty/lib/features/routing/model.js");
var model_3 = __webpack_require__(/*! ../routing/model */ "./node_modules/sprotty/lib/features/routing/model.js");
var model_4 = __webpack_require__(/*! ./model */ "./node_modules/sprotty/lib/features/select/model.js");
/**
 * Triggered when the user changes the selection, e.g. by clicking on a selectable element. The resulting
 * SelectCommand changes the `selected` state accordingly, so the elements can be rendered differently.
 * This action is also forwarded to the diagram server, if present, so it may react on the selection change.
 * Furthermore, the server can send such an action to the client in order to change the selection programmatically.
 *
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
var SelectAction = /** @class */ (function () {
    function SelectAction(selectedElementsIDs, deselectedElementsIDs) {
        if (selectedElementsIDs === void 0) { selectedElementsIDs = []; }
        if (deselectedElementsIDs === void 0) { deselectedElementsIDs = []; }
        this.selectedElementsIDs = selectedElementsIDs;
        this.deselectedElementsIDs = deselectedElementsIDs;
        this.kind = SelectAction.KIND;
    }
    SelectAction.KIND = 'elementSelected';
    return SelectAction;
}());
exports.SelectAction = SelectAction;
/**
 * Programmatic action for selecting or deselecting all elements.
 *
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
var SelectAllAction = /** @class */ (function () {
    /**
     * If `select` is true, all elements are selected, otherwise they are deselected.
     */
    function SelectAllAction(select) {
        if (select === void 0) { select = true; }
        this.select = select;
        this.kind = SelectAllAction.KIND;
    }
    SelectAllAction.KIND = 'allSelected';
    return SelectAllAction;
}());
exports.SelectAllAction = SelectAllAction;
var GetSelectionAction;
(function (GetSelectionAction) {
    GetSelectionAction.KIND = 'getSelection';
    function create() {
        return {
            kind: GetSelectionAction.KIND,
            requestId: (0, actions_1.generateRequestId)()
        };
    }
    GetSelectionAction.create = create;
})(GetSelectionAction = exports.GetSelectionAction || (exports.GetSelectionAction = {}));
var SelectionResult;
(function (SelectionResult) {
    SelectionResult.KIND = 'selectionResult';
    function create(selectedElementsIDs, requestId) {
        return {
            kind: SelectionResult.KIND,
            selectedElementsIDs: selectedElementsIDs,
            responseId: requestId
        };
    }
    SelectionResult.create = create;
})(SelectionResult = exports.SelectionResult || (exports.SelectionResult = {}));
var SelectCommand = /** @class */ (function (_super) {
    __extends(SelectCommand, _super);
    function SelectCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        _this.selected = [];
        _this.deselected = [];
        return _this;
    }
    SelectCommand.prototype.execute = function (context) {
        var _this = this;
        var model = context.root;
        this.action.selectedElementsIDs.forEach(function (id) {
            var element = model.index.getById(id);
            if (element instanceof smodel_1.SChildElement && (0, model_4.isSelectable)(element)) {
                _this.selected.push(element);
            }
        });
        this.action.deselectedElementsIDs.forEach(function (id) {
            var element = model.index.getById(id);
            if (element instanceof smodel_1.SChildElement && (0, model_4.isSelectable)(element)) {
                _this.deselected.push(element);
            }
        });
        return this.redo(context);
    };
    SelectCommand.prototype.undo = function (context) {
        for (var _i = 0, _a = this.selected; _i < _a.length; _i++) {
            var element = _a[_i];
            element.selected = false;
        }
        for (var _b = 0, _c = this.deselected; _b < _c.length; _b++) {
            var element = _c[_b];
            element.selected = true;
        }
        return context.root;
    };
    SelectCommand.prototype.redo = function (context) {
        for (var _i = 0, _a = this.deselected; _i < _a.length; _i++) {
            var element = _a[_i];
            element.selected = false;
        }
        for (var _b = 0, _c = this.selected; _b < _c.length; _b++) {
            var element = _c[_b];
            element.selected = true;
        }
        return context.root;
    };
    SelectCommand.KIND = actions_1.SelectAction.KIND;
    SelectCommand = __decorate([
        (0, inversify_1.injectable)(),
        __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [Object])
    ], SelectCommand);
    return SelectCommand;
}(command_1.Command));
exports.SelectCommand = SelectCommand;
var SelectAllCommand = /** @class */ (function (_super) {
    __extends(SelectAllCommand, _super);
    function SelectAllCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        _this.previousSelection = {};
        return _this;
    }
    SelectAllCommand.prototype.execute = function (context) {
        this.selectAll(context.root, this.action.select);
        return context.root;
    };
    SelectAllCommand.prototype.selectAll = function (element, newState) {
        if ((0, model_4.isSelectable)(element)) {
            this.previousSelection[element.id] = element.selected;
            element.selected = newState;
        }
        for (var _i = 0, _a = element.children; _i < _a.length; _i++) {
            var child = _a[_i];
            this.selectAll(child, newState);
        }
    };
    SelectAllCommand.prototype.undo = function (context) {
        var _this = this;
        var index = context.root.index;
        Object.keys(this.previousSelection).forEach(function (id) {
            var element = index.getById(id);
            if (element !== undefined && (0, model_4.isSelectable)(element))
                element.selected = _this.previousSelection[id];
        });
        return context.root;
    };
    SelectAllCommand.prototype.redo = function (context) {
        this.selectAll(context.root, this.action.select);
        return context.root;
    };
    SelectAllCommand.KIND = actions_1.SelectAllAction.KIND;
    SelectAllCommand = __decorate([
        (0, inversify_1.injectable)(),
        __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [Object])
    ], SelectAllCommand);
    return SelectAllCommand;
}(command_1.Command));
exports.SelectAllCommand = SelectAllCommand;
var SelectMouseListener = /** @class */ (function (_super) {
    __extends(SelectMouseListener, _super);
    function SelectMouseListener() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.wasSelected = false;
        _this.hasDragged = false;
        return _this;
    }
    SelectMouseListener.prototype.mouseDown = function (target, event) {
        if (event.button !== 0) {
            return [];
        }
        var buttonHandled = this.handleButton(target, event);
        if (buttonHandled) {
            return buttonHandled;
        }
        var selectableTarget = (0, smodel_utils_1.findParentByFeature)(target, model_4.isSelectable);
        if (selectableTarget !== undefined || target instanceof smodel_1.SModelRoot) {
            this.hasDragged = false;
            var deselectedElements = [];
            // multi-selection?
            if (!(0, browser_1.isCtrlOrCmd)(event)) {
                deselectedElements = (0, iterable_1.toArray)(target.root.index.all()
                    .filter(function (element) { return (0, model_4.isSelectable)(element) && element.selected
                    && !(selectableTarget instanceof model_2.SRoutingHandle && element === selectableTarget.parent); }));
            }
            if (selectableTarget !== undefined) {
                if (!selectableTarget.selected) {
                    this.wasSelected = false;
                    return this.handleSelectTarget(selectableTarget, deselectedElements, event);
                }
                else if ((0, browser_1.isCtrlOrCmd)(event)) {
                    this.wasSelected = false;
                    return this.handleDeselectTarget(selectableTarget, event);
                }
                else {
                    this.wasSelected = true;
                }
            }
            else {
                return this.handleDeselectAll(deselectedElements, event);
            }
        }
        return [];
    };
    SelectMouseListener.prototype.handleButton = function (target, event) {
        if (this.buttonHandlerRegistry !== undefined && target instanceof model_1.SButton && target.enabled) {
            var buttonHandler = this.buttonHandlerRegistry.get(target.type);
            if (buttonHandler !== undefined) {
                return buttonHandler.buttonPressed(target);
            }
        }
        return undefined;
    };
    SelectMouseListener.prototype.handleSelectTarget = function (selectableTarget, deselectedElements, event) {
        var result = [];
        result.push(new SelectAction([selectableTarget.id], deselectedElements.map(function (e) { return e.id; })));
        result.push(actions_1.BringToFrontAction.create([selectableTarget.id]));
        var routableDeselect = deselectedElements.filter(function (e) { return e instanceof model_3.SRoutableElement; }).map(function (e) { return e.id; });
        if (selectableTarget instanceof model_3.SRoutableElement) {
            result.push(edit_routing_1.SwitchEditModeAction.create({ elementsToActivate: [selectableTarget.id], elementsToDeactivate: routableDeselect }));
        }
        else if (routableDeselect.length > 0) {
            result.push(edit_routing_1.SwitchEditModeAction.create({ elementsToDeactivate: routableDeselect }));
        }
        return result;
    };
    SelectMouseListener.prototype.handleDeselectTarget = function (selectableTarget, event) {
        var result = [];
        result.push(new SelectAction([], [selectableTarget.id]));
        if (selectableTarget instanceof model_3.SRoutableElement) {
            result.push(edit_routing_1.SwitchEditModeAction.create({ elementsToDeactivate: [selectableTarget.id] }));
        }
        return result;
    };
    SelectMouseListener.prototype.handleDeselectAll = function (deselectedElements, event) {
        var result = [];
        result.push(new SelectAction([], deselectedElements.map(function (e) { return e.id; })));
        var routableDeselect = deselectedElements.filter(function (e) { return e instanceof model_3.SRoutableElement; }).map(function (e) { return e.id; });
        if (routableDeselect.length > 0) {
            result.push(edit_routing_1.SwitchEditModeAction.create({ elementsToDeactivate: routableDeselect }));
        }
        return result;
    };
    SelectMouseListener.prototype.mouseMove = function (target, event) {
        this.hasDragged = true;
        return [];
    };
    SelectMouseListener.prototype.mouseUp = function (target, event) {
        if (event.button === 0) {
            if (!this.hasDragged) {
                var selectableTarget = (0, smodel_utils_1.findParentByFeature)(target, model_4.isSelectable);
                if (selectableTarget !== undefined && this.wasSelected) {
                    return [new SelectAction([selectableTarget.id], [])];
                }
            }
        }
        this.hasDragged = false;
        return [];
    };
    SelectMouseListener.prototype.decorate = function (vnode, element) {
        var selectableTarget = (0, smodel_utils_1.findParentByFeature)(element, model_4.isSelectable);
        if (selectableTarget !== undefined) {
            (0, vnode_utils_1.setClass)(vnode, 'selected', selectableTarget.selected);
        }
        return vnode;
    };
    __decorate([
        (0, inversify_1.inject)(button_handler_1.ButtonHandlerRegistry),
        (0, inversify_1.optional)(),
        __metadata("design:type", button_handler_1.ButtonHandlerRegistry)
    ], SelectMouseListener.prototype, "buttonHandlerRegistry", void 0);
    return SelectMouseListener;
}(mouse_tool_1.MouseListener));
exports.SelectMouseListener = SelectMouseListener;
var GetSelectionCommand = /** @class */ (function (_super) {
    __extends(GetSelectionCommand, _super);
    function GetSelectionCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        _this.previousSelection = {};
        return _this;
    }
    GetSelectionCommand.prototype.retrieveResult = function (context) {
        var selection = context.root.index.all()
            .filter(function (e) { return (0, model_4.isSelectable)(e) && e.selected; })
            .map(function (e) { return e.id; });
        return SelectionResult.create((0, iterable_1.toArray)(selection), this.action.requestId);
    };
    GetSelectionCommand.KIND = GetSelectionAction.KIND;
    GetSelectionCommand = __decorate([
        (0, inversify_1.injectable)(),
        __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [Object])
    ], GetSelectionCommand);
    return GetSelectionCommand;
}(request_command_1.ModelRequestCommand));
exports.GetSelectionCommand = GetSelectionCommand;
var SelectKeyboardListener = /** @class */ (function (_super) {
    __extends(SelectKeyboardListener, _super);
    function SelectKeyboardListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SelectKeyboardListener.prototype.keyDown = function (element, event) {
        if ((0, keyboard_1.matchesKeystroke)(event, 'KeyA', 'ctrlCmd')) {
            return [new SelectAllAction()];
        }
        return [];
    };
    return SelectKeyboardListener;
}(key_tool_1.KeyListener));
exports.SelectKeyboardListener = SelectKeyboardListener;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/undo-redo/di.config.js":
/*!******************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/undo-redo/di.config.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/sprotty/lib/base/types.js");
var undo_redo_1 = __webpack_require__(/*! ./undo-redo */ "./node_modules/sprotty/lib/features/undo-redo/undo-redo.js");
var undoRedoModule = new inversify_1.ContainerModule(function (bind) {
    bind(undo_redo_1.UndoRedoKeyListener).toSelf().inSingletonScope();
    bind(types_1.TYPES.KeyListener).toService(undo_redo_1.UndoRedoKeyListener);
});
exports["default"] = undoRedoModule;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/undo-redo/undo-redo.js":
/*!******************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/undo-redo/undo-redo.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UndoRedoKeyListener = exports.RedoAction = exports.UndoAction = void 0;
var keyboard_1 = __webpack_require__(/*! ../../utils/keyboard */ "./node_modules/sprotty/lib/utils/keyboard.js");
var key_tool_1 = __webpack_require__(/*! ../../base/views/key-tool */ "./node_modules/sprotty/lib/base/views/key-tool.js");
var browser_1 = __webpack_require__(/*! ../../utils/browser */ "./node_modules/sprotty/lib/utils/browser.js");
var UndoAction;
(function (UndoAction) {
    UndoAction.KIND = 'undo';
    function create() {
        return {
            kind: UndoAction.KIND
        };
    }
    UndoAction.create = create;
})(UndoAction = exports.UndoAction || (exports.UndoAction = {}));
var RedoAction;
(function (RedoAction) {
    RedoAction.KIND = 'redo';
    function create() {
        return {
            kind: RedoAction.KIND
        };
    }
    RedoAction.create = create;
})(RedoAction = exports.RedoAction || (exports.RedoAction = {}));
var UndoRedoKeyListener = /** @class */ (function (_super) {
    __extends(UndoRedoKeyListener, _super);
    function UndoRedoKeyListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UndoRedoKeyListener.prototype.keyDown = function (element, event) {
        if ((0, keyboard_1.matchesKeystroke)(event, 'KeyZ', 'ctrlCmd'))
            return [UndoAction.create()];
        if ((0, keyboard_1.matchesKeystroke)(event, 'KeyZ', 'ctrlCmd', 'shift') || (!(0, browser_1.isMac)() && (0, keyboard_1.matchesKeystroke)(event, 'KeyY', 'ctrlCmd')))
            return [RedoAction.create()];
        return [];
    };
    return UndoRedoKeyListener;
}(key_tool_1.KeyListener));
exports.UndoRedoKeyListener = UndoRedoKeyListener;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/update/di.config.js":
/*!***************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/update/di.config.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var command_registration_1 = __webpack_require__(/*! ../../base/commands/command-registration */ "./node_modules/sprotty/lib/base/commands/command-registration.js");
var update_model_1 = __webpack_require__(/*! ./update-model */ "./node_modules/sprotty/lib/features/update/update-model.js");
var updateModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    (0, command_registration_1.configureCommand)({ bind: bind, isBound: isBound }, update_model_1.UpdateModelCommand);
});
exports["default"] = updateModule;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/update/model-matching.js":
/*!********************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/update/model-matching.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.applyMatches = exports.ModelMatcher = exports.forEachMatch = void 0;
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "./node_modules/sprotty/lib/base/model/smodel.js");
var sprotty_protocol_1 = __webpack_require__(/*! sprotty-protocol */ "./node_modules/sprotty-protocol/lib/index.js");
function forEachMatch(matchResult, callback) {
    Object.keys(matchResult).forEach(function (id) { return callback(id, matchResult[id]); });
}
exports.forEachMatch = forEachMatch;
var ModelMatcher = /** @class */ (function () {
    function ModelMatcher() {
    }
    ModelMatcher.prototype.match = function (left, right) {
        var result = {};
        this.matchLeft(left, result);
        this.matchRight(right, result);
        return result;
    };
    ModelMatcher.prototype.matchLeft = function (element, result, parentId) {
        var match = result[element.id];
        if (match !== undefined) {
            match.left = element;
            match.leftParentId = parentId;
        }
        else {
            match = {
                left: element,
                leftParentId: parentId
            };
            result[element.id] = match;
        }
        if ((0, smodel_1.isParent)(element)) {
            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {
                var child = _a[_i];
                this.matchLeft(child, result, element.id);
            }
        }
    };
    ModelMatcher.prototype.matchRight = function (element, result, parentId) {
        var match = result[element.id];
        if (match !== undefined) {
            match.right = element;
            match.rightParentId = parentId;
        }
        else {
            match = {
                right: element,
                rightParentId: parentId
            };
            result[element.id] = match;
        }
        if ((0, smodel_1.isParent)(element)) {
            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {
                var child = _a[_i];
                this.matchRight(child, result, element.id);
            }
        }
    };
    return ModelMatcher;
}());
exports.ModelMatcher = ModelMatcher;
function applyMatches(root, matches, index) {
    if (root instanceof smodel_1.SModelRoot) {
        index = root.index;
    }
    else if (index === undefined) {
        index = new sprotty_protocol_1.SModelIndex();
        index.add(root);
    }
    for (var _i = 0, matches_1 = matches; _i < matches_1.length; _i++) {
        var match = matches_1[_i];
        var newElementInserted = false;
        if (match.left !== undefined && match.leftParentId !== undefined) {
            var parent_1 = index.getById(match.leftParentId);
            if (parent_1 !== undefined && parent_1.children !== undefined) {
                var i = parent_1.children.indexOf(match.left);
                if (i >= 0) {
                    if (match.right !== undefined && match.leftParentId === match.rightParentId) {
                        parent_1.children.splice(i, 1, match.right);
                        newElementInserted = true;
                    }
                    else {
                        parent_1.children.splice(i, 1);
                    }
                }
                index.remove(match.left);
            }
        }
        if (!newElementInserted && match.right !== undefined && match.rightParentId !== undefined) {
            var parent_2 = index.getById(match.rightParentId);
            if (parent_2 !== undefined) {
                if (parent_2.children === undefined)
                    parent_2.children = [];
                parent_2.children.push(match.right);
            }
        }
    }
}
exports.applyMatches = applyMatches;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/update/update-model.js":
/*!******************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/update/update-model.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2022 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UpdateModelCommand = exports.UpdateModelAction = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "./node_modules/sprotty-protocol/lib/actions.js");
var geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "./node_modules/sprotty-protocol/lib/utils/geometry.js");
var animation_1 = __webpack_require__(/*! ../../base/animations/animation */ "./node_modules/sprotty/lib/base/animations/animation.js");
var command_1 = __webpack_require__(/*! ../../base/commands/command */ "./node_modules/sprotty/lib/base/commands/command.js");
var fade_1 = __webpack_require__(/*! ../fade/fade */ "./node_modules/sprotty/lib/features/fade/fade.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "./node_modules/sprotty/lib/base/model/smodel.js");
var move_1 = __webpack_require__(/*! ../move/move */ "./node_modules/sprotty/lib/features/move/move.js");
var model_1 = __webpack_require__(/*! ../fade/model */ "./node_modules/sprotty/lib/features/fade/model.js");
var model_2 = __webpack_require__(/*! ../move/model */ "./node_modules/sprotty/lib/features/move/model.js");
var model_3 = __webpack_require__(/*! ../bounds/model */ "./node_modules/sprotty/lib/features/bounds/model.js");
var viewport_root_1 = __webpack_require__(/*! ../viewport/viewport-root */ "./node_modules/sprotty/lib/features/viewport/viewport-root.js");
var model_4 = __webpack_require__(/*! ../select/model */ "./node_modules/sprotty/lib/features/select/model.js");
var model_matching_1 = __webpack_require__(/*! ./model-matching */ "./node_modules/sprotty/lib/features/update/model-matching.js");
var resize_1 = __webpack_require__(/*! ../bounds/resize */ "./node_modules/sprotty/lib/features/bounds/resize.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/sprotty/lib/base/types.js");
var model_5 = __webpack_require__(/*! ../viewport/model */ "./node_modules/sprotty/lib/features/viewport/model.js");
var routing_1 = __webpack_require__(/*! ../routing/routing */ "./node_modules/sprotty/lib/features/routing/routing.js");
var model_6 = __webpack_require__(/*! ../routing/model */ "./node_modules/sprotty/lib/features/routing/model.js");
var smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "./node_modules/sprotty/lib/base/model/smodel-utils.js");
/**
 * Sent from the model source to the client in order to update the model. If no model is present yet,
 * this behaves the same as a SetModelAction. The transition from the old model to the new one can be animated.
 *
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
var UpdateModelAction = /** @class */ (function () {
    function UpdateModelAction(input, animate, cause) {
        if (animate === void 0) { animate = true; }
        this.animate = animate;
        this.cause = cause;
        this.kind = UpdateModelAction.KIND;
        if (input.id !== undefined)
            this.newRoot = input;
        else
            this.matches = input;
    }
    UpdateModelAction.KIND = 'updateModel';
    return UpdateModelAction;
}());
exports.UpdateModelAction = UpdateModelAction;
var UpdateModelCommand = /** @class */ (function (_super) {
    __extends(UpdateModelCommand, _super);
    function UpdateModelCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    UpdateModelCommand.prototype.execute = function (context) {
        var newRoot;
        if (this.action.newRoot !== undefined) {
            newRoot = context.modelFactory.createRoot(this.action.newRoot);
        }
        else {
            newRoot = context.modelFactory.createRoot(context.root);
            if (this.action.matches !== undefined)
                this.applyMatches(newRoot, this.action.matches, context);
        }
        this.oldRoot = context.root;
        this.newRoot = newRoot;
        return this.performUpdate(this.oldRoot, this.newRoot, context);
    };
    UpdateModelCommand.prototype.performUpdate = function (oldRoot, newRoot, context) {
        if ((this.action.animate === undefined || this.action.animate) && oldRoot.id === newRoot.id) {
            var matchResult = void 0;
            if (this.action.matches === undefined) {
                var matcher = new model_matching_1.ModelMatcher();
                matchResult = matcher.match(oldRoot, newRoot);
            }
            else {
                matchResult = this.convertToMatchResult(this.action.matches, oldRoot, newRoot);
            }
            var animationOrRoot = this.computeAnimation(newRoot, matchResult, context);
            if (animationOrRoot instanceof animation_1.Animation)
                return animationOrRoot.start();
            else
                return animationOrRoot;
        }
        else {
            if (oldRoot.type === newRoot.type && geometry_1.Dimension.isValid(oldRoot.canvasBounds))
                newRoot.canvasBounds = oldRoot.canvasBounds;
            if ((0, model_5.isViewport)(oldRoot) && (0, model_5.isViewport)(newRoot)) {
                newRoot.zoom = oldRoot.zoom;
                newRoot.scroll = oldRoot.scroll;
            }
            return newRoot;
        }
    };
    UpdateModelCommand.prototype.applyMatches = function (root, matches, context) {
        var index = root.index;
        for (var _i = 0, matches_1 = matches; _i < matches_1.length; _i++) {
            var match = matches_1[_i];
            if (match.left !== undefined) {
                var element = index.getById(match.left.id);
                if (element instanceof smodel_1.SChildElement)
                    element.parent.remove(element);
            }
        }
        for (var _a = 0, matches_2 = matches; _a < matches_2.length; _a++) {
            var match = matches_2[_a];
            if (match.right !== undefined) {
                var element = context.modelFactory.createElement(match.right);
                var parent_1 = void 0;
                if (match.rightParentId !== undefined)
                    parent_1 = index.getById(match.rightParentId);
                if (parent_1 instanceof smodel_1.SParentElement)
                    parent_1.add(element);
                else
                    root.add(element);
            }
        }
    };
    UpdateModelCommand.prototype.convertToMatchResult = function (matches, leftRoot, rightRoot) {
        var result = {};
        for (var _i = 0, matches_3 = matches; _i < matches_3.length; _i++) {
            var match = matches_3[_i];
            var converted = {};
            var id = undefined;
            if (match.left !== undefined) {
                id = match.left.id;
                converted.left = leftRoot.index.getById(id);
                converted.leftParentId = match.leftParentId;
            }
            if (match.right !== undefined) {
                id = match.right.id;
                converted.right = rightRoot.index.getById(id);
                converted.rightParentId = match.rightParentId;
            }
            if (id !== undefined)
                result[id] = converted;
        }
        return result;
    };
    UpdateModelCommand.prototype.computeAnimation = function (newRoot, matchResult, context) {
        var _this = this;
        var animationData = {
            fades: []
        };
        (0, model_matching_1.forEachMatch)(matchResult, function (id, match) {
            if (match.left !== undefined && match.right !== undefined) {
                // The element is still there, but may have been moved
                _this.updateElement(match.left, match.right, animationData);
            }
            else if (match.right !== undefined) {
                // An element has been added
                var right = match.right;
                if ((0, model_1.isFadeable)(right)) {
                    right.opacity = 0;
                    animationData.fades.push({
                        element: right,
                        type: 'in'
                    });
                }
            }
            else if (match.left instanceof smodel_1.SChildElement) {
                // An element has been removed
                var left = match.left;
                if ((0, model_1.isFadeable)(left) && match.leftParentId !== undefined) {
                    if (!(0, smodel_utils_1.containsSome)(newRoot, left)) {
                        var parent_2 = newRoot.index.getById(match.leftParentId);
                        if (parent_2 instanceof smodel_1.SParentElement) {
                            var leftCopy = context.modelFactory.createElement(left);
                            parent_2.add(leftCopy);
                            animationData.fades.push({
                                element: leftCopy,
                                type: 'out'
                            });
                        }
                    }
                }
            }
        });
        var animations = this.createAnimations(animationData, newRoot, context);
        if (animations.length >= 2) {
            return new animation_1.CompoundAnimation(newRoot, context, animations);
        }
        else if (animations.length === 1) {
            return animations[0];
        }
        else {
            return newRoot;
        }
    };
    UpdateModelCommand.prototype.updateElement = function (left, right, animationData) {
        if ((0, model_2.isLocateable)(left) && (0, model_2.isLocateable)(right)) {
            var leftPos = left.position;
            var rightPos = right.position;
            if (!(0, geometry_1.almostEquals)(leftPos.x, rightPos.x) || !(0, geometry_1.almostEquals)(leftPos.y, rightPos.y)) {
                if (animationData.moves === undefined)
                    animationData.moves = [];
                animationData.moves.push({
                    element: right,
                    fromPosition: leftPos,
                    toPosition: rightPos
                });
                right.position = leftPos;
            }
        }
        if ((0, model_3.isSizeable)(left) && (0, model_3.isSizeable)(right)) {
            if (!geometry_1.Dimension.isValid(right.bounds)) {
                right.bounds = {
                    x: right.bounds.x,
                    y: right.bounds.y,
                    width: left.bounds.width,
                    height: left.bounds.height
                };
            }
            else if (!(0, geometry_1.almostEquals)(left.bounds.width, right.bounds.width)
                || !(0, geometry_1.almostEquals)(left.bounds.height, right.bounds.height)) {
                if (animationData.resizes === undefined)
                    animationData.resizes = [];
                animationData.resizes.push({
                    element: right,
                    fromDimension: {
                        width: left.bounds.width,
                        height: left.bounds.height,
                    },
                    toDimension: {
                        width: right.bounds.width,
                        height: right.bounds.height,
                    }
                });
            }
        }
        if (left instanceof model_6.SRoutableElement && right instanceof model_6.SRoutableElement && this.edgeRouterRegistry) {
            if (animationData.edgeMementi === undefined)
                animationData.edgeMementi = [];
            animationData.edgeMementi.push({
                edge: right,
                before: this.takeSnapshot(left),
                after: this.takeSnapshot(right),
            });
        }
        if ((0, model_4.isSelectable)(left) && (0, model_4.isSelectable)(right)) {
            right.selected = left.selected;
        }
        if (left instanceof smodel_1.SModelRoot && right instanceof smodel_1.SModelRoot) {
            right.canvasBounds = left.canvasBounds;
        }
        if (left instanceof viewport_root_1.ViewportRootElement && right instanceof viewport_root_1.ViewportRootElement) {
            right.scroll = left.scroll;
            right.zoom = left.zoom;
        }
    };
    UpdateModelCommand.prototype.takeSnapshot = function (edge) {
        var router = this.edgeRouterRegistry.get(edge.routerKind);
        return router.takeSnapshot(edge);
    };
    UpdateModelCommand.prototype.createAnimations = function (data, root, context) {
        var animations = [];
        if (data.fades.length > 0) {
            animations.push(new fade_1.FadeAnimation(root, data.fades, context, true));
        }
        if (data.moves !== undefined && data.moves.length > 0) {
            var movesMap = new Map;
            for (var _i = 0, _a = data.moves; _i < _a.length; _i++) {
                var move = _a[_i];
                movesMap.set(move.element.id, move);
            }
            animations.push(new move_1.MoveAnimation(root, movesMap, context, false));
        }
        if (data.resizes !== undefined && data.resizes.length > 0) {
            var resizesMap = new Map;
            for (var _b = 0, _c = data.resizes; _b < _c.length; _b++) {
                var resize = _c[_b];
                resizesMap.set(resize.element.id, resize);
            }
            animations.push(new resize_1.ResizeAnimation(root, resizesMap, context, false));
        }
        if (data.edgeMementi !== undefined && data.edgeMementi.length > 0) {
            animations.push(new move_1.MorphEdgesAnimation(root, data.edgeMementi, context, false));
        }
        return animations;
    };
    UpdateModelCommand.prototype.undo = function (context) {
        return this.performUpdate(this.newRoot, this.oldRoot, context);
    };
    UpdateModelCommand.prototype.redo = function (context) {
        return this.performUpdate(this.oldRoot, this.newRoot, context);
    };
    UpdateModelCommand.KIND = actions_1.UpdateModelAction.KIND;
    __decorate([
        (0, inversify_1.inject)(routing_1.EdgeRouterRegistry),
        (0, inversify_1.optional)(),
        __metadata("design:type", routing_1.EdgeRouterRegistry)
    ], UpdateModelCommand.prototype, "edgeRouterRegistry", void 0);
    UpdateModelCommand = __decorate([
        (0, inversify_1.injectable)(),
        __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [Object])
    ], UpdateModelCommand);
    return UpdateModelCommand;
}(command_1.Command));
exports.UpdateModelCommand = UpdateModelCommand;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/viewport/center-fit.js":
/*!******************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/viewport/center-fit.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CenterKeyboardListener = exports.FitToScreenCommand = exports.CenterCommand = exports.BoundsAwareViewportCommand = exports.FitToScreenAction = exports.CenterAction = void 0;
var actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "./node_modules/sprotty-protocol/lib/actions.js");
var geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "./node_modules/sprotty-protocol/lib/utils/geometry.js");
var keyboard_1 = __webpack_require__(/*! ../../utils/keyboard */ "./node_modules/sprotty/lib/utils/keyboard.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "./node_modules/sprotty/lib/base/model/smodel.js");
var command_1 = __webpack_require__(/*! ../../base/commands/command */ "./node_modules/sprotty/lib/base/commands/command.js");
var key_tool_1 = __webpack_require__(/*! ../../base/views/key-tool */ "./node_modules/sprotty/lib/base/views/key-tool.js");
var model_1 = __webpack_require__(/*! ../bounds/model */ "./node_modules/sprotty/lib/features/bounds/model.js");
var model_2 = __webpack_require__(/*! ../select/model */ "./node_modules/sprotty/lib/features/select/model.js");
var viewport_1 = __webpack_require__(/*! ./viewport */ "./node_modules/sprotty/lib/features/viewport/viewport.js");
var model_3 = __webpack_require__(/*! ./model */ "./node_modules/sprotty/lib/features/viewport/model.js");
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/sprotty/lib/base/types.js");
/**
 * Triggered when the user requests the viewer to center on the current model. The resulting
 * CenterCommand changes the scroll setting of the viewport accordingly.
 * It also resets the zoom to its default if retainZoom is false.
 * This action can also be sent from the model source to the client in order to perform such a
 * viewport change programmatically.
 *
 * @deprecated Use the declaration in `sprotty-protocol` instead.
 */
var CenterAction = /** @class */ (function () {
    function CenterAction(elementIds, animate, retainZoom) {
        if (animate === void 0) { animate = true; }
        if (retainZoom === void 0) { retainZoom = false; }
        this.elementIds = elementIds;
        this.animate = animate;
        this.retainZoom = retainZoom;
        this.kind = CenterAction.KIND;
    }
    CenterAction.KIND = 'center';
    return CenterAction;
}());
exports.CenterAction = CenterAction;
/**
 * Triggered when the user requests the viewer to fit its content to the available drawing area.
 * The resulting FitToScreenCommand changes the zoom and scroll settings of the viewport so the model
 * can be shown completely. This action can also be sent from the model source to the client in order
 * to perform such a viewport change programmatically.
 *
 * @deprecated Use the declaration in `sprotty-protocol` instead.
 */
var FitToScreenAction = /** @class */ (function () {
    function FitToScreenAction(elementIds, padding, maxZoom, animate) {
        if (animate === void 0) { animate = true; }
        this.elementIds = elementIds;
        this.padding = padding;
        this.maxZoom = maxZoom;
        this.animate = animate;
        this.kind = FitToScreenAction.KIND;
    }
    FitToScreenAction.KIND = 'fit';
    return FitToScreenAction;
}());
exports.FitToScreenAction = FitToScreenAction;
var BoundsAwareViewportCommand = /** @class */ (function (_super) {
    __extends(BoundsAwareViewportCommand, _super);
    function BoundsAwareViewportCommand(animate) {
        var _this = _super.call(this) || this;
        _this.animate = animate;
        return _this;
    }
    BoundsAwareViewportCommand.prototype.initialize = function (model) {
        var _this = this;
        if ((0, model_3.isViewport)(model)) {
            this.oldViewport = {
                scroll: model.scroll,
                zoom: model.zoom
            };
            var allBounds_1 = [];
            this.getElementIds().forEach(function (id) {
                var element = model.index.getById(id);
                if (element && (0, model_1.isBoundsAware)(element))
                    allBounds_1.push(_this.boundsInViewport(element, element.bounds, model));
            });
            if (allBounds_1.length === 0) {
                model.index.all().forEach(function (element) {
                    if ((0, model_2.isSelectable)(element) && element.selected && (0, model_1.isBoundsAware)(element))
                        allBounds_1.push(_this.boundsInViewport(element, element.bounds, model));
                });
            }
            if (allBounds_1.length === 0) {
                model.index.all().forEach(function (element) {
                    if ((0, model_1.isBoundsAware)(element))
                        allBounds_1.push(_this.boundsInViewport(element, element.bounds, model));
                });
            }
            if (allBounds_1.length !== 0) {
                var bounds = allBounds_1.reduce(function (b0, b1) { return geometry_1.Bounds.combine(b0, b1); });
                if (geometry_1.Dimension.isValid(bounds))
                    this.newViewport = this.getNewViewport(bounds, model);
            }
        }
    };
    BoundsAwareViewportCommand.prototype.boundsInViewport = function (element, bounds, viewport) {
        if (element instanceof smodel_1.SChildElement && element.parent !== viewport)
            return this.boundsInViewport(element.parent, element.parent.localToParent(bounds), viewport);
        else
            return bounds;
    };
    BoundsAwareViewportCommand.prototype.execute = function (context) {
        this.initialize(context.root);
        return this.redo(context);
    };
    BoundsAwareViewportCommand.prototype.undo = function (context) {
        var model = context.root;
        if ((0, model_3.isViewport)(model) && this.newViewport !== undefined && !this.equal(this.newViewport, this.oldViewport)) {
            if (this.animate)
                return new viewport_1.ViewportAnimation(model, this.newViewport, this.oldViewport, context).start();
            else {
                model.scroll = this.oldViewport.scroll;
                model.zoom = this.oldViewport.zoom;
            }
        }
        return model;
    };
    BoundsAwareViewportCommand.prototype.redo = function (context) {
        var model = context.root;
        if ((0, model_3.isViewport)(model) && this.newViewport !== undefined && !this.equal(this.newViewport, this.oldViewport)) {
            if (this.animate) {
                return new viewport_1.ViewportAnimation(model, this.oldViewport, this.newViewport, context).start();
            }
            else {
                model.scroll = this.newViewport.scroll;
                model.zoom = this.newViewport.zoom;
            }
        }
        return model;
    };
    BoundsAwareViewportCommand.prototype.equal = function (vp1, vp2) {
        return vp1.zoom === vp2.zoom && vp1.scroll.x === vp2.scroll.x && vp1.scroll.y === vp2.scroll.y;
    };
    BoundsAwareViewportCommand = __decorate([
        (0, inversify_1.injectable)(),
        __metadata("design:paramtypes", [Boolean])
    ], BoundsAwareViewportCommand);
    return BoundsAwareViewportCommand;
}(command_1.Command));
exports.BoundsAwareViewportCommand = BoundsAwareViewportCommand;
var CenterCommand = /** @class */ (function (_super) {
    __extends(CenterCommand, _super);
    function CenterCommand(action) {
        var _this = _super.call(this, action.animate) || this;
        _this.action = action;
        return _this;
    }
    CenterCommand.prototype.getElementIds = function () {
        return this.action.elementIds;
    };
    CenterCommand.prototype.getNewViewport = function (bounds, model) {
        if (!geometry_1.Dimension.isValid(model.canvasBounds)) {
            return undefined;
        }
        var zoom = (this.action.retainZoom && (0, model_3.isViewport)(model)) ? model.zoom : 1;
        var c = geometry_1.Bounds.center(bounds);
        return {
            scroll: {
                x: c.x - 0.5 * model.canvasBounds.width / zoom,
                y: c.y - 0.5 * model.canvasBounds.height / zoom
            },
            zoom: zoom
        };
    };
    CenterCommand.KIND = actions_1.CenterAction.KIND;
    CenterCommand = __decorate([
        __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [Object])
    ], CenterCommand);
    return CenterCommand;
}(BoundsAwareViewportCommand));
exports.CenterCommand = CenterCommand;
var FitToScreenCommand = /** @class */ (function (_super) {
    __extends(FitToScreenCommand, _super);
    function FitToScreenCommand(action) {
        var _this = _super.call(this, action.animate) || this;
        _this.action = action;
        return _this;
    }
    FitToScreenCommand.prototype.getElementIds = function () {
        return this.action.elementIds;
    };
    FitToScreenCommand.prototype.getNewViewport = function (bounds, model) {
        if (!geometry_1.Dimension.isValid(model.canvasBounds)) {
            return undefined;
        }
        var c = geometry_1.Bounds.center(bounds);
        var delta = this.action.padding === undefined
            ? 0
            : 2 * this.action.padding;
        var zoom = Math.min(model.canvasBounds.width / (bounds.width + delta), model.canvasBounds.height / (bounds.height + delta));
        if (this.action.maxZoom !== undefined)
            zoom = Math.min(zoom, this.action.maxZoom);
        if (zoom === Infinity) {
            zoom = 1;
        }
        return {
            scroll: {
                x: c.x - 0.5 * model.canvasBounds.width / zoom,
                y: c.y - 0.5 * model.canvasBounds.height / zoom
            },
            zoom: zoom
        };
    };
    FitToScreenCommand.KIND = actions_1.FitToScreenAction.KIND;
    FitToScreenCommand = __decorate([
        __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [Object])
    ], FitToScreenCommand);
    return FitToScreenCommand;
}(BoundsAwareViewportCommand));
exports.FitToScreenCommand = FitToScreenCommand;
var CenterKeyboardListener = /** @class */ (function (_super) {
    __extends(CenterKeyboardListener, _super);
    function CenterKeyboardListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CenterKeyboardListener.prototype.keyDown = function (element, event) {
        if ((0, keyboard_1.matchesKeystroke)(event, 'KeyC', 'ctrlCmd', 'shift'))
            return [new CenterAction([])];
        if ((0, keyboard_1.matchesKeystroke)(event, 'KeyF', 'ctrlCmd', 'shift'))
            return [new FitToScreenAction([])];
        return [];
    };
    return CenterKeyboardListener;
}(key_tool_1.KeyListener));
exports.CenterKeyboardListener = CenterKeyboardListener;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/viewport/di.config.js":
/*!*****************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/viewport/di.config.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/sprotty/lib/base/types.js");
var center_fit_1 = __webpack_require__(/*! ./center-fit */ "./node_modules/sprotty/lib/features/viewport/center-fit.js");
var viewport_1 = __webpack_require__(/*! ./viewport */ "./node_modules/sprotty/lib/features/viewport/viewport.js");
var scroll_1 = __webpack_require__(/*! ./scroll */ "./node_modules/sprotty/lib/features/viewport/scroll.js");
var zoom_1 = __webpack_require__(/*! ./zoom */ "./node_modules/sprotty/lib/features/viewport/zoom.js");
var command_registration_1 = __webpack_require__(/*! ../../base/commands/command-registration */ "./node_modules/sprotty/lib/base/commands/command-registration.js");
var viewportModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    (0, command_registration_1.configureCommand)({ bind: bind, isBound: isBound }, center_fit_1.CenterCommand);
    (0, command_registration_1.configureCommand)({ bind: bind, isBound: isBound }, center_fit_1.FitToScreenCommand);
    (0, command_registration_1.configureCommand)({ bind: bind, isBound: isBound }, viewport_1.SetViewportCommand);
    (0, command_registration_1.configureCommand)({ bind: bind, isBound: isBound }, viewport_1.GetViewportCommand);
    bind(center_fit_1.CenterKeyboardListener).toSelf().inSingletonScope();
    bind(types_1.TYPES.KeyListener).toService(center_fit_1.CenterKeyboardListener);
    bind(scroll_1.ScrollMouseListener).toSelf().inSingletonScope();
    bind(zoom_1.ZoomMouseListener).toSelf().inSingletonScope();
    bind(types_1.TYPES.MouseListener).toService(scroll_1.ScrollMouseListener);
    bind(types_1.TYPES.MouseListener).toService(zoom_1.ZoomMouseListener);
});
exports["default"] = viewportModule;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/viewport/model.js":
/*!*************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/viewport/model.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isViewport = exports.viewportFeature = void 0;
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "./node_modules/sprotty/lib/base/model/smodel.js");
exports.viewportFeature = Symbol('viewportFeature');
function isViewport(element) {
    return element instanceof smodel_1.SModelRoot
        && element.hasFeature(exports.viewportFeature)
        && 'zoom' in element
        && 'scroll' in element;
}
exports.isViewport = isViewport;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/viewport/scroll.js":
/*!**************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/viewport/scroll.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ScrollMouseListener = exports.isScrollable = void 0;
var actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "./node_modules/sprotty-protocol/lib/actions.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "./node_modules/sprotty/lib/base/model/smodel.js");
var mouse_tool_1 = __webpack_require__(/*! ../../base/views/mouse-tool */ "./node_modules/sprotty/lib/base/views/mouse-tool.js");
var smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "./node_modules/sprotty/lib/base/model/smodel-utils.js");
var model_1 = __webpack_require__(/*! ./model */ "./node_modules/sprotty/lib/features/viewport/model.js");
var model_2 = __webpack_require__(/*! ../move/model */ "./node_modules/sprotty/lib/features/move/model.js");
var model_3 = __webpack_require__(/*! ../routing/model */ "./node_modules/sprotty/lib/features/routing/model.js");
var model_4 = __webpack_require__(/*! ../projection/model */ "./node_modules/sprotty/lib/features/projection/model.js");
var browser_1 = __webpack_require__(/*! ../../utils/browser */ "./node_modules/sprotty/lib/utils/browser.js");
/**
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
function isScrollable(element) {
    return 'scroll' in element;
}
exports.isScrollable = isScrollable;
var ScrollMouseListener = /** @class */ (function (_super) {
    __extends(ScrollMouseListener, _super);
    function ScrollMouseListener() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.scrollbarMouseDownDelay = 200;
        return _this;
    }
    ScrollMouseListener.prototype.mouseDown = function (target, event) {
        var _this = this;
        var moveable = (0, smodel_utils_1.findParentByFeature)(target, model_2.isMoveable);
        if (moveable === undefined && !(target instanceof model_3.SRoutingHandle)) {
            var viewport = (0, smodel_utils_1.findParentByFeature)(target, model_1.isViewport);
            if (viewport) {
                this.lastScrollPosition = { x: event.pageX, y: event.pageY };
                this.scrollbar = this.getScrollbar(event);
                if (this.scrollbar) {
                    window.clearTimeout(this.scrollbarMouseDownTimeout);
                    return this.moveScrollBar(viewport, event, this.scrollbar, true)
                        .map(function (action) { return new Promise(function (resolve) {
                        _this.scrollbarMouseDownTimeout = window.setTimeout(function () { return resolve(action); }, _this.scrollbarMouseDownDelay);
                    }); });
                }
            }
            else {
                this.lastScrollPosition = undefined;
                this.scrollbar = undefined;
            }
        }
        return [];
    };
    ScrollMouseListener.prototype.mouseMove = function (target, event) {
        if (event.buttons === 0) {
            return this.mouseUp(target, event);
        }
        if (this.scrollbar) {
            window.clearTimeout(this.scrollbarMouseDownTimeout);
            var viewport = (0, smodel_utils_1.findParentByFeature)(target, model_1.isViewport);
            if (viewport) {
                return this.moveScrollBar(viewport, event, this.scrollbar);
            }
        }
        if (this.lastScrollPosition) {
            var viewport = (0, smodel_utils_1.findParentByFeature)(target, model_1.isViewport);
            if (viewport) {
                return this.dragCanvas(viewport, event, this.lastScrollPosition);
            }
        }
        return [];
    };
    ScrollMouseListener.prototype.mouseEnter = function (target, event) {
        if (target instanceof smodel_1.SModelRoot && event.buttons === 0) {
            this.mouseUp(target, event);
        }
        return [];
    };
    ScrollMouseListener.prototype.mouseUp = function (target, event) {
        this.lastScrollPosition = undefined;
        this.scrollbar = undefined;
        return [];
    };
    ScrollMouseListener.prototype.doubleClick = function (target, event) {
        var viewport = (0, smodel_utils_1.findParentByFeature)(target, model_1.isViewport);
        if (viewport) {
            var scrollbar = this.getScrollbar(event);
            if (scrollbar) {
                window.clearTimeout(this.scrollbarMouseDownTimeout);
                var targetElement = this.findClickTarget(scrollbar, event);
                var elementId = void 0;
                if (targetElement && targetElement.id.startsWith('horizontal-projection:')) {
                    elementId = targetElement.id.substring('horizontal-projection:'.length);
                }
                else if (targetElement && targetElement.id.startsWith('vertical-projection:')) {
                    elementId = targetElement.id.substring('vertical-projection:'.length);
                }
                if (elementId) {
                    return [actions_1.CenterAction.create([elementId], { animate: true, retainZoom: true })];
                }
            }
        }
        return [];
    };
    ScrollMouseListener.prototype.dragCanvas = function (viewport, event, lastScrollPosition) {
        var dx = (event.pageX - lastScrollPosition.x) / viewport.zoom;
        var dy = (event.pageY - lastScrollPosition.y) / viewport.zoom;
        var newViewport = {
            scroll: {
                x: viewport.scroll.x - dx,
                y: viewport.scroll.y - dy,
            },
            zoom: viewport.zoom
        };
        this.lastScrollPosition = { x: event.pageX, y: event.pageY };
        return [actions_1.SetViewportAction.create(viewport.id, newViewport, { animate: false })];
    };
    ScrollMouseListener.prototype.moveScrollBar = function (model, event, scrollbar, animate) {
        if (animate === void 0) { animate = false; }
        var modelBounds = (0, model_4.getModelBounds)(model);
        if (!modelBounds || model.zoom <= 0) {
            return [];
        }
        var scrollbarRect = scrollbar.getBoundingClientRect();
        var newScroll;
        if (this.getScrollbarOrientation(scrollbar) === 'horizontal') {
            if (scrollbarRect.width <= 0) {
                return [];
            }
            var viewportSize = (model.canvasBounds.width / (model.zoom * modelBounds.width)) * scrollbarRect.width;
            var position = event.clientX - scrollbarRect.x - viewportSize / 2;
            if (position < 0) {
                position = 0;
            }
            else if (position > scrollbarRect.width - viewportSize) {
                position = scrollbarRect.width - viewportSize;
            }
            newScroll = {
                x: modelBounds.x + (position / scrollbarRect.width) * modelBounds.width,
                y: model.scroll.y
            };
        }
        else {
            if (scrollbarRect.height <= 0) {
                return [];
            }
            var viewportSize = (model.canvasBounds.height / (model.zoom * modelBounds.height)) * scrollbarRect.height;
            var position = event.clientY - scrollbarRect.y - viewportSize / 2;
            if (position < 0) {
                position = 0;
            }
            else if (position > scrollbarRect.height - viewportSize) {
                position = scrollbarRect.height - viewportSize;
            }
            newScroll = {
                x: model.scroll.x,
                y: modelBounds.y + (position / scrollbarRect.height) * modelBounds.height
            };
        }
        return [actions_1.SetViewportAction.create(model.id, { scroll: newScroll, zoom: model.zoom }, { animate: animate })];
    };
    ScrollMouseListener.prototype.getScrollbar = function (event) {
        var element = event.target;
        while (element) {
            if (element.classList && element.classList.contains('sprotty-projection-bar')) {
                return element;
            }
            element = element.parentElement;
        }
        return undefined;
    };
    ScrollMouseListener.prototype.getScrollbarOrientation = function (scrollbar) {
        if (scrollbar.classList.contains('horizontal')) {
            return 'horizontal';
        }
        else {
            return 'vertical';
        }
    };
    ScrollMouseListener.prototype.findClickTarget = function (scrollbar, event) {
        var matching = Array.from(scrollbar.children).filter(function (child) {
            return child.id && child.classList.contains('sprotty-projection') && (0, browser_1.hitsMouseEvent)(child, event);
        });
        if (matching.length > 0) {
            return matching[matching.length - 1];
        }
        return undefined;
    };
    return ScrollMouseListener;
}(mouse_tool_1.MouseListener));
exports.ScrollMouseListener = ScrollMouseListener;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/viewport/viewport-root.js":
/*!*********************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/viewport/viewport-root.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ViewportRootElement = void 0;
var geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "./node_modules/sprotty-protocol/lib/utils/geometry.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "./node_modules/sprotty/lib/base/model/smodel.js");
var model_1 = __webpack_require__(/*! ./model */ "./node_modules/sprotty/lib/features/viewport/model.js");
var model_2 = __webpack_require__(/*! ../export/model */ "./node_modules/sprotty/lib/features/export/model.js");
/**
 * Model root element that defines a viewport, so it transforms the coordinate system with
 * a `scroll` translation and a `zoom` scaling.
 */
var ViewportRootElement = /** @class */ (function (_super) {
    __extends(ViewportRootElement, _super);
    function ViewportRootElement(index) {
        var _this = _super.call(this, index) || this;
        _this.scroll = { x: 0, y: 0 };
        _this.zoom = 1;
        _this.position = geometry_1.Point.ORIGIN;
        _this.size = geometry_1.Dimension.EMPTY;
        return _this;
    }
    Object.defineProperty(ViewportRootElement.prototype, "bounds", {
        get: function () {
            return {
                x: this.position.x,
                y: this.position.y,
                width: this.size.width,
                height: this.size.height
            };
        },
        set: function (newBounds) {
            this.position = {
                x: newBounds.x,
                y: newBounds.y
            };
            this.size = {
                width: newBounds.width,
                height: newBounds.height
            };
        },
        enumerable: false,
        configurable: true
    });
    ViewportRootElement.prototype.localToParent = function (point) {
        var result = {
            x: (point.x - this.scroll.x) * this.zoom,
            y: (point.y - this.scroll.y) * this.zoom,
            width: -1,
            height: -1
        };
        if ((0, geometry_1.isBounds)(point)) {
            result.width = point.width * this.zoom;
            result.height = point.height * this.zoom;
        }
        return result;
    };
    ViewportRootElement.prototype.parentToLocal = function (point) {
        var result = {
            x: (point.x / this.zoom) + this.scroll.x,
            y: (point.y / this.zoom) + this.scroll.y,
            width: -1,
            height: -1
        };
        if ((0, geometry_1.isBounds)(point) && geometry_1.Dimension.isValid(point)) {
            result.width = point.width / this.zoom;
            result.height = point.height / this.zoom;
        }
        return result;
    };
    ViewportRootElement.DEFAULT_FEATURES = [model_1.viewportFeature, model_2.exportFeature];
    return ViewportRootElement;
}(smodel_1.SModelRoot));
exports.ViewportRootElement = ViewportRootElement;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/viewport/viewport.js":
/*!****************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/viewport/viewport.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ViewportAnimation = exports.GetViewportCommand = exports.SetViewportCommand = exports.ViewportResult = exports.GetViewportAction = exports.SetViewportAction = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "./node_modules/sprotty-protocol/lib/actions.js");
var geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "./node_modules/sprotty-protocol/lib/utils/geometry.js");
var command_1 = __webpack_require__(/*! ../../base/commands/command */ "./node_modules/sprotty/lib/base/commands/command.js");
var animation_1 = __webpack_require__(/*! ../../base/animations/animation */ "./node_modules/sprotty/lib/base/animations/animation.js");
var model_1 = __webpack_require__(/*! ./model */ "./node_modules/sprotty/lib/features/viewport/model.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/sprotty/lib/base/types.js");
var request_command_1 = __webpack_require__(/*! ../../base/commands/request-command */ "./node_modules/sprotty/lib/base/commands/request-command.js");
/**
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
var SetViewportAction = /** @class */ (function () {
    function SetViewportAction(elementId, newViewport, animate) {
        this.elementId = elementId;
        this.newViewport = newViewport;
        this.animate = animate;
        this.kind = SetViewportAction.KIND;
    }
    SetViewportAction.KIND = 'viewport';
    return SetViewportAction;
}());
exports.SetViewportAction = SetViewportAction;
var GetViewportAction;
(function (GetViewportAction) {
    GetViewportAction.KIND = 'getViewport';
    function create() {
        return {
            kind: GetViewportAction.KIND,
            requestId: (0, actions_1.generateRequestId)()
        };
    }
    GetViewportAction.create = create;
})(GetViewportAction = exports.GetViewportAction || (exports.GetViewportAction = {}));
var ViewportResult;
(function (ViewportResult) {
    ViewportResult.KIND = 'viewportResult';
    function create(viewport, canvasBounds, requestId) {
        return {
            kind: ViewportResult.KIND,
            viewport: viewport,
            canvasBounds: canvasBounds,
            responseId: requestId
        };
    }
    ViewportResult.create = create;
})(ViewportResult = exports.ViewportResult || (exports.ViewportResult = {}));
var SetViewportCommand = /** @class */ (function (_super) {
    __extends(SetViewportCommand, _super);
    function SetViewportCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        _this.newViewport = action.newViewport;
        return _this;
    }
    SetViewportCommand_1 = SetViewportCommand;
    SetViewportCommand.prototype.execute = function (context) {
        var model = context.root;
        var element = model.index.getById(this.action.elementId);
        if (element && (0, model_1.isViewport)(element)) {
            this.element = element;
            this.oldViewport = {
                scroll: this.element.scroll,
                zoom: this.element.zoom,
            };
            if (this.action.animate)
                return new ViewportAnimation(this.element, this.oldViewport, this.newViewport, context).start();
            else {
                this.element.scroll = this.newViewport.scroll;
                this.element.zoom = this.newViewport.zoom;
            }
        }
        return model;
    };
    SetViewportCommand.prototype.undo = function (context) {
        return new ViewportAnimation(this.element, this.newViewport, this.oldViewport, context).start();
    };
    SetViewportCommand.prototype.redo = function (context) {
        return new ViewportAnimation(this.element, this.oldViewport, this.newViewport, context).start();
    };
    SetViewportCommand.prototype.merge = function (command, context) {
        if (!this.action.animate && command instanceof SetViewportCommand_1 && this.element === command.element) {
            this.newViewport = command.newViewport;
            return true;
        }
        return false;
    };
    var SetViewportCommand_1;
    SetViewportCommand.KIND = actions_1.SetViewportAction.KIND;
    SetViewportCommand = SetViewportCommand_1 = __decorate([
        (0, inversify_1.injectable)(),
        __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [Object])
    ], SetViewportCommand);
    return SetViewportCommand;
}(command_1.MergeableCommand));
exports.SetViewportCommand = SetViewportCommand;
var GetViewportCommand = /** @class */ (function (_super) {
    __extends(GetViewportCommand, _super);
    function GetViewportCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    GetViewportCommand.prototype.retrieveResult = function (context) {
        var elem = context.root;
        var viewport;
        if ((0, model_1.isViewport)(elem)) {
            viewport = { scroll: elem.scroll, zoom: elem.zoom };
        }
        else {
            viewport = { scroll: geometry_1.Point.ORIGIN, zoom: 1 };
        }
        return ViewportResult.create(viewport, elem.canvasBounds, this.action.requestId);
    };
    GetViewportCommand.KIND = GetViewportAction.KIND;
    GetViewportCommand = __decorate([
        __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [Object])
    ], GetViewportCommand);
    return GetViewportCommand;
}(request_command_1.ModelRequestCommand));
exports.GetViewportCommand = GetViewportCommand;
var ViewportAnimation = /** @class */ (function (_super) {
    __extends(ViewportAnimation, _super);
    function ViewportAnimation(element, oldViewport, newViewport, context) {
        var _this = _super.call(this, context) || this;
        _this.element = element;
        _this.oldViewport = oldViewport;
        _this.newViewport = newViewport;
        _this.context = context;
        _this.zoomFactor = Math.log(newViewport.zoom / oldViewport.zoom);
        return _this;
    }
    ViewportAnimation.prototype.tween = function (t, context) {
        this.element.scroll = {
            x: (1 - t) * this.oldViewport.scroll.x + t * this.newViewport.scroll.x,
            y: (1 - t) * this.oldViewport.scroll.y + t * this.newViewport.scroll.y
        };
        this.element.zoom = this.oldViewport.zoom * Math.exp(t * this.zoomFactor);
        return context.root;
    };
    return ViewportAnimation;
}(animation_1.Animation));
exports.ViewportAnimation = ViewportAnimation;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/viewport/zoom.js":
/*!************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/viewport/zoom.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ZoomMouseListener = exports.getZoom = exports.isZoomable = void 0;
var actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "./node_modules/sprotty-protocol/lib/actions.js");
var browser_1 = __webpack_require__(/*! ../../utils/browser */ "./node_modules/sprotty/lib/utils/browser.js");
var mouse_tool_1 = __webpack_require__(/*! ../../base/views/mouse-tool */ "./node_modules/sprotty/lib/base/views/mouse-tool.js");
var smodel_utils_1 = __webpack_require__(/*! ../../base/model/smodel-utils */ "./node_modules/sprotty/lib/base/model/smodel-utils.js");
var model_1 = __webpack_require__(/*! ./model */ "./node_modules/sprotty/lib/features/viewport/model.js");
/**
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
function isZoomable(element) {
    return 'zoom' in element;
}
exports.isZoomable = isZoomable;
function getZoom(label) {
    var zoom = 1;
    var viewport = (0, smodel_utils_1.findParentByFeature)(label, model_1.isViewport);
    if (viewport) {
        zoom = viewport.zoom;
    }
    return zoom;
}
exports.getZoom = getZoom;
var ZoomMouseListener = /** @class */ (function (_super) {
    __extends(ZoomMouseListener, _super);
    function ZoomMouseListener() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ZoomMouseListener.prototype.wheel = function (target, event) {
        var viewport = (0, smodel_utils_1.findParentByFeature)(target, model_1.isViewport);
        if (viewport) {
            var newZoom = this.getZoomFactor(event);
            var viewportOffset = this.getViewportOffset(target.root, event);
            var offsetFactor = 1.0 / (newZoom * viewport.zoom) - 1.0 / viewport.zoom;
            var newViewport = {
                scroll: {
                    x: viewport.scroll.x - offsetFactor * viewportOffset.x,
                    y: viewport.scroll.y - offsetFactor * viewportOffset.y
                },
                zoom: viewport.zoom * newZoom
            };
            return [actions_1.SetViewportAction.create(viewport.id, newViewport, { animate: false })];
        }
        return [];
    };
    ZoomMouseListener.prototype.getViewportOffset = function (root, event) {
        var canvasBounds = root.canvasBounds;
        var windowScroll = (0, browser_1.getWindowScroll)();
        return {
            x: event.clientX + windowScroll.x - canvasBounds.x,
            y: event.clientY + windowScroll.y - canvasBounds.y
        };
    };
    ZoomMouseListener.prototype.getZoomFactor = function (event) {
        if (event.deltaMode === event.DOM_DELTA_PAGE)
            return Math.exp(-event.deltaY * 0.5);
        else if (event.deltaMode === event.DOM_DELTA_LINE)
            return Math.exp(-event.deltaY * 0.05);
        else // deltaMode === DOM_DELTA_PIXEL
            return Math.exp(-event.deltaY * 0.005);
    };
    return ZoomMouseListener;
}(mouse_tool_1.MouseListener));
exports.ZoomMouseListener = ZoomMouseListener;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/zorder/di.config.js":
/*!***************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/zorder/di.config.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var command_registration_1 = __webpack_require__(/*! ../../base/commands/command-registration */ "./node_modules/sprotty/lib/base/commands/command-registration.js");
var zorder_1 = __webpack_require__(/*! ./zorder */ "./node_modules/sprotty/lib/features/zorder/zorder.js");
var zorderModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    (0, command_registration_1.configureCommand)({ bind: bind, isBound: isBound }, zorder_1.BringToFrontCommand);
});
exports["default"] = zorderModule;


/***/ }),

/***/ "./node_modules/sprotty/lib/features/zorder/zorder.js":
/*!************************************************************!*\
  !*** ./node_modules/sprotty/lib/features/zorder/zorder.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BringToFrontCommand = exports.BringToFrontAction = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../../base/types */ "./node_modules/sprotty/lib/base/types.js");
var smodel_1 = __webpack_require__(/*! ../../base/model/smodel */ "./node_modules/sprotty/lib/base/model/smodel.js");
var command_1 = __webpack_require__(/*! ../../base/commands/command */ "./node_modules/sprotty/lib/base/commands/command.js");
var model_1 = __webpack_require__(/*! ../routing/model */ "./node_modules/sprotty/lib/features/routing/model.js");
var BringToFrontAction;
(function (BringToFrontAction) {
    BringToFrontAction.KIND = 'bringToFront';
    function create(elementIDs) {
        return {
            kind: BringToFrontAction.KIND,
            elementIDs: elementIDs
        };
    }
    BringToFrontAction.create = create;
})(BringToFrontAction = exports.BringToFrontAction || (exports.BringToFrontAction = {}));
var BringToFrontCommand = /** @class */ (function (_super) {
    __extends(BringToFrontCommand, _super);
    function BringToFrontCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        _this.selected = [];
        return _this;
    }
    BringToFrontCommand.prototype.execute = function (context) {
        var _this = this;
        var model = context.root;
        this.action.elementIDs.forEach(function (id) {
            var element = model.index.getById(id);
            if (element instanceof model_1.SRoutableElement) {
                if (element.source)
                    _this.addToSelection(element.source);
                if (element.target)
                    _this.addToSelection(element.target);
            }
            if (element instanceof smodel_1.SChildElement) {
                _this.addToSelection(element);
            }
            _this.includeConnectedEdges(element);
        });
        return this.redo(context);
    };
    BringToFrontCommand.prototype.includeConnectedEdges = function (element) {
        var _this = this;
        if (element instanceof model_1.SConnectableElement) {
            element.incomingEdges.forEach(function (edge) { return _this.addToSelection(edge); });
            element.outgoingEdges.forEach(function (edge) { return _this.addToSelection(edge); });
        }
        if (element instanceof smodel_1.SParentElement) {
            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {
                var child = _a[_i];
                this.includeConnectedEdges(child);
            }
        }
    };
    BringToFrontCommand.prototype.addToSelection = function (element) {
        this.selected.push({
            element: element,
            index: element.parent.children.indexOf(element)
        });
    };
    BringToFrontCommand.prototype.undo = function (context) {
        for (var i = this.selected.length - 1; i >= 0; i--) {
            var selection = this.selected[i];
            var element = selection.element;
            element.parent.move(element, selection.index);
        }
        return context.root;
    };
    BringToFrontCommand.prototype.redo = function (context) {
        for (var i = 0; i < this.selected.length; i++) {
            this.bringToFront(this.selected[i]);
        }
        return context.root;
    };
    BringToFrontCommand.prototype.bringToFront = function (selection) {
        var element = selection.element;
        var childrenLength = element.parent.children.length;
        element.parent.move(element, childrenLength - 1);
    };
    BringToFrontCommand.KIND = BringToFrontAction.KIND;
    BringToFrontCommand = __decorate([
        (0, inversify_1.injectable)(),
        __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [Object])
    ], BringToFrontCommand);
    return BringToFrontCommand;
}(command_1.Command));
exports.BringToFrontCommand = BringToFrontCommand;


/***/ }),

/***/ "./node_modules/sprotty/lib/graph/di.config.js":
/*!*****************************************************!*\
  !*** ./node_modules/sprotty/lib/graph/di.config.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../base/types */ "./node_modules/sprotty/lib/base/types.js");
var sgraph_factory_1 = __webpack_require__(/*! ./sgraph-factory */ "./node_modules/sprotty/lib/graph/sgraph-factory.js");
var graphModule = new inversify_1.ContainerModule(function (bind, unbind, isBound, rebind) {
    rebind(types_1.TYPES.IModelFactory).to(sgraph_factory_1.SGraphFactory).inSingletonScope();
});
exports["default"] = graphModule;


/***/ }),

/***/ "./node_modules/sprotty/lib/graph/sgraph-factory.js":
/*!**********************************************************!*\
  !*** ./node_modules/sprotty/lib/graph/sgraph-factory.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SGraphFactory = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var model_utils_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/model-utils */ "./node_modules/sprotty-protocol/lib/utils/model-utils.js");
var smodel_factory_1 = __webpack_require__(/*! ../base/model/smodel-factory */ "./node_modules/sprotty/lib/base/model/smodel-factory.js");
var smodel_1 = __webpack_require__(/*! ../base/model/smodel */ "./node_modules/sprotty/lib/base/model/smodel.js");
var sgraph_1 = __webpack_require__(/*! ./sgraph */ "./node_modules/sprotty/lib/graph/sgraph.js");
var model_1 = __webpack_require__(/*! ../features/button/model */ "./node_modules/sprotty/lib/features/button/model.js");
/**
 * @deprecated
 * Subclassing SModelFactory is discouraged. Use `registerModelElement`
 * or `configureModelElement` instead.
 */
var SGraphFactory = /** @class */ (function (_super) {
    __extends(SGraphFactory, _super);
    function SGraphFactory() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.defaultGraphFeatures = (0, smodel_factory_1.createFeatureSet)(sgraph_1.SGraph.DEFAULT_FEATURES);
        _this.defaultNodeFeatures = (0, smodel_factory_1.createFeatureSet)(sgraph_1.SNode.DEFAULT_FEATURES);
        _this.defaultPortFeatures = (0, smodel_factory_1.createFeatureSet)(sgraph_1.SPort.DEFAULT_FEATURES);
        _this.defaultEdgeFeatures = (0, smodel_factory_1.createFeatureSet)(sgraph_1.SEdge.DEFAULT_FEATURES);
        _this.defaultLabelFeatures = (0, smodel_factory_1.createFeatureSet)(sgraph_1.SLabel.DEFAULT_FEATURES);
        _this.defaultCompartmentFeatures = (0, smodel_factory_1.createFeatureSet)(sgraph_1.SCompartment.DEFAULT_FEATURES);
        _this.defaultButtonFeatures = (0, smodel_factory_1.createFeatureSet)(model_1.SButton.DEFAULT_FEATURES);
        return _this;
    }
    SGraphFactory.prototype.createElement = function (schema, parent) {
        var child;
        if (this.registry.hasKey(schema.type)) {
            var regElement = this.registry.get(schema.type, undefined);
            if (!(regElement instanceof smodel_1.SChildElement))
                throw new Error("Element with type ".concat(schema.type, " was expected to be an SChildElement."));
            child = regElement;
        }
        else if (this.isNodeSchema(schema)) {
            child = new sgraph_1.SNode();
            child.features = this.defaultNodeFeatures;
        }
        else if (this.isPortSchema(schema)) {
            child = new sgraph_1.SPort();
            child.features = this.defaultPortFeatures;
        }
        else if (this.isEdgeSchema(schema)) {
            child = new sgraph_1.SEdge();
            child.features = this.defaultEdgeFeatures;
        }
        else if (this.isLabelSchema(schema)) {
            child = new sgraph_1.SLabel();
            child.features = this.defaultLabelFeatures;
        }
        else if (this.isCompartmentSchema(schema)) {
            child = new sgraph_1.SCompartment();
            child.features = this.defaultCompartmentFeatures;
        }
        else if (this.isButtonSchema(schema)) {
            child = new model_1.SButton();
            child.features = this.defaultButtonFeatures;
        }
        else {
            child = new smodel_1.SChildElement();
        }
        return this.initializeChild(child, schema, parent);
    };
    SGraphFactory.prototype.createRoot = function (schema) {
        var root;
        if (this.registry.hasKey(schema.type)) {
            var regElement = this.registry.get(schema.type, undefined);
            if (!(regElement instanceof smodel_1.SModelRoot))
                throw new Error("Element with type ".concat(schema.type, " was expected to be an SModelRoot."));
            root = regElement;
        }
        else if (this.isGraphSchema(schema)) {
            root = new sgraph_1.SGraph();
            root.features = this.defaultGraphFeatures;
        }
        else {
            root = new smodel_1.SModelRoot();
        }
        return this.initializeRoot(root, schema);
    };
    SGraphFactory.prototype.isGraphSchema = function (schema) {
        return (0, model_utils_1.getBasicType)(schema) === 'graph';
    };
    SGraphFactory.prototype.isNodeSchema = function (schema) {
        return (0, model_utils_1.getBasicType)(schema) === 'node';
    };
    SGraphFactory.prototype.isPortSchema = function (schema) {
        return (0, model_utils_1.getBasicType)(schema) === 'port';
    };
    SGraphFactory.prototype.isEdgeSchema = function (schema) {
        return (0, model_utils_1.getBasicType)(schema) === 'edge';
    };
    SGraphFactory.prototype.isLabelSchema = function (schema) {
        return (0, model_utils_1.getBasicType)(schema) === 'label';
    };
    SGraphFactory.prototype.isCompartmentSchema = function (schema) {
        return (0, model_utils_1.getBasicType)(schema) === 'comp';
    };
    SGraphFactory.prototype.isButtonSchema = function (schema) {
        return (0, model_utils_1.getBasicType)(schema) === 'button';
    };
    SGraphFactory = __decorate([
        (0, inversify_1.injectable)()
    ], SGraphFactory);
    return SGraphFactory;
}(smodel_factory_1.SModelFactory));
exports.SGraphFactory = SGraphFactory;


/***/ }),

/***/ "./node_modules/sprotty/lib/graph/sgraph.js":
/*!**************************************************!*\
  !*** ./node_modules/sprotty/lib/graph/sgraph.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SGraphIndex = exports.SCompartment = exports.SLabel = exports.SEdge = exports.SPort = exports.SNode = exports.SGraph = void 0;
var geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "./node_modules/sprotty-protocol/lib/utils/geometry.js");
var smodel_1 = __webpack_require__(/*! ../base/model/smodel */ "./node_modules/sprotty/lib/base/model/smodel.js");
var model_1 = __webpack_require__(/*! ../features/bounds/model */ "./node_modules/sprotty/lib/features/bounds/model.js");
var model_2 = __webpack_require__(/*! ../features/edge-layout/model */ "./node_modules/sprotty/lib/features/edge-layout/model.js");
var delete_1 = __webpack_require__(/*! ../features/edit/delete */ "./node_modules/sprotty/lib/features/edit/delete.js");
var model_3 = __webpack_require__(/*! ../features/edit/model */ "./node_modules/sprotty/lib/features/edit/model.js");
var model_4 = __webpack_require__(/*! ../features/fade/model */ "./node_modules/sprotty/lib/features/fade/model.js");
var model_5 = __webpack_require__(/*! ../features/hover/model */ "./node_modules/sprotty/lib/features/hover/model.js");
var model_6 = __webpack_require__(/*! ../features/move/model */ "./node_modules/sprotty/lib/features/move/model.js");
var model_7 = __webpack_require__(/*! ../features/routing/model */ "./node_modules/sprotty/lib/features/routing/model.js");
var model_8 = __webpack_require__(/*! ../features/select/model */ "./node_modules/sprotty/lib/features/select/model.js");
var viewport_root_1 = __webpack_require__(/*! ../features/viewport/viewport-root */ "./node_modules/sprotty/lib/features/viewport/viewport-root.js");
var iterable_1 = __webpack_require__(/*! ../utils/iterable */ "./node_modules/sprotty/lib/utils/iterable.js");
/**
 * Root element for graph-like models.
 */
var SGraph = /** @class */ (function (_super) {
    __extends(SGraph, _super);
    function SGraph(index) {
        if (index === void 0) { index = new SGraphIndex(); }
        return _super.call(this, index) || this;
    }
    return SGraph;
}(viewport_root_1.ViewportRootElement));
exports.SGraph = SGraph;
/**
 * Model element class for nodes, which are the main entities in a graph. A node can be connected to
 * another node via an SEdge. Such a connection can be direct, i.e. the node is the source or target of
 * the edge, or indirect through a port, i.e. it contains an SPort which is the source or target of the edge.
 */
var SNode = /** @class */ (function (_super) {
    __extends(SNode, _super);
    function SNode() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.selected = false;
        _this.hoverFeedback = false;
        _this.opacity = 1;
        return _this;
    }
    SNode.prototype.canConnect = function (routable, role) {
        return this.children.find(function (c) { return c instanceof SPort; }) === undefined;
    };
    SNode.DEFAULT_FEATURES = [model_7.connectableFeature, delete_1.deletableFeature, model_8.selectFeature, model_1.boundsFeature,
        model_6.moveFeature, model_1.layoutContainerFeature, model_4.fadeFeature, model_5.hoverFeedbackFeature, model_5.popupFeature];
    return SNode;
}(model_7.SConnectableElement));
exports.SNode = SNode;
/**
 * A port is a connection point for edges. It should always be contained in an SNode.
 */
var SPort = /** @class */ (function (_super) {
    __extends(SPort, _super);
    function SPort() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.selected = false;
        _this.hoverFeedback = false;
        _this.opacity = 1;
        return _this;
    }
    SPort.DEFAULT_FEATURES = [model_7.connectableFeature, model_8.selectFeature, model_1.boundsFeature, model_4.fadeFeature,
        model_5.hoverFeedbackFeature];
    return SPort;
}(model_7.SConnectableElement));
exports.SPort = SPort;
/**
 * Model element class for edges, which are the connectors in a graph. An edge has a source and a target,
 * each of which can be either a node or a port. The source and target elements are referenced via their
 * ids and can be resolved with the index stored in the root element.
 */
var SEdge = /** @class */ (function (_super) {
    __extends(SEdge, _super);
    function SEdge() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.selected = false;
        _this.hoverFeedback = false;
        _this.opacity = 1;
        return _this;
    }
    SEdge.DEFAULT_FEATURES = [model_3.editFeature, delete_1.deletableFeature, model_8.selectFeature, model_4.fadeFeature,
        model_5.hoverFeedbackFeature];
    return SEdge;
}(model_7.SRoutableElement));
exports.SEdge = SEdge;
/**
 * A label can be attached to a node, edge, or port, and contains some text to be rendered in its view.
 */
var SLabel = /** @class */ (function (_super) {
    __extends(SLabel, _super);
    function SLabel() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.selected = false;
        _this.alignment = geometry_1.Point.ORIGIN;
        _this.opacity = 1;
        return _this;
    }
    SLabel.DEFAULT_FEATURES = [model_1.boundsFeature, model_1.alignFeature, model_1.layoutableChildFeature,
        model_2.edgeLayoutFeature, model_4.fadeFeature];
    return SLabel;
}(model_1.SShapeElement));
exports.SLabel = SLabel;
/**
 * A compartment is used to group multiple child elements such as labels of a node. Usually a `vbox`
 * or `hbox` layout is used to arrange these children.
 */
var SCompartment = /** @class */ (function (_super) {
    __extends(SCompartment, _super);
    function SCompartment() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.opacity = 1;
        return _this;
    }
    SCompartment.DEFAULT_FEATURES = [model_1.boundsFeature, model_1.layoutContainerFeature, model_1.layoutableChildFeature,
        model_4.fadeFeature];
    return SCompartment;
}(model_1.SShapeElement));
exports.SCompartment = SCompartment;
/**
 * A specialized model index that tracks outgoing and incoming edges.
 */
var SGraphIndex = /** @class */ (function (_super) {
    __extends(SGraphIndex, _super);
    function SGraphIndex() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.outgoing = new Map;
        _this.incoming = new Map;
        return _this;
    }
    SGraphIndex.prototype.add = function (element) {
        _super.prototype.add.call(this, element);
        if (element instanceof SEdge) {
            // Register the edge in the outgoing map
            if (element.sourceId) {
                var sourceArr = this.outgoing.get(element.sourceId);
                if (sourceArr === undefined)
                    this.outgoing.set(element.sourceId, [element]);
                else
                    sourceArr.push(element);
            }
            // Register the edge in the incoming map
            if (element.targetId) {
                var targetArr = this.incoming.get(element.targetId);
                if (targetArr === undefined)
                    this.incoming.set(element.targetId, [element]);
                else
                    targetArr.push(element);
            }
        }
    };
    SGraphIndex.prototype.remove = function (element) {
        _super.prototype.remove.call(this, element);
        if (element instanceof SEdge) {
            // Remove the edge from the outgoing map
            var sourceArr = this.outgoing.get(element.sourceId);
            if (sourceArr !== undefined) {
                var index = sourceArr.indexOf(element);
                if (index >= 0) {
                    if (sourceArr.length === 1)
                        this.outgoing.delete(element.sourceId);
                    else
                        sourceArr.splice(index, 1);
                }
            }
            // Remove the edge from the incoming map
            var targetArr = this.incoming.get(element.targetId);
            if (targetArr !== undefined) {
                var index = targetArr.indexOf(element);
                if (index >= 0) {
                    if (targetArr.length === 1)
                        this.incoming.delete(element.targetId);
                    else
                        targetArr.splice(index, 1);
                }
            }
        }
    };
    SGraphIndex.prototype.getAttachedElements = function (element) {
        var _this = this;
        return new iterable_1.FluentIterableImpl(function () { return ({
            outgoing: _this.outgoing.get(element.id),
            incoming: _this.incoming.get(element.id),
            nextOutgoingIndex: 0,
            nextIncomingIndex: 0
        }); }, function (state) {
            var index = state.nextOutgoingIndex;
            if (state.outgoing !== undefined && index < state.outgoing.length) {
                state.nextOutgoingIndex = index + 1;
                return { done: false, value: state.outgoing[index] };
            }
            index = state.nextIncomingIndex;
            if (state.incoming !== undefined) {
                // Filter out self-loops: edges that are both outgoing and incoming
                while (index < state.incoming.length) {
                    var edge = state.incoming[index];
                    if (edge.sourceId !== edge.targetId) {
                        state.nextIncomingIndex = index + 1;
                        return { done: false, value: edge };
                    }
                    index++;
                }
            }
            return { done: true, value: undefined };
        });
    };
    SGraphIndex.prototype.getIncomingEdges = function (element) {
        return this.incoming.get(element.id) || [];
    };
    SGraphIndex.prototype.getOutgoingEdges = function (element) {
        return this.outgoing.get(element.id) || [];
    };
    return SGraphIndex;
}(smodel_1.ModelIndexImpl));
exports.SGraphIndex = SGraphIndex;


/***/ }),

/***/ "./node_modules/sprotty/lib/graph/views.js":
/*!*************************************************!*\
  !*** ./node_modules/sprotty/lib/graph/views.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2022 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SBezierControlHandleView = exports.SBezierCreateHandleView = exports.SCompartmentView = exports.SLabelView = exports.SRoutingHandleView = exports.BezierCurveEdgeView = exports.PolylineEdgeViewWithGapsOnIntersections = exports.JumpingPolylineEdgeView = exports.PolylineEdgeView = exports.SGraphView = void 0;
/** @jsx svg */
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "./node_modules/sprotty-protocol/lib/utils/geometry.js");
var model_utils_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/model-utils */ "./node_modules/sprotty-protocol/lib/utils/model-utils.js");
var vnode_utils_1 = __webpack_require__(/*! ../base/views/vnode-utils */ "./node_modules/sprotty/lib/base/views/vnode-utils.js");
var views_1 = __webpack_require__(/*! ../features/bounds/views */ "./node_modules/sprotty/lib/features/bounds/views.js");
var intersection_finder_1 = __webpack_require__(/*! ../features/edge-intersection/intersection-finder */ "./node_modules/sprotty/lib/features/edge-intersection/intersection-finder.js");
var model_1 = __webpack_require__(/*! ../features/edge-layout/model */ "./node_modules/sprotty/lib/features/edge-layout/model.js");
var model_2 = __webpack_require__(/*! ../features/routing/model */ "./node_modules/sprotty/lib/features/routing/model.js");
var routing_1 = __webpack_require__(/*! ../features/routing/routing */ "./node_modules/sprotty/lib/features/routing/routing.js");
var views_2 = __webpack_require__(/*! ../features/routing/views */ "./node_modules/sprotty/lib/features/routing/views.js");
var jsx_1 = __webpack_require__(/*! ../lib/jsx */ "./node_modules/sprotty/lib/lib/jsx.js");
var geometry_2 = __webpack_require__(/*! ../utils/geometry */ "./node_modules/sprotty/lib/utils/geometry.js");
/**
 * IView component that turns an SGraph element and its children into a tree of virtual DOM elements.
 */
var SGraphView = /** @class */ (function () {
    function SGraphView() {
    }
    SGraphView.prototype.render = function (model, context) {
        var edgeRouting = this.edgeRouterRegistry.routeAllChildren(model);
        var transform = "scale(".concat(model.zoom, ") translate(").concat(-model.scroll.x, ",").concat(-model.scroll.y, ")");
        return (0, jsx_1.svg)("svg", { "class-sprotty-graph": true },
            (0, jsx_1.svg)("g", { transform: transform }, context.renderChildren(model, { edgeRouting: edgeRouting })));
    };
    __decorate([
        (0, inversify_1.inject)(routing_1.EdgeRouterRegistry),
        __metadata("design:type", routing_1.EdgeRouterRegistry)
    ], SGraphView.prototype, "edgeRouterRegistry", void 0);
    SGraphView = __decorate([
        (0, inversify_1.injectable)()
    ], SGraphView);
    return SGraphView;
}());
exports.SGraphView = SGraphView;
var PolylineEdgeView = /** @class */ (function (_super) {
    __extends(PolylineEdgeView, _super);
    function PolylineEdgeView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PolylineEdgeView.prototype.render = function (edge, context, args) {
        var route = this.edgeRouterRegistry.route(edge, args);
        if (route.length === 0) {
            return this.renderDanglingEdge("Cannot compute route", edge, context);
        }
        if (!this.isVisible(edge, route, context)) {
            if (edge.children.length === 0) {
                return undefined;
            }
            // The children of an edge are not necessarily inside the bounding box of the route,
            // so we need to render a group to ensure the children have a chance to be rendered.
            return (0, jsx_1.svg)("g", null, context.renderChildren(edge, { route: route }));
        }
        return (0, jsx_1.svg)("g", { "class-sprotty-edge": true, "class-mouseover": edge.hoverFeedback },
            this.renderLine(edge, route, context, args),
            this.renderAdditionals(edge, route, context),
            context.renderChildren(edge, { route: route }));
    };
    PolylineEdgeView.prototype.renderLine = function (edge, segments, context, args) {
        var firstPoint = segments[0];
        var path = "M ".concat(firstPoint.x, ",").concat(firstPoint.y);
        for (var i = 1; i < segments.length; i++) {
            var p = segments[i];
            path += " L ".concat(p.x, ",").concat(p.y);
        }
        return (0, jsx_1.svg)("path", { d: path });
    };
    PolylineEdgeView.prototype.renderAdditionals = function (edge, segments, context) {
        // here we need to render the control points?
        return [];
    };
    PolylineEdgeView.prototype.renderDanglingEdge = function (message, edge, context) {
        return (0, jsx_1.svg)("text", { "class-sprotty-edge-dangling": true, title: message }, "?");
    };
    __decorate([
        (0, inversify_1.inject)(routing_1.EdgeRouterRegistry),
        __metadata("design:type", routing_1.EdgeRouterRegistry)
    ], PolylineEdgeView.prototype, "edgeRouterRegistry", void 0);
    PolylineEdgeView = __decorate([
        (0, inversify_1.injectable)()
    ], PolylineEdgeView);
    return PolylineEdgeView;
}(views_2.RoutableView));
exports.PolylineEdgeView = PolylineEdgeView;
/**
 * A `PolylineEdgeView` that renders jumps over intersections.
 *
 * In order to find intersections, `IntersectionFinder` needs to be configured as a `TYPES.IEdgeRoutePostprocessor`
 * so that that intersections are declared as `IntersectingRoutedPoint` in the computed routes.
 *
 * This view only draws correct line jumps for intersections among straight line segments and doesn't work with bezier curves.
 *
 * @see IntersectionFinder
 * @see IntersectingRoutedPoint
 * @see EdgeRouterRegistry
 */
var JumpingPolylineEdgeView = /** @class */ (function (_super) {
    __extends(JumpingPolylineEdgeView, _super);
    function JumpingPolylineEdgeView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.jumpOffsetBefore = 5;
        _this.jumpOffsetAfter = 5;
        _this.skipOffsetBefore = 3;
        _this.skipOffsetAfter = 2;
        return _this;
    }
    JumpingPolylineEdgeView.prototype.renderLine = function (edge, segments, context, args) {
        var path = '';
        for (var i = 0; i < segments.length; i++) {
            var p = segments[i];
            if (i === 0) {
                path = "M ".concat(p.x, ",").concat(p.y);
            }
            if ((0, intersection_finder_1.isIntersectingRoutedPoint)(p)) {
                path += this.intersectionPath(edge, segments, p, args);
            }
            if (i !== 0) {
                path += " L ".concat(p.x, ",").concat(p.y);
            }
        }
        return (0, jsx_1.svg)("path", { d: path });
    };
    /**
     * Returns a path that takes the intersections into account by drawing a line jump or a gap for intersections on that path.
     */
    JumpingPolylineEdgeView.prototype.intersectionPath = function (edge, segments, intersectingPoint, args) {
        if (intersectingPoint.intersections.length < 1) {
            return '';
        }
        var segment = this.getLineSegment(edge, intersectingPoint.intersections[0], args, segments);
        var intersections = this.getIntersectionsSortedBySegmentDirection(segment, intersectingPoint);
        var path = '';
        for (var _i = 0, intersections_1 = intersections; _i < intersections_1.length; _i++) {
            var intersection = intersections_1[_i];
            var otherLineSegment = this.getOtherLineSegment(edge, intersection, args);
            if (otherLineSegment === undefined) {
                continue;
            }
            var currentLineSegment = this.getLineSegment(edge, intersection, args, segments);
            var intersectionPoint = intersection.intersectionPoint;
            if (this.shouldDrawLineJumpOnIntersection(currentLineSegment, otherLineSegment)) {
                path += this.createJumpPath(intersectionPoint, currentLineSegment);
            }
            else if (this.shouldDrawLineGapOnIntersection(currentLineSegment, otherLineSegment)) {
                path += this.createGapPath(intersectionPoint, currentLineSegment);
            }
        }
        return path;
    };
    /**
     * Returns the intersections sorted by the direction of the `lineSegment`.
     *
     * The coordinate system goes from left to right and top to bottom.
     * Thus, x increases to the right and y increases downwards.
     *
     * We need to draw the intersections in the order of the direction of the line segment.
     * To draw a line pointing north, we need to order intersections by Y in a descending order.
     * To draw a line pointing south, we need to order intersections by Y in an ascending order.
     */
    JumpingPolylineEdgeView.prototype.getIntersectionsSortedBySegmentDirection = function (lineSegment, intersectingPoint) {
        switch (lineSegment.direction) {
            case 'north':
            case 'north-east':
                return intersectingPoint.intersections.sort(intersection_finder_1.BY_X_THEN_DESCENDING_Y);
            case 'south':
            case 'south-east':
            case 'east':
                return intersectingPoint.intersections.sort(intersection_finder_1.BY_X_THEN_Y);
            case 'south-west':
            case 'west':
                return intersectingPoint.intersections.sort(intersection_finder_1.BY_DESCENDING_X_THEN_Y);
            case 'north-west':
                return intersectingPoint.intersections.sort(intersection_finder_1.BY_DESCENDING_X_THEN_DESCENDING_Y);
        }
    };
    /**
     * Whether or not to draw a line jump on an intersection for the `currentLineSegment`.
     * This should usually be inverse of `shouldDrawLineGapOnIntersection()`.
     */
    JumpingPolylineEdgeView.prototype.shouldDrawLineJumpOnIntersection = function (currentLineSegment, otherLineSegment) {
        return Math.abs(currentLineSegment.slopeOrMax) < Math.abs(otherLineSegment.slopeOrMax);
    };
    /**
     * Whether or not to draw a line gap on an intersection for the `currentLineSegment`.
     * This should usually be inverse of `shouldDrawLineJumpOnIntersection()`.
     */
    JumpingPolylineEdgeView.prototype.shouldDrawLineGapOnIntersection = function (currentLineSegment, otherLineSegment) {
        return !this.shouldDrawLineJumpOnIntersection(currentLineSegment, otherLineSegment);
    };
    JumpingPolylineEdgeView.prototype.getLineSegment = function (edge, intersection, args, segments) {
        var route = segments ? segments : this.edgeRouterRegistry.route(edge, args);
        var index = intersection.routable1 === edge.id ? intersection.segmentIndex1 : intersection.segmentIndex2;
        return new geometry_2.PointToPointLine(route[index], route[index + 1]);
    };
    JumpingPolylineEdgeView.prototype.getOtherLineSegment = function (currentEdge, intersection, args) {
        var otherEdgeId = intersection.routable1 === currentEdge.id ? intersection.routable2 : intersection.routable1;
        var otherEdge = currentEdge.index.getById(otherEdgeId);
        if (!(otherEdge instanceof model_2.SRoutableElement)) {
            return undefined;
        }
        return this.getLineSegment(otherEdge, intersection, args);
    };
    JumpingPolylineEdgeView.prototype.createJumpPath = function (intersectionPoint, lineSegment) {
        var anchorBefore = geometry_1.Point.shiftTowards(intersectionPoint, lineSegment.p1, this.jumpOffsetBefore);
        var anchorAfter = geometry_1.Point.shiftTowards(intersectionPoint, lineSegment.p2, this.jumpOffsetAfter);
        var rotation = lineSegment.p1.x < lineSegment.p2.x ? 1 : 0;
        return " L ".concat(anchorBefore.x, ",").concat(anchorBefore.y, " A 1,1 0,0 ").concat(rotation, " ").concat(anchorAfter.x, ",").concat(anchorAfter.y);
    };
    JumpingPolylineEdgeView.prototype.createGapPath = function (intersectionPoint, lineSegment) {
        var offsetBefore;
        var offsetAfter;
        if (intersectionPoint.y < lineSegment.p1.y) {
            offsetBefore = -this.skipOffsetBefore;
            offsetAfter = this.jumpOffsetAfter + this.skipOffsetAfter;
        }
        else {
            offsetBefore = this.jumpOffsetBefore + this.skipOffsetAfter;
            offsetAfter = -this.skipOffsetBefore;
        }
        var anchorBefore = geometry_1.Point.shiftTowards(intersectionPoint, lineSegment.p1, offsetBefore);
        var anchorAfter = geometry_1.Point.shiftTowards(intersectionPoint, lineSegment.p2, offsetAfter);
        return " L ".concat(anchorBefore.x, ",").concat(anchorBefore.y, " M ").concat(anchorAfter.x, ",").concat(anchorAfter.y);
    };
    JumpingPolylineEdgeView = __decorate([
        (0, inversify_1.injectable)()
    ], JumpingPolylineEdgeView);
    return JumpingPolylineEdgeView;
}(PolylineEdgeView));
exports.JumpingPolylineEdgeView = JumpingPolylineEdgeView;
/**
 * A `PolylineEdgeView` that renders gaps on intersections.
 *
 * In order to find intersections, `IntersectionFinder` needs to be configured as a `TYPES.IEdgeRoutePostprocessor`
 * so that that intersections are declared as `IntersectingRoutedPoint` in the computed routes.
 *
 * This view only draws correct gaps for intersections among straight line segments and doesn't work with bezier curves.
 *
 * @see IntersectionFinder
 * @see IntersectingRoutedPoint
 * @see EdgeRouterRegistry
 */
var PolylineEdgeViewWithGapsOnIntersections = /** @class */ (function (_super) {
    __extends(PolylineEdgeViewWithGapsOnIntersections, _super);
    function PolylineEdgeViewWithGapsOnIntersections() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.skipOffsetBefore = 3;
        _this.skipOffsetAfter = 3;
        return _this;
    }
    PolylineEdgeViewWithGapsOnIntersections.prototype.shouldDrawLineJumpOnIntersection = function (currentLineSegment, otherLineSegment) {
        return false;
    };
    PolylineEdgeViewWithGapsOnIntersections.prototype.shouldDrawLineGapOnIntersection = function (currentLineSegment, otherLineSegment) {
        return Math.abs(currentLineSegment.slopeOrMax) >= Math.abs(otherLineSegment.slopeOrMax);
    };
    PolylineEdgeViewWithGapsOnIntersections.prototype.createGapPath = function (intersectionPoint, lineSegment) {
        var anchorBefore = geometry_1.Point.shiftTowards(intersectionPoint, lineSegment.p1, this.skipOffsetBefore);
        var anchorAfter = geometry_1.Point.shiftTowards(intersectionPoint, lineSegment.p2, this.skipOffsetAfter);
        return " L ".concat(anchorBefore.x, ",").concat(anchorBefore.y, " M ").concat(anchorAfter.x, ",").concat(anchorAfter.y);
    };
    PolylineEdgeViewWithGapsOnIntersections = __decorate([
        (0, inversify_1.injectable)()
    ], PolylineEdgeViewWithGapsOnIntersections);
    return PolylineEdgeViewWithGapsOnIntersections;
}(JumpingPolylineEdgeView));
exports.PolylineEdgeViewWithGapsOnIntersections = PolylineEdgeViewWithGapsOnIntersections;
var BezierCurveEdgeView = /** @class */ (function (_super) {
    __extends(BezierCurveEdgeView, _super);
    function BezierCurveEdgeView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BezierCurveEdgeView.prototype.render = function (edge, context, args) {
        var route = this.edgeRouterRegistry.route(edge, args);
        if (route.length === 0) {
            return this.renderDanglingEdge("Cannot compute route", edge, context);
        }
        if (!this.isVisible(edge, route, context)) {
            if (edge.children.length === 0) {
                return undefined;
            }
            // The children of an edge are not necessarily inside the bounding box of the route,
            // so we need to render a group to ensure the children have a chance to be rendered.
            return (0, jsx_1.svg)("g", null, context.renderChildren(edge, { route: route }));
        }
        return (0, jsx_1.svg)("g", { "class-sprotty-edge": true, "class-mouseover": edge.hoverFeedback },
            this.renderLine(edge, route, context, args),
            this.renderAdditionals(edge, route, context),
            context.renderChildren(edge, { route: route }));
    };
    BezierCurveEdgeView.prototype.renderLine = function (edge, segments, context, args) {
        /**
         * Example for two splines:
         * SVG:
         * <path d="M0,300 C0,150 300,150 300,300 S600,450 600,300" />
         *
         * Segments input layout:
         * routingPoints[0] = source;
         * routingPoints[1] = controlForSource;
         * routingPoints[2] = controlForSegment1;
         * routingPoints[3] = segment;
         * routingPoints[4] = controlForSegment2;
         * routingPoints[5] = controlForTarget;
         * routingPoints[6] = target;
         */
        var path = '';
        if (segments.length >= 4) {
            path += this.buildMainSegment(segments);
            var pointsLeft = segments.length - 4;
            if (pointsLeft > 0 && pointsLeft % 3 === 0) {
                for (var i = 4; i < segments.length; i += 3) {
                    path += this.addSpline(segments, i);
                }
            }
        }
        return (0, jsx_1.svg)("path", { d: path });
    };
    BezierCurveEdgeView.prototype.buildMainSegment = function (segments) {
        var s = segments[0];
        var h1 = segments[1];
        var h2 = segments[2];
        var t = segments[3];
        return "M".concat(s.x, ",").concat(s.y, " C").concat(h1.x, ",").concat(h1.y, " ").concat(h2.x, ",").concat(h2.y, " ").concat(t.x, ",").concat(t.y);
    };
    BezierCurveEdgeView.prototype.addSpline = function (segments, index) {
        // We have two controls for each junction, but SVG does not therefore index is jumped over
        var c = segments[index + 1];
        var p = segments[index + 2];
        return " S".concat(c.x, ",").concat(c.y, " ").concat(p.x, ",").concat(p.y);
    };
    BezierCurveEdgeView.prototype.renderAdditionals = function (edge, segments, context) {
        return [];
    };
    BezierCurveEdgeView.prototype.renderDanglingEdge = function (message, edge, context) {
        return (0, jsx_1.svg)("text", { "class-sprotty-edge-dangling": true, title: message }, "?");
    };
    __decorate([
        (0, inversify_1.inject)(routing_1.EdgeRouterRegistry),
        __metadata("design:type", routing_1.EdgeRouterRegistry)
    ], BezierCurveEdgeView.prototype, "edgeRouterRegistry", void 0);
    BezierCurveEdgeView = __decorate([
        (0, inversify_1.injectable)()
    ], BezierCurveEdgeView);
    return BezierCurveEdgeView;
}(views_2.RoutableView));
exports.BezierCurveEdgeView = BezierCurveEdgeView;
var SRoutingHandleView = /** @class */ (function () {
    function SRoutingHandleView() {
        this.minimalPointDistance = 10;
    }
    SRoutingHandleView.prototype.render = function (handle, context, args) {
        if (args && args.route) {
            if (handle.parent instanceof model_2.SRoutableElement) {
                var router = this.edgeRouterRegistry.get(handle.parent.routerKind);
                var theRoute = args.route === undefined ? this.edgeRouterRegistry.route(handle.parent, args) : args.route;
                var position = router.getHandlePosition(handle.parent, theRoute, handle);
                if (position !== undefined) {
                    var node = (0, jsx_1.svg)("circle", { "class-sprotty-routing-handle": true, "class-selected": handle.selected, "class-mouseover": handle.hoverFeedback, cx: position.x, cy: position.y, r: this.getRadius() });
                    (0, vnode_utils_1.setAttr)(node, 'data-kind', handle.kind);
                    return node;
                }
            }
        }
        // Fallback: Create an empty group
        return (0, jsx_1.svg)("g", null);
    };
    SRoutingHandleView.prototype.getRadius = function () {
        return 7;
    };
    __decorate([
        (0, inversify_1.inject)(routing_1.EdgeRouterRegistry),
        __metadata("design:type", routing_1.EdgeRouterRegistry)
    ], SRoutingHandleView.prototype, "edgeRouterRegistry", void 0);
    SRoutingHandleView = __decorate([
        (0, inversify_1.injectable)()
    ], SRoutingHandleView);
    return SRoutingHandleView;
}());
exports.SRoutingHandleView = SRoutingHandleView;
var SLabelView = /** @class */ (function (_super) {
    __extends(SLabelView, _super);
    function SLabelView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SLabelView.prototype.render = function (label, context) {
        if (!(0, model_1.isEdgeLayoutable)(label) && !this.isVisible(label, context)) {
            return undefined;
        }
        var vnode = (0, jsx_1.svg)("text", { "class-sprotty-label": true }, label.text);
        var subType = (0, model_utils_1.getSubType)(label);
        if (subType) {
            (0, vnode_utils_1.setAttr)(vnode, 'class', subType);
        }
        return vnode;
    };
    SLabelView = __decorate([
        (0, inversify_1.injectable)()
    ], SLabelView);
    return SLabelView;
}(views_1.ShapeView));
exports.SLabelView = SLabelView;
var SCompartmentView = /** @class */ (function () {
    function SCompartmentView() {
    }
    SCompartmentView.prototype.render = function (compartment, context, args) {
        var translate = "translate(".concat(compartment.bounds.x, ", ").concat(compartment.bounds.y, ")");
        var vnode = (0, jsx_1.svg)("g", { transform: translate, "class-sprotty-comp": "{true}" }, context.renderChildren(compartment));
        var subType = (0, model_utils_1.getSubType)(compartment);
        if (subType)
            (0, vnode_utils_1.setAttr)(vnode, 'class', subType);
        return vnode;
    };
    SCompartmentView = __decorate([
        (0, inversify_1.injectable)()
    ], SCompartmentView);
    return SCompartmentView;
}());
exports.SCompartmentView = SCompartmentView;
var SBezierCreateHandleView = /** @class */ (function (_super) {
    __extends(SBezierCreateHandleView, _super);
    function SBezierCreateHandleView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SBezierCreateHandleView.prototype.render = function (handle, context, args) {
        if (args) {
            var theRoute = args.route;
            if (theRoute && handle.parent instanceof model_2.SRoutableElement) {
                var router = this.edgeRouterRegistry.get(handle.parent.routerKind);
                var position = router.getHandlePosition(handle.parent, theRoute, handle);
                if (position !== undefined) {
                    var translation = "translate(" + position.x + ", " + position.y + ")";
                    var textOffsetX = -5.5;
                    var textOffsetY = 5.5;
                    var text = (handle.kind === "bezier-add") ? "+" : "-";
                    var node = (0, jsx_1.svg)("g", { transform: translation, "class-sprotty-routing-handle": true, "class-selected": handle.selected, "class-mouseover": handle.hoverFeedback },
                        (0, jsx_1.svg)("circle", { r: this.getRadius() }),
                        (0, jsx_1.svg)("text", { x: textOffsetX, y: textOffsetY, "attrs-text-align": "middle", "style-font-family": "monospace", "style-pointer-events": "none", "style-fill": "white" }, text));
                    (0, vnode_utils_1.setAttr)(node, 'data-kind', handle.kind);
                    return node;
                }
            }
        }
        // Fallback: Create an empty group
        return (0, jsx_1.svg)("g", null);
    };
    SBezierCreateHandleView = __decorate([
        (0, inversify_1.injectable)()
    ], SBezierCreateHandleView);
    return SBezierCreateHandleView;
}(SRoutingHandleView));
exports.SBezierCreateHandleView = SBezierCreateHandleView;
var SBezierControlHandleView = /** @class */ (function (_super) {
    __extends(SBezierControlHandleView, _super);
    function SBezierControlHandleView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SBezierControlHandleView.prototype.render = function (handle, context, args) {
        if (args) {
            var theRoute = args.route;
            if (theRoute && handle.parent instanceof model_2.SRoutableElement) {
                var router = this.edgeRouterRegistry.get(handle.parent.routerKind);
                var position = router.getHandlePosition(handle.parent, theRoute, handle);
                if (position !== undefined) {
                    var pathEndPos = void 0;
                    for (var i = 0; i < theRoute.length; i++) {
                        var elem = theRoute[i];
                        if (elem.kind === position.kind && elem.pointIndex === position.pointIndex) {
                            if (handle.kind === 'bezier-control-before') {
                                pathEndPos = theRoute[i + 1];
                            }
                            else {
                                pathEndPos = theRoute[i - 1];
                            }
                            break;
                        }
                    }
                    var node = void 0;
                    if (pathEndPos) {
                        var coords = "M ".concat(position.x, ", ").concat(position.y, " L ").concat(pathEndPos.x, ", ").concat(pathEndPos.y);
                        node =
                            (0, jsx_1.svg)("g", { "class-sprotty-routing-handle": true, "class-selected": handle.selected, "class-mouseover": handle.hoverFeedback },
                                (0, jsx_1.svg)("path", { d: coords, stroke: "grey", "style-stroke-width": "2px" }),
                                (0, jsx_1.svg)("circle", { cx: position.x, cy: position.y, r: this.getRadius() }));
                    }
                    else {
                        node = (0, jsx_1.svg)("circle", { "class-sprotty-routing-handle": true, "class-selected": handle.selected, "class-mouseover": handle.hoverFeedback, cx: position.x, cy: position.y, r: this.getRadius() });
                    }
                    (0, vnode_utils_1.setAttr)(node, 'data-kind', handle.kind);
                    return node;
                }
            }
        }
        // Fallback: Create an empty group
        return (0, jsx_1.svg)("g", null);
    };
    SBezierControlHandleView = __decorate([
        (0, inversify_1.injectable)()
    ], SBezierControlHandleView);
    return SBezierControlHandleView;
}(SRoutingHandleView));
exports.SBezierControlHandleView = SBezierControlHandleView;


/***/ }),

/***/ "./node_modules/sprotty/lib/index.js":
/*!*******************************************!*\
  !*** ./node_modules/sprotty/lib/index.js ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.modelSourceModule = exports.zorderModule = exports.viewportModule = exports.updateModule = exports.undoRedoModule = exports.selectModule = exports.routingModule = exports.openModule = exports.moveModule = exports.hoverModule = exports.fadeModule = exports.exportModule = exports.expandModule = exports.edgeLayoutModule = exports.edgeIntersectionModule = exports.decorationModule = exports.contextMenuModule = exports.commandPaletteModule = exports.buttonModule = exports.boundsModule = exports.graphModule = exports.defaultModule = void 0;
// ------------------ Base ------------------
__exportStar(__webpack_require__(/*! ./base/actions/action */ "./node_modules/sprotty/lib/base/actions/action.js"), exports);
__exportStar(__webpack_require__(/*! ./base/actions/action-dispatcher */ "./node_modules/sprotty/lib/base/actions/action-dispatcher.js"), exports);
__exportStar(__webpack_require__(/*! ./base/actions/action-handler */ "./node_modules/sprotty/lib/base/actions/action-handler.js"), exports);
__exportStar(__webpack_require__(/*! ./base/actions/diagram-locker */ "./node_modules/sprotty/lib/base/actions/diagram-locker.js"), exports);
__exportStar(__webpack_require__(/*! ./base/animations/animation-frame-syncer */ "./node_modules/sprotty/lib/base/animations/animation-frame-syncer.js"), exports);
__exportStar(__webpack_require__(/*! ./base/animations/animation */ "./node_modules/sprotty/lib/base/animations/animation.js"), exports);
__exportStar(__webpack_require__(/*! ./base/animations/easing */ "./node_modules/sprotty/lib/base/animations/easing.js"), exports);
__exportStar(__webpack_require__(/*! ./base/commands/command */ "./node_modules/sprotty/lib/base/commands/command.js"), exports);
__exportStar(__webpack_require__(/*! ./base/commands/command-registration */ "./node_modules/sprotty/lib/base/commands/command-registration.js"), exports);
__exportStar(__webpack_require__(/*! ./base/commands/command-stack-options */ "./node_modules/sprotty/lib/base/commands/command-stack-options.js"), exports);
__exportStar(__webpack_require__(/*! ./base/commands/command-stack */ "./node_modules/sprotty/lib/base/commands/command-stack.js"), exports);
__exportStar(__webpack_require__(/*! ./base/features/initialize-canvas */ "./node_modules/sprotty/lib/base/features/initialize-canvas.js"), exports);
__exportStar(__webpack_require__(/*! ./base/features/set-model */ "./node_modules/sprotty/lib/base/features/set-model.js"), exports);
__exportStar(__webpack_require__(/*! ./base/model/smodel-extension */ "./node_modules/sprotty/lib/base/model/smodel-extension.js"), exports);
__exportStar(__webpack_require__(/*! ./base/model/smodel-factory */ "./node_modules/sprotty/lib/base/model/smodel-factory.js"), exports);
__exportStar(__webpack_require__(/*! ./base/model/smodel-utils */ "./node_modules/sprotty/lib/base/model/smodel-utils.js"), exports);
__exportStar(__webpack_require__(/*! ./base/model/smodel */ "./node_modules/sprotty/lib/base/model/smodel.js"), exports);
__exportStar(__webpack_require__(/*! ./base/tool-manager/tool-manager */ "./node_modules/sprotty/lib/base/tool-manager/tool-manager.js"), exports);
__exportStar(__webpack_require__(/*! ./base/tool-manager/tool */ "./node_modules/sprotty/lib/base/tool-manager/tool.js"), exports);
__exportStar(__webpack_require__(/*! ./base/ui-extensions/ui-extension-registry */ "./node_modules/sprotty/lib/base/ui-extensions/ui-extension-registry.js"), exports);
__exportStar(__webpack_require__(/*! ./base/ui-extensions/ui-extension */ "./node_modules/sprotty/lib/base/ui-extensions/ui-extension.js"), exports);
__exportStar(__webpack_require__(/*! ./base/views/key-tool */ "./node_modules/sprotty/lib/base/views/key-tool.js"), exports);
__exportStar(__webpack_require__(/*! ./base/views/mouse-tool */ "./node_modules/sprotty/lib/base/views/mouse-tool.js"), exports);
__exportStar(__webpack_require__(/*! ./base/views/thunk-view */ "./node_modules/sprotty/lib/base/views/thunk-view.js"), exports);
__exportStar(__webpack_require__(/*! ./base/views/view */ "./node_modules/sprotty/lib/base/views/view.js"), exports);
__exportStar(__webpack_require__(/*! ./base/views/viewer-cache */ "./node_modules/sprotty/lib/base/views/viewer-cache.js"), exports);
__exportStar(__webpack_require__(/*! ./base/views/viewer-options */ "./node_modules/sprotty/lib/base/views/viewer-options.js"), exports);
__exportStar(__webpack_require__(/*! ./base/views/viewer */ "./node_modules/sprotty/lib/base/views/viewer.js"), exports);
__exportStar(__webpack_require__(/*! ./base/views/vnode-postprocessor */ "./node_modules/sprotty/lib/base/views/vnode-postprocessor.js"), exports);
__exportStar(__webpack_require__(/*! ./base/views/vnode-utils */ "./node_modules/sprotty/lib/base/views/vnode-utils.js"), exports);
__exportStar(__webpack_require__(/*! ./base/types */ "./node_modules/sprotty/lib/base/types.js"), exports);
var di_config_1 = __importDefault(__webpack_require__(/*! ./base/di.config */ "./node_modules/sprotty/lib/base/di.config.js"));
exports.defaultModule = di_config_1.default;
// ------------------ Features ------------------
__exportStar(__webpack_require__(/*! ./features/bounds/bounds-manipulation */ "./node_modules/sprotty/lib/features/bounds/bounds-manipulation.js"), exports);
__exportStar(__webpack_require__(/*! ./features/bounds/hidden-bounds-updater */ "./node_modules/sprotty/lib/features/bounds/hidden-bounds-updater.js"), exports);
__exportStar(__webpack_require__(/*! ./features/bounds/layout */ "./node_modules/sprotty/lib/features/bounds/layout.js"), exports);
__exportStar(__webpack_require__(/*! ./features/bounds/model */ "./node_modules/sprotty/lib/features/bounds/model.js"), exports);
__exportStar(__webpack_require__(/*! ./features/bounds/vbox-layout */ "./node_modules/sprotty/lib/features/bounds/vbox-layout.js"), exports);
__exportStar(__webpack_require__(/*! ./features/bounds/hbox-layout */ "./node_modules/sprotty/lib/features/bounds/hbox-layout.js"), exports);
__exportStar(__webpack_require__(/*! ./features/bounds/stack-layout */ "./node_modules/sprotty/lib/features/bounds/stack-layout.js"), exports);
__exportStar(__webpack_require__(/*! ./features/bounds/views */ "./node_modules/sprotty/lib/features/bounds/views.js"), exports);
__exportStar(__webpack_require__(/*! ./features/button/button-handler */ "./node_modules/sprotty/lib/features/button/button-handler.js"), exports);
__exportStar(__webpack_require__(/*! ./features/button/model */ "./node_modules/sprotty/lib/features/button/model.js"), exports);
__exportStar(__webpack_require__(/*! ./features/command-palette/action-providers */ "./node_modules/sprotty/lib/features/command-palette/action-providers.js"), exports);
__exportStar(__webpack_require__(/*! ./features/command-palette/command-palette */ "./node_modules/sprotty/lib/features/command-palette/command-palette.js"), exports);
__exportStar(__webpack_require__(/*! ./features/context-menu/context-menu-service */ "./node_modules/sprotty/lib/features/context-menu/context-menu-service.js"), exports);
__exportStar(__webpack_require__(/*! ./features/context-menu/menu-providers */ "./node_modules/sprotty/lib/features/context-menu/menu-providers.js"), exports);
__exportStar(__webpack_require__(/*! ./features/context-menu/mouse-listener */ "./node_modules/sprotty/lib/features/context-menu/mouse-listener.js"), exports);
__exportStar(__webpack_require__(/*! ./features/edge-layout/di.config */ "./node_modules/sprotty/lib/features/edge-layout/di.config.js"), exports);
__exportStar(__webpack_require__(/*! ./features/edge-layout/edge-layout */ "./node_modules/sprotty/lib/features/edge-layout/edge-layout.js"), exports);
__exportStar(__webpack_require__(/*! ./features/edge-layout/model */ "./node_modules/sprotty/lib/features/edge-layout/model.js"), exports);
__exportStar(__webpack_require__(/*! ./features/edit/create */ "./node_modules/sprotty/lib/features/edit/create.js"), exports);
__exportStar(__webpack_require__(/*! ./features/edit/create-on-drag */ "./node_modules/sprotty/lib/features/edit/create-on-drag.js"), exports);
__exportStar(__webpack_require__(/*! ./features/edit/di.config */ "./node_modules/sprotty/lib/features/edit/di.config.js"), exports);
__exportStar(__webpack_require__(/*! ./features/edit/delete */ "./node_modules/sprotty/lib/features/edit/delete.js"), exports);
__exportStar(__webpack_require__(/*! ./features/edit/edit-label */ "./node_modules/sprotty/lib/features/edit/edit-label.js"), exports);
__exportStar(__webpack_require__(/*! ./features/edit/edit-label-ui */ "./node_modules/sprotty/lib/features/edit/edit-label-ui.js"), exports);
__exportStar(__webpack_require__(/*! ./features/edit/edit-routing */ "./node_modules/sprotty/lib/features/edit/edit-routing.js"), exports);
__exportStar(__webpack_require__(/*! ./features/edit/model */ "./node_modules/sprotty/lib/features/edit/model.js"), exports);
__exportStar(__webpack_require__(/*! ./features/edit/reconnect */ "./node_modules/sprotty/lib/features/edit/reconnect.js"), exports);
__exportStar(__webpack_require__(/*! ./features/expand/expand */ "./node_modules/sprotty/lib/features/expand/expand.js"), exports);
__exportStar(__webpack_require__(/*! ./features/expand/model */ "./node_modules/sprotty/lib/features/expand/model.js"), exports);
__exportStar(__webpack_require__(/*! ./features/expand/views */ "./node_modules/sprotty/lib/features/expand/views.js"), exports);
__exportStar(__webpack_require__(/*! ./features/export/export */ "./node_modules/sprotty/lib/features/export/export.js"), exports);
__exportStar(__webpack_require__(/*! ./features/export/model */ "./node_modules/sprotty/lib/features/export/model.js"), exports);
__exportStar(__webpack_require__(/*! ./features/export/svg-exporter */ "./node_modules/sprotty/lib/features/export/svg-exporter.js"), exports);
__exportStar(__webpack_require__(/*! ./features/fade/fade */ "./node_modules/sprotty/lib/features/fade/fade.js"), exports);
__exportStar(__webpack_require__(/*! ./features/fade/model */ "./node_modules/sprotty/lib/features/fade/model.js"), exports);
__exportStar(__webpack_require__(/*! ./features/hover/hover */ "./node_modules/sprotty/lib/features/hover/hover.js"), exports);
__exportStar(__webpack_require__(/*! ./features/hover/model */ "./node_modules/sprotty/lib/features/hover/model.js"), exports);
__exportStar(__webpack_require__(/*! ./features/decoration/model */ "./node_modules/sprotty/lib/features/decoration/model.js"), exports);
__exportStar(__webpack_require__(/*! ./features/decoration/views */ "./node_modules/sprotty/lib/features/decoration/views.js"), exports);
__exportStar(__webpack_require__(/*! ./features/decoration/decoration-placer */ "./node_modules/sprotty/lib/features/decoration/decoration-placer.js"), exports);
__exportStar(__webpack_require__(/*! ./features/edge-intersection/intersection-finder */ "./node_modules/sprotty/lib/features/edge-intersection/intersection-finder.js"), exports);
__exportStar(__webpack_require__(/*! ./features/edge-intersection/sweepline */ "./node_modules/sprotty/lib/features/edge-intersection/sweepline.js"), exports);
__exportStar(__webpack_require__(/*! ./features/move/model */ "./node_modules/sprotty/lib/features/move/model.js"), exports);
__exportStar(__webpack_require__(/*! ./features/move/move */ "./node_modules/sprotty/lib/features/move/move.js"), exports);
__exportStar(__webpack_require__(/*! ./features/move/snap */ "./node_modules/sprotty/lib/features/move/snap.js"), exports);
__exportStar(__webpack_require__(/*! ./features/nameable/model */ "./node_modules/sprotty/lib/features/nameable/model.js"), exports);
__exportStar(__webpack_require__(/*! ./features/open/open */ "./node_modules/sprotty/lib/features/open/open.js"), exports);
__exportStar(__webpack_require__(/*! ./features/open/model */ "./node_modules/sprotty/lib/features/open/model.js"), exports);
__exportStar(__webpack_require__(/*! ./features/projection/model */ "./node_modules/sprotty/lib/features/projection/model.js"), exports);
__exportStar(__webpack_require__(/*! ./features/projection/views */ "./node_modules/sprotty/lib/features/projection/views.js"), exports);
__exportStar(__webpack_require__(/*! ./features/routing/anchor */ "./node_modules/sprotty/lib/features/routing/anchor.js"), exports);
__exportStar(__webpack_require__(/*! ./features/routing/abstract-edge-router */ "./node_modules/sprotty/lib/features/routing/abstract-edge-router.js"), exports);
__exportStar(__webpack_require__(/*! ./features/routing/bezier-anchors */ "./node_modules/sprotty/lib/features/routing/bezier-anchors.js"), exports);
__exportStar(__webpack_require__(/*! ./features/routing/bezier-edge-router */ "./node_modules/sprotty/lib/features/routing/bezier-edge-router.js"), exports);
__exportStar(__webpack_require__(/*! ./features/routing/manhattan-anchors */ "./node_modules/sprotty/lib/features/routing/manhattan-anchors.js"), exports);
__exportStar(__webpack_require__(/*! ./features/routing/manhattan-edge-router */ "./node_modules/sprotty/lib/features/routing/manhattan-edge-router.js"), exports);
__exportStar(__webpack_require__(/*! ./features/routing/model */ "./node_modules/sprotty/lib/features/routing/model.js"), exports);
__exportStar(__webpack_require__(/*! ./features/routing/polyline-anchors */ "./node_modules/sprotty/lib/features/routing/polyline-anchors.js"), exports);
__exportStar(__webpack_require__(/*! ./features/routing/polyline-edge-router */ "./node_modules/sprotty/lib/features/routing/polyline-edge-router.js"), exports);
__exportStar(__webpack_require__(/*! ./features/routing/routing */ "./node_modules/sprotty/lib/features/routing/routing.js"), exports);
__exportStar(__webpack_require__(/*! ./features/routing/views */ "./node_modules/sprotty/lib/features/routing/views.js"), exports);
__exportStar(__webpack_require__(/*! ./features/select/model */ "./node_modules/sprotty/lib/features/select/model.js"), exports);
__exportStar(__webpack_require__(/*! ./features/select/select */ "./node_modules/sprotty/lib/features/select/select.js"), exports);
__exportStar(__webpack_require__(/*! ./features/undo-redo/undo-redo */ "./node_modules/sprotty/lib/features/undo-redo/undo-redo.js"), exports);
__exportStar(__webpack_require__(/*! ./features/update/model-matching */ "./node_modules/sprotty/lib/features/update/model-matching.js"), exports);
__exportStar(__webpack_require__(/*! ./features/update/update-model */ "./node_modules/sprotty/lib/features/update/update-model.js"), exports);
__exportStar(__webpack_require__(/*! ./features/viewport/center-fit */ "./node_modules/sprotty/lib/features/viewport/center-fit.js"), exports);
__exportStar(__webpack_require__(/*! ./features/viewport/model */ "./node_modules/sprotty/lib/features/viewport/model.js"), exports);
__exportStar(__webpack_require__(/*! ./features/viewport/scroll */ "./node_modules/sprotty/lib/features/viewport/scroll.js"), exports);
__exportStar(__webpack_require__(/*! ./features/viewport/viewport-root */ "./node_modules/sprotty/lib/features/viewport/viewport-root.js"), exports);
__exportStar(__webpack_require__(/*! ./features/viewport/viewport */ "./node_modules/sprotty/lib/features/viewport/viewport.js"), exports);
__exportStar(__webpack_require__(/*! ./features/viewport/zoom */ "./node_modules/sprotty/lib/features/viewport/zoom.js"), exports);
__exportStar(__webpack_require__(/*! ./features/zorder/zorder */ "./node_modules/sprotty/lib/features/zorder/zorder.js"), exports);
var di_config_2 = __importDefault(__webpack_require__(/*! ./graph/di.config */ "./node_modules/sprotty/lib/graph/di.config.js"));
exports.graphModule = di_config_2.default;
var di_config_3 = __importDefault(__webpack_require__(/*! ./features/bounds/di.config */ "./node_modules/sprotty/lib/features/bounds/di.config.js"));
exports.boundsModule = di_config_3.default;
var di_config_4 = __importDefault(__webpack_require__(/*! ./features/button/di.config */ "./node_modules/sprotty/lib/features/button/di.config.js"));
exports.buttonModule = di_config_4.default;
var di_config_5 = __importDefault(__webpack_require__(/*! ./features/command-palette/di.config */ "./node_modules/sprotty/lib/features/command-palette/di.config.js"));
exports.commandPaletteModule = di_config_5.default;
var di_config_6 = __importDefault(__webpack_require__(/*! ./features/context-menu/di.config */ "./node_modules/sprotty/lib/features/context-menu/di.config.js"));
exports.contextMenuModule = di_config_6.default;
var di_config_7 = __importDefault(__webpack_require__(/*! ./features/decoration/di.config */ "./node_modules/sprotty/lib/features/decoration/di.config.js"));
exports.decorationModule = di_config_7.default;
var di_config_8 = __importDefault(__webpack_require__(/*! ./features/edge-intersection/di.config */ "./node_modules/sprotty/lib/features/edge-intersection/di.config.js"));
exports.edgeIntersectionModule = di_config_8.default;
var di_config_9 = __importDefault(__webpack_require__(/*! ./features/edge-layout/di.config */ "./node_modules/sprotty/lib/features/edge-layout/di.config.js"));
exports.edgeLayoutModule = di_config_9.default;
var di_config_10 = __importDefault(__webpack_require__(/*! ./features/expand/di.config */ "./node_modules/sprotty/lib/features/expand/di.config.js"));
exports.expandModule = di_config_10.default;
var di_config_11 = __importDefault(__webpack_require__(/*! ./features/export/di.config */ "./node_modules/sprotty/lib/features/export/di.config.js"));
exports.exportModule = di_config_11.default;
var di_config_12 = __importDefault(__webpack_require__(/*! ./features/fade/di.config */ "./node_modules/sprotty/lib/features/fade/di.config.js"));
exports.fadeModule = di_config_12.default;
var di_config_13 = __importDefault(__webpack_require__(/*! ./features/hover/di.config */ "./node_modules/sprotty/lib/features/hover/di.config.js"));
exports.hoverModule = di_config_13.default;
var di_config_14 = __importDefault(__webpack_require__(/*! ./features/move/di.config */ "./node_modules/sprotty/lib/features/move/di.config.js"));
exports.moveModule = di_config_14.default;
var di_config_15 = __importDefault(__webpack_require__(/*! ./features/open/di.config */ "./node_modules/sprotty/lib/features/open/di.config.js"));
exports.openModule = di_config_15.default;
var di_config_16 = __importDefault(__webpack_require__(/*! ./features/routing/di.config */ "./node_modules/sprotty/lib/features/routing/di.config.js"));
exports.routingModule = di_config_16.default;
var di_config_17 = __importDefault(__webpack_require__(/*! ./features/select/di.config */ "./node_modules/sprotty/lib/features/select/di.config.js"));
exports.selectModule = di_config_17.default;
var di_config_18 = __importDefault(__webpack_require__(/*! ./features/undo-redo/di.config */ "./node_modules/sprotty/lib/features/undo-redo/di.config.js"));
exports.undoRedoModule = di_config_18.default;
var di_config_19 = __importDefault(__webpack_require__(/*! ./features/update/di.config */ "./node_modules/sprotty/lib/features/update/di.config.js"));
exports.updateModule = di_config_19.default;
var di_config_20 = __importDefault(__webpack_require__(/*! ./features/viewport/di.config */ "./node_modules/sprotty/lib/features/viewport/di.config.js"));
exports.viewportModule = di_config_20.default;
var di_config_21 = __importDefault(__webpack_require__(/*! ./features/zorder/di.config */ "./node_modules/sprotty/lib/features/zorder/di.config.js"));
exports.zorderModule = di_config_21.default;
// ------------------ Graph ------------------
__exportStar(__webpack_require__(/*! ./graph/sgraph-factory */ "./node_modules/sprotty/lib/graph/sgraph-factory.js"), exports);
__exportStar(__webpack_require__(/*! ./graph/sgraph */ "./node_modules/sprotty/lib/graph/sgraph.js"), exports);
__exportStar(__webpack_require__(/*! ./graph/views */ "./node_modules/sprotty/lib/graph/views.js"), exports);
// ------------------ Library ------------------
__exportStar(__webpack_require__(/*! ./lib/modules */ "./node_modules/sprotty/lib/lib/modules.js"), exports);
__exportStar(__webpack_require__(/*! ./lib/generic-views */ "./node_modules/sprotty/lib/lib/generic-views.js"), exports);
__exportStar(__webpack_require__(/*! ./lib/html-views */ "./node_modules/sprotty/lib/lib/html-views.js"), exports);
__exportStar(__webpack_require__(/*! ./lib/jsx */ "./node_modules/sprotty/lib/lib/jsx.js"), exports);
__exportStar(__webpack_require__(/*! ./lib/model */ "./node_modules/sprotty/lib/lib/model.js"), exports);
__exportStar(__webpack_require__(/*! ./lib/svg-views */ "./node_modules/sprotty/lib/lib/svg-views.js"), exports);
// ------------------ Model Source ------------------
__exportStar(__webpack_require__(/*! ./model-source/commit-model */ "./node_modules/sprotty/lib/model-source/commit-model.js"), exports);
__exportStar(__webpack_require__(/*! ./model-source/diagram-server */ "./node_modules/sprotty/lib/model-source/diagram-server.js"), exports);
__exportStar(__webpack_require__(/*! ./model-source/local-model-source */ "./node_modules/sprotty/lib/model-source/local-model-source.js"), exports);
__exportStar(__webpack_require__(/*! ./model-source/logging */ "./node_modules/sprotty/lib/model-source/logging.js"), exports);
__exportStar(__webpack_require__(/*! ./model-source/model-source */ "./node_modules/sprotty/lib/model-source/model-source.js"), exports);
__exportStar(__webpack_require__(/*! ./model-source/websocket */ "./node_modules/sprotty/lib/model-source/websocket.js"), exports);
var di_config_22 = __importDefault(__webpack_require__(/*! ./model-source/di.config */ "./node_modules/sprotty/lib/model-source/di.config.js"));
exports.modelSourceModule = di_config_22.default;
// ------------------ Utilities ------------------
__exportStar(__webpack_require__(/*! ./utils/browser */ "./node_modules/sprotty/lib/utils/browser.js"), exports);
__exportStar(__webpack_require__(/*! ./utils/codicon */ "./node_modules/sprotty/lib/utils/codicon.js"), exports);
__exportStar(__webpack_require__(/*! ./utils/color */ "./node_modules/sprotty/lib/utils/color.js"), exports);
__exportStar(__webpack_require__(/*! ./utils/geometry */ "./node_modules/sprotty/lib/utils/geometry.js"), exports);
__exportStar(__webpack_require__(/*! ./utils/inversify */ "./node_modules/sprotty/lib/utils/inversify.js"), exports);
__exportStar(__webpack_require__(/*! ./utils/json */ "./node_modules/sprotty/lib/utils/json.js"), exports);
__exportStar(__webpack_require__(/*! ./utils/logging */ "./node_modules/sprotty/lib/utils/logging.js"), exports);
__exportStar(__webpack_require__(/*! ./utils/registry */ "./node_modules/sprotty/lib/utils/registry.js"), exports);


/***/ }),

/***/ "./node_modules/sprotty/lib/lib/generic-views.js":
/*!*******************************************************!*\
  !*** ./node_modules/sprotty/lib/lib/generic-views.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2020 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ForeignObjectView = exports.PreRenderedView = void 0;
/** @jsx svg */
var jsx_1 = __webpack_require__(/*! ./jsx */ "./node_modules/sprotty/lib/lib/jsx.js");
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var virtualize_1 = __importDefault(__webpack_require__(/*! ./virtualize */ "./node_modules/sprotty/lib/lib/virtualize.js"));
var vnode_utils_1 = __webpack_require__(/*! ../base/views/vnode-utils */ "./node_modules/sprotty/lib/base/views/vnode-utils.js");
var views_1 = __webpack_require__(/*! ../features/bounds/views */ "./node_modules/sprotty/lib/features/bounds/views.js");
var model_1 = __webpack_require__(/*! ./model */ "./node_modules/sprotty/lib/lib/model.js");
var PreRenderedView = /** @class */ (function (_super) {
    __extends(PreRenderedView, _super);
    function PreRenderedView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PreRenderedView.prototype.render = function (model, context) {
        if (model instanceof model_1.ShapedPreRenderedElement && !this.isVisible(model, context)) {
            return undefined;
        }
        var node = (0, virtualize_1.default)(model.code);
        if (node === null)
            return undefined;
        this.correctNamespace(node);
        return node;
    };
    PreRenderedView.prototype.correctNamespace = function (node) {
        if (node.sel === 'svg' || node.sel === 'g')
            (0, vnode_utils_1.setNamespace)(node, 'http://www.w3.org/2000/svg');
    };
    PreRenderedView = __decorate([
        (0, inversify_1.injectable)()
    ], PreRenderedView);
    return PreRenderedView;
}(views_1.ShapeView));
exports.PreRenderedView = PreRenderedView;
/**
 * An SVG `foreignObject` view with a namespace specified by the provided `ForeignObjectElement`.
 * Note that `foreignObject` may not be supported by all browsers or SVG viewers.
 */
var ForeignObjectView = /** @class */ (function () {
    function ForeignObjectView() {
    }
    ForeignObjectView.prototype.render = function (model, context) {
        var foreignObjectContents = (0, virtualize_1.default)(model.code);
        if (foreignObjectContents === null)
            return undefined;
        var node = (0, jsx_1.svg)("g", null,
            (0, jsx_1.svg)("foreignObject", { requiredFeatures: 'http://www.w3.org/TR/SVG11/feature#Extensibility', height: model.bounds.height, width: model.bounds.width, x: 0, y: 0 }, foreignObjectContents),
            context.renderChildren(model));
        (0, vnode_utils_1.setAttr)(node, 'class', model.type);
        (0, vnode_utils_1.setNamespace)(foreignObjectContents, model.namespace);
        return node;
    };
    ForeignObjectView = __decorate([
        (0, inversify_1.injectable)()
    ], ForeignObjectView);
    return ForeignObjectView;
}());
exports.ForeignObjectView = ForeignObjectView;


/***/ }),

/***/ "./node_modules/sprotty/lib/lib/html-views.js":
/*!****************************************************!*\
  !*** ./node_modules/sprotty/lib/lib/html-views.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.HtmlRootView = void 0;
/** @jsx html */
var jsx_1 = __webpack_require__(/*! ./jsx */ "./node_modules/sprotty/lib/lib/jsx.js");
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var vnode_utils_1 = __webpack_require__(/*! ../base/views/vnode-utils */ "./node_modules/sprotty/lib/base/views/vnode-utils.js");
/**
 * View for `HtmlRoot` elements. Typically this is used in hover popup boxes.
 */
var HtmlRootView = /** @class */ (function () {
    function HtmlRootView() {
    }
    HtmlRootView.prototype.render = function (model, context) {
        var root = (0, jsx_1.html)("div", null, context.renderChildren(model));
        for (var _i = 0, _a = model.classes; _i < _a.length; _i++) {
            var c = _a[_i];
            (0, vnode_utils_1.setClass)(root, c, true);
        }
        return root;
    };
    HtmlRootView = __decorate([
        (0, inversify_1.injectable)()
    ], HtmlRootView);
    return HtmlRootView;
}());
exports.HtmlRootView = HtmlRootView;


/***/ }),

/***/ "./node_modules/sprotty/lib/lib/jsx.js":
/*!*********************************************!*\
  !*** ./node_modules/sprotty/lib/lib/jsx.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.JSX = exports.svg = exports.html = void 0;
var snabbdom_1 = __webpack_require__(/*! snabbdom */ "./node_modules/snabbdom/build/index.js");
var modulesNS = ['hook', 'on', 'style', 'class', 'props', 'attrs', 'dataset'];
var SVGNS = 'http://www.w3.org/2000/svg';
function normalizeAttrs(source, defNS, namespace) {
    var data = {};
    if (namespace) {
        data.ns = namespace;
    }
    if (source === null) {
        return data;
    }
    modulesNS.forEach(function (mod) {
        if (source[mod]) {
            data[mod] = source[mod];
        }
    });
    Object.keys(source).forEach(function (key) {
        if (key === 'key' || key === 'classNames' || key === 'selector')
            return;
        var idx = key.indexOf('-');
        if (idx > 0)
            addAttr(key.slice(0, idx), key.slice(idx + 1), source[key]);
        else if (!data[key])
            addAttr(defNS, key, source[key]);
    });
    return data;
    function addAttr(modname, key, val) {
        var mod = data[modname] || (data[modname] = {});
        mod[key] = val;
    }
}
// eslint-disable-next-line @typescript-eslint/naming-convention
function JSX(namespace, defNS) {
    if (defNS === void 0) { defNS = 'props'; }
    return function (tag, attrs) {
        var children = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            children[_i - 2] = arguments[_i];
        }
        return (0, snabbdom_1.jsx)(tag, normalizeAttrs(attrs, defNS, namespace), children);
    };
}
exports.JSX = JSX;
var html = JSX();
exports.html = html;
var svg = JSX(SVGNS, 'attrs');
exports.svg = svg;


/***/ }),

/***/ "./node_modules/sprotty/lib/lib/model.js":
/*!***********************************************!*\
  !*** ./node_modules/sprotty/lib/lib/model.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2020 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ForeignObjectElement = exports.ShapedPreRenderedElement = exports.PreRenderedElement = exports.HtmlRoot = exports.RectangularPort = exports.CircularPort = exports.DiamondNode = exports.RectangularNode = exports.CircularNode = void 0;
var geometry_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/geometry */ "./node_modules/sprotty-protocol/lib/utils/geometry.js");
var smodel_1 = __webpack_require__(/*! ../base/model/smodel */ "./node_modules/sprotty/lib/base/model/smodel.js");
var model_1 = __webpack_require__(/*! ../features/bounds/model */ "./node_modules/sprotty/lib/features/bounds/model.js");
var model_2 = __webpack_require__(/*! ../features/move/model */ "./node_modules/sprotty/lib/features/move/model.js");
var model_3 = __webpack_require__(/*! ../features/select/model */ "./node_modules/sprotty/lib/features/select/model.js");
var sgraph_1 = __webpack_require__(/*! ../graph/sgraph */ "./node_modules/sprotty/lib/graph/sgraph.js");
var anchor_1 = __webpack_require__(/*! ../features/routing/anchor */ "./node_modules/sprotty/lib/features/routing/anchor.js");
/**
 * A node that is represented by a circle.
 */
var CircularNode = /** @class */ (function (_super) {
    __extends(CircularNode, _super);
    function CircularNode() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(CircularNode.prototype, "anchorKind", {
        get: function () {
            return anchor_1.ELLIPTIC_ANCHOR_KIND;
        },
        enumerable: false,
        configurable: true
    });
    return CircularNode;
}(sgraph_1.SNode));
exports.CircularNode = CircularNode;
/**
 * A node that is represented by a rectangle.
 */
var RectangularNode = /** @class */ (function (_super) {
    __extends(RectangularNode, _super);
    function RectangularNode() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(RectangularNode.prototype, "anchorKind", {
        get: function () {
            return anchor_1.RECTANGULAR_ANCHOR_KIND;
        },
        enumerable: false,
        configurable: true
    });
    return RectangularNode;
}(sgraph_1.SNode));
exports.RectangularNode = RectangularNode;
/**
 * A node that is represented by a diamond.
 */
var DiamondNode = /** @class */ (function (_super) {
    __extends(DiamondNode, _super);
    function DiamondNode() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DiamondNode.prototype, "anchorKind", {
        get: function () {
            return anchor_1.DIAMOND_ANCHOR_KIND;
        },
        enumerable: false,
        configurable: true
    });
    return DiamondNode;
}(sgraph_1.SNode));
exports.DiamondNode = DiamondNode;
/**
 * A port that is represented by a circle.
 */
var CircularPort = /** @class */ (function (_super) {
    __extends(CircularPort, _super);
    function CircularPort() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(CircularPort.prototype, "anchorKind", {
        get: function () {
            return anchor_1.ELLIPTIC_ANCHOR_KIND;
        },
        enumerable: false,
        configurable: true
    });
    return CircularPort;
}(sgraph_1.SPort));
exports.CircularPort = CircularPort;
/**
 * A port that is represented by a rectangle.
 */
var RectangularPort = /** @class */ (function (_super) {
    __extends(RectangularPort, _super);
    function RectangularPort() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(RectangularPort.prototype, "anchorKind", {
        get: function () {
            return anchor_1.RECTANGULAR_ANCHOR_KIND;
        },
        enumerable: false,
        configurable: true
    });
    return RectangularPort;
}(sgraph_1.SPort));
exports.RectangularPort = RectangularPort;
/**
 * Root model element class for HTML content. Usually this is rendered with a `div` DOM element.
 */
var HtmlRoot = /** @class */ (function (_super) {
    __extends(HtmlRoot, _super);
    function HtmlRoot() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.classes = [];
        return _this;
    }
    return HtmlRoot;
}(smodel_1.SModelRoot));
exports.HtmlRoot = HtmlRoot;
/**
 * Pre-rendered elements contain HTML or SVG code to be transferred to the DOM. This can be useful to
 * render complex figures or to compute the view on the server instead of the client code.
 */
var PreRenderedElement = /** @class */ (function (_super) {
    __extends(PreRenderedElement, _super);
    function PreRenderedElement() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return PreRenderedElement;
}(smodel_1.SChildElement));
exports.PreRenderedElement = PreRenderedElement;
/**
 * Same as PreRenderedElement, but with a position and a size.
 */
var ShapedPreRenderedElement = /** @class */ (function (_super) {
    __extends(ShapedPreRenderedElement, _super);
    function ShapedPreRenderedElement() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.position = geometry_1.Point.ORIGIN;
        _this.size = geometry_1.Dimension.EMPTY;
        _this.selected = false;
        _this.alignment = geometry_1.Point.ORIGIN;
        return _this;
    }
    Object.defineProperty(ShapedPreRenderedElement.prototype, "bounds", {
        get: function () {
            return {
                x: this.position.x,
                y: this.position.y,
                width: this.size.width,
                height: this.size.height
            };
        },
        set: function (newBounds) {
            this.position = {
                x: newBounds.x,
                y: newBounds.y
            };
            this.size = {
                width: newBounds.width,
                height: newBounds.height
            };
        },
        enumerable: false,
        configurable: true
    });
    ShapedPreRenderedElement.DEFAULT_FEATURES = [model_2.moveFeature, model_1.boundsFeature, model_3.selectFeature, model_1.alignFeature];
    return ShapedPreRenderedElement;
}(PreRenderedElement));
exports.ShapedPreRenderedElement = ShapedPreRenderedElement;
/**
 * A `foreignObject` element to be transferred to the DOM within the SVG.
 *
 * This can be useful to to benefit from e.g. HTML rendering features, such as line wrapping, inside of
 * the SVG diagram.  Note that `foreignObject` is not supported by all browsers and SVG viewers may not
 * support rendering the `foreignObject` content.
 *
 * If no dimensions are specified in the schema element, this element will obtain the dimension of
 * its parent to fill the entire available room. Thus, this element requires specified bounds itself
 * or bounds to be available for its parent.
 */
var ForeignObjectElement = /** @class */ (function (_super) {
    __extends(ForeignObjectElement, _super);
    function ForeignObjectElement() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(ForeignObjectElement.prototype, "bounds", {
        get: function () {
            if (geometry_1.Dimension.isValid(this.size)) {
                return {
                    x: this.position.x,
                    y: this.position.y,
                    width: this.size.width,
                    height: this.size.height
                };
            }
            else if ((0, model_1.isBoundsAware)(this.parent)) {
                return {
                    x: this.position.x,
                    y: this.position.y,
                    width: this.parent.bounds.width,
                    height: this.parent.bounds.height
                };
            }
            return geometry_1.Bounds.EMPTY;
        },
        enumerable: false,
        configurable: true
    });
    return ForeignObjectElement;
}(ShapedPreRenderedElement));
exports.ForeignObjectElement = ForeignObjectElement;


/***/ }),

/***/ "./node_modules/sprotty/lib/lib/modules.js":
/*!*************************************************!*\
  !*** ./node_modules/sprotty/lib/lib/modules.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.loadDefaultModules = void 0;
var di_config_1 = __importDefault(__webpack_require__(/*! ../base/di.config */ "./node_modules/sprotty/lib/base/di.config.js"));
var di_config_2 = __importDefault(__webpack_require__(/*! ../model-source/di.config */ "./node_modules/sprotty/lib/model-source/di.config.js"));
var di_config_3 = __importDefault(__webpack_require__(/*! ../features/bounds/di.config */ "./node_modules/sprotty/lib/features/bounds/di.config.js"));
var di_config_4 = __importDefault(__webpack_require__(/*! ../features/button/di.config */ "./node_modules/sprotty/lib/features/button/di.config.js"));
var di_config_5 = __importDefault(__webpack_require__(/*! ../features/command-palette/di.config */ "./node_modules/sprotty/lib/features/command-palette/di.config.js"));
var di_config_6 = __importDefault(__webpack_require__(/*! ../features/context-menu/di.config */ "./node_modules/sprotty/lib/features/context-menu/di.config.js"));
var di_config_7 = __importDefault(__webpack_require__(/*! ../features/decoration/di.config */ "./node_modules/sprotty/lib/features/decoration/di.config.js"));
var di_config_8 = __importDefault(__webpack_require__(/*! ../features/edge-layout/di.config */ "./node_modules/sprotty/lib/features/edge-layout/di.config.js"));
var di_config_9 = __webpack_require__(/*! ../features/edit/di.config */ "./node_modules/sprotty/lib/features/edit/di.config.js");
var di_config_10 = __importDefault(__webpack_require__(/*! ../features/expand/di.config */ "./node_modules/sprotty/lib/features/expand/di.config.js"));
var di_config_11 = __importDefault(__webpack_require__(/*! ../features/export/di.config */ "./node_modules/sprotty/lib/features/export/di.config.js"));
var di_config_12 = __importDefault(__webpack_require__(/*! ../features/fade/di.config */ "./node_modules/sprotty/lib/features/fade/di.config.js"));
var di_config_13 = __importDefault(__webpack_require__(/*! ../features/hover/di.config */ "./node_modules/sprotty/lib/features/hover/di.config.js"));
var di_config_14 = __importDefault(__webpack_require__(/*! ../features/move/di.config */ "./node_modules/sprotty/lib/features/move/di.config.js"));
var di_config_15 = __importDefault(__webpack_require__(/*! ../features/open/di.config */ "./node_modules/sprotty/lib/features/open/di.config.js"));
var di_config_16 = __importDefault(__webpack_require__(/*! ../features/routing/di.config */ "./node_modules/sprotty/lib/features/routing/di.config.js"));
var di_config_17 = __importDefault(__webpack_require__(/*! ../features/select/di.config */ "./node_modules/sprotty/lib/features/select/di.config.js"));
var di_config_18 = __importDefault(__webpack_require__(/*! ../features/undo-redo/di.config */ "./node_modules/sprotty/lib/features/undo-redo/di.config.js"));
var di_config_19 = __importDefault(__webpack_require__(/*! ../features/update/di.config */ "./node_modules/sprotty/lib/features/update/di.config.js"));
var di_config_20 = __importDefault(__webpack_require__(/*! ../features/viewport/di.config */ "./node_modules/sprotty/lib/features/viewport/di.config.js"));
var di_config_21 = __importDefault(__webpack_require__(/*! ../features/zorder/di.config */ "./node_modules/sprotty/lib/features/zorder/di.config.js"));
/**
 * Load the default set of container modules provided by Sprotty.
 */
function loadDefaultModules(container, options) {
    var modules = [
        di_config_1.default, di_config_2.default, di_config_3.default, di_config_4.default,
        di_config_5.default, di_config_6.default, di_config_7.default, di_config_9.edgeEditModule,
        di_config_8.default, di_config_10.default, di_config_11.default, di_config_12.default,
        di_config_13.default, di_config_9.labelEditModule, di_config_9.labelEditUiModule, di_config_14.default,
        di_config_15.default, di_config_16.default, di_config_17.default, di_config_18.default,
        di_config_19.default, di_config_20.default, di_config_21.default
    ];
    if (options && options.exclude) {
        for (var _i = 0, _a = options.exclude; _i < _a.length; _i++) {
            var mod = _a[_i];
            var index = modules.indexOf(mod);
            if (index >= 0)
                modules.splice(index, 1);
        }
    }
    container.load.apply(container, modules);
}
exports.loadDefaultModules = loadDefaultModules;


/***/ }),

/***/ "./node_modules/sprotty/lib/lib/svg-views.js":
/*!***************************************************!*\
  !*** ./node_modules/sprotty/lib/lib/svg-views.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EmptyGroupView = exports.DiamondNodeView = exports.RectangularNodeView = exports.CircularNodeView = exports.SvgViewportView = void 0;
/** @jsx svg */
var jsx_1 = __webpack_require__(/*! ./jsx */ "./node_modules/sprotty/lib/lib/jsx.js");
var sgraph_1 = __webpack_require__(/*! ../graph/sgraph */ "./node_modules/sprotty/lib/graph/sgraph.js");
var views_1 = __webpack_require__(/*! ../features/bounds/views */ "./node_modules/sprotty/lib/features/bounds/views.js");
var geometry_1 = __webpack_require__(/*! ../utils/geometry */ "./node_modules/sprotty/lib/utils/geometry.js");
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var SvgViewportView = /** @class */ (function () {
    function SvgViewportView() {
    }
    SvgViewportView.prototype.render = function (model, context, args) {
        var transform = "scale(".concat(model.zoom, ") translate(").concat(-model.scroll.x, ",").concat(-model.scroll.y, ")");
        return (0, jsx_1.svg)("svg", null,
            (0, jsx_1.svg)("g", { transform: transform }, context.renderChildren(model)));
    };
    SvgViewportView = __decorate([
        (0, inversify_1.injectable)()
    ], SvgViewportView);
    return SvgViewportView;
}());
exports.SvgViewportView = SvgViewportView;
var CircularNodeView = /** @class */ (function (_super) {
    __extends(CircularNodeView, _super);
    function CircularNodeView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CircularNodeView.prototype.render = function (node, context, args) {
        if (!this.isVisible(node, context)) {
            return undefined;
        }
        var radius = this.getRadius(node);
        return (0, jsx_1.svg)("g", null,
            (0, jsx_1.svg)("circle", { "class-sprotty-node": node instanceof sgraph_1.SNode, "class-sprotty-port": node instanceof sgraph_1.SPort, "class-mouseover": node.hoverFeedback, "class-selected": node.selected, r: radius, cx: radius, cy: radius }),
            context.renderChildren(node));
    };
    CircularNodeView.prototype.getRadius = function (node) {
        var d = Math.min(node.size.width, node.size.height);
        return d > 0 ? d / 2 : 0;
    };
    CircularNodeView = __decorate([
        (0, inversify_1.injectable)()
    ], CircularNodeView);
    return CircularNodeView;
}(views_1.ShapeView));
exports.CircularNodeView = CircularNodeView;
var RectangularNodeView = /** @class */ (function (_super) {
    __extends(RectangularNodeView, _super);
    function RectangularNodeView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    RectangularNodeView.prototype.render = function (node, context, args) {
        if (!this.isVisible(node, context)) {
            return undefined;
        }
        return (0, jsx_1.svg)("g", null,
            (0, jsx_1.svg)("rect", { "class-sprotty-node": node instanceof sgraph_1.SNode, "class-sprotty-port": node instanceof sgraph_1.SPort, "class-mouseover": node.hoverFeedback, "class-selected": node.selected, x: "0", y: "0", width: Math.max(node.size.width, 0), height: Math.max(node.size.height, 0) }),
            context.renderChildren(node));
    };
    RectangularNodeView = __decorate([
        (0, inversify_1.injectable)()
    ], RectangularNodeView);
    return RectangularNodeView;
}(views_1.ShapeView));
exports.RectangularNodeView = RectangularNodeView;
var DiamondNodeView = /** @class */ (function (_super) {
    __extends(DiamondNodeView, _super);
    function DiamondNodeView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DiamondNodeView.prototype.render = function (node, context, args) {
        if (!this.isVisible(node, context)) {
            return undefined;
        }
        var diamond = new geometry_1.Diamond({ height: Math.max(node.size.height, 0), width: Math.max(node.size.width, 0), x: 0, y: 0 });
        var points = "".concat(svgStr(diamond.topPoint), " ").concat(svgStr(diamond.rightPoint), " ").concat(svgStr(diamond.bottomPoint), " ").concat(svgStr(diamond.leftPoint));
        return (0, jsx_1.svg)("g", null,
            (0, jsx_1.svg)("polygon", { "class-sprotty-node": node instanceof sgraph_1.SNode, "class-sprotty-port": node instanceof sgraph_1.SPort, "class-mouseover": node.hoverFeedback, "class-selected": node.selected, points: points }),
            context.renderChildren(node));
    };
    DiamondNodeView = __decorate([
        (0, inversify_1.injectable)()
    ], DiamondNodeView);
    return DiamondNodeView;
}(views_1.ShapeView));
exports.DiamondNodeView = DiamondNodeView;
function svgStr(point) {
    return "".concat(point.x, ",").concat(point.y);
}
var EmptyGroupView = /** @class */ (function () {
    function EmptyGroupView() {
    }
    EmptyGroupView.prototype.render = function (model, context) {
        return (0, jsx_1.svg)("g", null);
    };
    EmptyGroupView = __decorate([
        (0, inversify_1.injectable)()
    ], EmptyGroupView);
    return EmptyGroupView;
}());
exports.EmptyGroupView = EmptyGroupView;


/***/ }),

/***/ "./node_modules/sprotty/lib/lib/virtualize.js":
/*!****************************************************!*\
  !*** ./node_modules/sprotty/lib/lib/virtualize.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
var snabbdom_1 = __webpack_require__(/*! snabbdom */ "./node_modules/snabbdom/build/index.js");
function buildVNodeData(attrs) {
    var data = {};
    var addData = function (memo, name) {
        var _a;
        if (name !== 'style' && name !== 'class') {
            var val = unescapeEntities(attrs[name]);
            memo ? memo[name] = val : memo = (_a = {}, _a[name] = val, _a);
        }
        return memo;
    };
    var _attrs = Object.keys(attrs).reduce(addData, null);
    if (_attrs) {
        data.attrs = _attrs;
    }
    var style = parseStyle(attrs);
    if (style) {
        data.style = style;
    }
    var classes = parseClass(attrs);
    if (classes) {
        data.class = classes;
    }
    return data;
}
function parseStyle(attrs) {
    var addStyle = function (memo, styleProp) {
        var _a;
        var res = styleProp.split(':');
        var name = transformName(res[0].trim());
        if (name) {
            var val = res[1].replace('!important', '').trim();
            memo ? memo[name] = val : memo = (_a = {}, _a[name] = val, _a);
        }
        return memo;
    };
    try {
        return attrs.style.split(';').reduce(addStyle, null);
    }
    catch (e) {
        return null;
    }
}
function parseClass(attrs) {
    var addClass = function (memo, className) {
        var _a;
        className = className.trim();
        if (className) {
            memo ? memo[className] = true : memo = (_a = {}, _a[className] = true, _a);
        }
        return memo;
    };
    try {
        return attrs.class.split(' ').reduce(addClass, null);
    }
    catch (e) {
        return null;
    }
}
function transformName(name) {
    // Replace -a with A to help camel case style property names.
    name = name.replace(/-(\w)/g, function _replace($1, $2) {
        return $2.toUpperCase();
    });
    // Handle properties that start with a -.
    var firstChar = name.charAt(0).toLowerCase();
    return "".concat(firstChar).concat(name.substring(1));
}
// Regex for matching HTML entities.
var entityRegex = new RegExp('&[a-z0-9#]+;', 'gi');
// Element for setting innerHTML for transforming entities.
var el = null;
function unescapeEntities(text) {
    // Create the element using the context if it doesn't exist.
    if (!el) {
        el = document.createElement('div');
    }
    return text.replace(entityRegex, function (entity) {
        if (el === null)
            return '';
        el.innerHTML = entity;
        return el.textContent === null ? '' : el.textContent;
    });
}
function recurse(doc, func) {
    var node = doc;
    var parent = null;
    var stack = [];
    var setChild = function (n) {
        var child = n.firstChild;
        if (child !== null) {
            parent = n;
        }
        node = child;
    };
    func(node, parent);
    setChild(node);
    while (true) {
        while (node) {
            stack.push(node);
            func(node, parent);
            setChild(node);
        }
        var _node = stack.pop();
        node = _node ? _node : null;
        if (!stack.length)
            break;
        parent = stack[stack.length - 1];
        if (node) {
            var sibling = node.nextSibling;
            if (sibling == null) {
                parent = stack[stack.length - 1];
            }
            node = sibling;
        }
    }
}
var vdom = null;
var vnodeMap = new Map();
var delimited = false;
function toVNode(node, parent) {
    var current;
    if (parent !== null) {
        current = vnodeMap.get(parent);
    }
    switch (node === null || node === void 0 ? void 0 : node.nodeType) {
        // element
        case 1: {
            if (current === undefined)
                return;
            current.children = current.children ? current.children : [];
            var children = current.children;
            var attributes = node.attributes;
            var attrs = {};
            for (var i = 0; i < attributes.length; i++) {
                var attr = attributes.item(i);
                if (attr) {
                    attrs[attr.name] = attr.value;
                }
            }
            var vn = (0, snabbdom_1.h)(node.nodeName, buildVNodeData(attrs));
            children.push(vn);
            vnodeMap.set(node, vn);
            break;
        }
        // text
        case 3: {
            var text = node.textContent;
            if (text !== null && current !== undefined) {
                current.children = current.children ? current.children : [];
                var children = current.children;
                var lastData = children.length > 0 ? children[children.length - 1] : null;
                if (!delimited && typeof lastData !== 'string' && lastData !== null && lastData.sel === undefined) {
                    lastData.text = lastData.text + text;
                }
                else {
                    children.push((0, snabbdom_1.vnode)(undefined, undefined, undefined, text, undefined));
                }
                delimited = false;
            }
            break;
        }
        case 8: {
            delimited = true;
            break;
        }
        // document
        case 9: {
            vdom = (0, snabbdom_1.vnode)(undefined, undefined, [], undefined, undefined);
            vnodeMap.set(node, vdom);
            break;
        }
        default:
            break;
    }
}
function stripVNode(vnodes) {
    var children = vnodes === null || vnodes === void 0 ? void 0 : vnodes.children;
    if (typeof children === 'undefined')
        return null;
    if (children.length === 1 && typeof children[0] !== 'string')
        return children[0];
    return null;
}
function virtualizeString(html) {
    var _a, _b;
    var parser = new window.DOMParser();
    if (parser === undefined || html === undefined || html === '')
        return null;
    var doc = parser.parseFromString(html, "application/xml");
    if (((_a = doc === null || doc === void 0 ? void 0 : doc.firstChild) === null || _a === void 0 ? void 0 : _a.nodeName) === 'parsererror') {
        var error = "".concat((_b = doc === null || doc === void 0 ? void 0 : doc.firstChild) === null || _b === void 0 ? void 0 : _b.textContent);
        return (0, snabbdom_1.h)('parsererror', [error]);
    }
    delimited = false;
    vdom = null;
    recurse(doc, toVNode);
    if (vdom === null)
        return null;
    return stripVNode(vdom);
}
exports["default"] = virtualizeString;


/***/ }),

/***/ "./node_modules/sprotty/lib/model-source/commit-model.js":
/*!***************************************************************!*\
  !*** ./node_modules/sprotty/lib/model-source/commit-model.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2019 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CommitModelCommand = exports.CommitModelAction = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var command_1 = __webpack_require__(/*! ../base/commands/command */ "./node_modules/sprotty/lib/base/commands/command.js");
var types_1 = __webpack_require__(/*! ../base/types */ "./node_modules/sprotty/lib/base/types.js");
var model_source_1 = __webpack_require__(/*! ./model-source */ "./node_modules/sprotty/lib/model-source/model-source.js");
var CommitModelAction;
(function (CommitModelAction) {
    CommitModelAction.KIND = 'commitModel';
    function create() {
        return {
            kind: CommitModelAction.KIND
        };
    }
    CommitModelAction.create = create;
})(CommitModelAction = exports.CommitModelAction || (exports.CommitModelAction = {}));
var CommitModelCommand = /** @class */ (function (_super) {
    __extends(CommitModelCommand, _super);
    function CommitModelCommand(action) {
        var _this = _super.call(this) || this;
        _this.action = action;
        return _this;
    }
    CommitModelCommand.prototype.execute = function (context) {
        this.newModel = context.modelFactory.createSchema(context.root);
        return this.doCommit(this.newModel, context.root, true);
    };
    CommitModelCommand.prototype.doCommit = function (model, result, doSetOriginal) {
        var _this = this;
        var commitResult = this.modelSource.commitModel(model);
        if (commitResult instanceof Promise) {
            return commitResult.then(function (originalModel) {
                if (doSetOriginal)
                    _this.originalModel = originalModel;
                return result;
            });
        }
        else {
            if (doSetOriginal)
                this.originalModel = commitResult;
            return result;
        }
    };
    CommitModelCommand.prototype.undo = function (context) {
        return this.doCommit(this.originalModel, context.root, false);
    };
    CommitModelCommand.prototype.redo = function (context) {
        return this.doCommit(this.newModel, context.root, false);
    };
    CommitModelCommand.KIND = CommitModelAction.KIND;
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.ModelSource),
        __metadata("design:type", model_source_1.ModelSource)
    ], CommitModelCommand.prototype, "modelSource", void 0);
    CommitModelCommand = __decorate([
        (0, inversify_1.injectable)(),
        __param(0, (0, inversify_1.inject)(types_1.TYPES.Action)),
        __metadata("design:paramtypes", [Object])
    ], CommitModelCommand);
    return CommitModelCommand;
}(command_1.SystemCommand));
exports.CommitModelCommand = CommitModelCommand;


/***/ }),

/***/ "./node_modules/sprotty/lib/model-source/di.config.js":
/*!************************************************************!*\
  !*** ./node_modules/sprotty/lib/model-source/di.config.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var command_registration_1 = __webpack_require__(/*! ../base/commands/command-registration */ "./node_modules/sprotty/lib/base/commands/command-registration.js");
var types_1 = __webpack_require__(/*! ../base/types */ "./node_modules/sprotty/lib/base/types.js");
var commit_model_1 = __webpack_require__(/*! ./commit-model */ "./node_modules/sprotty/lib/model-source/commit-model.js");
var model_source_1 = __webpack_require__(/*! ./model-source */ "./node_modules/sprotty/lib/model-source/model-source.js");
/**
 * This container module does NOT provide any binding for TYPES.ModelSource because that needs to be
 * done according to the needs of the application. You can choose between a local (LocalModelSource)
 * and a remote (e.g. WebSocketDiagramServer) implementation.
 */
var modelSourceModule = new inversify_1.ContainerModule(function (bind, _unbind, isBound) {
    bind(types_1.TYPES.ModelSourceProvider).toProvider(function (context) {
        return function () {
            return new Promise(function (resolve) {
                resolve(context.container.get(types_1.TYPES.ModelSource));
            });
        };
    });
    (0, command_registration_1.configureCommand)({ bind: bind, isBound: isBound }, commit_model_1.CommitModelCommand);
    bind(types_1.TYPES.IActionHandlerInitializer).toService(types_1.TYPES.ModelSource);
    bind(model_source_1.ComputedBoundsApplicator).toSelf().inSingletonScope();
});
exports["default"] = modelSourceModule;


/***/ }),

/***/ "./node_modules/sprotty/lib/model-source/diagram-server.js":
/*!*****************************************************************!*\
  !*** ./node_modules/sprotty/lib/model-source/diagram-server.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DiagramServer = exports.DiagramServerProxy = exports.ServerStatusAction = exports.isActionMessage = void 0;
var file_saver_1 = __webpack_require__(/*! file-saver */ "./node_modules/file-saver/dist/FileSaver.min.js");
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var sprotty_protocol_1 = __webpack_require__(/*! sprotty-protocol */ "./node_modules/sprotty-protocol/lib/index.js");
var actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "./node_modules/sprotty-protocol/lib/actions.js");
var object_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/object */ "./node_modules/sprotty-protocol/lib/utils/object.js");
var set_model_1 = __webpack_require__(/*! ../base/features/set-model */ "./node_modules/sprotty/lib/base/features/set-model.js");
var types_1 = __webpack_require__(/*! ../base/types */ "./node_modules/sprotty/lib/base/types.js");
var bounds_manipulation_1 = __webpack_require__(/*! ../features/bounds/bounds-manipulation */ "./node_modules/sprotty/lib/features/bounds/bounds-manipulation.js");
var svg_exporter_1 = __webpack_require__(/*! ../features/export/svg-exporter */ "./node_modules/sprotty/lib/features/export/svg-exporter.js");
var update_model_1 = __webpack_require__(/*! ../features/update/update-model */ "./node_modules/sprotty/lib/features/update/update-model.js");
var model_source_1 = __webpack_require__(/*! ./model-source */ "./node_modules/sprotty/lib/model-source/model-source.js");
/**
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
function isActionMessage(object) {
    return (0, object_1.hasOwnProperty)(object, 'action');
}
exports.isActionMessage = isActionMessage;
/**
 * Sent by the external server when to signal a state change.
 */
var ServerStatusAction = /** @class */ (function () {
    function ServerStatusAction() {
        this.kind = ServerStatusAction.KIND;
    }
    ServerStatusAction.KIND = 'serverStatus';
    return ServerStatusAction;
}());
exports.ServerStatusAction = ServerStatusAction;
var receivedFromServerProperty = '__receivedFromServer';
/**
 * A ModelSource that communicates with an external model provider, e.g.
 * a model editor.
 *
 * This class defines which actions are sent to and received from the
 * external model source.
 */
var DiagramServerProxy = /** @class */ (function (_super) {
    __extends(DiagramServerProxy, _super);
    function DiagramServerProxy() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.currentRoot = {
            type: 'NONE',
            id: 'ROOT'
        };
        return _this;
    }
    DiagramServerProxy.prototype.initialize = function (registry) {
        _super.prototype.initialize.call(this, registry);
        // Register this model source
        registry.register(actions_1.ComputedBoundsAction.KIND, this);
        registry.register(bounds_manipulation_1.RequestBoundsCommand.KIND, this);
        registry.register(actions_1.RequestPopupModelAction.KIND, this);
        registry.register(actions_1.CollapseExpandAction.KIND, this);
        registry.register(actions_1.CollapseExpandAllAction.KIND, this);
        registry.register(sprotty_protocol_1.OpenAction.KIND, this);
        registry.register(ServerStatusAction.KIND, this);
        if (!this.clientId)
            this.clientId = this.viewerOptions.baseDiv;
    };
    DiagramServerProxy.prototype.handle = function (action) {
        var forwardToServer = this.handleLocally(action);
        if (forwardToServer)
            this.forwardToServer(action);
    };
    DiagramServerProxy.prototype.forwardToServer = function (action) {
        var message = {
            clientId: this.clientId,
            action: action
        };
        this.logger.log(this, 'sending', message);
        this.sendMessage(message);
    };
    DiagramServerProxy.prototype.messageReceived = function (data) {
        var _this = this;
        var object = typeof (data) === 'string' ? JSON.parse(data) : data;
        if (isActionMessage(object) && object.action) {
            if (!object.clientId || object.clientId === this.clientId) {
                object.action[receivedFromServerProperty] = true;
                this.logger.log(this, 'receiving', object);
                this.actionDispatcher.dispatch(object.action).then(function () {
                    _this.storeNewModel(object.action);
                });
            }
        }
        else {
            this.logger.error(this, 'received data is not an action message', object);
        }
    };
    /**
     * Check whether the given action should be handled locally. Returns true if the action should
     * still be sent to the server, and false if it's only handled locally.
     */
    DiagramServerProxy.prototype.handleLocally = function (action) {
        this.storeNewModel(action);
        switch (action.kind) {
            case actions_1.ComputedBoundsAction.KIND:
                return this.handleComputedBounds(action);
            case actions_1.RequestModelAction.KIND:
                return this.handleRequestModel(action);
            case bounds_manipulation_1.RequestBoundsCommand.KIND:
                return false;
            case svg_exporter_1.ExportSvgAction.KIND:
                return this.handleExportSvgAction(action);
            case ServerStatusAction.KIND:
                return this.handleServerStateAction(action);
        }
        return !action[receivedFromServerProperty];
    };
    /**
     * Put the new model contained in the given action into the model storage, if there is any.
     */
    DiagramServerProxy.prototype.storeNewModel = function (action) {
        if (action.kind === set_model_1.SetModelCommand.KIND
            || action.kind === update_model_1.UpdateModelCommand.KIND
            || action.kind === bounds_manipulation_1.RequestBoundsCommand.KIND) {
            var newRoot = action.newRoot;
            if (newRoot) {
                this.currentRoot = newRoot;
                if (action.kind === set_model_1.SetModelCommand.KIND || action.kind === update_model_1.UpdateModelCommand.KIND) {
                    this.lastSubmittedModelType = newRoot.type;
                }
            }
        }
    };
    DiagramServerProxy.prototype.handleRequestModel = function (action) {
        var newOptions = __assign({ needsClientLayout: this.viewerOptions.needsClientLayout, needsServerLayout: this.viewerOptions.needsServerLayout }, action.options);
        var newAction = __assign(__assign({}, action), { options: newOptions });
        this.forwardToServer(newAction);
        return false;
    };
    /**
     * If the server requires to compute a layout, the computed bounds are forwarded. Otherwise they
     * are applied to the current model locally and a model update is triggered.
     */
    DiagramServerProxy.prototype.handleComputedBounds = function (action) {
        if (this.viewerOptions.needsServerLayout) {
            return true;
        }
        else {
            var root = this.currentRoot;
            this.computedBoundsApplicator.apply(root, action);
            if (root.type === this.lastSubmittedModelType) {
                this.actionDispatcher.dispatch(actions_1.UpdateModelAction.create(root));
            }
            else {
                this.actionDispatcher.dispatch(actions_1.SetModelAction.create(root));
            }
            this.lastSubmittedModelType = root.type;
            return false;
        }
    };
    DiagramServerProxy.prototype.handleExportSvgAction = function (action) {
        var blob = new Blob([action.svg], { type: "text/plain;charset=utf-8" });
        (0, file_saver_1.saveAs)(blob, "diagram.svg");
        return false;
    };
    DiagramServerProxy.prototype.handleServerStateAction = function (action) {
        return false;
    };
    DiagramServerProxy.prototype.commitModel = function (newRoot) {
        var previousRoot = this.currentRoot;
        this.currentRoot = newRoot;
        return previousRoot;
    };
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.ILogger),
        __metadata("design:type", Object)
    ], DiagramServerProxy.prototype, "logger", void 0);
    __decorate([
        (0, inversify_1.inject)(model_source_1.ComputedBoundsApplicator),
        __metadata("design:type", model_source_1.ComputedBoundsApplicator)
    ], DiagramServerProxy.prototype, "computedBoundsApplicator", void 0);
    DiagramServerProxy = __decorate([
        (0, inversify_1.injectable)()
    ], DiagramServerProxy);
    return DiagramServerProxy;
}(model_source_1.ModelSource));
exports.DiagramServerProxy = DiagramServerProxy;
/**
 * @deprecated Use `DiagramServerProxy` instead.
 */
exports.DiagramServer = DiagramServerProxy;


/***/ }),

/***/ "./node_modules/sprotty/lib/model-source/local-model-source.js":
/*!*********************************************************************!*\
  !*** ./node_modules/sprotty/lib/model-source/local-model-source.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LocalModelSource = void 0;
var file_saver_1 = __webpack_require__(/*! file-saver */ "./node_modules/file-saver/dist/FileSaver.min.js");
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "./node_modules/sprotty-protocol/lib/actions.js");
var model_utils_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/model-utils */ "./node_modules/sprotty-protocol/lib/utils/model-utils.js");
var types_1 = __webpack_require__(/*! ../base/types */ "./node_modules/sprotty/lib/base/types.js");
var smodel_factory_1 = __webpack_require__(/*! ../base/model/smodel-factory */ "./node_modules/sprotty/lib/base/model/smodel-factory.js");
var viewport_1 = __webpack_require__(/*! ../features/viewport/viewport */ "./node_modules/sprotty/lib/features/viewport/viewport.js");
var svg_exporter_1 = __webpack_require__(/*! ../features/export/svg-exporter */ "./node_modules/sprotty/lib/features/export/svg-exporter.js");
var model_matching_1 = __webpack_require__(/*! ../features/update/model-matching */ "./node_modules/sprotty/lib/features/update/model-matching.js");
var select_1 = __webpack_require__(/*! ../features/select/select */ "./node_modules/sprotty/lib/features/select/select.js");
var model_source_1 = __webpack_require__(/*! ./model-source */ "./node_modules/sprotty/lib/model-source/model-source.js");
/**
 * A model source that allows to set and modify the model through function calls.
 * This class can be used as a facade over the action-based API of sprotty. It handles
 * actions for bounds calculation and model updates.
 */
var LocalModelSource = /** @class */ (function (_super) {
    __extends(LocalModelSource, _super);
    function LocalModelSource() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.currentRoot = smodel_factory_1.EMPTY_ROOT;
        return _this;
    }
    Object.defineProperty(LocalModelSource.prototype, "model", {
        get: function () {
            return this.currentRoot;
        },
        set: function (root) {
            this.setModel(root);
        },
        enumerable: false,
        configurable: true
    });
    LocalModelSource.prototype.initialize = function (registry) {
        _super.prototype.initialize.call(this, registry);
        // Register this model source
        registry.register(actions_1.ComputedBoundsAction.KIND, this);
        registry.register(actions_1.RequestPopupModelAction.KIND, this);
    };
    /**
     * Set the model without incremental update.
     */
    LocalModelSource.prototype.setModel = function (newRoot) {
        this.currentRoot = newRoot;
        return this.submitModel(newRoot, false);
    };
    LocalModelSource.prototype.commitModel = function (newRoot) {
        var previousRoot = this.currentRoot;
        this.currentRoot = newRoot;
        return previousRoot;
    };
    /**
     * Apply an incremental update to the model with an animation showing the transition to
     * the new state. If `newRoot` is undefined, the current root is submitted; in that case
     * it is assumed that it has been modified before.
     */
    LocalModelSource.prototype.updateModel = function (newRoot) {
        if (newRoot === undefined) {
            return this.submitModel(this.currentRoot, true);
        }
        else {
            this.currentRoot = newRoot;
            return this.submitModel(newRoot, true);
        }
    };
    /**
     * Get the current selection from the model.
     */
    LocalModelSource.prototype.getSelection = function () {
        return __awaiter(this, void 0, void 0, function () {
            var res, result;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.actionDispatcher.request(select_1.GetSelectionAction.create())];
                    case 1:
                        res = _a.sent();
                        result = [];
                        this.gatherSelectedElements(this.currentRoot, new Set(res.selectedElementsIDs), result);
                        return [2 /*return*/, result];
                }
            });
        });
    };
    LocalModelSource.prototype.gatherSelectedElements = function (element, selected, result) {
        if (selected.has(element.id)) {
            result.push(element);
        }
        if (element.children) {
            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {
                var child = _a[_i];
                this.gatherSelectedElements(child, selected, result);
            }
        }
    };
    /**
     * Get the current viewport from the model.
     */
    LocalModelSource.prototype.getViewport = function () {
        return __awaiter(this, void 0, void 0, function () {
            var res;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.actionDispatcher.request(viewport_1.GetViewportAction.create())];
                    case 1:
                        res = _a.sent();
                        return [2 /*return*/, {
                                scroll: res.viewport.scroll,
                                zoom: res.viewport.zoom,
                                canvasBounds: res.canvasBounds
                            }];
                }
            });
        });
    };
    /**
     * If client layout is active, run a `RequestBoundsAction` and wait for the resulting
     * `ComputedBoundsAction`, otherwise call `doSubmitModel(…)` directly.
     */
    LocalModelSource.prototype.submitModel = function (newRoot, update, cause) {
        return __awaiter(this, void 0, void 0, function () {
            var computedBounds, index;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!this.viewerOptions.needsClientLayout) return [3 /*break*/, 3];
                        return [4 /*yield*/, this.actionDispatcher.request(actions_1.RequestBoundsAction.create(newRoot))];
                    case 1:
                        computedBounds = _a.sent();
                        index = this.computedBoundsApplicator.apply(this.currentRoot, computedBounds);
                        return [4 /*yield*/, this.doSubmitModel(newRoot, true, cause, index)];
                    case 2:
                        _a.sent();
                        return [3 /*break*/, 5];
                    case 3: return [4 /*yield*/, this.doSubmitModel(newRoot, update, cause)];
                    case 4:
                        _a.sent();
                        _a.label = 5;
                    case 5: return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Submit the given model with an `UpdateModelAction` or a `SetModelAction` depending on the
     * `update` argument. If available, the model layout engine is invoked first.
     */
    LocalModelSource.prototype.doSubmitModel = function (newRoot, update, cause, index) {
        return __awaiter(this, void 0, void 0, function () {
            var layoutResult, error_1, lastSubmittedModelType, request, input;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(this.layoutEngine !== undefined)) return [3 /*break*/, 6];
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 5, , 6]);
                        layoutResult = this.layoutEngine.layout(newRoot, index);
                        if (!(layoutResult instanceof Promise)) return [3 /*break*/, 3];
                        return [4 /*yield*/, layoutResult];
                    case 2:
                        newRoot = _a.sent();
                        return [3 /*break*/, 4];
                    case 3:
                        if (layoutResult !== undefined)
                            newRoot = layoutResult;
                        _a.label = 4;
                    case 4: return [3 /*break*/, 6];
                    case 5:
                        error_1 = _a.sent();
                        this.logger.error(this, error_1.toString(), error_1.stack);
                        return [3 /*break*/, 6];
                    case 6:
                        lastSubmittedModelType = this.lastSubmittedModelType;
                        this.lastSubmittedModelType = newRoot.type;
                        if (!(cause && cause.kind === actions_1.RequestModelAction.KIND && cause.requestId)) return [3 /*break*/, 8];
                        request = cause;
                        return [4 /*yield*/, this.actionDispatcher.dispatch(actions_1.SetModelAction.create(newRoot, request.requestId))];
                    case 7:
                        _a.sent();
                        return [3 /*break*/, 12];
                    case 8:
                        if (!(update && newRoot.type === lastSubmittedModelType)) return [3 /*break*/, 10];
                        input = Array.isArray(update) ? update : newRoot;
                        return [4 /*yield*/, this.actionDispatcher.dispatch(actions_1.UpdateModelAction.create(input, { animate: true, cause: cause }))];
                    case 9:
                        _a.sent();
                        return [3 /*break*/, 12];
                    case 10: return [4 /*yield*/, this.actionDispatcher.dispatch(actions_1.SetModelAction.create(newRoot))];
                    case 11:
                        _a.sent();
                        _a.label = 12;
                    case 12: return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Modify the current model with an array of matches.
     */
    LocalModelSource.prototype.applyMatches = function (matches) {
        var root = this.currentRoot;
        (0, model_matching_1.applyMatches)(root, matches);
        return this.submitModel(root, matches);
    };
    /**
     * Modify the current model by adding new elements.
     */
    LocalModelSource.prototype.addElements = function (elements) {
        var matches = [];
        for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {
            var e = elements_1[_i];
            var anye = e;
            if (anye.element !== undefined && anye.parentId !== undefined) {
                matches.push({
                    right: anye.element,
                    rightParentId: anye.parentId
                });
            }
            else if (anye.id !== undefined) {
                matches.push({
                    right: anye,
                    rightParentId: this.currentRoot.id
                });
            }
        }
        return this.applyMatches(matches);
    };
    /**
     * Modify the current model by removing elements.
     */
    LocalModelSource.prototype.removeElements = function (elements) {
        var matches = [];
        var index = new model_utils_1.SModelIndex();
        index.add(this.currentRoot);
        for (var _i = 0, elements_2 = elements; _i < elements_2.length; _i++) {
            var e = elements_2[_i];
            var anye = e;
            if (anye.elementId !== undefined && anye.parentId !== undefined) {
                var element = index.getById(anye.elementId);
                if (element !== undefined) {
                    matches.push({
                        left: element,
                        leftParentId: anye.parentId
                    });
                }
            }
            else {
                var element = index.getById(anye);
                if (element !== undefined) {
                    matches.push({
                        left: element,
                        leftParentId: this.currentRoot.id
                    });
                }
            }
        }
        return this.applyMatches(matches);
    };
    // ----- Methods for handling incoming actions ----------------------------
    LocalModelSource.prototype.handle = function (action) {
        switch (action.kind) {
            case actions_1.RequestModelAction.KIND:
                this.handleRequestModel(action);
                break;
            case actions_1.ComputedBoundsAction.KIND:
                this.computedBoundsApplicator.apply(this.currentRoot, action);
                break;
            case actions_1.RequestPopupModelAction.KIND:
                this.handleRequestPopupModel(action);
                break;
            case svg_exporter_1.ExportSvgAction.KIND:
                this.handleExportSvgAction(action);
                break;
        }
    };
    LocalModelSource.prototype.handleRequestModel = function (action) {
        this.submitModel(this.currentRoot, false, action);
    };
    LocalModelSource.prototype.handleRequestPopupModel = function (action) {
        if (this.popupModelProvider !== undefined) {
            var element = (0, model_utils_1.findElement)(this.currentRoot, action.elementId);
            var popupRoot = this.popupModelProvider.getPopupModel(action, element);
            if (popupRoot !== undefined) {
                popupRoot.canvasBounds = action.bounds;
                this.actionDispatcher.dispatch(actions_1.SetPopupModelAction.create(popupRoot, action.requestId));
            }
        }
    };
    LocalModelSource.prototype.handleExportSvgAction = function (action) {
        var blob = new Blob([action.svg], { type: "text/plain;charset=utf-8" });
        (0, file_saver_1.saveAs)(blob, "diagram.svg");
    };
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.ILogger),
        __metadata("design:type", Object)
    ], LocalModelSource.prototype, "logger", void 0);
    __decorate([
        (0, inversify_1.inject)(model_source_1.ComputedBoundsApplicator),
        __metadata("design:type", model_source_1.ComputedBoundsApplicator)
    ], LocalModelSource.prototype, "computedBoundsApplicator", void 0);
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.IPopupModelProvider),
        (0, inversify_1.optional)(),
        __metadata("design:type", Object)
    ], LocalModelSource.prototype, "popupModelProvider", void 0);
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.IModelLayoutEngine),
        (0, inversify_1.optional)(),
        __metadata("design:type", Object)
    ], LocalModelSource.prototype, "layoutEngine", void 0);
    LocalModelSource = __decorate([
        (0, inversify_1.injectable)()
    ], LocalModelSource);
    return LocalModelSource;
}(model_source_1.ModelSource));
exports.LocalModelSource = LocalModelSource;


/***/ }),

/***/ "./node_modules/sprotty/lib/model-source/logging.js":
/*!**********************************************************!*\
  !*** ./node_modules/sprotty/lib/model-source/logging.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ForwardingLogger = exports.LoggingAction = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var logging_1 = __webpack_require__(/*! ../utils/logging */ "./node_modules/sprotty/lib/utils/logging.js");
var types_1 = __webpack_require__(/*! ../base/types */ "./node_modules/sprotty/lib/base/types.js");
var LoggingAction;
(function (LoggingAction) {
    LoggingAction.KIND = 'logging';
    function create(options) {
        return __assign({ kind: LoggingAction.KIND }, options);
    }
    LoggingAction.create = create;
})(LoggingAction = exports.LoggingAction || (exports.LoggingAction = {}));
/**
 * A logger that forwards messages of type 'error', 'warn', and 'info' to the model source.
 */
var ForwardingLogger = /** @class */ (function () {
    function ForwardingLogger() {
    }
    ForwardingLogger.prototype.error = function (thisArg, message) {
        var params = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            params[_i - 2] = arguments[_i];
        }
        if (this.logLevel >= logging_1.LogLevel.error)
            this.forward(thisArg, message, logging_1.LogLevel.error, params);
    };
    ForwardingLogger.prototype.warn = function (thisArg, message) {
        var params = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            params[_i - 2] = arguments[_i];
        }
        if (this.logLevel >= logging_1.LogLevel.warn)
            this.forward(thisArg, message, logging_1.LogLevel.warn, params);
    };
    ForwardingLogger.prototype.info = function (thisArg, message) {
        var params = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            params[_i - 2] = arguments[_i];
        }
        if (this.logLevel >= logging_1.LogLevel.info)
            this.forward(thisArg, message, logging_1.LogLevel.info, params);
    };
    ForwardingLogger.prototype.log = function (thisArg, message) {
        var params = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            params[_i - 2] = arguments[_i];
        }
        if (this.logLevel >= logging_1.LogLevel.log) {
            // We cannot forward 'log' level messages since that would lead to endless loops
            try {
                var caller = typeof thisArg === 'object' ? thisArg.constructor.name : String(thisArg);
                console.log.apply(thisArg, __spreadArray([caller + ': ' + message], params, true));
            }
            catch (error) { }
        }
    };
    ForwardingLogger.prototype.forward = function (thisArg, message, logLevel, params) {
        var date = new Date();
        var action = LoggingAction.create({
            message: message,
            severity: logging_1.LogLevel[logLevel],
            time: date.toLocaleTimeString(),
            caller: typeof thisArg === 'object' ? thisArg.constructor.name : String(thisArg),
            params: params.map(function (p) { return JSON.stringify(p); })
        });
        this.modelSourceProvider().then(function (modelSource) {
            try {
                modelSource.handle(action);
            }
            catch (error) {
                try {
                    console.log.apply(thisArg, [message, action, error]);
                }
                catch (e) { }
            }
        });
    };
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.ModelSourceProvider),
        __metadata("design:type", Function)
    ], ForwardingLogger.prototype, "modelSourceProvider", void 0);
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.LogLevel),
        __metadata("design:type", Number)
    ], ForwardingLogger.prototype, "logLevel", void 0);
    ForwardingLogger = __decorate([
        (0, inversify_1.injectable)()
    ], ForwardingLogger);
    return ForwardingLogger;
}());
exports.ForwardingLogger = ForwardingLogger;


/***/ }),

/***/ "./node_modules/sprotty/lib/model-source/model-source.js":
/*!***************************************************************!*\
  !*** ./node_modules/sprotty/lib/model-source/model-source.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ComputedBoundsApplicator = exports.ModelSource = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var actions_1 = __webpack_require__(/*! sprotty-protocol/lib/actions */ "./node_modules/sprotty-protocol/lib/actions.js");
var model_utils_1 = __webpack_require__(/*! sprotty-protocol/lib/utils/model-utils */ "./node_modules/sprotty-protocol/lib/utils/model-utils.js");
var types_1 = __webpack_require__(/*! ../base/types */ "./node_modules/sprotty/lib/base/types.js");
var svg_exporter_1 = __webpack_require__(/*! ../features/export/svg-exporter */ "./node_modules/sprotty/lib/features/export/svg-exporter.js");
/**
 * A model source is serving the model to the event cycle. It represents
 * the entry point to the client for external sources, such as model
 * editors.
 *
 * As an IActionHandler it listens to actions in and reacts to them with
 * commands or actions if necessary. This way, you can implement action
 * protocols between the client and the outside world.
 *
 * There are two default implementations for a ModelSource:
 * <ul>
 * <li>the LocalModelSource handles the actions to calculate bounds and
 * set/update the model</li>
 * <li>the DiagramServer connects via websocket to a remote source. It
 * can be used to connect to a model editor that provides the model,
 * layouts diagrams, transfers selection and answers model queries from
 * the client.</li>
 */
var ModelSource = /** @class */ (function () {
    function ModelSource() {
    }
    ModelSource.prototype.initialize = function (registry) {
        // Register this model source
        registry.register(actions_1.RequestModelAction.KIND, this);
        registry.register(svg_exporter_1.ExportSvgAction.KIND, this);
    };
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.IActionDispatcher),
        __metadata("design:type", Object)
    ], ModelSource.prototype, "actionDispatcher", void 0);
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.ViewerOptions),
        __metadata("design:type", Object)
    ], ModelSource.prototype, "viewerOptions", void 0);
    ModelSource = __decorate([
        (0, inversify_1.injectable)()
    ], ModelSource);
    return ModelSource;
}());
exports.ModelSource = ModelSource;
var ComputedBoundsApplicator = /** @class */ (function () {
    function ComputedBoundsApplicator() {
    }
    ComputedBoundsApplicator.prototype.apply = function (root, action) {
        var index = new model_utils_1.SModelIndex();
        index.add(root);
        for (var _i = 0, _a = action.bounds; _i < _a.length; _i++) {
            var b = _a[_i];
            var element = index.getById(b.elementId);
            if (element !== undefined)
                this.applyBounds(element, b.newPosition, b.newSize);
        }
        if (action.alignments !== undefined) {
            for (var _b = 0, _c = action.alignments; _b < _c.length; _b++) {
                var a = _c[_b];
                var element = index.getById(a.elementId);
                if (element !== undefined)
                    this.applyAlignment(element, a.newAlignment);
            }
        }
        return index;
    };
    ComputedBoundsApplicator.prototype.applyAlignment = function (element, newAlignment) {
        var e = element;
        e.alignment = { x: newAlignment.x, y: newAlignment.y };
    };
    ComputedBoundsApplicator.prototype.applyBounds = function (element, newPosition, newSize) {
        var e = element;
        if (newPosition)
            e.position = __assign({}, newPosition);
        e.size = __assign({}, newSize);
    };
    ComputedBoundsApplicator = __decorate([
        (0, inversify_1.injectable)()
    ], ComputedBoundsApplicator);
    return ComputedBoundsApplicator;
}());
exports.ComputedBoundsApplicator = ComputedBoundsApplicator;


/***/ }),

/***/ "./node_modules/sprotty/lib/model-source/websocket.js":
/*!************************************************************!*\
  !*** ./node_modules/sprotty/lib/model-source/websocket.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.WebSocketDiagramServer = exports.WebSocketDiagramServerProxy = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var diagram_server_1 = __webpack_require__(/*! ./diagram-server */ "./node_modules/sprotty/lib/model-source/diagram-server.js");
/**
 * An external ModelSource that connects to the model provider using a websocket.
 */
var WebSocketDiagramServerProxy = /** @class */ (function (_super) {
    __extends(WebSocketDiagramServerProxy, _super);
    function WebSocketDiagramServerProxy() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WebSocketDiagramServerProxy.prototype.listen = function (webSocket) {
        var _this = this;
        webSocket.addEventListener('message', function (event) {
            _this.messageReceived(event.data);
        });
        webSocket.addEventListener('error', function (event) {
            _this.logger.error(_this, 'error event received', event);
        });
        this.webSocket = webSocket;
    };
    WebSocketDiagramServerProxy.prototype.disconnect = function () {
        if (this.webSocket) {
            this.webSocket.close();
            this.webSocket = undefined;
        }
    };
    WebSocketDiagramServerProxy.prototype.sendMessage = function (message) {
        if (this.webSocket) {
            this.webSocket.send(JSON.stringify(message));
        }
        else {
            throw new Error('WebSocket is not connected');
        }
    };
    WebSocketDiagramServerProxy = __decorate([
        (0, inversify_1.injectable)()
    ], WebSocketDiagramServerProxy);
    return WebSocketDiagramServerProxy;
}(diagram_server_1.DiagramServerProxy));
exports.WebSocketDiagramServerProxy = WebSocketDiagramServerProxy;
/**
 * @deprecated Use `WebSocketDiagramServerProxy` instead;
 */
exports.WebSocketDiagramServer = WebSocketDiagramServerProxy;


/***/ }),

/***/ "./node_modules/sprotty/lib/utils/browser.js":
/*!***************************************************!*\
  !*** ./node_modules/sprotty/lib/utils/browser.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.hitsMouseEvent = exports.getWindowScroll = exports.isCrossSite = exports.isMac = exports.isCtrlOrCmd = void 0;
var sprotty_protocol_1 = __webpack_require__(/*! sprotty-protocol */ "./node_modules/sprotty-protocol/lib/index.js");
/**
 * Returns whether the mouse or keyboard event includes the CMD key
 * on Mac or CTRL key on Linux / others.
 */
function isCtrlOrCmd(event) {
    if (isMac())
        return event.metaKey;
    else
        return event.ctrlKey;
}
exports.isCtrlOrCmd = isCtrlOrCmd;
function isMac() {
    return window.navigator.userAgent.indexOf("Mac") !== -1;
}
exports.isMac = isMac;
function isCrossSite(url) {
    if (url && typeof window !== 'undefined' && window.location) {
        var baseURL = '';
        if (window.location.protocol)
            baseURL += window.location.protocol + '//';
        if (window.location.host)
            baseURL += window.location.host;
        return baseURL.length > 0 && !url.startsWith(baseURL);
    }
    return false;
}
exports.isCrossSite = isCrossSite;
/**
 * Returns the amount of scroll of the browser window as a point.
 */
function getWindowScroll() {
    if (typeof window === 'undefined') {
        return sprotty_protocol_1.Point.ORIGIN;
    }
    return {
        x: window.pageXOffset,
        y: window.pageYOffset
    };
}
exports.getWindowScroll = getWindowScroll;
/**
 * Checks whether the given mouse event hits the given DOM element.
 */
function hitsMouseEvent(child, event) {
    var clientRect = child.getBoundingClientRect();
    return event.clientX >= clientRect.left && event.clientX <= clientRect.right
        && event.clientY >= clientRect.top && event.clientY <= clientRect.bottom;
}
exports.hitsMouseEvent = hitsMouseEvent;


/***/ }),

/***/ "./node_modules/sprotty/lib/utils/codicon.js":
/*!***************************************************!*\
  !*** ./node_modules/sprotty/lib/utils/codicon.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2021 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.codiconCSSClasses = exports.codiconCSSString = exports.ANIMATION_SPIN = exports.ACTION_ITEM = void 0;
exports.ACTION_ITEM = 'action-item';
exports.ANIMATION_SPIN = 'animation-spin';
function codiconCSSString(codiconId, actionItem, animationSpin, additionalCSS) {
    if (actionItem === void 0) { actionItem = false; }
    if (animationSpin === void 0) { animationSpin = false; }
    if (additionalCSS === void 0) { additionalCSS = []; }
    return codiconCSSClasses(codiconId, actionItem, animationSpin, additionalCSS).join(' ');
}
exports.codiconCSSString = codiconCSSString;
function codiconCSSClasses(codiconId, actionItem, animationSpin, additionalCSS) {
    if (actionItem === void 0) { actionItem = false; }
    if (animationSpin === void 0) { animationSpin = false; }
    if (additionalCSS === void 0) { additionalCSS = []; }
    var cssClassArray = ['codicon', "codicon-".concat(codiconId)];
    if (actionItem) {
        cssClassArray.push(exports.ACTION_ITEM);
    }
    if (animationSpin) {
        cssClassArray.push(exports.ANIMATION_SPIN);
    }
    if (additionalCSS.length > 0) {
        cssClassArray.push.apply(cssClassArray, additionalCSS);
    }
    return cssClassArray;
}
exports.codiconCSSClasses = codiconCSSClasses;


/***/ }),

/***/ "./node_modules/sprotty/lib/utils/color.js":
/*!*************************************************!*\
  !*** ./node_modules/sprotty/lib/utils/color.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ColorMap = exports.toSVG = exports.rgb = void 0;
function rgb(red, green, blue) {
    return {
        red: red,
        green: green,
        blue: blue
    };
}
exports.rgb = rgb;
function toSVG(c) {
    return 'rgb(' + c.red + ',' + c.green + ',' + c.blue + ')';
}
exports.toSVG = toSVG;
var ColorMap = /** @class */ (function () {
    function ColorMap(stops) {
        this.stops = stops;
    }
    ColorMap.prototype.getColor = function (t) {
        t = Math.max(0, Math.min(0.99999999, t));
        var i = Math.floor(t * this.stops.length);
        return this.stops[i];
    };
    return ColorMap;
}());
exports.ColorMap = ColorMap;


/***/ }),

/***/ "./node_modules/sprotty/lib/utils/geometry.js":
/*!****************************************************!*\
  !*** ./node_modules/sprotty/lib/utils/geometry.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2022 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.intersection = exports.PointToPointLine = exports.Diamond = exports.linear = exports.almostEquals = exports.toRadians = exports.toDegrees = exports.magnitude = exports.normalize = exports.shiftTowards = exports.angleBetweenPoints = exports.angleOfPoint = exports.maxDistance = exports.manhattanDistance = exports.euclideanDistance = exports.Direction = exports.includes = exports.centerOfLine = exports.center = exports.translate = exports.combine = exports.isBounds = exports.EMPTY_BOUNDS = exports.isValidDimension = exports.EMPTY_DIMENSION = exports.pointEquals = exports.subtract = exports.add = exports.ORIGIN_POINT = void 0;
/**
 * (x,y) coordinates of the origin.
 *
 * @deprecated Use `Point.ORIGIN` from `sprotty-protocol` instead.
 */
exports.ORIGIN_POINT = Object.freeze({
    x: 0,
    y: 0
});
/**
 * Adds two points.
 * @param {Point} p1 - First point
 * @param {Point} p2 - Second point
 * @returns {Point} The sum of the two points
 *
 * @deprecated Use `Point.add` from `sprotty-protocol` instead.
 */
function add(p1, p2) {
    return {
        x: p1.x + p2.x,
        y: p1.y + p2.y
    };
}
exports.add = add;
/**
 * Subtracts two points.
 * @param {Point} p1 - First point
 * @param {Point} p2 - Second point
 * @returns {Point} The difference of the two points
 *
 * @deprecated Use `Point.subtract` from `sprotty-protocol` instead.
 */
function subtract(p1, p2) {
    return {
        x: p1.x - p2.x,
        y: p1.y - p2.y
    };
}
exports.subtract = subtract;
/**
 * Specifies whether a point has exactly the same coordinates as another point.
 * @param {Point} point1 a point
 * @param {Point} point2 another point
 * @returns {boolean} `true` if `point1` has exactly the same `x` and `y` values as `point2`, `false` otherwise.
 *
 * @deprecated Use `Point.equals` from `sprotty-protocol` instead.
 */
function pointEquals(point1, point2) {
    return point1.x === point2.x && point1.y === point2.y;
}
exports.pointEquals = pointEquals;
/**
 * A dimension with both width and height set to a negative value, which is considered as undefined.
 *
 * @deprecated Use `Dimension.EMPTY` from `sprotty-protocol` instead.
 */
exports.EMPTY_DIMENSION = Object.freeze({
    width: -1,
    height: -1
});
/**
 * Checks whether the given dimention is valid, i.e. the width and height are non-zero.
 * @param {Dimension} b - Dimension object
 * @returns {boolean}
 *
 * @deprecated Use `Dimension.isValid` from `sprotty-protocol` instead.
 */
function isValidDimension(d) {
    return d.width >= 0 && d.height >= 0;
}
exports.isValidDimension = isValidDimension;
/**
 * @deprecated Use `Bounds.EMPTY` from `sprotty-protocol` instead.
 */
exports.EMPTY_BOUNDS = Object.freeze({
    x: 0,
    y: 0,
    width: -1,
    height: -1
});
/**
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
function isBounds(element) {
    return 'x' in element
        && 'y' in element
        && 'width' in element
        && 'height' in element;
}
exports.isBounds = isBounds;
/**
 * Combines the bounds of two objects into one, so that the new bounds
 * are the minimum bounds that covers both of the original bounds.
 * @param {Bounds} b0 - First bounds object
 * @param {Bounds} b1 - Second bounds object
 * @returns {Bounds} The combined bounds
 *
 * @deprecated Use `Bounds.combine` from `sprotty-protocol` instead.
 */
function combine(b0, b1) {
    if (!isValidDimension(b0))
        return isValidDimension(b1) ? b1 : exports.EMPTY_BOUNDS;
    if (!isValidDimension(b1))
        return b0;
    var minX = Math.min(b0.x, b1.x);
    var minY = Math.min(b0.y, b1.y);
    var maxX = Math.max(b0.x + (b0.width >= 0 ? b0.width : 0), b1.x + (b1.width >= 0 ? b1.width : 0));
    var maxY = Math.max(b0.y + (b0.height >= 0 ? b0.height : 0), b1.y + (b1.height >= 0 ? b1.height : 0));
    return {
        x: minX, y: minY, width: maxX - minX, height: maxY - minY
    };
}
exports.combine = combine;
/**
 * Translates the given bounds.
 * @param {Bounds} b - Bounds object
 * @param {Point} p - Vector by which to translate the bounds
 * @returns {Bounds} The translated bounds
 *
 * @deprecated Use `Bounds.translate` from `sprotty-protocol` instead.
 */
function translate(b, p) {
    return {
        x: b.x + p.x,
        y: b.y + p.y,
        width: b.width,
        height: b.height
    };
}
exports.translate = translate;
/**
 * Returns the center point of the bounds of an object
 * @param {Bounds} b - Bounds object
 * @returns {Point} the center point
 *
 * @deprecated Use `Bounds.center` from `sprotty-protocol` instead.
 */
function center(b) {
    return {
        x: b.x + (b.width >= 0 ? 0.5 * b.width : 0),
        y: b.y + (b.height >= 0 ? 0.5 * b.height : 0)
    };
}
exports.center = center;
/**
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
function centerOfLine(s, e) {
    var b = {
        x: s.x > e.x ? e.x : s.x,
        y: s.y > e.y ? e.y : s.y,
        width: Math.abs(e.x - s.x),
        height: Math.abs(e.y - s.y)
    };
    return center(b);
}
exports.centerOfLine = centerOfLine;
/**
 * Checks whether the point p is included in the bounds b.
 *
 * @deprecated Use `Bounds.includes` from `sprotty-protocol` instead.
 */
function includes(b, p) {
    return p.x >= b.x && p.x <= b.x + b.width && p.y >= b.y && p.y <= b.y + b.height;
}
exports.includes = includes;
/**
 * Enumeration of possible directions (left, right, up, down)
 * @deprecated do we use this? We should rather use a string type
 */
var Direction;
(function (Direction) {
    Direction[Direction["left"] = 0] = "left";
    Direction[Direction["right"] = 1] = "right";
    Direction[Direction["up"] = 2] = "up";
    Direction[Direction["down"] = 3] = "down";
})(Direction = exports.Direction || (exports.Direction = {}));
/**
 * Returns the "straight line" distance between two points.
 * @param {Point} a - First point
 * @param {Point} b - Second point
 * @returns {number} The Eucledian distance
 *
 * @deprecated Use `Point.euclideanDistance` from `sprotty-protocol` instead.
 */
function euclideanDistance(a, b) {
    var dx = b.x - a.x;
    var dy = b.y - a.y;
    return Math.sqrt(dx * dx + dy * dy);
}
exports.euclideanDistance = euclideanDistance;
/**
 * Returns the distance between two points in a grid, using a
 * strictly vertical and/or horizontal path (versus straight line).
 * @param {Point} a - First point
 * @param {Point} b - Second point
 * @returns {number} The Manhattan distance
 *
 * @deprecated Use `Point.manhattanDistance` from `sprotty-protocol` instead.
 */
function manhattanDistance(a, b) {
    return Math.abs(b.x - a.x) + Math.abs(b.y - a.y);
}
exports.manhattanDistance = manhattanDistance;
/**
 * Returns the maximum of the horizontal and the vertical distance.
 * @param {Point} a - First point
 * @param {Point} b - Second point
 * @returns {number} The maximum distance
 *
 * @deprecated Use `Point.maxDistance` from `sprotty-protocol` instead.
 */
function maxDistance(a, b) {
    return Math.max(Math.abs(b.x - a.x), Math.abs(b.y - a.y));
}
exports.maxDistance = maxDistance;
/**
 * Computes the angle in radians of the given point to the x-axis of the coordinate system.
 * The result is in the range [-pi, pi].
 * @param {Point} p - A point in the Eucledian plane
 *
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
function angleOfPoint(p) {
    return Math.atan2(p.y, p.x);
}
exports.angleOfPoint = angleOfPoint;
/**
 * Computes the angle in radians between the two given points (relative to the origin of the coordinate system).
 * The result is in the range [0, pi]. Returns NaN if the points are equal.
 * @param {Point} a - First point
 * @param {Point} b - Second point
 *
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
function angleBetweenPoints(a, b) {
    var lengthProduct = Math.sqrt((a.x * a.x + a.y * a.y) * (b.x * b.x + b.y * b.y));
    if (isNaN(lengthProduct) || lengthProduct === 0)
        return NaN;
    var dotProduct = a.x * b.x + a.y * b.y;
    return Math.acos(dotProduct / lengthProduct);
}
exports.angleBetweenPoints = angleBetweenPoints;
/**
 * Computes a point that is the original `point` shifted towards `refPoint` by the given `distance`.
 * @param {Point} point - Point to shift
 * @param {Point} refPoint - Point to shift towards
 * @param {Point} distance - Distance to shift
 *
 * @deprecated Use `Point.shiftTowards` from `sprotty-protocol` instead.
 */
function shiftTowards(point, refPoint, distance) {
    var diff = subtract(refPoint, point);
    var normalized = normalize(diff);
    var shift = { x: normalized.x * distance, y: normalized.y * distance };
    return add(point, shift);
}
exports.shiftTowards = shiftTowards;
/**
 * Computes the normalized vector from the vector given in `point`; that is, computing its unit vector.
 * @param {Point} point - Point representing the vector to be normalized
 * @returns {Point} The normalized point
 *
 * @deprecated Use `Point.normalize` from `sprotty-protocol` instead.
 */
function normalize(point) {
    var mag = magnitude(point);
    if (mag === 0 || mag === 1) {
        return exports.ORIGIN_POINT;
    }
    return {
        x: point.x / mag,
        y: point.y / mag
    };
}
exports.normalize = normalize;
/**
 * Computes the magnitude of the vector given in `point`.
 * @param {Point} point - Point representing the vector to compute the magnitude for
 * @returns {number} The magnitude or also known as length of the `point`
 *
 * @deprecated Use `Point.magnitude` from `sprotty-protocol` instead.
 */
function magnitude(point) {
    return Math.sqrt(Math.pow(point.x, 2) + Math.pow(point.y, 2));
}
exports.magnitude = magnitude;
/**
 * Converts from radians to degrees
 * @param {number} a - A value in radians
 * @returns {number} The converted value
 *
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
function toDegrees(a) {
    return a * 180 / Math.PI;
}
exports.toDegrees = toDegrees;
/**
 * Converts from degrees to radians
 * @param {number} a - A value in degrees
 * @returns {number} The converted value
 *
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
function toRadians(a) {
    return a * Math.PI / 180;
}
exports.toRadians = toRadians;
/**
 * Returns whether two numbers are almost equal, within a small margin (0.001)
 * @param {number} a - First number
 * @param {number} b - Second number
 * @returns {boolean} True if the two numbers are almost equal
 *
 * @deprecated Use the declaration from `sprotty-protocol` instead.
 */
function almostEquals(a, b) {
    return Math.abs(a - b) < 1e-3;
}
exports.almostEquals = almostEquals;
/**
 * Calculates a linear combination of p0 and p1 using lambda, i.e.
 *   (1-lambda) * p0 + lambda * p1
 *
 * @deprecated Use `Point.linear` from `sprotty-protocol` instead.
 */
function linear(p0, p1, lambda) {
    return {
        x: (1 - lambda) * p0.x + lambda * p1.x,
        y: (1 - lambda) * p0.y + lambda * p1.y
    };
}
exports.linear = linear;
/**
 * A diamond or rhombus is a quadrilateral whose four sides all have the same length.
 * It consists of four points, a `topPoint`, `rightPoint`, `bottomPoint`, and a `leftPoint`,
 * which are connected by four lines -- the `topRightSideLight`, `topLeftSideLine`, `bottomRightSideLine`,
 * and the `bottomLeftSideLine`.
 */
var Diamond = /** @class */ (function () {
    function Diamond(bounds) {
        this.bounds = bounds;
    }
    Object.defineProperty(Diamond.prototype, "topPoint", {
        get: function () {
            return {
                x: this.bounds.x + this.bounds.width / 2,
                y: this.bounds.y
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Diamond.prototype, "rightPoint", {
        get: function () {
            return {
                x: this.bounds.x + this.bounds.width,
                y: this.bounds.y + this.bounds.height / 2
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Diamond.prototype, "bottomPoint", {
        get: function () {
            return {
                x: this.bounds.x + this.bounds.width / 2,
                y: this.bounds.y + this.bounds.height
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Diamond.prototype, "leftPoint", {
        get: function () {
            return {
                x: this.bounds.x,
                y: this.bounds.y + this.bounds.height / 2
            };
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Diamond.prototype, "topRightSideLine", {
        get: function () {
            return new PointToPointLine(this.topPoint, this.rightPoint);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Diamond.prototype, "topLeftSideLine", {
        get: function () {
            return new PointToPointLine(this.topPoint, this.leftPoint);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Diamond.prototype, "bottomRightSideLine", {
        get: function () {
            return new PointToPointLine(this.bottomPoint, this.rightPoint);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Diamond.prototype, "bottomLeftSideLine", {
        get: function () {
            return new PointToPointLine(this.bottomPoint, this.leftPoint);
        },
        enumerable: false,
        configurable: true
    });
    /**
     * Return the closest side of this diamond to the specified `refPoint`.
     * @param {Point} refPoint a reference point
     * @returns {Line} a line representing the closest side
     */
    Diamond.prototype.closestSideLine = function (refPoint) {
        var c = center(this.bounds);
        if (refPoint.x > c.x) {
            if (refPoint.y > c.y) {
                return this.bottomRightSideLine;
            }
            else {
                return this.topRightSideLine;
            }
        }
        else {
            if (refPoint.y > c.y) {
                return this.bottomLeftSideLine;
            }
            else {
                return this.topLeftSideLine;
            }
        }
    };
    return Diamond;
}());
exports.Diamond = Diamond;
/**
 * A line made up from two points.
 */
var PointToPointLine = /** @class */ (function () {
    function PointToPointLine(p1, p2) {
        this.p1 = p1;
        this.p2 = p2;
    }
    Object.defineProperty(PointToPointLine.prototype, "a", {
        get: function () {
            return this.p1.y - this.p2.y;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PointToPointLine.prototype, "b", {
        get: function () {
            return this.p2.x - this.p1.x;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PointToPointLine.prototype, "c", {
        get: function () {
            return this.p2.x * this.p1.y - this.p1.x * this.p2.y;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PointToPointLine.prototype, "angle", {
        /**
         * The counter-clockwise angle of this line relative to the x-axis.
         */
        get: function () {
            return Math.atan2(-this.a, this.b);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PointToPointLine.prototype, "slope", {
        /**
         * The slope of the line.
         * A vertical line returns `undefined`.
         */
        get: function () {
            if (this.b === 0)
                return undefined;
            return this.a / this.b;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PointToPointLine.prototype, "slopeOrMax", {
        /**
         * The slope of the line or `Number.MAX_SAFE_INTEGER` if vertical.
         */
        get: function () {
            if (this.slope === undefined) {
                return Number.MAX_SAFE_INTEGER;
            }
            return this.slope;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(PointToPointLine.prototype, "direction", {
        /**
         * The direction of this line, such as 'north', 'south', or 'south-west'.
         */
        get: function () {
            var hDegrees = toDegrees(this.angle);
            var degrees = hDegrees < 0 ? 360 + hDegrees : hDegrees;
            // degrees are relative to the x-axis
            if (degrees === 90) {
                return 'south';
            }
            else if (degrees === 0 || degrees === 360) {
                return 'east';
            }
            else if (degrees === 270) {
                return 'north';
            }
            else if (degrees === 180) {
                return 'west';
            }
            else if (degrees > 0 && degrees < 90) {
                return 'south-east';
            }
            else if (degrees > 90 && degrees < 180) {
                return 'south-west';
            }
            else if (degrees > 180 && degrees < 270) {
                return 'north-west';
            }
            else if (degrees > 270 && degrees < 360) {
                return 'north-east';
            }
            throw new Error("Cannot determine direction of line (".concat(this.p1.x, ",").concat(this.p1.y, ") to (").concat(this.p2.x, ",").concat(this.p2.y, ")"));
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @param otherLine the other line
     * @returns the intersection point between `this` line and the `otherLine` if exists, or `undefined`.
     */
    PointToPointLine.prototype.intersection = function (otherLine) {
        if (this.hasIndistinctPoints(otherLine)) {
            return undefined;
        }
        var x1 = this.p1.x;
        var y1 = this.p1.y;
        var x2 = this.p2.x;
        var y2 = this.p2.y;
        var x3 = otherLine.p1.x;
        var y3 = otherLine.p1.y;
        var x4 = otherLine.p2.x;
        var y4 = otherLine.p2.y;
        var denominator = ((y4 - y3) * (x2 - x1)) - ((x4 - x3) * (y2 - y1));
        if (denominator === 0) {
            return undefined;
        }
        var numeratorA = ((x4 - x3) * (y1 - y3)) - ((y4 - y3) * (x1 - x3));
        var numeratorB = ((x2 - x1) * (y1 - y3)) - ((y2 - y1) * (x1 - x3));
        if (numeratorA === 0 && numeratorB === 0) {
            return undefined;
        }
        var determinantA = numeratorA / denominator;
        var determinantB = numeratorB / denominator;
        if (determinantA < 0 || determinantA > 1 || determinantB < 0 || determinantB > 1) {
            return undefined;
        }
        var x = x1 + (determinantA * (x2 - x1));
        var y = y1 + (determinantA * (y2 - y1));
        return { x: x, y: y };
    };
    /**
     * @param otherLine the other line
     * @returns whether the start and end point of this line is does not have distinct start
     * or end points with the `otherLine`
     */
    PointToPointLine.prototype.hasIndistinctPoints = function (otherLine) {
        return pointEquals(this.p1, otherLine.p1) ||
            pointEquals(this.p1, otherLine.p2) ||
            pointEquals(this.p2, otherLine.p1) ||
            pointEquals(this.p2, otherLine.p2);
    };
    return PointToPointLine;
}());
exports.PointToPointLine = PointToPointLine;
/**
 * Returns the intersection of two lines `l1` and `l2`
 * @param {Line} l1 - A line
 * @param {Line} l2 - Another line
 * @returns {Point} The intersection point of `l1` and `l2`
 */
function intersection(l1, l2) {
    return {
        x: (l1.c * l2.b - l2.c * l1.b) / (l1.a * l2.b - l2.a * l1.b),
        y: (l1.a * l2.c - l2.a * l1.c) / (l1.a * l2.b - l2.a * l1.b)
    };
}
exports.intersection = intersection;


/***/ }),

/***/ "./node_modules/sprotty/lib/utils/inversify.js":
/*!*****************************************************!*\
  !*** ./node_modules/sprotty/lib/utils/inversify.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2019-2021 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isInjectable = void 0;
function isInjectable(constr) {
    return Reflect.getMetadata('inversify:paramtypes', constr) !== undefined;
}
exports.isInjectable = isInjectable;


/***/ }),

/***/ "./node_modules/sprotty/lib/utils/iterable.js":
/*!****************************************************!*\
  !*** ./node_modules/sprotty/lib/utils/iterable.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.mapIterable = exports.filterIterable = exports.DONE_RESULT = exports.toArray = exports.FluentIterableImpl = void 0;
/**
 * A helper class that allows to easily create fluent iterables.
 */
var FluentIterableImpl = /** @class */ (function () {
    function FluentIterableImpl(startFn, nextFn) {
        this.startFn = startFn;
        this.nextFn = nextFn;
    }
    FluentIterableImpl.prototype[Symbol.iterator] = function () {
        var _a;
        var _this = this;
        var iterator = (_a = {
                state: this.startFn(),
                next: function () { return _this.nextFn(iterator.state); }
            },
            _a[Symbol.iterator] = function () { return iterator; },
            _a);
        return iterator;
    };
    FluentIterableImpl.prototype.filter = function (callback) {
        return filterIterable(this, callback);
    };
    FluentIterableImpl.prototype.map = function (callback) {
        return mapIterable(this, callback);
    };
    FluentIterableImpl.prototype.forEach = function (callback) {
        var iterator = this[Symbol.iterator]();
        var index = 0;
        var result;
        do {
            result = iterator.next();
            if (result.value !== undefined)
                callback(result.value, index);
            index++;
        } while (!result.done);
    };
    FluentIterableImpl.prototype.indexOf = function (element) {
        var iterator = this[Symbol.iterator]();
        var index = 0;
        var result;
        do {
            result = iterator.next();
            if (result.value === element)
                return index;
            index++;
        } while (!result.done);
        return -1;
    };
    return FluentIterableImpl;
}());
exports.FluentIterableImpl = FluentIterableImpl;
/**
 * Converts a FluentIterable into an array. If the input is an array, it is returned unchanged.
 */
function toArray(input) {
    if (input.constructor === Array) {
        return input;
    }
    var result = [];
    input.forEach(function (element) { return result.push(element); });
    return result;
}
exports.toArray = toArray;
exports.DONE_RESULT = Object.freeze({ done: true, value: undefined });
/**
 * Create a fluent iterable that filters the content of the given iterable or array.
 */
function filterIterable(input, callback) {
    return new FluentIterableImpl(function () { return createIterator(input); }, function (iterator) {
        var result;
        do {
            result = iterator.next();
        } while (!result.done && !callback(result.value));
        return result;
    });
}
exports.filterIterable = filterIterable;
/**
 * Create a fluent iterable that maps the content of the given iterable or array.
 */
function mapIterable(input, callback) {
    return new FluentIterableImpl(function () { return createIterator(input); }, function (iterator) {
        var _a = iterator.next(), done = _a.done, value = _a.value;
        if (done)
            return exports.DONE_RESULT;
        else
            return { done: false, value: callback(value) };
    });
}
exports.mapIterable = mapIterable;
/**
 * Create an iterator for the given iterable or array.
 */
function createIterator(collection) {
    var method = collection[Symbol.iterator];
    if (typeof method === 'function') {
        return method.call(collection);
    }
    var length = collection.length;
    if (typeof length === 'number' && length >= 0) {
        return new ArrayIterator(collection);
    }
    return { next: function () { return exports.DONE_RESULT; } };
}
/**
 * Iterator implementation for arrays.
 */
var ArrayIterator = /** @class */ (function () {
    function ArrayIterator(array) {
        this.array = array;
        this.index = 0;
    }
    ArrayIterator.prototype.next = function () {
        if (this.index < this.array.length)
            return { done: false, value: this.array[this.index++] };
        else
            return exports.DONE_RESULT;
    };
    ArrayIterator.prototype[Symbol.iterator] = function () {
        return this;
    };
    return ArrayIterator;
}());


/***/ }),

/***/ "./node_modules/sprotty/lib/utils/json.js":
/*!************************************************!*\
  !*** ./node_modules/sprotty/lib/utils/json.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2020 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ "./node_modules/sprotty/lib/utils/keyboard.js":
/*!****************************************************!*\
  !*** ./node_modules/sprotty/lib/utils/keyboard.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/********************************************************************************
 * Copyright (c) 2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getActualCode = exports.matchesKeystroke = void 0;
var browser_1 = __webpack_require__(/*! ./browser */ "./node_modules/sprotty/lib/utils/browser.js");
/**
 * Returns whether the keyboard event matches the keystroke described by the given
 * code and modifiers. The code must comply to the format of the `code` property
 * of KeyboardEvent, but in contrast to that property, the actual keyboard layout is
 * considered by this function if possible.
 */
function matchesKeystroke(event, code) {
    var modifiers = [];
    for (var _i = 2; _i < arguments.length; _i++) {
        modifiers[_i - 2] = arguments[_i];
    }
    if (getActualCode(event) !== code)
        return false;
    if ((0, browser_1.isMac)()) {
        if (event.ctrlKey !== (modifiers.findIndex(function (m) { return m === 'ctrl'; }) >= 0))
            return false;
        if (event.metaKey !== (modifiers.findIndex(function (m) { return m === 'meta' || m === 'ctrlCmd'; }) >= 0))
            return false;
    }
    else {
        if (event.ctrlKey !== (modifiers.findIndex(function (m) { return m === 'ctrl' || m === 'ctrlCmd'; }) >= 0))
            return false;
        if (event.metaKey !== (modifiers.findIndex(function (m) { return m === 'meta'; }) >= 0))
            return false;
    }
    if (event.altKey !== (modifiers.findIndex(function (m) { return m === 'alt'; }) >= 0))
        return false;
    if (event.shiftKey !== (modifiers.findIndex(function (m) { return m === 'shift'; }) >= 0))
        return false;
    return true;
}
exports.matchesKeystroke = matchesKeystroke;
/**
 * Determines a key code from the given event. This is necessary because the `code` property of
 * a KeyboardEvent does not consider keyboard layouts.
 */
function getActualCode(event) {
    if (event.keyCode) {
        var result = STRING_CODE[event.keyCode];
        if (result !== undefined)
            return result;
    }
    return event.code;
}
exports.getActualCode = getActualCode;
var STRING_CODE = new Array(256);
(function () {
    function addKeyCode(stringCode, numericCode) {
        if (STRING_CODE[numericCode] === undefined)
            STRING_CODE[numericCode] = stringCode;
    }
    addKeyCode('Pause', 3);
    addKeyCode('Backspace', 8);
    addKeyCode('Tab', 9);
    addKeyCode('Enter', 13);
    addKeyCode('ShiftLeft', 16);
    addKeyCode('ShiftRight', 16);
    addKeyCode('ControlLeft', 17);
    addKeyCode('ControlRight', 17);
    addKeyCode('AltLeft', 18);
    addKeyCode('AltRight', 18);
    addKeyCode('CapsLock', 20);
    addKeyCode('Escape', 27);
    addKeyCode('Space', 32);
    addKeyCode('PageUp', 33);
    addKeyCode('PageDown', 34);
    addKeyCode('End', 35);
    addKeyCode('Home', 36);
    addKeyCode('ArrowLeft', 37);
    addKeyCode('ArrowUp', 38);
    addKeyCode('ArrowRight', 39);
    addKeyCode('ArrowDown', 40);
    addKeyCode('Insert', 45);
    addKeyCode('Delete', 46);
    addKeyCode('Digit1', 49);
    addKeyCode('Digit2', 50);
    addKeyCode('Digit3', 51);
    addKeyCode('Digit4', 52);
    addKeyCode('Digit5', 53);
    addKeyCode('Digit6', 54);
    addKeyCode('Digit7', 55);
    addKeyCode('Digit8', 56);
    addKeyCode('Digit9', 57);
    addKeyCode('Digit0', 48);
    addKeyCode('KeyA', 65);
    addKeyCode('KeyB', 66);
    addKeyCode('KeyC', 67);
    addKeyCode('KeyD', 68);
    addKeyCode('KeyE', 69);
    addKeyCode('KeyF', 70);
    addKeyCode('KeyG', 71);
    addKeyCode('KeyH', 72);
    addKeyCode('KeyI', 73);
    addKeyCode('KeyJ', 74);
    addKeyCode('KeyK', 75);
    addKeyCode('KeyL', 76);
    addKeyCode('KeyM', 77);
    addKeyCode('KeyN', 78);
    addKeyCode('KeyO', 79);
    addKeyCode('KeyP', 80);
    addKeyCode('KeyQ', 81);
    addKeyCode('KeyR', 82);
    addKeyCode('KeyS', 83);
    addKeyCode('KeyT', 84);
    addKeyCode('KeyU', 85);
    addKeyCode('KeyV', 86);
    addKeyCode('KeyW', 87);
    addKeyCode('KeyX', 88);
    addKeyCode('KeyY', 89);
    addKeyCode('KeyZ', 90);
    addKeyCode('OSLeft', 91);
    addKeyCode('MetaLeft', 91);
    addKeyCode('OSRight', 92);
    addKeyCode('MetaRight', 92);
    addKeyCode('ContextMenu', 93);
    addKeyCode('Numpad0', 96);
    addKeyCode('Numpad1', 97);
    addKeyCode('Numpad2', 98);
    addKeyCode('Numpad3', 99);
    addKeyCode('Numpad4', 100);
    addKeyCode('Numpad5', 101);
    addKeyCode('Numpad6', 102);
    addKeyCode('Numpad7', 103);
    addKeyCode('Numpad8', 104);
    addKeyCode('Numpad9', 105);
    addKeyCode('NumpadMultiply', 106);
    addKeyCode('NumpadAdd', 107);
    addKeyCode('NumpadSeparator', 108);
    addKeyCode('NumpadSubtract', 109);
    addKeyCode('NumpadDecimal', 110);
    addKeyCode('NumpadDivide', 111);
    addKeyCode('F1', 112);
    addKeyCode('F2', 113);
    addKeyCode('F3', 114);
    addKeyCode('F4', 115);
    addKeyCode('F5', 116);
    addKeyCode('F6', 117);
    addKeyCode('F7', 118);
    addKeyCode('F8', 119);
    addKeyCode('F9', 120);
    addKeyCode('F10', 121);
    addKeyCode('F11', 122);
    addKeyCode('F12', 123);
    addKeyCode('F13', 124);
    addKeyCode('F14', 125);
    addKeyCode('F15', 126);
    addKeyCode('F16', 127);
    addKeyCode('F17', 128);
    addKeyCode('F18', 129);
    addKeyCode('F19', 130);
    addKeyCode('F20', 131);
    addKeyCode('F21', 132);
    addKeyCode('F22', 133);
    addKeyCode('F23', 134);
    addKeyCode('F24', 135);
    addKeyCode('NumLock', 144);
    addKeyCode('ScrollLock', 145);
    addKeyCode('Semicolon', 186);
    addKeyCode('Equal', 187);
    addKeyCode('Comma', 188);
    addKeyCode('Minus', 189);
    addKeyCode('Period', 190);
    addKeyCode('Slash', 191);
    addKeyCode('Backquote', 192);
    addKeyCode('IntlRo', 193);
    addKeyCode('BracketLeft', 219);
    addKeyCode('Backslash', 220);
    addKeyCode('BracketRight', 221);
    addKeyCode('Quote', 222);
    addKeyCode('IntlYen', 255);
})();


/***/ }),

/***/ "./node_modules/sprotty/lib/utils/logging.js":
/*!***************************************************!*\
  !*** ./node_modules/sprotty/lib/utils/logging.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ConsoleLogger = exports.NullLogger = exports.LogLevel = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var types_1 = __webpack_require__(/*! ../base/types */ "./node_modules/sprotty/lib/base/types.js");
var LogLevel;
(function (LogLevel) {
    LogLevel[LogLevel["none"] = 0] = "none";
    LogLevel[LogLevel["error"] = 1] = "error";
    LogLevel[LogLevel["warn"] = 2] = "warn";
    LogLevel[LogLevel["info"] = 3] = "info";
    LogLevel[LogLevel["log"] = 4] = "log";
})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));
var NullLogger = /** @class */ (function () {
    function NullLogger() {
        this.logLevel = LogLevel.none;
    }
    NullLogger.prototype.error = function (thisArg, message) {
        var params = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            params[_i - 2] = arguments[_i];
        }
    };
    NullLogger.prototype.warn = function (thisArg, message) {
        var params = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            params[_i - 2] = arguments[_i];
        }
    };
    NullLogger.prototype.info = function (thisArg, message) {
        var params = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            params[_i - 2] = arguments[_i];
        }
    };
    NullLogger.prototype.log = function (thisArg, message) {
        var params = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            params[_i - 2] = arguments[_i];
        }
    };
    NullLogger = __decorate([
        (0, inversify_1.injectable)()
    ], NullLogger);
    return NullLogger;
}());
exports.NullLogger = NullLogger;
var ConsoleLogger = /** @class */ (function () {
    function ConsoleLogger() {
        this.logLevel = LogLevel.log;
        this.viewOptions = { baseDiv: '' };
    }
    ConsoleLogger.prototype.error = function (thisArg, message) {
        var params = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            params[_i - 2] = arguments[_i];
        }
        if (this.logLevel >= LogLevel.error)
            try {
                console.error.apply(thisArg, this.consoleArguments(thisArg, message, params));
            }
            catch (error) { }
    };
    ConsoleLogger.prototype.warn = function (thisArg, message) {
        var params = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            params[_i - 2] = arguments[_i];
        }
        if (this.logLevel >= LogLevel.warn)
            try {
                console.warn.apply(thisArg, this.consoleArguments(thisArg, message, params));
            }
            catch (error) { }
    };
    ConsoleLogger.prototype.info = function (thisArg, message) {
        var params = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            params[_i - 2] = arguments[_i];
        }
        if (this.logLevel >= LogLevel.info)
            try {
                console.info.apply(thisArg, this.consoleArguments(thisArg, message, params));
            }
            catch (error) { }
    };
    ConsoleLogger.prototype.log = function (thisArg, message) {
        var params = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            params[_i - 2] = arguments[_i];
        }
        if (this.logLevel >= LogLevel.log)
            try {
                console.log.apply(thisArg, this.consoleArguments(thisArg, message, params));
            }
            catch (error) { }
    };
    ConsoleLogger.prototype.consoleArguments = function (thisArg, message, params) {
        var caller;
        if (typeof thisArg === 'object')
            caller = thisArg.constructor.name;
        else
            caller = thisArg;
        var date = new Date();
        return __spreadArray([date.toLocaleTimeString() + ' ' + this.viewOptions.baseDiv + ' ' + caller + ': ' + message], params, true);
    };
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.LogLevel),
        __metadata("design:type", Number)
    ], ConsoleLogger.prototype, "logLevel", void 0);
    __decorate([
        (0, inversify_1.inject)(types_1.TYPES.ViewerOptions),
        __metadata("design:type", Object)
    ], ConsoleLogger.prototype, "viewOptions", void 0);
    ConsoleLogger = __decorate([
        (0, inversify_1.injectable)()
    ], ConsoleLogger);
    return ConsoleLogger;
}());
exports.ConsoleLogger = ConsoleLogger;


/***/ }),

/***/ "./node_modules/sprotty/lib/utils/registry.js":
/*!****************************************************!*\
  !*** ./node_modules/sprotty/lib/utils/registry.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MultiInstanceRegistry = exports.InstanceRegistry = exports.FactoryRegistry = exports.ProviderRegistry = void 0;
var inversify_1 = __webpack_require__(/*! inversify */ "./node_modules/inversify/lib/inversify.js");
var ProviderRegistry = /** @class */ (function () {
    function ProviderRegistry() {
        this.elements = new Map;
    }
    ProviderRegistry.prototype.register = function (key, cstr) {
        if (key === undefined)
            throw new Error('Key is undefined');
        if (this.hasKey(key))
            throw new Error('Key is already registered: ' + key);
        this.elements.set(key, cstr);
    };
    ProviderRegistry.prototype.deregister = function (key) {
        if (key === undefined)
            throw new Error('Key is undefined');
        this.elements.delete(key);
    };
    ProviderRegistry.prototype.hasKey = function (key) {
        return this.elements.has(key);
    };
    ProviderRegistry.prototype.get = function (key, arg) {
        var existingCstr = this.elements.get(key);
        if (existingCstr)
            return new existingCstr(arg);
        else
            return this.missing(key, arg);
    };
    ProviderRegistry.prototype.missing = function (key, arg) {
        throw new Error('Unknown registry key: ' + key);
    };
    ProviderRegistry = __decorate([
        (0, inversify_1.injectable)()
    ], ProviderRegistry);
    return ProviderRegistry;
}());
exports.ProviderRegistry = ProviderRegistry;
var FactoryRegistry = /** @class */ (function () {
    function FactoryRegistry() {
        this.elements = new Map;
    }
    FactoryRegistry.prototype.register = function (key, factory) {
        if (key === undefined)
            throw new Error('Key is undefined');
        if (this.hasKey(key))
            throw new Error('Key is already registered: ' + key);
        this.elements.set(key, factory);
    };
    FactoryRegistry.prototype.deregister = function (key) {
        if (key === undefined)
            throw new Error('Key is undefined');
        this.elements.delete(key);
    };
    FactoryRegistry.prototype.hasKey = function (key) {
        return this.elements.has(key);
    };
    FactoryRegistry.prototype.get = function (key, arg) {
        var existingFactory = this.elements.get(key);
        if (existingFactory)
            return existingFactory(arg);
        else
            return this.missing(key, arg);
    };
    FactoryRegistry.prototype.missing = function (key, arg) {
        throw new Error('Unknown registry key: ' + key);
    };
    FactoryRegistry = __decorate([
        (0, inversify_1.injectable)()
    ], FactoryRegistry);
    return FactoryRegistry;
}());
exports.FactoryRegistry = FactoryRegistry;
var InstanceRegistry = /** @class */ (function () {
    function InstanceRegistry() {
        this.elements = new Map;
    }
    InstanceRegistry.prototype.register = function (key, instance) {
        if (key === undefined)
            throw new Error('Key is undefined');
        if (this.hasKey(key))
            throw new Error('Key is already registered: ' + key);
        this.elements.set(key, instance);
    };
    InstanceRegistry.prototype.deregister = function (key) {
        if (key === undefined)
            throw new Error('Key is undefined');
        this.elements.delete(key);
    };
    InstanceRegistry.prototype.hasKey = function (key) {
        return this.elements.has(key);
    };
    InstanceRegistry.prototype.get = function (key) {
        var existingInstance = this.elements.get(key);
        if (existingInstance)
            return existingInstance;
        else
            return this.missing(key);
    };
    InstanceRegistry.prototype.missing = function (key) {
        throw new Error('Unknown registry key: ' + key);
    };
    InstanceRegistry = __decorate([
        (0, inversify_1.injectable)()
    ], InstanceRegistry);
    return InstanceRegistry;
}());
exports.InstanceRegistry = InstanceRegistry;
var MultiInstanceRegistry = /** @class */ (function () {
    function MultiInstanceRegistry() {
        this.elements = new Map;
    }
    MultiInstanceRegistry.prototype.register = function (key, instance) {
        if (key === undefined)
            throw new Error('Key is undefined');
        var instances = this.elements.get(key);
        if (instances !== undefined)
            instances.push(instance);
        else
            this.elements.set(key, [instance]);
    };
    MultiInstanceRegistry.prototype.deregisterAll = function (key) {
        if (key === undefined)
            throw new Error('Key is undefined');
        this.elements.delete(key);
    };
    MultiInstanceRegistry.prototype.get = function (key) {
        var existingInstances = this.elements.get(key);
        if (existingInstances !== undefined)
            return existingInstances;
        else
            return [];
    };
    MultiInstanceRegistry = __decorate([
        (0, inversify_1.injectable)()
    ], MultiInstanceRegistry);
    return MultiInstanceRegistry;
}());
exports.MultiInstanceRegistry = MultiInstanceRegistry;


/***/ }),

/***/ "./node_modules/sprotty/node_modules/autocompleter/autocomplete.js":
/*!*************************************************************************!*\
  !*** ./node_modules/sprotty/node_modules/autocompleter/autocomplete.js ***!
  \*************************************************************************/
/***/ (function(module) {

(function (global, factory) {
   true ? module.exports = factory() :
  0;
}(this, function () { 'use strict';

  /*
   * https://github.com/kraaden/autocomplete
   * Copyright (c) 2016 Denys Krasnoshchok
   * MIT License
   */
  function autocomplete(settings) {
      // just an alias to minimize JS file size
      var doc = document;
      var container = doc.createElement("div");
      var containerStyle = container.style;
      var userAgent = navigator.userAgent;
      var mobileFirefox = userAgent.indexOf("Firefox") !== -1 && userAgent.indexOf("Mobile") !== -1;
      var debounceWaitMs = settings.debounceWaitMs || 0;
      var preventSubmit = settings.preventSubmit || false;
      // 'keyup' event will not be fired on Mobile Firefox, so we have to use 'input' event instead
      var keyUpEventName = mobileFirefox ? "input" : "keyup";
      var items = [];
      var inputValue = "";
      var minLen = 2;
      var showOnFocus = settings.showOnFocus;
      var selected;
      var keypressCounter = 0;
      var debounceTimer;
      if (settings.minLength !== undefined) {
          minLen = settings.minLength;
      }
      if (!settings.input) {
          throw new Error("input undefined");
      }
      var input = settings.input;
      container.className = "autocomplete " + (settings.className || "");
      containerStyle.position = "fixed";
      /**
       * Detach the container from DOM
       */
      function detach() {
          var parent = container.parentNode;
          if (parent) {
              parent.removeChild(container);
          }
      }
      /**
       * Detect if the script is running on IOS
       */
      function isIOS() {
          return /iPad|iPhone|iPod/.test(window.navigator.userAgent) && !window.MSStream;
      }
      /**
       * Clear debouncing timer if assigned
       */
      function clearDebounceTimer() {
          if (debounceTimer) {
              window.clearTimeout(debounceTimer);
          }
      }
      /**
       * Attach the container to DOM
       */
      function attach() {
          if (!container.parentNode) {
              doc.body.appendChild(container);
          }
      }
      /**
       * Check if container for autocomplete is displayed
       */
      function containerDisplayed() {
          return !!container.parentNode;
      }
      /**
       * Clear autocomplete state and hide container
       */
      function clear() {
          keypressCounter++;
          items = [];
          inputValue = "";
          selected = undefined;
          detach();
      }
      /**
       * Update autocomplete position
       */
      function updatePosition() {
          if (!containerDisplayed()) {
              return;
          }
          containerStyle.height = "auto";
          containerStyle.width = input.offsetWidth + "px";
          var inputRect = input.getBoundingClientRect();
          var top = isIOS()
              ? inputRect.top + window.pageYOffset // a fix for buggy getBoundingClientRect on IOS
              : inputRect.top;
          top = top + input.offsetHeight;
          var maxHeight = window.innerHeight - (inputRect.top + input.offsetHeight);
          if (maxHeight < 0) {
              maxHeight = 0;
          }
          containerStyle.top = top + "px";
          containerStyle.bottom = "";
          containerStyle.left = inputRect.left + "px";
          containerStyle.maxHeight = maxHeight + "px";
          if (settings.customize) {
              settings.customize(input, inputRect, container, maxHeight);
          }
      }
      /**
       * Redraw the autocomplete div element with suggestions
       */
      function update() {
          // delete all children from autocomplete DOM container
          while (container.firstChild) {
              container.removeChild(container.firstChild);
          }
          // function for rendering autocomplete suggestions
          var render = function (item, currentValue) {
              var itemElement = doc.createElement("div");
              itemElement.textContent = item.label || "";
              return itemElement;
          };
          if (settings.render) {
              render = settings.render;
          }
          // function to render autocomplete groups
          var renderGroup = function (groupName, currentValue) {
              var groupDiv = doc.createElement("div");
              groupDiv.textContent = groupName;
              return groupDiv;
          };
          if (settings.renderGroup) {
              renderGroup = settings.renderGroup;
          }
          var fragment = doc.createDocumentFragment();
          var prevGroup = "#9?$";
          items.forEach(function (item) {
              if (item.group && item.group !== prevGroup) {
                  prevGroup = item.group;
                  var groupDiv = renderGroup(item.group, inputValue);
                  if (groupDiv) {
                      groupDiv.className += " group";
                      fragment.appendChild(groupDiv);
                  }
              }
              var div = render(item, inputValue);
              if (div) {
                  div.addEventListener("click", function (ev) {
                      settings.onSelect(item, input);
                      clear();
                      ev.preventDefault();
                      ev.stopPropagation();
                  });
                  if (item === selected) {
                      div.className += " selected";
                  }
                  fragment.appendChild(div);
              }
          });
          container.appendChild(fragment);
          if (items.length < 1) {
              if (settings.emptyMsg) {
                  var empty = doc.createElement("div");
                  empty.className = "empty";
                  empty.textContent = settings.emptyMsg;
                  container.appendChild(empty);
              }
              else {
                  clear();
                  return;
              }
          }
          attach();
          updatePosition();
          updateScroll();
      }
      function updateIfDisplayed() {
          if (containerDisplayed()) {
              update();
          }
      }
      function resizeEventHandler() {
          updateIfDisplayed();
      }
      function scrollEventHandler(e) {
          if (e.target !== container) {
              updateIfDisplayed();
          }
          else {
              e.preventDefault();
          }
      }
      function keyupEventHandler(ev) {
          var keyCode = ev.which || ev.keyCode || 0;
          var ignore = [38 /* Up */, 13 /* Enter */, 27 /* Esc */, 39 /* Right */, 37 /* Left */, 16 /* Shift */, 17 /* Ctrl */, 18 /* Alt */, 20 /* CapsLock */, 91 /* WindowsKey */, 9 /* Tab */];
          for (var _i = 0, ignore_1 = ignore; _i < ignore_1.length; _i++) {
              var key = ignore_1[_i];
              if (keyCode === key) {
                  return;
              }
          }
          // the down key is used to open autocomplete
          if (keyCode === 40 /* Down */ && containerDisplayed()) {
              return;
          }
          startFetch(0 /* Keyboard */);
      }
      /**
       * Automatically move scroll bar if selected item is not visible
       */
      function updateScroll() {
          var elements = container.getElementsByClassName("selected");
          if (elements.length > 0) {
              var element = elements[0];
              // make group visible
              var previous = element.previousElementSibling;
              if (previous && previous.className.indexOf("group") !== -1 && !previous.previousElementSibling) {
                  element = previous;
              }
              if (element.offsetTop < container.scrollTop) {
                  container.scrollTop = element.offsetTop;
              }
              else {
                  var selectBottom = element.offsetTop + element.offsetHeight;
                  var containerBottom = container.scrollTop + container.offsetHeight;
                  if (selectBottom > containerBottom) {
                      container.scrollTop += selectBottom - containerBottom;
                  }
              }
          }
      }
      /**
       * Select the previous item in suggestions
       */
      function selectPrev() {
          if (items.length < 1) {
              selected = undefined;
          }
          else {
              if (selected === items[0]) {
                  selected = items[items.length - 1];
              }
              else {
                  for (var i = items.length - 1; i > 0; i--) {
                      if (selected === items[i] || i === 1) {
                          selected = items[i - 1];
                          break;
                      }
                  }
              }
          }
      }
      /**
       * Select the next item in suggestions
       */
      function selectNext() {
          if (items.length < 1) {
              selected = undefined;
          }
          if (!selected || selected === items[items.length - 1]) {
              selected = items[0];
              return;
          }
          for (var i = 0; i < (items.length - 1); i++) {
              if (selected === items[i]) {
                  selected = items[i + 1];
                  break;
              }
          }
      }
      function keydownEventHandler(ev) {
          var keyCode = ev.which || ev.keyCode || 0;
          if (keyCode === 38 /* Up */ || keyCode === 40 /* Down */ || keyCode === 27 /* Esc */) {
              var containerIsDisplayed = containerDisplayed();
              if (keyCode === 27 /* Esc */) {
                  clear();
              }
              else {
                  if (!containerDisplayed || items.length < 1) {
                      return;
                  }
                  keyCode === 38 /* Up */
                      ? selectPrev()
                      : selectNext();
                  update();
              }
              ev.preventDefault();
              if (containerIsDisplayed) {
                  ev.stopPropagation();
              }
              return;
          }
          if (keyCode === 13 /* Enter */) {
              if (selected) {
                  settings.onSelect(selected, input);
                  clear();
              }
              if (preventSubmit) {
                  ev.preventDefault();
              }
          }
      }
      function focusEventHandler() {
          if (showOnFocus) {
              startFetch(1 /* Focus */);
          }
      }
      function startFetch(trigger) {
          // if multiple keys were pressed, before we get update from server,
          // this may cause redrawing our autocomplete multiple times after the last key press.
          // to avoid this, the number of times keyboard was pressed will be
          // saved and checked before redraw our autocomplete box.
          var savedKeypressCounter = ++keypressCounter;
          var val = input.value;
          if (val.length >= minLen || trigger === 1 /* Focus */) {
              clearDebounceTimer();
              debounceTimer = window.setTimeout(function () {
                  settings.fetch(val, function (elements) {
                      if (keypressCounter === savedKeypressCounter && elements) {
                          items = elements;
                          inputValue = val;
                          selected = items.length > 0 ? items[0] : undefined;
                          update();
                      }
                  }, 0 /* Keyboard */);
              }, trigger === 0 /* Keyboard */ ? debounceWaitMs : 0);
          }
          else {
              clear();
          }
      }
      function blurEventHandler() {
          // we need to delay clear, because when we click on an item, blur will be called before click and remove items from DOM
          setTimeout(function () {
              if (doc.activeElement !== input) {
                  clear();
              }
          }, 200);
      }
      /**
       * Fixes #26: on long clicks focus will be lost and onSelect method will not be called
       */
      container.addEventListener("mousedown", function (evt) {
          evt.stopPropagation();
          evt.preventDefault();
      });
      /**
       * This function will remove DOM elements and clear event handlers
       */
      function destroy() {
          input.removeEventListener("focus", focusEventHandler);
          input.removeEventListener("keydown", keydownEventHandler);
          input.removeEventListener(keyUpEventName, keyupEventHandler);
          input.removeEventListener("blur", blurEventHandler);
          window.removeEventListener("resize", resizeEventHandler);
          doc.removeEventListener("scroll", scrollEventHandler, true);
          clearDebounceTimer();
          clear();
          // prevent the update call if there are pending AJAX requests
          keypressCounter++;
      }
      // setup event handlers
      input.addEventListener("keydown", keydownEventHandler);
      input.addEventListener(keyUpEventName, keyupEventHandler);
      input.addEventListener("blur", blurEventHandler);
      input.addEventListener("focus", focusEventHandler);
      window.addEventListener("resize", resizeEventHandler);
      doc.addEventListener("scroll", scrollEventHandler, true);
      return {
          destroy: destroy
      };
  }

  return autocomplete;

}));


/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {

"use strict";


var stylesInDOM = [];
function getIndexByIdentifier(identifier) {
  var result = -1;
  for (var i = 0; i < stylesInDOM.length; i++) {
    if (stylesInDOM[i].identifier === identifier) {
      result = i;
      break;
    }
  }
  return result;
}
function modulesToDom(list, options) {
  var idCountMap = {};
  var identifiers = [];
  for (var i = 0; i < list.length; i++) {
    var item = list[i];
    var id = options.base ? item[0] + options.base : item[0];
    var count = idCountMap[id] || 0;
    var identifier = "".concat(id, " ").concat(count);
    idCountMap[id] = count + 1;
    var indexByIdentifier = getIndexByIdentifier(identifier);
    var obj = {
      css: item[1],
      media: item[2],
      sourceMap: item[3],
      supports: item[4],
      layer: item[5]
    };
    if (indexByIdentifier !== -1) {
      stylesInDOM[indexByIdentifier].references++;
      stylesInDOM[indexByIdentifier].updater(obj);
    } else {
      var updater = addElementStyle(obj, options);
      options.byIndex = i;
      stylesInDOM.splice(i, 0, {
        identifier: identifier,
        updater: updater,
        references: 1
      });
    }
    identifiers.push(identifier);
  }
  return identifiers;
}
function addElementStyle(obj, options) {
  var api = options.domAPI(options);
  api.update(obj);
  var updater = function updater(newObj) {
    if (newObj) {
      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {
        return;
      }
      api.update(obj = newObj);
    } else {
      api.remove();
    }
  };
  return updater;
}
module.exports = function (list, options) {
  options = options || {};
  list = list || [];
  var lastIdentifiers = modulesToDom(list, options);
  return function update(newList) {
    newList = newList || [];
    for (var i = 0; i < lastIdentifiers.length; i++) {
      var identifier = lastIdentifiers[i];
      var index = getIndexByIdentifier(identifier);
      stylesInDOM[index].references--;
    }
    var newLastIdentifiers = modulesToDom(newList, options);
    for (var _i = 0; _i < lastIdentifiers.length; _i++) {
      var _identifier = lastIdentifiers[_i];
      var _index = getIndexByIdentifier(_identifier);
      if (stylesInDOM[_index].references === 0) {
        stylesInDOM[_index].updater();
        stylesInDOM.splice(_index, 1);
      }
    }
    lastIdentifiers = newLastIdentifiers;
  };
};

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {

"use strict";


var memo = {};

/* istanbul ignore next  */
function getTarget(target) {
  if (typeof memo[target] === "undefined") {
    var styleTarget = document.querySelector(target);

    // Special case to return head of iframe instead of iframe itself
    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
      try {
        // This will throw an exception if access to iframe is blocked
        // due to cross-origin restrictions
        styleTarget = styleTarget.contentDocument.head;
      } catch (e) {
        // istanbul ignore next
        styleTarget = null;
      }
    }
    memo[target] = styleTarget;
  }
  return memo[target];
}

/* istanbul ignore next  */
function insertBySelector(insert, style) {
  var target = getTarget(insert);
  if (!target) {
    throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
  }
  target.appendChild(style);
}
module.exports = insertBySelector;

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {

"use strict";


/* istanbul ignore next  */
function insertStyleElement(options) {
  var element = document.createElement("style");
  options.setAttributes(element, options.attributes);
  options.insert(element, options.options);
  return element;
}
module.exports = insertStyleElement;

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


/* istanbul ignore next  */
function setAttributesWithoutAttributes(styleElement) {
  var nonce =  true ? __webpack_require__.nc : 0;
  if (nonce) {
    styleElement.setAttribute("nonce", nonce);
  }
}
module.exports = setAttributesWithoutAttributes;

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";


/* istanbul ignore next  */
function apply(styleElement, options, obj) {
  var css = "";
  if (obj.supports) {
    css += "@supports (".concat(obj.supports, ") {");
  }
  if (obj.media) {
    css += "@media ".concat(obj.media, " {");
  }
  var needLayer = typeof obj.layer !== "undefined";
  if (needLayer) {
    css += "@layer".concat(obj.layer.length > 0 ? " ".concat(obj.layer) : "", " {");
  }
  css += obj.css;
  if (needLayer) {
    css += "}";
  }
  if (obj.media) {
    css += "}";
  }
  if (obj.supports) {
    css += "}";
  }
  var sourceMap = obj.sourceMap;
  if (sourceMap && typeof btoa !== "undefined") {
    css += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");
  }

  // For old IE
  /* istanbul ignore if  */
  options.styleTagTransform(css, styleElement, options.options);
}
function removeStyleElement(styleElement) {
  // istanbul ignore if
  if (styleElement.parentNode === null) {
    return false;
  }
  styleElement.parentNode.removeChild(styleElement);
}

/* istanbul ignore next  */
function domAPI(options) {
  if (typeof document === "undefined") {
    return {
      update: function update() {},
      remove: function remove() {}
    };
  }
  var styleElement = options.insertStyleElement(options);
  return {
    update: function update(obj) {
      apply(styleElement, options, obj);
    },
    remove: function remove() {
      removeStyleElement(styleElement);
    }
  };
}
module.exports = domAPI;

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";


/* istanbul ignore next  */
function styleTagTransform(css, styleElement) {
  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = css;
  } else {
    while (styleElement.firstChild) {
      styleElement.removeChild(styleElement.firstChild);
    }
    styleElement.appendChild(document.createTextNode(css));
  }
}
module.exports = styleTagTransform;

/***/ }),

/***/ "./node_modules/tinyqueue/index.js":
/*!*****************************************!*\
  !*** ./node_modules/tinyqueue/index.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ TinyQueue)
/* harmony export */ });

class TinyQueue {
    constructor(data = [], compare = defaultCompare) {
        this.data = data;
        this.length = this.data.length;
        this.compare = compare;

        if (this.length > 0) {
            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);
        }
    }

    push(item) {
        this.data.push(item);
        this.length++;
        this._up(this.length - 1);
    }

    pop() {
        if (this.length === 0) return undefined;

        const top = this.data[0];
        const bottom = this.data.pop();
        this.length--;

        if (this.length > 0) {
            this.data[0] = bottom;
            this._down(0);
        }

        return top;
    }

    peek() {
        return this.data[0];
    }

    _up(pos) {
        const {data, compare} = this;
        const item = data[pos];

        while (pos > 0) {
            const parent = (pos - 1) >> 1;
            const current = data[parent];
            if (compare(item, current) >= 0) break;
            data[pos] = current;
            pos = parent;
        }

        data[pos] = item;
    }

    _down(pos) {
        const {data, compare} = this;
        const halfLength = this.length >> 1;
        const item = data[pos];

        while (pos < halfLength) {
            let left = (pos << 1) + 1;
            let best = data[left];
            const right = left + 1;

            if (right < this.length && compare(data[right], best) < 0) {
                left = right;
                best = data[right];
            }
            if (compare(best, item) >= 0) break;

            data[pos] = best;
            pos = left;
        }

        data[pos] = item;
    }
}

function defaultCompare(a, b) {
    return a < b ? -1 : a > b ? 1 : 0;
}


/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   NIL: () => (/* reexport safe */ _nil_js__WEBPACK_IMPORTED_MODULE_4__["default"]),
/* harmony export */   parse: () => (/* reexport safe */ _parse_js__WEBPACK_IMPORTED_MODULE_8__["default"]),
/* harmony export */   stringify: () => (/* reexport safe */ _stringify_js__WEBPACK_IMPORTED_MODULE_7__["default"]),
/* harmony export */   v1: () => (/* reexport safe */ _v1_js__WEBPACK_IMPORTED_MODULE_0__["default"]),
/* harmony export */   v3: () => (/* reexport safe */ _v3_js__WEBPACK_IMPORTED_MODULE_1__["default"]),
/* harmony export */   v4: () => (/* reexport safe */ _v4_js__WEBPACK_IMPORTED_MODULE_2__["default"]),
/* harmony export */   v5: () => (/* reexport safe */ _v5_js__WEBPACK_IMPORTED_MODULE_3__["default"]),
/* harmony export */   validate: () => (/* reexport safe */ _validate_js__WEBPACK_IMPORTED_MODULE_6__["default"]),
/* harmony export */   version: () => (/* reexport safe */ _version_js__WEBPACK_IMPORTED_MODULE_5__["default"])
/* harmony export */ });
/* harmony import */ var _v1_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v1.js */ "./node_modules/uuid/dist/esm-browser/v1.js");
/* harmony import */ var _v3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./v3.js */ "./node_modules/uuid/dist/esm-browser/v3.js");
/* harmony import */ var _v4_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./v4.js */ "./node_modules/uuid/dist/esm-browser/v4.js");
/* harmony import */ var _v5_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./v5.js */ "./node_modules/uuid/dist/esm-browser/v5.js");
/* harmony import */ var _nil_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./nil.js */ "./node_modules/uuid/dist/esm-browser/nil.js");
/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./version.js */ "./node_modules/uuid/dist/esm-browser/version.js");
/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./validate.js */ "./node_modules/uuid/dist/esm-browser/validate.js");
/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./stringify.js */ "./node_modules/uuid/dist/esm-browser/stringify.js");
/* harmony import */ var _parse_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./parse.js */ "./node_modules/uuid/dist/esm-browser/parse.js");










/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/md5.js":
/*!***************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/md5.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/*
 * Browser-compatible JavaScript MD5
 *
 * Modification of JavaScript MD5
 * https://github.com/blueimp/JavaScript-MD5
 *
 * Copyright 2011, Sebastian Tschan
 * https://blueimp.net
 *
 * Licensed under the MIT license:
 * https://opensource.org/licenses/MIT
 *
 * Based on
 * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message
 * Digest Algorithm, as defined in RFC 1321.
 * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for more info.
 */
function md5(bytes) {
  if (typeof bytes === 'string') {
    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape

    bytes = new Uint8Array(msg.length);

    for (var i = 0; i < msg.length; ++i) {
      bytes[i] = msg.charCodeAt(i);
    }
  }

  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));
}
/*
 * Convert an array of little-endian words to an array of bytes
 */


function md5ToHexEncodedArray(input) {
  var output = [];
  var length32 = input.length * 32;
  var hexTab = '0123456789abcdef';

  for (var i = 0; i < length32; i += 8) {
    var x = input[i >> 5] >>> i % 32 & 0xff;
    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);
    output.push(hex);
  }

  return output;
}
/**
 * Calculate output length with padding and bit length
 */


function getOutputLength(inputLength8) {
  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;
}
/*
 * Calculate the MD5 of an array of little-endian words, and a bit length.
 */


function wordsToMd5(x, len) {
  /* append padding */
  x[len >> 5] |= 0x80 << len % 32;
  x[getOutputLength(len) - 1] = len;
  var a = 1732584193;
  var b = -271733879;
  var c = -1732584194;
  var d = 271733878;

  for (var i = 0; i < x.length; i += 16) {
    var olda = a;
    var oldb = b;
    var oldc = c;
    var oldd = d;
    a = md5ff(a, b, c, d, x[i], 7, -680876936);
    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);
    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);
    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);
    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);
    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);
    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);
    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);
    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);
    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);
    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);
    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);
    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);
    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);
    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);
    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);
    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);
    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);
    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);
    b = md5gg(b, c, d, a, x[i], 20, -373897302);
    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);
    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);
    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);
    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);
    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);
    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);
    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);
    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);
    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);
    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);
    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);
    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);
    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);
    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);
    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);
    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);
    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);
    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);
    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);
    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);
    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);
    d = md5hh(d, a, b, c, x[i], 11, -358537222);
    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);
    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);
    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);
    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);
    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);
    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);
    a = md5ii(a, b, c, d, x[i], 6, -198630844);
    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);
    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);
    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);
    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);
    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);
    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);
    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);
    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);
    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);
    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);
    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);
    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);
    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);
    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);
    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);
    a = safeAdd(a, olda);
    b = safeAdd(b, oldb);
    c = safeAdd(c, oldc);
    d = safeAdd(d, oldd);
  }

  return [a, b, c, d];
}
/*
 * Convert an array bytes to an array of little-endian words
 * Characters >255 have their high-byte silently ignored.
 */


function bytesToWords(input) {
  if (input.length === 0) {
    return [];
  }

  var length8 = input.length * 8;
  var output = new Uint32Array(getOutputLength(length8));

  for (var i = 0; i < length8; i += 8) {
    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;
  }

  return output;
}
/*
 * Add integers, wrapping at 2^32. This uses 16-bit operations internally
 * to work around bugs in some JS interpreters.
 */


function safeAdd(x, y) {
  var lsw = (x & 0xffff) + (y & 0xffff);
  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
  return msw << 16 | lsw & 0xffff;
}
/*
 * Bitwise rotate a 32-bit number to the left.
 */


function bitRotateLeft(num, cnt) {
  return num << cnt | num >>> 32 - cnt;
}
/*
 * These functions implement the four basic operations the algorithm uses.
 */


function md5cmn(q, a, b, x, s, t) {
  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);
}

function md5ff(a, b, c, d, x, s, t) {
  return md5cmn(b & c | ~b & d, a, b, x, s, t);
}

function md5gg(a, b, c, d, x, s, t) {
  return md5cmn(b & d | c & ~d, a, b, x, s, t);
}

function md5hh(a, b, c, d, x, s, t) {
  return md5cmn(b ^ c ^ d, a, b, x, s, t);
}

function md5ii(a, b, c, d, x, s, t) {
  return md5cmn(c ^ (b | ~d), a, b, x, s, t);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (md5);

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/nil.js":
/*!***************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/nil.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('00000000-0000-0000-0000-000000000000');

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/parse.js":
/*!*****************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/parse.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ "./node_modules/uuid/dist/esm-browser/validate.js");


function parse(uuid) {
  if (!(0,_validate_js__WEBPACK_IMPORTED_MODULE_0__["default"])(uuid)) {
    throw TypeError('Invalid UUID');
  }

  var v;
  var arr = new Uint8Array(16); // Parse ########-....-....-....-............

  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;
  arr[1] = v >>> 16 & 0xff;
  arr[2] = v >>> 8 & 0xff;
  arr[3] = v & 0xff; // Parse ........-####-....-....-............

  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;
  arr[5] = v & 0xff; // Parse ........-....-####-....-............

  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;
  arr[7] = v & 0xff; // Parse ........-....-....-####-............

  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;
  arr[9] = v & 0xff; // Parse ........-....-....-....-############
  // (Use "/" to avoid 32-bit truncation when bit-shifting high-order bytes)

  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;
  arr[11] = v / 0x100000000 & 0xff;
  arr[12] = v >>> 24 & 0xff;
  arr[13] = v >>> 16 & 0xff;
  arr[14] = v >>> 8 & 0xff;
  arr[15] = v & 0xff;
  return arr;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (parse);

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/regex.js":
/*!*****************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/regex.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i);

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/rng.js":
/*!***************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/rng.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ rng)
/* harmony export */ });
// Unique ID creation requires a high quality random # generator. In the browser we therefore
// require the crypto API and do not support built-in fallback to lower quality random number
// generators (like Math.random()).
var getRandomValues;
var rnds8 = new Uint8Array(16);
function rng() {
  // lazy load so that environments that need to polyfill have a chance to do so
  if (!getRandomValues) {
    // getRandomValues needs to be invoked in a context where "this" is a Crypto implementation. Also,
    // find the complete implementation of crypto (msCrypto) on IE11.
    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);

    if (!getRandomValues) {
      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');
    }
  }

  return getRandomValues(rnds8);
}

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/sha1.js":
/*!****************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/sha1.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Adapted from Chris Veness' SHA1 code at
// http://www.movable-type.co.uk/scripts/sha1.html
function f(s, x, y, z) {
  switch (s) {
    case 0:
      return x & y ^ ~x & z;

    case 1:
      return x ^ y ^ z;

    case 2:
      return x & y ^ x & z ^ y & z;

    case 3:
      return x ^ y ^ z;
  }
}

function ROTL(x, n) {
  return x << n | x >>> 32 - n;
}

function sha1(bytes) {
  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];
  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];

  if (typeof bytes === 'string') {
    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape

    bytes = [];

    for (var i = 0; i < msg.length; ++i) {
      bytes.push(msg.charCodeAt(i));
    }
  } else if (!Array.isArray(bytes)) {
    // Convert Array-like to Array
    bytes = Array.prototype.slice.call(bytes);
  }

  bytes.push(0x80);
  var l = bytes.length / 4 + 2;
  var N = Math.ceil(l / 16);
  var M = new Array(N);

  for (var _i = 0; _i < N; ++_i) {
    var arr = new Uint32Array(16);

    for (var j = 0; j < 16; ++j) {
      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];
    }

    M[_i] = arr;
  }

  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);
  M[N - 1][14] = Math.floor(M[N - 1][14]);
  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;

  for (var _i2 = 0; _i2 < N; ++_i2) {
    var W = new Uint32Array(80);

    for (var t = 0; t < 16; ++t) {
      W[t] = M[_i2][t];
    }

    for (var _t = 16; _t < 80; ++_t) {
      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);
    }

    var a = H[0];
    var b = H[1];
    var c = H[2];
    var d = H[3];
    var e = H[4];

    for (var _t2 = 0; _t2 < 80; ++_t2) {
      var s = Math.floor(_t2 / 20);
      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;
      e = d;
      d = c;
      c = ROTL(b, 30) >>> 0;
      b = a;
      a = T;
    }

    H[0] = H[0] + a >>> 0;
    H[1] = H[1] + b >>> 0;
    H[2] = H[2] + c >>> 0;
    H[3] = H[3] + d >>> 0;
    H[4] = H[4] + e >>> 0;
  }

  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (sha1);

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/stringify.js":
/*!*********************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/stringify.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ "./node_modules/uuid/dist/esm-browser/validate.js");

/**
 * Convert array of 16 byte values to UUID string format of the form:
 * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
 */

var byteToHex = [];

for (var i = 0; i < 256; ++i) {
  byteToHex.push((i + 0x100).toString(16).substr(1));
}

function stringify(arr) {
  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  // Note: Be careful editing this code!  It's been tuned for performance
  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434
  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one
  // of the following:
  // - One or more input array values don't map to a hex octet (leading to
  // "undefined" in the uuid)
  // - Invalid input values for the RFC `version` or `variant` fields

  if (!(0,_validate_js__WEBPACK_IMPORTED_MODULE_0__["default"])(uuid)) {
    throw TypeError('Stringified UUID is invalid');
  }

  return uuid;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (stringify);

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/v1.js":
/*!**************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/v1.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rng.js */ "./node_modules/uuid/dist/esm-browser/rng.js");
/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stringify.js */ "./node_modules/uuid/dist/esm-browser/stringify.js");

 // **`v1()` - Generate time-based UUID**
//
// Inspired by https://github.com/LiosK/UUID.js
// and http://docs.python.org/library/uuid.html

var _nodeId;

var _clockseq; // Previous uuid creation time


var _lastMSecs = 0;
var _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details

function v1(options, buf, offset) {
  var i = buf && offset || 0;
  var b = buf || new Array(16);
  options = options || {};
  var node = options.node || _nodeId;
  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not
  // specified.  We do this lazily to minimize issues related to insufficient
  // system entropy.  See #189

  if (node == null || clockseq == null) {
    var seedBytes = options.random || (options.rng || _rng_js__WEBPACK_IMPORTED_MODULE_0__["default"])();

    if (node == null) {
      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)
      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];
    }

    if (clockseq == null) {
      // Per 4.2.2, randomize (14 bit) clockseq
      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;
    }
  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,
  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so
  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'
  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.


  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock
  // cycle to simulate higher resolution clock

  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)

  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression

  if (dt < 0 && options.clockseq === undefined) {
    clockseq = clockseq + 1 & 0x3fff;
  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new
  // time interval


  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {
    nsecs = 0;
  } // Per 4.2.1.2 Throw error if too many uuids are requested


  if (nsecs >= 10000) {
    throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");
  }

  _lastMSecs = msecs;
  _lastNSecs = nsecs;
  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch

  msecs += 12219292800000; // `time_low`

  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;
  b[i++] = tl >>> 24 & 0xff;
  b[i++] = tl >>> 16 & 0xff;
  b[i++] = tl >>> 8 & 0xff;
  b[i++] = tl & 0xff; // `time_mid`

  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;
  b[i++] = tmh >>> 8 & 0xff;
  b[i++] = tmh & 0xff; // `time_high_and_version`

  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version

  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)

  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`

  b[i++] = clockseq & 0xff; // `node`

  for (var n = 0; n < 6; ++n) {
    b[i + n] = node[n];
  }

  return buf || (0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__["default"])(b);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v1);

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/v3.js":
/*!**************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/v3.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _v35_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v35.js */ "./node_modules/uuid/dist/esm-browser/v35.js");
/* harmony import */ var _md5_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./md5.js */ "./node_modules/uuid/dist/esm-browser/md5.js");


var v3 = (0,_v35_js__WEBPACK_IMPORTED_MODULE_0__["default"])('v3', 0x30, _md5_js__WEBPACK_IMPORTED_MODULE_1__["default"]);
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v3);

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/v35.js":
/*!***************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/v35.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DNS: () => (/* binding */ DNS),
/* harmony export */   URL: () => (/* binding */ URL),
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stringify.js */ "./node_modules/uuid/dist/esm-browser/stringify.js");
/* harmony import */ var _parse_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parse.js */ "./node_modules/uuid/dist/esm-browser/parse.js");



function stringToBytes(str) {
  str = unescape(encodeURIComponent(str)); // UTF8 escape

  var bytes = [];

  for (var i = 0; i < str.length; ++i) {
    bytes.push(str.charCodeAt(i));
  }

  return bytes;
}

var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';
var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name, version, hashfunc) {
  function generateUUID(value, namespace, buf, offset) {
    if (typeof value === 'string') {
      value = stringToBytes(value);
    }

    if (typeof namespace === 'string') {
      namespace = (0,_parse_js__WEBPACK_IMPORTED_MODULE_0__["default"])(namespace);
    }

    if (namespace.length !== 16) {
      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');
    } // Compute hash of namespace and value, Per 4.3
    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =
    // hashfunc([...namespace, ... value])`


    var bytes = new Uint8Array(16 + value.length);
    bytes.set(namespace);
    bytes.set(value, namespace.length);
    bytes = hashfunc(bytes);
    bytes[6] = bytes[6] & 0x0f | version;
    bytes[8] = bytes[8] & 0x3f | 0x80;

    if (buf) {
      offset = offset || 0;

      for (var i = 0; i < 16; ++i) {
        buf[offset + i] = bytes[i];
      }

      return buf;
    }

    return (0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__["default"])(bytes);
  } // Function#name is not settable on some platforms (#270)


  try {
    generateUUID.name = name; // eslint-disable-next-line no-empty
  } catch (err) {} // For CommonJS default export support


  generateUUID.DNS = DNS;
  generateUUID.URL = URL;
  return generateUUID;
}

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/v4.js":
/*!**************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/v4.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rng.js */ "./node_modules/uuid/dist/esm-browser/rng.js");
/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stringify.js */ "./node_modules/uuid/dist/esm-browser/stringify.js");



function v4(options, buf, offset) {
  options = options || {};
  var rnds = options.random || (options.rng || _rng_js__WEBPACK_IMPORTED_MODULE_0__["default"])(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`

  rnds[6] = rnds[6] & 0x0f | 0x40;
  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided

  if (buf) {
    offset = offset || 0;

    for (var i = 0; i < 16; ++i) {
      buf[offset + i] = rnds[i];
    }

    return buf;
  }

  return (0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__["default"])(rnds);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v4);

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/v5.js":
/*!**************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/v5.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _v35_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v35.js */ "./node_modules/uuid/dist/esm-browser/v35.js");
/* harmony import */ var _sha1_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sha1.js */ "./node_modules/uuid/dist/esm-browser/sha1.js");


var v5 = (0,_v35_js__WEBPACK_IMPORTED_MODULE_0__["default"])('v5', 0x50, _sha1_js__WEBPACK_IMPORTED_MODULE_1__["default"]);
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v5);

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/validate.js":
/*!********************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/validate.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _regex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./regex.js */ "./node_modules/uuid/dist/esm-browser/regex.js");


function validate(uuid) {
  return typeof uuid === 'string' && _regex_js__WEBPACK_IMPORTED_MODULE_0__["default"].test(uuid);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (validate);

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/version.js":
/*!*******************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/version.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ "./node_modules/uuid/dist/esm-browser/validate.js");


function version(uuid) {
  if (!(0,_validate_js__WEBPACK_IMPORTED_MODULE_0__["default"])(uuid)) {
    throw TypeError('Invalid UUID');
  }

  return parseInt(uuid.substr(14, 1), 16);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (version);

/***/ }),

/***/ "./node_modules/vscode-jsonrpc/browser.js":
/*!************************************************!*\
  !*** ./node_modules/vscode-jsonrpc/browser.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ----------------------------------------------------------------------------------------- */


module.exports = __webpack_require__(/*! ./lib/browser/main */ "./node_modules/vscode-jsonrpc/lib/browser/main.js");

/***/ }),

/***/ "./node_modules/vscode-jsonrpc/lib/browser/main.js":
/*!*********************************************************!*\
  !*** ./node_modules/vscode-jsonrpc/lib/browser/main.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createMessageConnection = exports.BrowserMessageWriter = exports.BrowserMessageReader = void 0;
const ril_1 = __webpack_require__(/*! ./ril */ "./node_modules/vscode-jsonrpc/lib/browser/ril.js");
// Install the browser runtime abstract.
ril_1.default.install();
const api_1 = __webpack_require__(/*! ../common/api */ "./node_modules/vscode-jsonrpc/lib/common/api.js");
__exportStar(__webpack_require__(/*! ../common/api */ "./node_modules/vscode-jsonrpc/lib/common/api.js"), exports);
class BrowserMessageReader extends api_1.AbstractMessageReader {
    constructor(port) {
        super();
        this._onData = new api_1.Emitter();
        this._messageListener = (event) => {
            this._onData.fire(event.data);
        };
        port.addEventListener('error', (event) => this.fireError(event));
        port.onmessage = this._messageListener;
    }
    listen(callback) {
        return this._onData.event(callback);
    }
}
exports.BrowserMessageReader = BrowserMessageReader;
class BrowserMessageWriter extends api_1.AbstractMessageWriter {
    constructor(port) {
        super();
        this.port = port;
        this.errorCount = 0;
        port.addEventListener('error', (event) => this.fireError(event));
    }
    write(msg) {
        try {
            this.port.postMessage(msg);
            return Promise.resolve();
        }
        catch (error) {
            this.handleError(error, msg);
            return Promise.reject(error);
        }
    }
    handleError(error, msg) {
        this.errorCount++;
        this.fireError(error, msg, this.errorCount);
    }
    end() {
    }
}
exports.BrowserMessageWriter = BrowserMessageWriter;
function createMessageConnection(reader, writer, logger, options) {
    if (logger === undefined) {
        logger = api_1.NullLogger;
    }
    if (api_1.ConnectionStrategy.is(options)) {
        options = { connectionStrategy: options };
    }
    return (0, api_1.createMessageConnection)(reader, writer, logger, options);
}
exports.createMessageConnection = createMessageConnection;


/***/ }),

/***/ "./node_modules/vscode-jsonrpc/lib/browser/ril.js":
/*!********************************************************!*\
  !*** ./node_modules/vscode-jsonrpc/lib/browser/ril.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
const api_1 = __webpack_require__(/*! ../common/api */ "./node_modules/vscode-jsonrpc/lib/common/api.js");
class MessageBuffer extends api_1.AbstractMessageBuffer {
    constructor(encoding = 'utf-8') {
        super(encoding);
        this.asciiDecoder = new TextDecoder('ascii');
    }
    emptyBuffer() {
        return MessageBuffer.emptyBuffer;
    }
    fromString(value, _encoding) {
        return (new TextEncoder()).encode(value);
    }
    toString(value, encoding) {
        if (encoding === 'ascii') {
            return this.asciiDecoder.decode(value);
        }
        else {
            return (new TextDecoder(encoding)).decode(value);
        }
    }
    asNative(buffer, length) {
        if (length === undefined) {
            return buffer;
        }
        else {
            return buffer.slice(0, length);
        }
    }
    allocNative(length) {
        return new Uint8Array(length);
    }
}
MessageBuffer.emptyBuffer = new Uint8Array(0);
class ReadableStreamWrapper {
    constructor(socket) {
        this.socket = socket;
        this._onData = new api_1.Emitter();
        this._messageListener = (event) => {
            const blob = event.data;
            blob.arrayBuffer().then((buffer) => {
                this._onData.fire(new Uint8Array(buffer));
            }, () => {
                (0, api_1.RAL)().console.error(`Converting blob to array buffer failed.`);
            });
        };
        this.socket.addEventListener('message', this._messageListener);
    }
    onClose(listener) {
        this.socket.addEventListener('close', listener);
        return api_1.Disposable.create(() => this.socket.removeEventListener('close', listener));
    }
    onError(listener) {
        this.socket.addEventListener('error', listener);
        return api_1.Disposable.create(() => this.socket.removeEventListener('error', listener));
    }
    onEnd(listener) {
        this.socket.addEventListener('end', listener);
        return api_1.Disposable.create(() => this.socket.removeEventListener('end', listener));
    }
    onData(listener) {
        return this._onData.event(listener);
    }
}
class WritableStreamWrapper {
    constructor(socket) {
        this.socket = socket;
    }
    onClose(listener) {
        this.socket.addEventListener('close', listener);
        return api_1.Disposable.create(() => this.socket.removeEventListener('close', listener));
    }
    onError(listener) {
        this.socket.addEventListener('error', listener);
        return api_1.Disposable.create(() => this.socket.removeEventListener('error', listener));
    }
    onEnd(listener) {
        this.socket.addEventListener('end', listener);
        return api_1.Disposable.create(() => this.socket.removeEventListener('end', listener));
    }
    write(data, encoding) {
        if (typeof data === 'string') {
            if (encoding !== undefined && encoding !== 'utf-8') {
                throw new Error(`In a Browser environments only utf-8 text encoding is supported. But got encoding: ${encoding}`);
            }
            this.socket.send(data);
        }
        else {
            this.socket.send(data);
        }
        return Promise.resolve();
    }
    end() {
        this.socket.close();
    }
}
const _textEncoder = new TextEncoder();
const _ril = Object.freeze({
    messageBuffer: Object.freeze({
        create: (encoding) => new MessageBuffer(encoding)
    }),
    applicationJson: Object.freeze({
        encoder: Object.freeze({
            name: 'application/json',
            encode: (msg, options) => {
                if (options.charset !== 'utf-8') {
                    throw new Error(`In a Browser environments only utf-8 text encoding is supported. But got encoding: ${options.charset}`);
                }
                return Promise.resolve(_textEncoder.encode(JSON.stringify(msg, undefined, 0)));
            }
        }),
        decoder: Object.freeze({
            name: 'application/json',
            decode: (buffer, options) => {
                if (!(buffer instanceof Uint8Array)) {
                    throw new Error(`In a Browser environments only Uint8Arrays are supported.`);
                }
                return Promise.resolve(JSON.parse(new TextDecoder(options.charset).decode(buffer)));
            }
        })
    }),
    stream: Object.freeze({
        asReadableStream: (socket) => new ReadableStreamWrapper(socket),
        asWritableStream: (socket) => new WritableStreamWrapper(socket)
    }),
    console: console,
    timer: Object.freeze({
        setTimeout(callback, ms, ...args) {
            const handle = setTimeout(callback, ms, ...args);
            return { dispose: () => clearTimeout(handle) };
        },
        setImmediate(callback, ...args) {
            const handle = setTimeout(callback, 0, ...args);
            return { dispose: () => clearTimeout(handle) };
        },
        setInterval(callback, ms, ...args) {
            const handle = setInterval(callback, ms, ...args);
            return { dispose: () => clearInterval(handle) };
        },
    })
});
function RIL() {
    return _ril;
}
(function (RIL) {
    function install() {
        api_1.RAL.install(_ril);
    }
    RIL.install = install;
})(RIL || (RIL = {}));
exports["default"] = RIL;


/***/ }),

/***/ "./node_modules/vscode-jsonrpc/lib/common/api.js":
/*!*******************************************************!*\
  !*** ./node_modules/vscode-jsonrpc/lib/common/api.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
/// <reference path="../../typings/thenable.d.ts" />
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ProgressType = exports.ProgressToken = exports.createMessageConnection = exports.NullLogger = exports.ConnectionOptions = exports.ConnectionStrategy = exports.AbstractMessageBuffer = exports.WriteableStreamMessageWriter = exports.AbstractMessageWriter = exports.MessageWriter = exports.ReadableStreamMessageReader = exports.AbstractMessageReader = exports.MessageReader = exports.SharedArrayReceiverStrategy = exports.SharedArraySenderStrategy = exports.CancellationToken = exports.CancellationTokenSource = exports.Emitter = exports.Event = exports.Disposable = exports.LRUCache = exports.Touch = exports.LinkedMap = exports.ParameterStructures = exports.NotificationType9 = exports.NotificationType8 = exports.NotificationType7 = exports.NotificationType6 = exports.NotificationType5 = exports.NotificationType4 = exports.NotificationType3 = exports.NotificationType2 = exports.NotificationType1 = exports.NotificationType0 = exports.NotificationType = exports.ErrorCodes = exports.ResponseError = exports.RequestType9 = exports.RequestType8 = exports.RequestType7 = exports.RequestType6 = exports.RequestType5 = exports.RequestType4 = exports.RequestType3 = exports.RequestType2 = exports.RequestType1 = exports.RequestType0 = exports.RequestType = exports.Message = exports.RAL = void 0;
exports.MessageStrategy = exports.CancellationStrategy = exports.CancellationSenderStrategy = exports.CancellationReceiverStrategy = exports.ConnectionError = exports.ConnectionErrors = exports.LogTraceNotification = exports.SetTraceNotification = exports.TraceFormat = exports.TraceValues = exports.Trace = void 0;
const messages_1 = __webpack_require__(/*! ./messages */ "./node_modules/vscode-jsonrpc/lib/common/messages.js");
Object.defineProperty(exports, "Message", ({ enumerable: true, get: function () { return messages_1.Message; } }));
Object.defineProperty(exports, "RequestType", ({ enumerable: true, get: function () { return messages_1.RequestType; } }));
Object.defineProperty(exports, "RequestType0", ({ enumerable: true, get: function () { return messages_1.RequestType0; } }));
Object.defineProperty(exports, "RequestType1", ({ enumerable: true, get: function () { return messages_1.RequestType1; } }));
Object.defineProperty(exports, "RequestType2", ({ enumerable: true, get: function () { return messages_1.RequestType2; } }));
Object.defineProperty(exports, "RequestType3", ({ enumerable: true, get: function () { return messages_1.RequestType3; } }));
Object.defineProperty(exports, "RequestType4", ({ enumerable: true, get: function () { return messages_1.RequestType4; } }));
Object.defineProperty(exports, "RequestType5", ({ enumerable: true, get: function () { return messages_1.RequestType5; } }));
Object.defineProperty(exports, "RequestType6", ({ enumerable: true, get: function () { return messages_1.RequestType6; } }));
Object.defineProperty(exports, "RequestType7", ({ enumerable: true, get: function () { return messages_1.RequestType7; } }));
Object.defineProperty(exports, "RequestType8", ({ enumerable: true, get: function () { return messages_1.RequestType8; } }));
Object.defineProperty(exports, "RequestType9", ({ enumerable: true, get: function () { return messages_1.RequestType9; } }));
Object.defineProperty(exports, "ResponseError", ({ enumerable: true, get: function () { return messages_1.ResponseError; } }));
Object.defineProperty(exports, "ErrorCodes", ({ enumerable: true, get: function () { return messages_1.ErrorCodes; } }));
Object.defineProperty(exports, "NotificationType", ({ enumerable: true, get: function () { return messages_1.NotificationType; } }));
Object.defineProperty(exports, "NotificationType0", ({ enumerable: true, get: function () { return messages_1.NotificationType0; } }));
Object.defineProperty(exports, "NotificationType1", ({ enumerable: true, get: function () { return messages_1.NotificationType1; } }));
Object.defineProperty(exports, "NotificationType2", ({ enumerable: true, get: function () { return messages_1.NotificationType2; } }));
Object.defineProperty(exports, "NotificationType3", ({ enumerable: true, get: function () { return messages_1.NotificationType3; } }));
Object.defineProperty(exports, "NotificationType4", ({ enumerable: true, get: function () { return messages_1.NotificationType4; } }));
Object.defineProperty(exports, "NotificationType5", ({ enumerable: true, get: function () { return messages_1.NotificationType5; } }));
Object.defineProperty(exports, "NotificationType6", ({ enumerable: true, get: function () { return messages_1.NotificationType6; } }));
Object.defineProperty(exports, "NotificationType7", ({ enumerable: true, get: function () { return messages_1.NotificationType7; } }));
Object.defineProperty(exports, "NotificationType8", ({ enumerable: true, get: function () { return messages_1.NotificationType8; } }));
Object.defineProperty(exports, "NotificationType9", ({ enumerable: true, get: function () { return messages_1.NotificationType9; } }));
Object.defineProperty(exports, "ParameterStructures", ({ enumerable: true, get: function () { return messages_1.ParameterStructures; } }));
const linkedMap_1 = __webpack_require__(/*! ./linkedMap */ "./node_modules/vscode-jsonrpc/lib/common/linkedMap.js");
Object.defineProperty(exports, "LinkedMap", ({ enumerable: true, get: function () { return linkedMap_1.LinkedMap; } }));
Object.defineProperty(exports, "LRUCache", ({ enumerable: true, get: function () { return linkedMap_1.LRUCache; } }));
Object.defineProperty(exports, "Touch", ({ enumerable: true, get: function () { return linkedMap_1.Touch; } }));
const disposable_1 = __webpack_require__(/*! ./disposable */ "./node_modules/vscode-jsonrpc/lib/common/disposable.js");
Object.defineProperty(exports, "Disposable", ({ enumerable: true, get: function () { return disposable_1.Disposable; } }));
const events_1 = __webpack_require__(/*! ./events */ "./node_modules/vscode-jsonrpc/lib/common/events.js");
Object.defineProperty(exports, "Event", ({ enumerable: true, get: function () { return events_1.Event; } }));
Object.defineProperty(exports, "Emitter", ({ enumerable: true, get: function () { return events_1.Emitter; } }));
const cancellation_1 = __webpack_require__(/*! ./cancellation */ "./node_modules/vscode-jsonrpc/lib/common/cancellation.js");
Object.defineProperty(exports, "CancellationTokenSource", ({ enumerable: true, get: function () { return cancellation_1.CancellationTokenSource; } }));
Object.defineProperty(exports, "CancellationToken", ({ enumerable: true, get: function () { return cancellation_1.CancellationToken; } }));
const sharedArrayCancellation_1 = __webpack_require__(/*! ./sharedArrayCancellation */ "./node_modules/vscode-jsonrpc/lib/common/sharedArrayCancellation.js");
Object.defineProperty(exports, "SharedArraySenderStrategy", ({ enumerable: true, get: function () { return sharedArrayCancellation_1.SharedArraySenderStrategy; } }));
Object.defineProperty(exports, "SharedArrayReceiverStrategy", ({ enumerable: true, get: function () { return sharedArrayCancellation_1.SharedArrayReceiverStrategy; } }));
const messageReader_1 = __webpack_require__(/*! ./messageReader */ "./node_modules/vscode-jsonrpc/lib/common/messageReader.js");
Object.defineProperty(exports, "MessageReader", ({ enumerable: true, get: function () { return messageReader_1.MessageReader; } }));
Object.defineProperty(exports, "AbstractMessageReader", ({ enumerable: true, get: function () { return messageReader_1.AbstractMessageReader; } }));
Object.defineProperty(exports, "ReadableStreamMessageReader", ({ enumerable: true, get: function () { return messageReader_1.ReadableStreamMessageReader; } }));
const messageWriter_1 = __webpack_require__(/*! ./messageWriter */ "./node_modules/vscode-jsonrpc/lib/common/messageWriter.js");
Object.defineProperty(exports, "MessageWriter", ({ enumerable: true, get: function () { return messageWriter_1.MessageWriter; } }));
Object.defineProperty(exports, "AbstractMessageWriter", ({ enumerable: true, get: function () { return messageWriter_1.AbstractMessageWriter; } }));
Object.defineProperty(exports, "WriteableStreamMessageWriter", ({ enumerable: true, get: function () { return messageWriter_1.WriteableStreamMessageWriter; } }));
const messageBuffer_1 = __webpack_require__(/*! ./messageBuffer */ "./node_modules/vscode-jsonrpc/lib/common/messageBuffer.js");
Object.defineProperty(exports, "AbstractMessageBuffer", ({ enumerable: true, get: function () { return messageBuffer_1.AbstractMessageBuffer; } }));
const connection_1 = __webpack_require__(/*! ./connection */ "./node_modules/vscode-jsonrpc/lib/common/connection.js");
Object.defineProperty(exports, "ConnectionStrategy", ({ enumerable: true, get: function () { return connection_1.ConnectionStrategy; } }));
Object.defineProperty(exports, "ConnectionOptions", ({ enumerable: true, get: function () { return connection_1.ConnectionOptions; } }));
Object.defineProperty(exports, "NullLogger", ({ enumerable: true, get: function () { return connection_1.NullLogger; } }));
Object.defineProperty(exports, "createMessageConnection", ({ enumerable: true, get: function () { return connection_1.createMessageConnection; } }));
Object.defineProperty(exports, "ProgressToken", ({ enumerable: true, get: function () { return connection_1.ProgressToken; } }));
Object.defineProperty(exports, "ProgressType", ({ enumerable: true, get: function () { return connection_1.ProgressType; } }));
Object.defineProperty(exports, "Trace", ({ enumerable: true, get: function () { return connection_1.Trace; } }));
Object.defineProperty(exports, "TraceValues", ({ enumerable: true, get: function () { return connection_1.TraceValues; } }));
Object.defineProperty(exports, "TraceFormat", ({ enumerable: true, get: function () { return connection_1.TraceFormat; } }));
Object.defineProperty(exports, "SetTraceNotification", ({ enumerable: true, get: function () { return connection_1.SetTraceNotification; } }));
Object.defineProperty(exports, "LogTraceNotification", ({ enumerable: true, get: function () { return connection_1.LogTraceNotification; } }));
Object.defineProperty(exports, "ConnectionErrors", ({ enumerable: true, get: function () { return connection_1.ConnectionErrors; } }));
Object.defineProperty(exports, "ConnectionError", ({ enumerable: true, get: function () { return connection_1.ConnectionError; } }));
Object.defineProperty(exports, "CancellationReceiverStrategy", ({ enumerable: true, get: function () { return connection_1.CancellationReceiverStrategy; } }));
Object.defineProperty(exports, "CancellationSenderStrategy", ({ enumerable: true, get: function () { return connection_1.CancellationSenderStrategy; } }));
Object.defineProperty(exports, "CancellationStrategy", ({ enumerable: true, get: function () { return connection_1.CancellationStrategy; } }));
Object.defineProperty(exports, "MessageStrategy", ({ enumerable: true, get: function () { return connection_1.MessageStrategy; } }));
const ral_1 = __webpack_require__(/*! ./ral */ "./node_modules/vscode-jsonrpc/lib/common/ral.js");
exports.RAL = ral_1.default;


/***/ }),

/***/ "./node_modules/vscode-jsonrpc/lib/common/cancellation.js":
/*!****************************************************************!*\
  !*** ./node_modules/vscode-jsonrpc/lib/common/cancellation.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CancellationTokenSource = exports.CancellationToken = void 0;
const ral_1 = __webpack_require__(/*! ./ral */ "./node_modules/vscode-jsonrpc/lib/common/ral.js");
const Is = __webpack_require__(/*! ./is */ "./node_modules/vscode-jsonrpc/lib/common/is.js");
const events_1 = __webpack_require__(/*! ./events */ "./node_modules/vscode-jsonrpc/lib/common/events.js");
var CancellationToken;
(function (CancellationToken) {
    CancellationToken.None = Object.freeze({
        isCancellationRequested: false,
        onCancellationRequested: events_1.Event.None
    });
    CancellationToken.Cancelled = Object.freeze({
        isCancellationRequested: true,
        onCancellationRequested: events_1.Event.None
    });
    function is(value) {
        const candidate = value;
        return candidate && (candidate === CancellationToken.None
            || candidate === CancellationToken.Cancelled
            || (Is.boolean(candidate.isCancellationRequested) && !!candidate.onCancellationRequested));
    }
    CancellationToken.is = is;
})(CancellationToken = exports.CancellationToken || (exports.CancellationToken = {}));
const shortcutEvent = Object.freeze(function (callback, context) {
    const handle = (0, ral_1.default)().timer.setTimeout(callback.bind(context), 0);
    return { dispose() { handle.dispose(); } };
});
class MutableToken {
    constructor() {
        this._isCancelled = false;
    }
    cancel() {
        if (!this._isCancelled) {
            this._isCancelled = true;
            if (this._emitter) {
                this._emitter.fire(undefined);
                this.dispose();
            }
        }
    }
    get isCancellationRequested() {
        return this._isCancelled;
    }
    get onCancellationRequested() {
        if (this._isCancelled) {
            return shortcutEvent;
        }
        if (!this._emitter) {
            this._emitter = new events_1.Emitter();
        }
        return this._emitter.event;
    }
    dispose() {
        if (this._emitter) {
            this._emitter.dispose();
            this._emitter = undefined;
        }
    }
}
class CancellationTokenSource {
    get token() {
        if (!this._token) {
            // be lazy and create the token only when
            // actually needed
            this._token = new MutableToken();
        }
        return this._token;
    }
    cancel() {
        if (!this._token) {
            // save an object by returning the default
            // cancelled token when cancellation happens
            // before someone asks for the token
            this._token = CancellationToken.Cancelled;
        }
        else {
            this._token.cancel();
        }
    }
    dispose() {
        if (!this._token) {
            // ensure to initialize with an empty token if we had none
            this._token = CancellationToken.None;
        }
        else if (this._token instanceof MutableToken) {
            // actually dispose
            this._token.dispose();
        }
    }
}
exports.CancellationTokenSource = CancellationTokenSource;


/***/ }),

/***/ "./node_modules/vscode-jsonrpc/lib/common/connection.js":
/*!**************************************************************!*\
  !*** ./node_modules/vscode-jsonrpc/lib/common/connection.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createMessageConnection = exports.ConnectionOptions = exports.MessageStrategy = exports.CancellationStrategy = exports.CancellationSenderStrategy = exports.CancellationReceiverStrategy = exports.RequestCancellationReceiverStrategy = exports.IdCancellationReceiverStrategy = exports.ConnectionStrategy = exports.ConnectionError = exports.ConnectionErrors = exports.LogTraceNotification = exports.SetTraceNotification = exports.TraceFormat = exports.TraceValues = exports.Trace = exports.NullLogger = exports.ProgressType = exports.ProgressToken = void 0;
const ral_1 = __webpack_require__(/*! ./ral */ "./node_modules/vscode-jsonrpc/lib/common/ral.js");
const Is = __webpack_require__(/*! ./is */ "./node_modules/vscode-jsonrpc/lib/common/is.js");
const messages_1 = __webpack_require__(/*! ./messages */ "./node_modules/vscode-jsonrpc/lib/common/messages.js");
const linkedMap_1 = __webpack_require__(/*! ./linkedMap */ "./node_modules/vscode-jsonrpc/lib/common/linkedMap.js");
const events_1 = __webpack_require__(/*! ./events */ "./node_modules/vscode-jsonrpc/lib/common/events.js");
const cancellation_1 = __webpack_require__(/*! ./cancellation */ "./node_modules/vscode-jsonrpc/lib/common/cancellation.js");
var CancelNotification;
(function (CancelNotification) {
    CancelNotification.type = new messages_1.NotificationType('$/cancelRequest');
})(CancelNotification || (CancelNotification = {}));
var ProgressToken;
(function (ProgressToken) {
    function is(value) {
        return typeof value === 'string' || typeof value === 'number';
    }
    ProgressToken.is = is;
})(ProgressToken = exports.ProgressToken || (exports.ProgressToken = {}));
var ProgressNotification;
(function (ProgressNotification) {
    ProgressNotification.type = new messages_1.NotificationType('$/progress');
})(ProgressNotification || (ProgressNotification = {}));
class ProgressType {
    constructor() {
    }
}
exports.ProgressType = ProgressType;
var StarRequestHandler;
(function (StarRequestHandler) {
    function is(value) {
        return Is.func(value);
    }
    StarRequestHandler.is = is;
})(StarRequestHandler || (StarRequestHandler = {}));
exports.NullLogger = Object.freeze({
    error: () => { },
    warn: () => { },
    info: () => { },
    log: () => { }
});
var Trace;
(function (Trace) {
    Trace[Trace["Off"] = 0] = "Off";
    Trace[Trace["Messages"] = 1] = "Messages";
    Trace[Trace["Compact"] = 2] = "Compact";
    Trace[Trace["Verbose"] = 3] = "Verbose";
})(Trace = exports.Trace || (exports.Trace = {}));
var TraceValues;
(function (TraceValues) {
    /**
     * Turn tracing off.
     */
    TraceValues.Off = 'off';
    /**
     * Trace messages only.
     */
    TraceValues.Messages = 'messages';
    /**
     * Compact message tracing.
     */
    TraceValues.Compact = 'compact';
    /**
     * Verbose message tracing.
     */
    TraceValues.Verbose = 'verbose';
})(TraceValues = exports.TraceValues || (exports.TraceValues = {}));
(function (Trace) {
    function fromString(value) {
        if (!Is.string(value)) {
            return Trace.Off;
        }
        value = value.toLowerCase();
        switch (value) {
            case 'off':
                return Trace.Off;
            case 'messages':
                return Trace.Messages;
            case 'compact':
                return Trace.Compact;
            case 'verbose':
                return Trace.Verbose;
            default:
                return Trace.Off;
        }
    }
    Trace.fromString = fromString;
    function toString(value) {
        switch (value) {
            case Trace.Off:
                return 'off';
            case Trace.Messages:
                return 'messages';
            case Trace.Compact:
                return 'compact';
            case Trace.Verbose:
                return 'verbose';
            default:
                return 'off';
        }
    }
    Trace.toString = toString;
})(Trace = exports.Trace || (exports.Trace = {}));
var TraceFormat;
(function (TraceFormat) {
    TraceFormat["Text"] = "text";
    TraceFormat["JSON"] = "json";
})(TraceFormat = exports.TraceFormat || (exports.TraceFormat = {}));
(function (TraceFormat) {
    function fromString(value) {
        if (!Is.string(value)) {
            return TraceFormat.Text;
        }
        value = value.toLowerCase();
        if (value === 'json') {
            return TraceFormat.JSON;
        }
        else {
            return TraceFormat.Text;
        }
    }
    TraceFormat.fromString = fromString;
})(TraceFormat = exports.TraceFormat || (exports.TraceFormat = {}));
var SetTraceNotification;
(function (SetTraceNotification) {
    SetTraceNotification.type = new messages_1.NotificationType('$/setTrace');
})(SetTraceNotification = exports.SetTraceNotification || (exports.SetTraceNotification = {}));
var LogTraceNotification;
(function (LogTraceNotification) {
    LogTraceNotification.type = new messages_1.NotificationType('$/logTrace');
})(LogTraceNotification = exports.LogTraceNotification || (exports.LogTraceNotification = {}));
var ConnectionErrors;
(function (ConnectionErrors) {
    /**
     * The connection is closed.
     */
    ConnectionErrors[ConnectionErrors["Closed"] = 1] = "Closed";
    /**
     * The connection got disposed.
     */
    ConnectionErrors[ConnectionErrors["Disposed"] = 2] = "Disposed";
    /**
     * The connection is already in listening mode.
     */
    ConnectionErrors[ConnectionErrors["AlreadyListening"] = 3] = "AlreadyListening";
})(ConnectionErrors = exports.ConnectionErrors || (exports.ConnectionErrors = {}));
class ConnectionError extends Error {
    constructor(code, message) {
        super(message);
        this.code = code;
        Object.setPrototypeOf(this, ConnectionError.prototype);
    }
}
exports.ConnectionError = ConnectionError;
var ConnectionStrategy;
(function (ConnectionStrategy) {
    function is(value) {
        const candidate = value;
        return candidate && Is.func(candidate.cancelUndispatched);
    }
    ConnectionStrategy.is = is;
})(ConnectionStrategy = exports.ConnectionStrategy || (exports.ConnectionStrategy = {}));
var IdCancellationReceiverStrategy;
(function (IdCancellationReceiverStrategy) {
    function is(value) {
        const candidate = value;
        return candidate && (candidate.kind === undefined || candidate.kind === 'id') && Is.func(candidate.createCancellationTokenSource) && (candidate.dispose === undefined || Is.func(candidate.dispose));
    }
    IdCancellationReceiverStrategy.is = is;
})(IdCancellationReceiverStrategy = exports.IdCancellationReceiverStrategy || (exports.IdCancellationReceiverStrategy = {}));
var RequestCancellationReceiverStrategy;
(function (RequestCancellationReceiverStrategy) {
    function is(value) {
        const candidate = value;
        return candidate && candidate.kind === 'request' && Is.func(candidate.createCancellationTokenSource) && (candidate.dispose === undefined || Is.func(candidate.dispose));
    }
    RequestCancellationReceiverStrategy.is = is;
})(RequestCancellationReceiverStrategy = exports.RequestCancellationReceiverStrategy || (exports.RequestCancellationReceiverStrategy = {}));
var CancellationReceiverStrategy;
(function (CancellationReceiverStrategy) {
    CancellationReceiverStrategy.Message = Object.freeze({
        createCancellationTokenSource(_) {
            return new cancellation_1.CancellationTokenSource();
        }
    });
    function is(value) {
        return IdCancellationReceiverStrategy.is(value) || RequestCancellationReceiverStrategy.is(value);
    }
    CancellationReceiverStrategy.is = is;
})(CancellationReceiverStrategy = exports.CancellationReceiverStrategy || (exports.CancellationReceiverStrategy = {}));
var CancellationSenderStrategy;
(function (CancellationSenderStrategy) {
    CancellationSenderStrategy.Message = Object.freeze({
        sendCancellation(conn, id) {
            return conn.sendNotification(CancelNotification.type, { id });
        },
        cleanup(_) { }
    });
    function is(value) {
        const candidate = value;
        return candidate && Is.func(candidate.sendCancellation) && Is.func(candidate.cleanup);
    }
    CancellationSenderStrategy.is = is;
})(CancellationSenderStrategy = exports.CancellationSenderStrategy || (exports.CancellationSenderStrategy = {}));
var CancellationStrategy;
(function (CancellationStrategy) {
    CancellationStrategy.Message = Object.freeze({
        receiver: CancellationReceiverStrategy.Message,
        sender: CancellationSenderStrategy.Message
    });
    function is(value) {
        const candidate = value;
        return candidate && CancellationReceiverStrategy.is(candidate.receiver) && CancellationSenderStrategy.is(candidate.sender);
    }
    CancellationStrategy.is = is;
})(CancellationStrategy = exports.CancellationStrategy || (exports.CancellationStrategy = {}));
var MessageStrategy;
(function (MessageStrategy) {
    function is(value) {
        const candidate = value;
        return candidate && Is.func(candidate.handleMessage);
    }
    MessageStrategy.is = is;
})(MessageStrategy = exports.MessageStrategy || (exports.MessageStrategy = {}));
var ConnectionOptions;
(function (ConnectionOptions) {
    function is(value) {
        const candidate = value;
        return candidate && (CancellationStrategy.is(candidate.cancellationStrategy) || ConnectionStrategy.is(candidate.connectionStrategy) || MessageStrategy.is(candidate.messageStrategy));
    }
    ConnectionOptions.is = is;
})(ConnectionOptions = exports.ConnectionOptions || (exports.ConnectionOptions = {}));
var ConnectionState;
(function (ConnectionState) {
    ConnectionState[ConnectionState["New"] = 1] = "New";
    ConnectionState[ConnectionState["Listening"] = 2] = "Listening";
    ConnectionState[ConnectionState["Closed"] = 3] = "Closed";
    ConnectionState[ConnectionState["Disposed"] = 4] = "Disposed";
})(ConnectionState || (ConnectionState = {}));
function createMessageConnection(messageReader, messageWriter, _logger, options) {
    const logger = _logger !== undefined ? _logger : exports.NullLogger;
    let sequenceNumber = 0;
    let notificationSequenceNumber = 0;
    let unknownResponseSequenceNumber = 0;
    const version = '2.0';
    let starRequestHandler = undefined;
    const requestHandlers = new Map();
    let starNotificationHandler = undefined;
    const notificationHandlers = new Map();
    const progressHandlers = new Map();
    let timer;
    let messageQueue = new linkedMap_1.LinkedMap();
    let responsePromises = new Map();
    let knownCanceledRequests = new Set();
    let requestTokens = new Map();
    let trace = Trace.Off;
    let traceFormat = TraceFormat.Text;
    let tracer;
    let state = ConnectionState.New;
    const errorEmitter = new events_1.Emitter();
    const closeEmitter = new events_1.Emitter();
    const unhandledNotificationEmitter = new events_1.Emitter();
    const unhandledProgressEmitter = new events_1.Emitter();
    const disposeEmitter = new events_1.Emitter();
    const cancellationStrategy = (options && options.cancellationStrategy) ? options.cancellationStrategy : CancellationStrategy.Message;
    function createRequestQueueKey(id) {
        if (id === null) {
            throw new Error(`Can't send requests with id null since the response can't be correlated.`);
        }
        return 'req-' + id.toString();
    }
    function createResponseQueueKey(id) {
        if (id === null) {
            return 'res-unknown-' + (++unknownResponseSequenceNumber).toString();
        }
        else {
            return 'res-' + id.toString();
        }
    }
    function createNotificationQueueKey() {
        return 'not-' + (++notificationSequenceNumber).toString();
    }
    function addMessageToQueue(queue, message) {
        if (messages_1.Message.isRequest(message)) {
            queue.set(createRequestQueueKey(message.id), message);
        }
        else if (messages_1.Message.isResponse(message)) {
            queue.set(createResponseQueueKey(message.id), message);
        }
        else {
            queue.set(createNotificationQueueKey(), message);
        }
    }
    function cancelUndispatched(_message) {
        return undefined;
    }
    function isListening() {
        return state === ConnectionState.Listening;
    }
    function isClosed() {
        return state === ConnectionState.Closed;
    }
    function isDisposed() {
        return state === ConnectionState.Disposed;
    }
    function closeHandler() {
        if (state === ConnectionState.New || state === ConnectionState.Listening) {
            state = ConnectionState.Closed;
            closeEmitter.fire(undefined);
        }
        // If the connection is disposed don't sent close events.
    }
    function readErrorHandler(error) {
        errorEmitter.fire([error, undefined, undefined]);
    }
    function writeErrorHandler(data) {
        errorEmitter.fire(data);
    }
    messageReader.onClose(closeHandler);
    messageReader.onError(readErrorHandler);
    messageWriter.onClose(closeHandler);
    messageWriter.onError(writeErrorHandler);
    function triggerMessageQueue() {
        if (timer || messageQueue.size === 0) {
            return;
        }
        timer = (0, ral_1.default)().timer.setImmediate(() => {
            timer = undefined;
            processMessageQueue();
        });
    }
    function handleMessage(message) {
        if (messages_1.Message.isRequest(message)) {
            handleRequest(message);
        }
        else if (messages_1.Message.isNotification(message)) {
            handleNotification(message);
        }
        else if (messages_1.Message.isResponse(message)) {
            handleResponse(message);
        }
        else {
            handleInvalidMessage(message);
        }
    }
    function processMessageQueue() {
        if (messageQueue.size === 0) {
            return;
        }
        const message = messageQueue.shift();
        try {
            const messageStrategy = options?.messageStrategy;
            if (MessageStrategy.is(messageStrategy)) {
                messageStrategy.handleMessage(message, handleMessage);
            }
            else {
                handleMessage(message);
            }
        }
        finally {
            triggerMessageQueue();
        }
    }
    const callback = (message) => {
        try {
            // We have received a cancellation message. Check if the message is still in the queue
            // and cancel it if allowed to do so.
            if (messages_1.Message.isNotification(message) && message.method === CancelNotification.type.method) {
                const cancelId = message.params.id;
                const key = createRequestQueueKey(cancelId);
                const toCancel = messageQueue.get(key);
                if (messages_1.Message.isRequest(toCancel)) {
                    const strategy = options?.connectionStrategy;
                    const response = (strategy && strategy.cancelUndispatched) ? strategy.cancelUndispatched(toCancel, cancelUndispatched) : cancelUndispatched(toCancel);
                    if (response && (response.error !== undefined || response.result !== undefined)) {
                        messageQueue.delete(key);
                        requestTokens.delete(cancelId);
                        response.id = toCancel.id;
                        traceSendingResponse(response, message.method, Date.now());
                        messageWriter.write(response).catch(() => logger.error(`Sending response for canceled message failed.`));
                        return;
                    }
                }
                const cancellationToken = requestTokens.get(cancelId);
                // The request is already running. Cancel the token
                if (cancellationToken !== undefined) {
                    cancellationToken.cancel();
                    traceReceivedNotification(message);
                    return;
                }
                else {
                    // Remember the cancel but still queue the message to
                    // clean up state in process message.
                    knownCanceledRequests.add(cancelId);
                }
            }
            addMessageToQueue(messageQueue, message);
        }
        finally {
            triggerMessageQueue();
        }
    };
    function handleRequest(requestMessage) {
        if (isDisposed()) {
            // we return here silently since we fired an event when the
            // connection got disposed.
            return;
        }
        function reply(resultOrError, method, startTime) {
            const message = {
                jsonrpc: version,
                id: requestMessage.id
            };
            if (resultOrError instanceof messages_1.ResponseError) {
                message.error = resultOrError.toJson();
            }
            else {
                message.result = resultOrError === undefined ? null : resultOrError;
            }
            traceSendingResponse(message, method, startTime);
            messageWriter.write(message).catch(() => logger.error(`Sending response failed.`));
        }
        function replyError(error, method, startTime) {
            const message = {
                jsonrpc: version,
                id: requestMessage.id,
                error: error.toJson()
            };
            traceSendingResponse(message, method, startTime);
            messageWriter.write(message).catch(() => logger.error(`Sending response failed.`));
        }
        function replySuccess(result, method, startTime) {
            // The JSON RPC defines that a response must either have a result or an error
            // So we can't treat undefined as a valid response result.
            if (result === undefined) {
                result = null;
            }
            const message = {
                jsonrpc: version,
                id: requestMessage.id,
                result: result
            };
            traceSendingResponse(message, method, startTime);
            messageWriter.write(message).catch(() => logger.error(`Sending response failed.`));
        }
        traceReceivedRequest(requestMessage);
        const element = requestHandlers.get(requestMessage.method);
        let type;
        let requestHandler;
        if (element) {
            type = element.type;
            requestHandler = element.handler;
        }
        const startTime = Date.now();
        if (requestHandler || starRequestHandler) {
            const tokenKey = requestMessage.id ?? String(Date.now()); //
            const cancellationSource = IdCancellationReceiverStrategy.is(cancellationStrategy.receiver)
                ? cancellationStrategy.receiver.createCancellationTokenSource(tokenKey)
                : cancellationStrategy.receiver.createCancellationTokenSource(requestMessage);
            if (requestMessage.id !== null && knownCanceledRequests.has(requestMessage.id)) {
                cancellationSource.cancel();
            }
            if (requestMessage.id !== null) {
                requestTokens.set(tokenKey, cancellationSource);
            }
            try {
                let handlerResult;
                if (requestHandler) {
                    if (requestMessage.params === undefined) {
                        if (type !== undefined && type.numberOfParams !== 0) {
                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InvalidParams, `Request ${requestMessage.method} defines ${type.numberOfParams} params but received none.`), requestMessage.method, startTime);
                            return;
                        }
                        handlerResult = requestHandler(cancellationSource.token);
                    }
                    else if (Array.isArray(requestMessage.params)) {
                        if (type !== undefined && type.parameterStructures === messages_1.ParameterStructures.byName) {
                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InvalidParams, `Request ${requestMessage.method} defines parameters by name but received parameters by position`), requestMessage.method, startTime);
                            return;
                        }
                        handlerResult = requestHandler(...requestMessage.params, cancellationSource.token);
                    }
                    else {
                        if (type !== undefined && type.parameterStructures === messages_1.ParameterStructures.byPosition) {
                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InvalidParams, `Request ${requestMessage.method} defines parameters by position but received parameters by name`), requestMessage.method, startTime);
                            return;
                        }
                        handlerResult = requestHandler(requestMessage.params, cancellationSource.token);
                    }
                }
                else if (starRequestHandler) {
                    handlerResult = starRequestHandler(requestMessage.method, requestMessage.params, cancellationSource.token);
                }
                const promise = handlerResult;
                if (!handlerResult) {
                    requestTokens.delete(tokenKey);
                    replySuccess(handlerResult, requestMessage.method, startTime);
                }
                else if (promise.then) {
                    promise.then((resultOrError) => {
                        requestTokens.delete(tokenKey);
                        reply(resultOrError, requestMessage.method, startTime);
                    }, error => {
                        requestTokens.delete(tokenKey);
                        if (error instanceof messages_1.ResponseError) {
                            replyError(error, requestMessage.method, startTime);
                        }
                        else if (error && Is.string(error.message)) {
                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed with message: ${error.message}`), requestMessage.method, startTime);
                        }
                        else {
                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed unexpectedly without providing any details.`), requestMessage.method, startTime);
                        }
                    });
                }
                else {
                    requestTokens.delete(tokenKey);
                    reply(handlerResult, requestMessage.method, startTime);
                }
            }
            catch (error) {
                requestTokens.delete(tokenKey);
                if (error instanceof messages_1.ResponseError) {
                    reply(error, requestMessage.method, startTime);
                }
                else if (error && Is.string(error.message)) {
                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed with message: ${error.message}`), requestMessage.method, startTime);
                }
                else {
                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed unexpectedly without providing any details.`), requestMessage.method, startTime);
                }
            }
        }
        else {
            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.MethodNotFound, `Unhandled method ${requestMessage.method}`), requestMessage.method, startTime);
        }
    }
    function handleResponse(responseMessage) {
        if (isDisposed()) {
            // See handle request.
            return;
        }
        if (responseMessage.id === null) {
            if (responseMessage.error) {
                logger.error(`Received response message without id: Error is: \n${JSON.stringify(responseMessage.error, undefined, 4)}`);
            }
            else {
                logger.error(`Received response message without id. No further error information provided.`);
            }
        }
        else {
            const key = responseMessage.id;
            const responsePromise = responsePromises.get(key);
            traceReceivedResponse(responseMessage, responsePromise);
            if (responsePromise !== undefined) {
                responsePromises.delete(key);
                try {
                    if (responseMessage.error) {
                        const error = responseMessage.error;
                        responsePromise.reject(new messages_1.ResponseError(error.code, error.message, error.data));
                    }
                    else if (responseMessage.result !== undefined) {
                        responsePromise.resolve(responseMessage.result);
                    }
                    else {
                        throw new Error('Should never happen.');
                    }
                }
                catch (error) {
                    if (error.message) {
                        logger.error(`Response handler '${responsePromise.method}' failed with message: ${error.message}`);
                    }
                    else {
                        logger.error(`Response handler '${responsePromise.method}' failed unexpectedly.`);
                    }
                }
            }
        }
    }
    function handleNotification(message) {
        if (isDisposed()) {
            // See handle request.
            return;
        }
        let type = undefined;
        let notificationHandler;
        if (message.method === CancelNotification.type.method) {
            const cancelId = message.params.id;
            knownCanceledRequests.delete(cancelId);
            traceReceivedNotification(message);
            return;
        }
        else {
            const element = notificationHandlers.get(message.method);
            if (element) {
                notificationHandler = element.handler;
                type = element.type;
            }
        }
        if (notificationHandler || starNotificationHandler) {
            try {
                traceReceivedNotification(message);
                if (notificationHandler) {
                    if (message.params === undefined) {
                        if (type !== undefined) {
                            if (type.numberOfParams !== 0 && type.parameterStructures !== messages_1.ParameterStructures.byName) {
                                logger.error(`Notification ${message.method} defines ${type.numberOfParams} params but received none.`);
                            }
                        }
                        notificationHandler();
                    }
                    else if (Array.isArray(message.params)) {
                        // There are JSON-RPC libraries that send progress message as positional params although
                        // specified as named. So convert them if this is the case.
                        const params = message.params;
                        if (message.method === ProgressNotification.type.method && params.length === 2 && ProgressToken.is(params[0])) {
                            notificationHandler({ token: params[0], value: params[1] });
                        }
                        else {
                            if (type !== undefined) {
                                if (type.parameterStructures === messages_1.ParameterStructures.byName) {
                                    logger.error(`Notification ${message.method} defines parameters by name but received parameters by position`);
                                }
                                if (type.numberOfParams !== message.params.length) {
                                    logger.error(`Notification ${message.method} defines ${type.numberOfParams} params but received ${params.length} arguments`);
                                }
                            }
                            notificationHandler(...params);
                        }
                    }
                    else {
                        if (type !== undefined && type.parameterStructures === messages_1.ParameterStructures.byPosition) {
                            logger.error(`Notification ${message.method} defines parameters by position but received parameters by name`);
                        }
                        notificationHandler(message.params);
                    }
                }
                else if (starNotificationHandler) {
                    starNotificationHandler(message.method, message.params);
                }
            }
            catch (error) {
                if (error.message) {
                    logger.error(`Notification handler '${message.method}' failed with message: ${error.message}`);
                }
                else {
                    logger.error(`Notification handler '${message.method}' failed unexpectedly.`);
                }
            }
        }
        else {
            unhandledNotificationEmitter.fire(message);
        }
    }
    function handleInvalidMessage(message) {
        if (!message) {
            logger.error('Received empty message.');
            return;
        }
        logger.error(`Received message which is neither a response nor a notification message:\n${JSON.stringify(message, null, 4)}`);
        // Test whether we find an id to reject the promise
        const responseMessage = message;
        if (Is.string(responseMessage.id) || Is.number(responseMessage.id)) {
            const key = responseMessage.id;
            const responseHandler = responsePromises.get(key);
            if (responseHandler) {
                responseHandler.reject(new Error('The received response has neither a result nor an error property.'));
            }
        }
    }
    function stringifyTrace(params) {
        if (params === undefined || params === null) {
            return undefined;
        }
        switch (trace) {
            case Trace.Verbose:
                return JSON.stringify(params, null, 4);
            case Trace.Compact:
                return JSON.stringify(params);
            default:
                return undefined;
        }
    }
    function traceSendingRequest(message) {
        if (trace === Trace.Off || !tracer) {
            return;
        }
        if (traceFormat === TraceFormat.Text) {
            let data = undefined;
            if ((trace === Trace.Verbose || trace === Trace.Compact) && message.params) {
                data = `Params: ${stringifyTrace(message.params)}\n\n`;
            }
            tracer.log(`Sending request '${message.method} - (${message.id})'.`, data);
        }
        else {
            logLSPMessage('send-request', message);
        }
    }
    function traceSendingNotification(message) {
        if (trace === Trace.Off || !tracer) {
            return;
        }
        if (traceFormat === TraceFormat.Text) {
            let data = undefined;
            if (trace === Trace.Verbose || trace === Trace.Compact) {
                if (message.params) {
                    data = `Params: ${stringifyTrace(message.params)}\n\n`;
                }
                else {
                    data = 'No parameters provided.\n\n';
                }
            }
            tracer.log(`Sending notification '${message.method}'.`, data);
        }
        else {
            logLSPMessage('send-notification', message);
        }
    }
    function traceSendingResponse(message, method, startTime) {
        if (trace === Trace.Off || !tracer) {
            return;
        }
        if (traceFormat === TraceFormat.Text) {
            let data = undefined;
            if (trace === Trace.Verbose || trace === Trace.Compact) {
                if (message.error && message.error.data) {
                    data = `Error data: ${stringifyTrace(message.error.data)}\n\n`;
                }
                else {
                    if (message.result) {
                        data = `Result: ${stringifyTrace(message.result)}\n\n`;
                    }
                    else if (message.error === undefined) {
                        data = 'No result returned.\n\n';
                    }
                }
            }
            tracer.log(`Sending response '${method} - (${message.id})'. Processing request took ${Date.now() - startTime}ms`, data);
        }
        else {
            logLSPMessage('send-response', message);
        }
    }
    function traceReceivedRequest(message) {
        if (trace === Trace.Off || !tracer) {
            return;
        }
        if (traceFormat === TraceFormat.Text) {
            let data = undefined;
            if ((trace === Trace.Verbose || trace === Trace.Compact) && message.params) {
                data = `Params: ${stringifyTrace(message.params)}\n\n`;
            }
            tracer.log(`Received request '${message.method} - (${message.id})'.`, data);
        }
        else {
            logLSPMessage('receive-request', message);
        }
    }
    function traceReceivedNotification(message) {
        if (trace === Trace.Off || !tracer || message.method === LogTraceNotification.type.method) {
            return;
        }
        if (traceFormat === TraceFormat.Text) {
            let data = undefined;
            if (trace === Trace.Verbose || trace === Trace.Compact) {
                if (message.params) {
                    data = `Params: ${stringifyTrace(message.params)}\n\n`;
                }
                else {
                    data = 'No parameters provided.\n\n';
                }
            }
            tracer.log(`Received notification '${message.method}'.`, data);
        }
        else {
            logLSPMessage('receive-notification', message);
        }
    }
    function traceReceivedResponse(message, responsePromise) {
        if (trace === Trace.Off || !tracer) {
            return;
        }
        if (traceFormat === TraceFormat.Text) {
            let data = undefined;
            if (trace === Trace.Verbose || trace === Trace.Compact) {
                if (message.error && message.error.data) {
                    data = `Error data: ${stringifyTrace(message.error.data)}\n\n`;
                }
                else {
                    if (message.result) {
                        data = `Result: ${stringifyTrace(message.result)}\n\n`;
                    }
                    else if (message.error === undefined) {
                        data = 'No result returned.\n\n';
                    }
                }
            }
            if (responsePromise) {
                const error = message.error ? ` Request failed: ${message.error.message} (${message.error.code}).` : '';
                tracer.log(`Received response '${responsePromise.method} - (${message.id})' in ${Date.now() - responsePromise.timerStart}ms.${error}`, data);
            }
            else {
                tracer.log(`Received response ${message.id} without active response promise.`, data);
            }
        }
        else {
            logLSPMessage('receive-response', message);
        }
    }
    function logLSPMessage(type, message) {
        if (!tracer || trace === Trace.Off) {
            return;
        }
        const lspMessage = {
            isLSPMessage: true,
            type,
            message,
            timestamp: Date.now()
        };
        tracer.log(lspMessage);
    }
    function throwIfClosedOrDisposed() {
        if (isClosed()) {
            throw new ConnectionError(ConnectionErrors.Closed, 'Connection is closed.');
        }
        if (isDisposed()) {
            throw new ConnectionError(ConnectionErrors.Disposed, 'Connection is disposed.');
        }
    }
    function throwIfListening() {
        if (isListening()) {
            throw new ConnectionError(ConnectionErrors.AlreadyListening, 'Connection is already listening');
        }
    }
    function throwIfNotListening() {
        if (!isListening()) {
            throw new Error('Call listen() first.');
        }
    }
    function undefinedToNull(param) {
        if (param === undefined) {
            return null;
        }
        else {
            return param;
        }
    }
    function nullToUndefined(param) {
        if (param === null) {
            return undefined;
        }
        else {
            return param;
        }
    }
    function isNamedParam(param) {
        return param !== undefined && param !== null && !Array.isArray(param) && typeof param === 'object';
    }
    function computeSingleParam(parameterStructures, param) {
        switch (parameterStructures) {
            case messages_1.ParameterStructures.auto:
                if (isNamedParam(param)) {
                    return nullToUndefined(param);
                }
                else {
                    return [undefinedToNull(param)];
                }
            case messages_1.ParameterStructures.byName:
                if (!isNamedParam(param)) {
                    throw new Error(`Received parameters by name but param is not an object literal.`);
                }
                return nullToUndefined(param);
            case messages_1.ParameterStructures.byPosition:
                return [undefinedToNull(param)];
            default:
                throw new Error(`Unknown parameter structure ${parameterStructures.toString()}`);
        }
    }
    function computeMessageParams(type, params) {
        let result;
        const numberOfParams = type.numberOfParams;
        switch (numberOfParams) {
            case 0:
                result = undefined;
                break;
            case 1:
                result = computeSingleParam(type.parameterStructures, params[0]);
                break;
            default:
                result = [];
                for (let i = 0; i < params.length && i < numberOfParams; i++) {
                    result.push(undefinedToNull(params[i]));
                }
                if (params.length < numberOfParams) {
                    for (let i = params.length; i < numberOfParams; i++) {
                        result.push(null);
                    }
                }
                break;
        }
        return result;
    }
    const connection = {
        sendNotification: (type, ...args) => {
            throwIfClosedOrDisposed();
            let method;
            let messageParams;
            if (Is.string(type)) {
                method = type;
                const first = args[0];
                let paramStart = 0;
                let parameterStructures = messages_1.ParameterStructures.auto;
                if (messages_1.ParameterStructures.is(first)) {
                    paramStart = 1;
                    parameterStructures = first;
                }
                let paramEnd = args.length;
                const numberOfParams = paramEnd - paramStart;
                switch (numberOfParams) {
                    case 0:
                        messageParams = undefined;
                        break;
                    case 1:
                        messageParams = computeSingleParam(parameterStructures, args[paramStart]);
                        break;
                    default:
                        if (parameterStructures === messages_1.ParameterStructures.byName) {
                            throw new Error(`Received ${numberOfParams} parameters for 'by Name' notification parameter structure.`);
                        }
                        messageParams = args.slice(paramStart, paramEnd).map(value => undefinedToNull(value));
                        break;
                }
            }
            else {
                const params = args;
                method = type.method;
                messageParams = computeMessageParams(type, params);
            }
            const notificationMessage = {
                jsonrpc: version,
                method: method,
                params: messageParams
            };
            traceSendingNotification(notificationMessage);
            return messageWriter.write(notificationMessage).catch((error) => {
                logger.error(`Sending notification failed.`);
                throw error;
            });
        },
        onNotification: (type, handler) => {
            throwIfClosedOrDisposed();
            let method;
            if (Is.func(type)) {
                starNotificationHandler = type;
            }
            else if (handler) {
                if (Is.string(type)) {
                    method = type;
                    notificationHandlers.set(type, { type: undefined, handler });
                }
                else {
                    method = type.method;
                    notificationHandlers.set(type.method, { type, handler });
                }
            }
            return {
                dispose: () => {
                    if (method !== undefined) {
                        notificationHandlers.delete(method);
                    }
                    else {
                        starNotificationHandler = undefined;
                    }
                }
            };
        },
        onProgress: (_type, token, handler) => {
            if (progressHandlers.has(token)) {
                throw new Error(`Progress handler for token ${token} already registered`);
            }
            progressHandlers.set(token, handler);
            return {
                dispose: () => {
                    progressHandlers.delete(token);
                }
            };
        },
        sendProgress: (_type, token, value) => {
            // This should not await but simple return to ensure that we don't have another
            // async scheduling. Otherwise one send could overtake another send.
            return connection.sendNotification(ProgressNotification.type, { token, value });
        },
        onUnhandledProgress: unhandledProgressEmitter.event,
        sendRequest: (type, ...args) => {
            throwIfClosedOrDisposed();
            throwIfNotListening();
            let method;
            let messageParams;
            let token = undefined;
            if (Is.string(type)) {
                method = type;
                const first = args[0];
                const last = args[args.length - 1];
                let paramStart = 0;
                let parameterStructures = messages_1.ParameterStructures.auto;
                if (messages_1.ParameterStructures.is(first)) {
                    paramStart = 1;
                    parameterStructures = first;
                }
                let paramEnd = args.length;
                if (cancellation_1.CancellationToken.is(last)) {
                    paramEnd = paramEnd - 1;
                    token = last;
                }
                const numberOfParams = paramEnd - paramStart;
                switch (numberOfParams) {
                    case 0:
                        messageParams = undefined;
                        break;
                    case 1:
                        messageParams = computeSingleParam(parameterStructures, args[paramStart]);
                        break;
                    default:
                        if (parameterStructures === messages_1.ParameterStructures.byName) {
                            throw new Error(`Received ${numberOfParams} parameters for 'by Name' request parameter structure.`);
                        }
                        messageParams = args.slice(paramStart, paramEnd).map(value => undefinedToNull(value));
                        break;
                }
            }
            else {
                const params = args;
                method = type.method;
                messageParams = computeMessageParams(type, params);
                const numberOfParams = type.numberOfParams;
                token = cancellation_1.CancellationToken.is(params[numberOfParams]) ? params[numberOfParams] : undefined;
            }
            const id = sequenceNumber++;
            let disposable;
            if (token) {
                disposable = token.onCancellationRequested(() => {
                    const p = cancellationStrategy.sender.sendCancellation(connection, id);
                    if (p === undefined) {
                        logger.log(`Received no promise from cancellation strategy when cancelling id ${id}`);
                        return Promise.resolve();
                    }
                    else {
                        return p.catch(() => {
                            logger.log(`Sending cancellation messages for id ${id} failed`);
                        });
                    }
                });
            }
            const requestMessage = {
                jsonrpc: version,
                id: id,
                method: method,
                params: messageParams
            };
            traceSendingRequest(requestMessage);
            if (typeof cancellationStrategy.sender.enableCancellation === 'function') {
                cancellationStrategy.sender.enableCancellation(requestMessage);
            }
            return new Promise(async (resolve, reject) => {
                const resolveWithCleanup = (r) => {
                    resolve(r);
                    cancellationStrategy.sender.cleanup(id);
                    disposable?.dispose();
                };
                const rejectWithCleanup = (r) => {
                    reject(r);
                    cancellationStrategy.sender.cleanup(id);
                    disposable?.dispose();
                };
                const responsePromise = { method: method, timerStart: Date.now(), resolve: resolveWithCleanup, reject: rejectWithCleanup };
                try {
                    await messageWriter.write(requestMessage);
                    responsePromises.set(id, responsePromise);
                }
                catch (error) {
                    logger.error(`Sending request failed.`);
                    // Writing the message failed. So we need to reject the promise.
                    responsePromise.reject(new messages_1.ResponseError(messages_1.ErrorCodes.MessageWriteError, error.message ? error.message : 'Unknown reason'));
                    throw error;
                }
            });
        },
        onRequest: (type, handler) => {
            throwIfClosedOrDisposed();
            let method = null;
            if (StarRequestHandler.is(type)) {
                method = undefined;
                starRequestHandler = type;
            }
            else if (Is.string(type)) {
                method = null;
                if (handler !== undefined) {
                    method = type;
                    requestHandlers.set(type, { handler: handler, type: undefined });
                }
            }
            else {
                if (handler !== undefined) {
                    method = type.method;
                    requestHandlers.set(type.method, { type, handler });
                }
            }
            return {
                dispose: () => {
                    if (method === null) {
                        return;
                    }
                    if (method !== undefined) {
                        requestHandlers.delete(method);
                    }
                    else {
                        starRequestHandler = undefined;
                    }
                }
            };
        },
        hasPendingResponse: () => {
            return responsePromises.size > 0;
        },
        trace: async (_value, _tracer, sendNotificationOrTraceOptions) => {
            let _sendNotification = false;
            let _traceFormat = TraceFormat.Text;
            if (sendNotificationOrTraceOptions !== undefined) {
                if (Is.boolean(sendNotificationOrTraceOptions)) {
                    _sendNotification = sendNotificationOrTraceOptions;
                }
                else {
                    _sendNotification = sendNotificationOrTraceOptions.sendNotification || false;
                    _traceFormat = sendNotificationOrTraceOptions.traceFormat || TraceFormat.Text;
                }
            }
            trace = _value;
            traceFormat = _traceFormat;
            if (trace === Trace.Off) {
                tracer = undefined;
            }
            else {
                tracer = _tracer;
            }
            if (_sendNotification && !isClosed() && !isDisposed()) {
                await connection.sendNotification(SetTraceNotification.type, { value: Trace.toString(_value) });
            }
        },
        onError: errorEmitter.event,
        onClose: closeEmitter.event,
        onUnhandledNotification: unhandledNotificationEmitter.event,
        onDispose: disposeEmitter.event,
        end: () => {
            messageWriter.end();
        },
        dispose: () => {
            if (isDisposed()) {
                return;
            }
            state = ConnectionState.Disposed;
            disposeEmitter.fire(undefined);
            const error = new messages_1.ResponseError(messages_1.ErrorCodes.PendingResponseRejected, 'Pending response rejected since connection got disposed');
            for (const promise of responsePromises.values()) {
                promise.reject(error);
            }
            responsePromises = new Map();
            requestTokens = new Map();
            knownCanceledRequests = new Set();
            messageQueue = new linkedMap_1.LinkedMap();
            // Test for backwards compatibility
            if (Is.func(messageWriter.dispose)) {
                messageWriter.dispose();
            }
            if (Is.func(messageReader.dispose)) {
                messageReader.dispose();
            }
        },
        listen: () => {
            throwIfClosedOrDisposed();
            throwIfListening();
            state = ConnectionState.Listening;
            messageReader.listen(callback);
        },
        inspect: () => {
            // eslint-disable-next-line no-console
            (0, ral_1.default)().console.log('inspect');
        }
    };
    connection.onNotification(LogTraceNotification.type, (params) => {
        if (trace === Trace.Off || !tracer) {
            return;
        }
        const verbose = trace === Trace.Verbose || trace === Trace.Compact;
        tracer.log(params.message, verbose ? params.verbose : undefined);
    });
    connection.onNotification(ProgressNotification.type, (params) => {
        const handler = progressHandlers.get(params.token);
        if (handler) {
            handler(params.value);
        }
        else {
            unhandledProgressEmitter.fire(params);
        }
    });
    return connection;
}
exports.createMessageConnection = createMessageConnection;


/***/ }),

/***/ "./node_modules/vscode-jsonrpc/lib/common/disposable.js":
/*!**************************************************************!*\
  !*** ./node_modules/vscode-jsonrpc/lib/common/disposable.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Disposable = void 0;
var Disposable;
(function (Disposable) {
    function create(func) {
        return {
            dispose: func
        };
    }
    Disposable.create = create;
})(Disposable = exports.Disposable || (exports.Disposable = {}));


/***/ }),

/***/ "./node_modules/vscode-jsonrpc/lib/common/events.js":
/*!**********************************************************!*\
  !*** ./node_modules/vscode-jsonrpc/lib/common/events.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Emitter = exports.Event = void 0;
const ral_1 = __webpack_require__(/*! ./ral */ "./node_modules/vscode-jsonrpc/lib/common/ral.js");
var Event;
(function (Event) {
    const _disposable = { dispose() { } };
    Event.None = function () { return _disposable; };
})(Event = exports.Event || (exports.Event = {}));
class CallbackList {
    add(callback, context = null, bucket) {
        if (!this._callbacks) {
            this._callbacks = [];
            this._contexts = [];
        }
        this._callbacks.push(callback);
        this._contexts.push(context);
        if (Array.isArray(bucket)) {
            bucket.push({ dispose: () => this.remove(callback, context) });
        }
    }
    remove(callback, context = null) {
        if (!this._callbacks) {
            return;
        }
        let foundCallbackWithDifferentContext = false;
        for (let i = 0, len = this._callbacks.length; i < len; i++) {
            if (this._callbacks[i] === callback) {
                if (this._contexts[i] === context) {
                    // callback & context match => remove it
                    this._callbacks.splice(i, 1);
                    this._contexts.splice(i, 1);
                    return;
                }
                else {
                    foundCallbackWithDifferentContext = true;
                }
            }
        }
        if (foundCallbackWithDifferentContext) {
            throw new Error('When adding a listener with a context, you should remove it with the same context');
        }
    }
    invoke(...args) {
        if (!this._callbacks) {
            return [];
        }
        const ret = [], callbacks = this._callbacks.slice(0), contexts = this._contexts.slice(0);
        for (let i = 0, len = callbacks.length; i < len; i++) {
            try {
                ret.push(callbacks[i].apply(contexts[i], args));
            }
            catch (e) {
                // eslint-disable-next-line no-console
                (0, ral_1.default)().console.error(e);
            }
        }
        return ret;
    }
    isEmpty() {
        return !this._callbacks || this._callbacks.length === 0;
    }
    dispose() {
        this._callbacks = undefined;
        this._contexts = undefined;
    }
}
class Emitter {
    constructor(_options) {
        this._options = _options;
    }
    /**
     * For the public to allow to subscribe
     * to events from this Emitter
     */
    get event() {
        if (!this._event) {
            this._event = (listener, thisArgs, disposables) => {
                if (!this._callbacks) {
                    this._callbacks = new CallbackList();
                }
                if (this._options && this._options.onFirstListenerAdd && this._callbacks.isEmpty()) {
                    this._options.onFirstListenerAdd(this);
                }
                this._callbacks.add(listener, thisArgs);
                const result = {
                    dispose: () => {
                        if (!this._callbacks) {
                            // disposable is disposed after emitter is disposed.
                            return;
                        }
                        this._callbacks.remove(listener, thisArgs);
                        result.dispose = Emitter._noop;
                        if (this._options && this._options.onLastListenerRemove && this._callbacks.isEmpty()) {
                            this._options.onLastListenerRemove(this);
                        }
                    }
                };
                if (Array.isArray(disposables)) {
                    disposables.push(result);
                }
                return result;
            };
        }
        return this._event;
    }
    /**
     * To be kept private to fire an event to
     * subscribers
     */
    fire(event) {
        if (this._callbacks) {
            this._callbacks.invoke.call(this._callbacks, event);
        }
    }
    dispose() {
        if (this._callbacks) {
            this._callbacks.dispose();
            this._callbacks = undefined;
        }
    }
}
exports.Emitter = Emitter;
Emitter._noop = function () { };


/***/ }),

/***/ "./node_modules/vscode-jsonrpc/lib/common/is.js":
/*!******************************************************!*\
  !*** ./node_modules/vscode-jsonrpc/lib/common/is.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.stringArray = exports.array = exports.func = exports.error = exports.number = exports.string = exports.boolean = void 0;
function boolean(value) {
    return value === true || value === false;
}
exports.boolean = boolean;
function string(value) {
    return typeof value === 'string' || value instanceof String;
}
exports.string = string;
function number(value) {
    return typeof value === 'number' || value instanceof Number;
}
exports.number = number;
function error(value) {
    return value instanceof Error;
}
exports.error = error;
function func(value) {
    return typeof value === 'function';
}
exports.func = func;
function array(value) {
    return Array.isArray(value);
}
exports.array = array;
function stringArray(value) {
    return array(value) && value.every(elem => string(elem));
}
exports.stringArray = stringArray;


/***/ }),

/***/ "./node_modules/vscode-jsonrpc/lib/common/linkedMap.js":
/*!*************************************************************!*\
  !*** ./node_modules/vscode-jsonrpc/lib/common/linkedMap.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LRUCache = exports.LinkedMap = exports.Touch = void 0;
var Touch;
(function (Touch) {
    Touch.None = 0;
    Touch.First = 1;
    Touch.AsOld = Touch.First;
    Touch.Last = 2;
    Touch.AsNew = Touch.Last;
})(Touch = exports.Touch || (exports.Touch = {}));
class LinkedMap {
    constructor() {
        this[_a] = 'LinkedMap';
        this._map = new Map();
        this._head = undefined;
        this._tail = undefined;
        this._size = 0;
        this._state = 0;
    }
    clear() {
        this._map.clear();
        this._head = undefined;
        this._tail = undefined;
        this._size = 0;
        this._state++;
    }
    isEmpty() {
        return !this._head && !this._tail;
    }
    get size() {
        return this._size;
    }
    get first() {
        return this._head?.value;
    }
    get last() {
        return this._tail?.value;
    }
    has(key) {
        return this._map.has(key);
    }
    get(key, touch = Touch.None) {
        const item = this._map.get(key);
        if (!item) {
            return undefined;
        }
        if (touch !== Touch.None) {
            this.touch(item, touch);
        }
        return item.value;
    }
    set(key, value, touch = Touch.None) {
        let item = this._map.get(key);
        if (item) {
            item.value = value;
            if (touch !== Touch.None) {
                this.touch(item, touch);
            }
        }
        else {
            item = { key, value, next: undefined, previous: undefined };
            switch (touch) {
                case Touch.None:
                    this.addItemLast(item);
                    break;
                case Touch.First:
                    this.addItemFirst(item);
                    break;
                case Touch.Last:
                    this.addItemLast(item);
                    break;
                default:
                    this.addItemLast(item);
                    break;
            }
            this._map.set(key, item);
            this._size++;
        }
        return this;
    }
    delete(key) {
        return !!this.remove(key);
    }
    remove(key) {
        const item = this._map.get(key);
        if (!item) {
            return undefined;
        }
        this._map.delete(key);
        this.removeItem(item);
        this._size--;
        return item.value;
    }
    shift() {
        if (!this._head && !this._tail) {
            return undefined;
        }
        if (!this._head || !this._tail) {
            throw new Error('Invalid list');
        }
        const item = this._head;
        this._map.delete(item.key);
        this.removeItem(item);
        this._size--;
        return item.value;
    }
    forEach(callbackfn, thisArg) {
        const state = this._state;
        let current = this._head;
        while (current) {
            if (thisArg) {
                callbackfn.bind(thisArg)(current.value, current.key, this);
            }
            else {
                callbackfn(current.value, current.key, this);
            }
            if (this._state !== state) {
                throw new Error(`LinkedMap got modified during iteration.`);
            }
            current = current.next;
        }
    }
    keys() {
        const state = this._state;
        let current = this._head;
        const iterator = {
            [Symbol.iterator]: () => {
                return iterator;
            },
            next: () => {
                if (this._state !== state) {
                    throw new Error(`LinkedMap got modified during iteration.`);
                }
                if (current) {
                    const result = { value: current.key, done: false };
                    current = current.next;
                    return result;
                }
                else {
                    return { value: undefined, done: true };
                }
            }
        };
        return iterator;
    }
    values() {
        const state = this._state;
        let current = this._head;
        const iterator = {
            [Symbol.iterator]: () => {
                return iterator;
            },
            next: () => {
                if (this._state !== state) {
                    throw new Error(`LinkedMap got modified during iteration.`);
                }
                if (current) {
                    const result = { value: current.value, done: false };
                    current = current.next;
                    return result;
                }
                else {
                    return { value: undefined, done: true };
                }
            }
        };
        return iterator;
    }
    entries() {
        const state = this._state;
        let current = this._head;
        const iterator = {
            [Symbol.iterator]: () => {
                return iterator;
            },
            next: () => {
                if (this._state !== state) {
                    throw new Error(`LinkedMap got modified during iteration.`);
                }
                if (current) {
                    const result = { value: [current.key, current.value], done: false };
                    current = current.next;
                    return result;
                }
                else {
                    return { value: undefined, done: true };
                }
            }
        };
        return iterator;
    }
    [(_a = Symbol.toStringTag, Symbol.iterator)]() {
        return this.entries();
    }
    trimOld(newSize) {
        if (newSize >= this.size) {
            return;
        }
        if (newSize === 0) {
            this.clear();
            return;
        }
        let current = this._head;
        let currentSize = this.size;
        while (current && currentSize > newSize) {
            this._map.delete(current.key);
            current = current.next;
            currentSize--;
        }
        this._head = current;
        this._size = currentSize;
        if (current) {
            current.previous = undefined;
        }
        this._state++;
    }
    addItemFirst(item) {
        // First time Insert
        if (!this._head && !this._tail) {
            this._tail = item;
        }
        else if (!this._head) {
            throw new Error('Invalid list');
        }
        else {
            item.next = this._head;
            this._head.previous = item;
        }
        this._head = item;
        this._state++;
    }
    addItemLast(item) {
        // First time Insert
        if (!this._head && !this._tail) {
            this._head = item;
        }
        else if (!this._tail) {
            throw new Error('Invalid list');
        }
        else {
            item.previous = this._tail;
            this._tail.next = item;
        }
        this._tail = item;
        this._state++;
    }
    removeItem(item) {
        if (item === this._head && item === this._tail) {
            this._head = undefined;
            this._tail = undefined;
        }
        else if (item === this._head) {
            // This can only happened if size === 1 which is handle
            // by the case above.
            if (!item.next) {
                throw new Error('Invalid list');
            }
            item.next.previous = undefined;
            this._head = item.next;
        }
        else if (item === this._tail) {
            // This can only happened if size === 1 which is handle
            // by the case above.
            if (!item.previous) {
                throw new Error('Invalid list');
            }
            item.previous.next = undefined;
            this._tail = item.previous;
        }
        else {
            const next = item.next;
            const previous = item.previous;
            if (!next || !previous) {
                throw new Error('Invalid list');
            }
            next.previous = previous;
            previous.next = next;
        }
        item.next = undefined;
        item.previous = undefined;
        this._state++;
    }
    touch(item, touch) {
        if (!this._head || !this._tail) {
            throw new Error('Invalid list');
        }
        if ((touch !== Touch.First && touch !== Touch.Last)) {
            return;
        }
        if (touch === Touch.First) {
            if (item === this._head) {
                return;
            }
            const next = item.next;
            const previous = item.previous;
            // Unlink the item
            if (item === this._tail) {
                // previous must be defined since item was not head but is tail
                // So there are more than on item in the map
                previous.next = undefined;
                this._tail = previous;
            }
            else {
                // Both next and previous are not undefined since item was neither head nor tail.
                next.previous = previous;
                previous.next = next;
            }
            // Insert the node at head
            item.previous = undefined;
            item.next = this._head;
            this._head.previous = item;
            this._head = item;
            this._state++;
        }
        else if (touch === Touch.Last) {
            if (item === this._tail) {
                return;
            }
            const next = item.next;
            const previous = item.previous;
            // Unlink the item.
            if (item === this._head) {
                // next must be defined since item was not tail but is head
                // So there are more than on item in the map
                next.previous = undefined;
                this._head = next;
            }
            else {
                // Both next and previous are not undefined since item was neither head nor tail.
                next.previous = previous;
                previous.next = next;
            }
            item.next = undefined;
            item.previous = this._tail;
            this._tail.next = item;
            this._tail = item;
            this._state++;
        }
    }
    toJSON() {
        const data = [];
        this.forEach((value, key) => {
            data.push([key, value]);
        });
        return data;
    }
    fromJSON(data) {
        this.clear();
        for (const [key, value] of data) {
            this.set(key, value);
        }
    }
}
exports.LinkedMap = LinkedMap;
class LRUCache extends LinkedMap {
    constructor(limit, ratio = 1) {
        super();
        this._limit = limit;
        this._ratio = Math.min(Math.max(0, ratio), 1);
    }
    get limit() {
        return this._limit;
    }
    set limit(limit) {
        this._limit = limit;
        this.checkTrim();
    }
    get ratio() {
        return this._ratio;
    }
    set ratio(ratio) {
        this._ratio = Math.min(Math.max(0, ratio), 1);
        this.checkTrim();
    }
    get(key, touch = Touch.AsNew) {
        return super.get(key, touch);
    }
    peek(key) {
        return super.get(key, Touch.None);
    }
    set(key, value) {
        super.set(key, value, Touch.Last);
        this.checkTrim();
        return this;
    }
    checkTrim() {
        if (this.size > this._limit) {
            this.trimOld(Math.round(this._limit * this._ratio));
        }
    }
}
exports.LRUCache = LRUCache;


/***/ }),

/***/ "./node_modules/vscode-jsonrpc/lib/common/messageBuffer.js":
/*!*****************************************************************!*\
  !*** ./node_modules/vscode-jsonrpc/lib/common/messageBuffer.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AbstractMessageBuffer = void 0;
const CR = 13;
const LF = 10;
const CRLF = '\r\n';
class AbstractMessageBuffer {
    constructor(encoding = 'utf-8') {
        this._encoding = encoding;
        this._chunks = [];
        this._totalLength = 0;
    }
    get encoding() {
        return this._encoding;
    }
    append(chunk) {
        const toAppend = typeof chunk === 'string' ? this.fromString(chunk, this._encoding) : chunk;
        this._chunks.push(toAppend);
        this._totalLength += toAppend.byteLength;
    }
    tryReadHeaders(lowerCaseKeys = false) {
        if (this._chunks.length === 0) {
            return undefined;
        }
        let state = 0;
        let chunkIndex = 0;
        let offset = 0;
        let chunkBytesRead = 0;
        row: while (chunkIndex < this._chunks.length) {
            const chunk = this._chunks[chunkIndex];
            offset = 0;
            column: while (offset < chunk.length) {
                const value = chunk[offset];
                switch (value) {
                    case CR:
                        switch (state) {
                            case 0:
                                state = 1;
                                break;
                            case 2:
                                state = 3;
                                break;
                            default:
                                state = 0;
                        }
                        break;
                    case LF:
                        switch (state) {
                            case 1:
                                state = 2;
                                break;
                            case 3:
                                state = 4;
                                offset++;
                                break row;
                            default:
                                state = 0;
                        }
                        break;
                    default:
                        state = 0;
                }
                offset++;
            }
            chunkBytesRead += chunk.byteLength;
            chunkIndex++;
        }
        if (state !== 4) {
            return undefined;
        }
        // The buffer contains the two CRLF at the end. So we will
        // have two empty lines after the split at the end as well.
        const buffer = this._read(chunkBytesRead + offset);
        const result = new Map();
        const headers = this.toString(buffer, 'ascii').split(CRLF);
        if (headers.length < 2) {
            return result;
        }
        for (let i = 0; i < headers.length - 2; i++) {
            const header = headers[i];
            const index = header.indexOf(':');
            if (index === -1) {
                throw new Error('Message header must separate key and value using :');
            }
            const key = header.substr(0, index);
            const value = header.substr(index + 1).trim();
            result.set(lowerCaseKeys ? key.toLowerCase() : key, value);
        }
        return result;
    }
    tryReadBody(length) {
        if (this._totalLength < length) {
            return undefined;
        }
        return this._read(length);
    }
    get numberOfBytes() {
        return this._totalLength;
    }
    _read(byteCount) {
        if (byteCount === 0) {
            return this.emptyBuffer();
        }
        if (byteCount > this._totalLength) {
            throw new Error(`Cannot read so many bytes!`);
        }
        if (this._chunks[0].byteLength === byteCount) {
            // super fast path, precisely first chunk must be returned
            const chunk = this._chunks[0];
            this._chunks.shift();
            this._totalLength -= byteCount;
            return this.asNative(chunk);
        }
        if (this._chunks[0].byteLength > byteCount) {
            // fast path, the reading is entirely within the first chunk
            const chunk = this._chunks[0];
            const result = this.asNative(chunk, byteCount);
            this._chunks[0] = chunk.slice(byteCount);
            this._totalLength -= byteCount;
            return result;
        }
        const result = this.allocNative(byteCount);
        let resultOffset = 0;
        let chunkIndex = 0;
        while (byteCount > 0) {
            const chunk = this._chunks[chunkIndex];
            if (chunk.byteLength > byteCount) {
                // this chunk will survive
                const chunkPart = chunk.slice(0, byteCount);
                result.set(chunkPart, resultOffset);
                resultOffset += byteCount;
                this._chunks[chunkIndex] = chunk.slice(byteCount);
                this._totalLength -= byteCount;
                byteCount -= byteCount;
            }
            else {
                // this chunk will be entirely read
                result.set(chunk, resultOffset);
                resultOffset += chunk.byteLength;
                this._chunks.shift();
                this._totalLength -= chunk.byteLength;
                byteCount -= chunk.byteLength;
            }
        }
        return result;
    }
}
exports.AbstractMessageBuffer = AbstractMessageBuffer;


/***/ }),

/***/ "./node_modules/vscode-jsonrpc/lib/common/messageReader.js":
/*!*****************************************************************!*\
  !*** ./node_modules/vscode-jsonrpc/lib/common/messageReader.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ReadableStreamMessageReader = exports.AbstractMessageReader = exports.MessageReader = void 0;
const ral_1 = __webpack_require__(/*! ./ral */ "./node_modules/vscode-jsonrpc/lib/common/ral.js");
const Is = __webpack_require__(/*! ./is */ "./node_modules/vscode-jsonrpc/lib/common/is.js");
const events_1 = __webpack_require__(/*! ./events */ "./node_modules/vscode-jsonrpc/lib/common/events.js");
const semaphore_1 = __webpack_require__(/*! ./semaphore */ "./node_modules/vscode-jsonrpc/lib/common/semaphore.js");
var MessageReader;
(function (MessageReader) {
    function is(value) {
        let candidate = value;
        return candidate && Is.func(candidate.listen) && Is.func(candidate.dispose) &&
            Is.func(candidate.onError) && Is.func(candidate.onClose) && Is.func(candidate.onPartialMessage);
    }
    MessageReader.is = is;
})(MessageReader = exports.MessageReader || (exports.MessageReader = {}));
class AbstractMessageReader {
    constructor() {
        this.errorEmitter = new events_1.Emitter();
        this.closeEmitter = new events_1.Emitter();
        this.partialMessageEmitter = new events_1.Emitter();
    }
    dispose() {
        this.errorEmitter.dispose();
        this.closeEmitter.dispose();
    }
    get onError() {
        return this.errorEmitter.event;
    }
    fireError(error) {
        this.errorEmitter.fire(this.asError(error));
    }
    get onClose() {
        return this.closeEmitter.event;
    }
    fireClose() {
        this.closeEmitter.fire(undefined);
    }
    get onPartialMessage() {
        return this.partialMessageEmitter.event;
    }
    firePartialMessage(info) {
        this.partialMessageEmitter.fire(info);
    }
    asError(error) {
        if (error instanceof Error) {
            return error;
        }
        else {
            return new Error(`Reader received error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);
        }
    }
}
exports.AbstractMessageReader = AbstractMessageReader;
var ResolvedMessageReaderOptions;
(function (ResolvedMessageReaderOptions) {
    function fromOptions(options) {
        let charset;
        let result;
        let contentDecoder;
        const contentDecoders = new Map();
        let contentTypeDecoder;
        const contentTypeDecoders = new Map();
        if (options === undefined || typeof options === 'string') {
            charset = options ?? 'utf-8';
        }
        else {
            charset = options.charset ?? 'utf-8';
            if (options.contentDecoder !== undefined) {
                contentDecoder = options.contentDecoder;
                contentDecoders.set(contentDecoder.name, contentDecoder);
            }
            if (options.contentDecoders !== undefined) {
                for (const decoder of options.contentDecoders) {
                    contentDecoders.set(decoder.name, decoder);
                }
            }
            if (options.contentTypeDecoder !== undefined) {
                contentTypeDecoder = options.contentTypeDecoder;
                contentTypeDecoders.set(contentTypeDecoder.name, contentTypeDecoder);
            }
            if (options.contentTypeDecoders !== undefined) {
                for (const decoder of options.contentTypeDecoders) {
                    contentTypeDecoders.set(decoder.name, decoder);
                }
            }
        }
        if (contentTypeDecoder === undefined) {
            contentTypeDecoder = (0, ral_1.default)().applicationJson.decoder;
            contentTypeDecoders.set(contentTypeDecoder.name, contentTypeDecoder);
        }
        return { charset, contentDecoder, contentDecoders, contentTypeDecoder, contentTypeDecoders };
    }
    ResolvedMessageReaderOptions.fromOptions = fromOptions;
})(ResolvedMessageReaderOptions || (ResolvedMessageReaderOptions = {}));
class ReadableStreamMessageReader extends AbstractMessageReader {
    constructor(readable, options) {
        super();
        this.readable = readable;
        this.options = ResolvedMessageReaderOptions.fromOptions(options);
        this.buffer = (0, ral_1.default)().messageBuffer.create(this.options.charset);
        this._partialMessageTimeout = 10000;
        this.nextMessageLength = -1;
        this.messageToken = 0;
        this.readSemaphore = new semaphore_1.Semaphore(1);
    }
    set partialMessageTimeout(timeout) {
        this._partialMessageTimeout = timeout;
    }
    get partialMessageTimeout() {
        return this._partialMessageTimeout;
    }
    listen(callback) {
        this.nextMessageLength = -1;
        this.messageToken = 0;
        this.partialMessageTimer = undefined;
        this.callback = callback;
        const result = this.readable.onData((data) => {
            this.onData(data);
        });
        this.readable.onError((error) => this.fireError(error));
        this.readable.onClose(() => this.fireClose());
        return result;
    }
    onData(data) {
        this.buffer.append(data);
        while (true) {
            if (this.nextMessageLength === -1) {
                const headers = this.buffer.tryReadHeaders(true);
                if (!headers) {
                    return;
                }
                const contentLength = headers.get('content-length');
                if (!contentLength) {
                    this.fireError(new Error('Header must provide a Content-Length property.'));
                    return;
                }
                const length = parseInt(contentLength);
                if (isNaN(length)) {
                    this.fireError(new Error('Content-Length value must be a number.'));
                    return;
                }
                this.nextMessageLength = length;
            }
            const body = this.buffer.tryReadBody(this.nextMessageLength);
            if (body === undefined) {
                /** We haven't received the full message yet. */
                this.setPartialMessageTimer();
                return;
            }
            this.clearPartialMessageTimer();
            this.nextMessageLength = -1;
            // Make sure that we convert one received message after the
            // other. Otherwise it could happen that a decoding of a second
            // smaller message finished before the decoding of a first larger
            // message and then we would deliver the second message first.
            this.readSemaphore.lock(async () => {
                const bytes = this.options.contentDecoder !== undefined
                    ? await this.options.contentDecoder.decode(body)
                    : body;
                const message = await this.options.contentTypeDecoder.decode(bytes, this.options);
                this.callback(message);
            }).catch((error) => {
                this.fireError(error);
            });
        }
    }
    clearPartialMessageTimer() {
        if (this.partialMessageTimer) {
            this.partialMessageTimer.dispose();
            this.partialMessageTimer = undefined;
        }
    }
    setPartialMessageTimer() {
        this.clearPartialMessageTimer();
        if (this._partialMessageTimeout <= 0) {
            return;
        }
        this.partialMessageTimer = (0, ral_1.default)().timer.setTimeout((token, timeout) => {
            this.partialMessageTimer = undefined;
            if (token === this.messageToken) {
                this.firePartialMessage({ messageToken: token, waitingTime: timeout });
                this.setPartialMessageTimer();
            }
        }, this._partialMessageTimeout, this.messageToken, this._partialMessageTimeout);
    }
}
exports.ReadableStreamMessageReader = ReadableStreamMessageReader;


/***/ }),

/***/ "./node_modules/vscode-jsonrpc/lib/common/messageWriter.js":
/*!*****************************************************************!*\
  !*** ./node_modules/vscode-jsonrpc/lib/common/messageWriter.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.WriteableStreamMessageWriter = exports.AbstractMessageWriter = exports.MessageWriter = void 0;
const ral_1 = __webpack_require__(/*! ./ral */ "./node_modules/vscode-jsonrpc/lib/common/ral.js");
const Is = __webpack_require__(/*! ./is */ "./node_modules/vscode-jsonrpc/lib/common/is.js");
const semaphore_1 = __webpack_require__(/*! ./semaphore */ "./node_modules/vscode-jsonrpc/lib/common/semaphore.js");
const events_1 = __webpack_require__(/*! ./events */ "./node_modules/vscode-jsonrpc/lib/common/events.js");
const ContentLength = 'Content-Length: ';
const CRLF = '\r\n';
var MessageWriter;
(function (MessageWriter) {
    function is(value) {
        let candidate = value;
        return candidate && Is.func(candidate.dispose) && Is.func(candidate.onClose) &&
            Is.func(candidate.onError) && Is.func(candidate.write);
    }
    MessageWriter.is = is;
})(MessageWriter = exports.MessageWriter || (exports.MessageWriter = {}));
class AbstractMessageWriter {
    constructor() {
        this.errorEmitter = new events_1.Emitter();
        this.closeEmitter = new events_1.Emitter();
    }
    dispose() {
        this.errorEmitter.dispose();
        this.closeEmitter.dispose();
    }
    get onError() {
        return this.errorEmitter.event;
    }
    fireError(error, message, count) {
        this.errorEmitter.fire([this.asError(error), message, count]);
    }
    get onClose() {
        return this.closeEmitter.event;
    }
    fireClose() {
        this.closeEmitter.fire(undefined);
    }
    asError(error) {
        if (error instanceof Error) {
            return error;
        }
        else {
            return new Error(`Writer received error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);
        }
    }
}
exports.AbstractMessageWriter = AbstractMessageWriter;
var ResolvedMessageWriterOptions;
(function (ResolvedMessageWriterOptions) {
    function fromOptions(options) {
        if (options === undefined || typeof options === 'string') {
            return { charset: options ?? 'utf-8', contentTypeEncoder: (0, ral_1.default)().applicationJson.encoder };
        }
        else {
            return { charset: options.charset ?? 'utf-8', contentEncoder: options.contentEncoder, contentTypeEncoder: options.contentTypeEncoder ?? (0, ral_1.default)().applicationJson.encoder };
        }
    }
    ResolvedMessageWriterOptions.fromOptions = fromOptions;
})(ResolvedMessageWriterOptions || (ResolvedMessageWriterOptions = {}));
class WriteableStreamMessageWriter extends AbstractMessageWriter {
    constructor(writable, options) {
        super();
        this.writable = writable;
        this.options = ResolvedMessageWriterOptions.fromOptions(options);
        this.errorCount = 0;
        this.writeSemaphore = new semaphore_1.Semaphore(1);
        this.writable.onError((error) => this.fireError(error));
        this.writable.onClose(() => this.fireClose());
    }
    async write(msg) {
        return this.writeSemaphore.lock(async () => {
            const payload = this.options.contentTypeEncoder.encode(msg, this.options).then((buffer) => {
                if (this.options.contentEncoder !== undefined) {
                    return this.options.contentEncoder.encode(buffer);
                }
                else {
                    return buffer;
                }
            });
            return payload.then((buffer) => {
                const headers = [];
                headers.push(ContentLength, buffer.byteLength.toString(), CRLF);
                headers.push(CRLF);
                return this.doWrite(msg, headers, buffer);
            }, (error) => {
                this.fireError(error);
                throw error;
            });
        });
    }
    async doWrite(msg, headers, data) {
        try {
            await this.writable.write(headers.join(''), 'ascii');
            return this.writable.write(data);
        }
        catch (error) {
            this.handleError(error, msg);
            return Promise.reject(error);
        }
    }
    handleError(error, msg) {
        this.errorCount++;
        this.fireError(error, msg, this.errorCount);
    }
    end() {
        this.writable.end();
    }
}
exports.WriteableStreamMessageWriter = WriteableStreamMessageWriter;


/***/ }),

/***/ "./node_modules/vscode-jsonrpc/lib/common/messages.js":
/*!************************************************************!*\
  !*** ./node_modules/vscode-jsonrpc/lib/common/messages.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Message = exports.NotificationType9 = exports.NotificationType8 = exports.NotificationType7 = exports.NotificationType6 = exports.NotificationType5 = exports.NotificationType4 = exports.NotificationType3 = exports.NotificationType2 = exports.NotificationType1 = exports.NotificationType0 = exports.NotificationType = exports.RequestType9 = exports.RequestType8 = exports.RequestType7 = exports.RequestType6 = exports.RequestType5 = exports.RequestType4 = exports.RequestType3 = exports.RequestType2 = exports.RequestType1 = exports.RequestType = exports.RequestType0 = exports.AbstractMessageSignature = exports.ParameterStructures = exports.ResponseError = exports.ErrorCodes = void 0;
const is = __webpack_require__(/*! ./is */ "./node_modules/vscode-jsonrpc/lib/common/is.js");
/**
 * Predefined error codes.
 */
var ErrorCodes;
(function (ErrorCodes) {
    // Defined by JSON RPC
    ErrorCodes.ParseError = -32700;
    ErrorCodes.InvalidRequest = -32600;
    ErrorCodes.MethodNotFound = -32601;
    ErrorCodes.InvalidParams = -32602;
    ErrorCodes.InternalError = -32603;
    /**
     * This is the start range of JSON RPC reserved error codes.
     * It doesn't denote a real error code. No application error codes should
     * be defined between the start and end range. For backwards
     * compatibility the `ServerNotInitialized` and the `UnknownErrorCode`
     * are left in the range.
     *
     * @since 3.16.0
    */
    ErrorCodes.jsonrpcReservedErrorRangeStart = -32099;
    /** @deprecated use  jsonrpcReservedErrorRangeStart */
    ErrorCodes.serverErrorStart = -32099;
    /**
     * An error occurred when write a message to the transport layer.
     */
    ErrorCodes.MessageWriteError = -32099;
    /**
     * An error occurred when reading a message from the transport layer.
     */
    ErrorCodes.MessageReadError = -32098;
    /**
     * The connection got disposed or lost and all pending responses got
     * rejected.
     */
    ErrorCodes.PendingResponseRejected = -32097;
    /**
     * The connection is inactive and a use of it failed.
     */
    ErrorCodes.ConnectionInactive = -32096;
    /**
     * Error code indicating that a server received a notification or
     * request before the server has received the `initialize` request.
     */
    ErrorCodes.ServerNotInitialized = -32002;
    ErrorCodes.UnknownErrorCode = -32001;
    /**
     * This is the end range of JSON RPC reserved error codes.
     * It doesn't denote a real error code.
     *
     * @since 3.16.0
    */
    ErrorCodes.jsonrpcReservedErrorRangeEnd = -32000;
    /** @deprecated use  jsonrpcReservedErrorRangeEnd */
    ErrorCodes.serverErrorEnd = -32000;
})(ErrorCodes = exports.ErrorCodes || (exports.ErrorCodes = {}));
/**
 * An error object return in a response in case a request
 * has failed.
 */
class ResponseError extends Error {
    constructor(code, message, data) {
        super(message);
        this.code = is.number(code) ? code : ErrorCodes.UnknownErrorCode;
        this.data = data;
        Object.setPrototypeOf(this, ResponseError.prototype);
    }
    toJson() {
        const result = {
            code: this.code,
            message: this.message
        };
        if (this.data !== undefined) {
            result.data = this.data;
        }
        return result;
    }
}
exports.ResponseError = ResponseError;
class ParameterStructures {
    constructor(kind) {
        this.kind = kind;
    }
    static is(value) {
        return value === ParameterStructures.auto || value === ParameterStructures.byName || value === ParameterStructures.byPosition;
    }
    toString() {
        return this.kind;
    }
}
exports.ParameterStructures = ParameterStructures;
/**
 * The parameter structure is automatically inferred on the number of parameters
 * and the parameter type in case of a single param.
 */
ParameterStructures.auto = new ParameterStructures('auto');
/**
 * Forces `byPosition` parameter structure. This is useful if you have a single
 * parameter which has a literal type.
 */
ParameterStructures.byPosition = new ParameterStructures('byPosition');
/**
 * Forces `byName` parameter structure. This is only useful when having a single
 * parameter. The library will report errors if used with a different number of
 * parameters.
 */
ParameterStructures.byName = new ParameterStructures('byName');
/**
 * An abstract implementation of a MessageType.
 */
class AbstractMessageSignature {
    constructor(method, numberOfParams) {
        this.method = method;
        this.numberOfParams = numberOfParams;
    }
    get parameterStructures() {
        return ParameterStructures.auto;
    }
}
exports.AbstractMessageSignature = AbstractMessageSignature;
/**
 * Classes to type request response pairs
 */
class RequestType0 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 0);
    }
}
exports.RequestType0 = RequestType0;
class RequestType extends AbstractMessageSignature {
    constructor(method, _parameterStructures = ParameterStructures.auto) {
        super(method, 1);
        this._parameterStructures = _parameterStructures;
    }
    get parameterStructures() {
        return this._parameterStructures;
    }
}
exports.RequestType = RequestType;
class RequestType1 extends AbstractMessageSignature {
    constructor(method, _parameterStructures = ParameterStructures.auto) {
        super(method, 1);
        this._parameterStructures = _parameterStructures;
    }
    get parameterStructures() {
        return this._parameterStructures;
    }
}
exports.RequestType1 = RequestType1;
class RequestType2 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 2);
    }
}
exports.RequestType2 = RequestType2;
class RequestType3 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 3);
    }
}
exports.RequestType3 = RequestType3;
class RequestType4 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 4);
    }
}
exports.RequestType4 = RequestType4;
class RequestType5 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 5);
    }
}
exports.RequestType5 = RequestType5;
class RequestType6 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 6);
    }
}
exports.RequestType6 = RequestType6;
class RequestType7 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 7);
    }
}
exports.RequestType7 = RequestType7;
class RequestType8 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 8);
    }
}
exports.RequestType8 = RequestType8;
class RequestType9 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 9);
    }
}
exports.RequestType9 = RequestType9;
class NotificationType extends AbstractMessageSignature {
    constructor(method, _parameterStructures = ParameterStructures.auto) {
        super(method, 1);
        this._parameterStructures = _parameterStructures;
    }
    get parameterStructures() {
        return this._parameterStructures;
    }
}
exports.NotificationType = NotificationType;
class NotificationType0 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 0);
    }
}
exports.NotificationType0 = NotificationType0;
class NotificationType1 extends AbstractMessageSignature {
    constructor(method, _parameterStructures = ParameterStructures.auto) {
        super(method, 1);
        this._parameterStructures = _parameterStructures;
    }
    get parameterStructures() {
        return this._parameterStructures;
    }
}
exports.NotificationType1 = NotificationType1;
class NotificationType2 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 2);
    }
}
exports.NotificationType2 = NotificationType2;
class NotificationType3 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 3);
    }
}
exports.NotificationType3 = NotificationType3;
class NotificationType4 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 4);
    }
}
exports.NotificationType4 = NotificationType4;
class NotificationType5 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 5);
    }
}
exports.NotificationType5 = NotificationType5;
class NotificationType6 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 6);
    }
}
exports.NotificationType6 = NotificationType6;
class NotificationType7 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 7);
    }
}
exports.NotificationType7 = NotificationType7;
class NotificationType8 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 8);
    }
}
exports.NotificationType8 = NotificationType8;
class NotificationType9 extends AbstractMessageSignature {
    constructor(method) {
        super(method, 9);
    }
}
exports.NotificationType9 = NotificationType9;
var Message;
(function (Message) {
    /**
     * Tests if the given message is a request message
     */
    function isRequest(message) {
        const candidate = message;
        return candidate && is.string(candidate.method) && (is.string(candidate.id) || is.number(candidate.id));
    }
    Message.isRequest = isRequest;
    /**
     * Tests if the given message is a notification message
     */
    function isNotification(message) {
        const candidate = message;
        return candidate && is.string(candidate.method) && message.id === void 0;
    }
    Message.isNotification = isNotification;
    /**
     * Tests if the given message is a response message
     */
    function isResponse(message) {
        const candidate = message;
        return candidate && (candidate.result !== void 0 || !!candidate.error) && (is.string(candidate.id) || is.number(candidate.id) || candidate.id === null);
    }
    Message.isResponse = isResponse;
})(Message = exports.Message || (exports.Message = {}));


/***/ }),

/***/ "./node_modules/vscode-jsonrpc/lib/common/ral.js":
/*!*******************************************************!*\
  !*** ./node_modules/vscode-jsonrpc/lib/common/ral.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
let _ral;
function RAL() {
    if (_ral === undefined) {
        throw new Error(`No runtime abstraction layer installed`);
    }
    return _ral;
}
(function (RAL) {
    function install(ral) {
        if (ral === undefined) {
            throw new Error(`No runtime abstraction layer provided`);
        }
        _ral = ral;
    }
    RAL.install = install;
})(RAL || (RAL = {}));
exports["default"] = RAL;


/***/ }),

/***/ "./node_modules/vscode-jsonrpc/lib/common/semaphore.js":
/*!*************************************************************!*\
  !*** ./node_modules/vscode-jsonrpc/lib/common/semaphore.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Semaphore = void 0;
const ral_1 = __webpack_require__(/*! ./ral */ "./node_modules/vscode-jsonrpc/lib/common/ral.js");
class Semaphore {
    constructor(capacity = 1) {
        if (capacity <= 0) {
            throw new Error('Capacity must be greater than 0');
        }
        this._capacity = capacity;
        this._active = 0;
        this._waiting = [];
    }
    lock(thunk) {
        return new Promise((resolve, reject) => {
            this._waiting.push({ thunk, resolve, reject });
            this.runNext();
        });
    }
    get active() {
        return this._active;
    }
    runNext() {
        if (this._waiting.length === 0 || this._active === this._capacity) {
            return;
        }
        (0, ral_1.default)().timer.setImmediate(() => this.doRunNext());
    }
    doRunNext() {
        if (this._waiting.length === 0 || this._active === this._capacity) {
            return;
        }
        const next = this._waiting.shift();
        this._active++;
        if (this._active > this._capacity) {
            throw new Error(`To many thunks active`);
        }
        try {
            const result = next.thunk();
            if (result instanceof Promise) {
                result.then((value) => {
                    this._active--;
                    next.resolve(value);
                    this.runNext();
                }, (err) => {
                    this._active--;
                    next.reject(err);
                    this.runNext();
                });
            }
            else {
                this._active--;
                next.resolve(result);
                this.runNext();
            }
        }
        catch (err) {
            this._active--;
            next.reject(err);
            this.runNext();
        }
    }
}
exports.Semaphore = Semaphore;


/***/ }),

/***/ "./node_modules/vscode-jsonrpc/lib/common/sharedArrayCancellation.js":
/*!***************************************************************************!*\
  !*** ./node_modules/vscode-jsonrpc/lib/common/sharedArrayCancellation.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

/* --------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SharedArrayReceiverStrategy = exports.SharedArraySenderStrategy = void 0;
const cancellation_1 = __webpack_require__(/*! ./cancellation */ "./node_modules/vscode-jsonrpc/lib/common/cancellation.js");
var CancellationState;
(function (CancellationState) {
    CancellationState.Continue = 0;
    CancellationState.Cancelled = 1;
})(CancellationState || (CancellationState = {}));
class SharedArraySenderStrategy {
    constructor() {
        this.buffers = new Map();
    }
    enableCancellation(request) {
        if (request.id === null) {
            return;
        }
        const buffer = new SharedArrayBuffer(4);
        const data = new Int32Array(buffer, 0, 1);
        data[0] = CancellationState.Continue;
        this.buffers.set(request.id, buffer);
        request.$cancellationData = buffer;
    }
    async sendCancellation(_conn, id) {
        const buffer = this.buffers.get(id);
        if (buffer === undefined) {
            return;
        }
        const data = new Int32Array(buffer, 0, 1);
        Atomics.store(data, 0, CancellationState.Cancelled);
    }
    cleanup(id) {
        this.buffers.delete(id);
    }
    dispose() {
        this.buffers.clear();
    }
}
exports.SharedArraySenderStrategy = SharedArraySenderStrategy;
class SharedArrayBufferCancellationToken {
    constructor(buffer) {
        this.data = new Int32Array(buffer, 0, 1);
    }
    get isCancellationRequested() {
        return Atomics.load(this.data, 0) === CancellationState.Cancelled;
    }
    get onCancellationRequested() {
        throw new Error(`Cancellation over SharedArrayBuffer doesn't support cancellation events`);
    }
}
class SharedArrayBufferCancellationTokenSource {
    constructor(buffer) {
        this.token = new SharedArrayBufferCancellationToken(buffer);
    }
    cancel() {
    }
    dispose() {
    }
}
class SharedArrayReceiverStrategy {
    constructor() {
        this.kind = 'request';
    }
    createCancellationTokenSource(request) {
        const buffer = request.$cancellationData;
        if (buffer === undefined) {
            return new cancellation_1.CancellationTokenSource();
        }
        return new SharedArrayBufferCancellationTokenSource(buffer);
    }
}
exports.SharedArrayReceiverStrategy = SharedArrayReceiverStrategy;


/***/ }),

/***/ "./css/diagram.css":
/*!*************************!*\
  !*** ./css/diagram.css ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleDomAPI.js */ "./node_modules/style-loader/dist/runtime/styleDomAPI.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertBySelector.js */ "./node_modules/style-loader/dist/runtime/insertBySelector.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertStyleElement.js */ "./node_modules/style-loader/dist/runtime/insertStyleElement.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleTagTransform.js */ "./node_modules/style-loader/dist/runtime/styleTagTransform.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _node_modules_css_loader_dist_cjs_js_diagram_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../node_modules/css-loader/dist/cjs.js!./diagram.css */ "./node_modules/css-loader/dist/cjs.js!./css/diagram.css");

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());
options.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());

      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");
    
options.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());
options.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());

var update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_diagram_css__WEBPACK_IMPORTED_MODULE_6__["default"], options);




       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_diagram_css__WEBPACK_IMPORTED_MODULE_6__["default"] && _node_modules_css_loader_dist_cjs_js_diagram_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals ? _node_modules_css_loader_dist_cjs_js_diagram_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals : undefined);


/***/ }),

/***/ "./node_modules/@eclipse-glsp-examples/workflow-glsp/css/diagram.css":
/*!***************************************************************************!*\
  !*** ./node_modules/@eclipse-glsp-examples/workflow-glsp/css/diagram.css ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/styleDomAPI.js */ "./node_modules/style-loader/dist/runtime/styleDomAPI.js");
/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/insertBySelector.js */ "./node_modules/style-loader/dist/runtime/insertBySelector.js");
/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/setAttributesWithoutAttributes.js */ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js");
/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/insertStyleElement.js */ "./node_modules/style-loader/dist/runtime/insertStyleElement.js");
/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/styleTagTransform.js */ "./node_modules/style-loader/dist/runtime/styleTagTransform.js");
/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _css_loader_dist_cjs_js_diagram_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../css-loader/dist/cjs.js!./diagram.css */ "./node_modules/css-loader/dist/cjs.js!./node_modules/@eclipse-glsp-examples/workflow-glsp/css/diagram.css");

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());
options.setAttributes = (_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());

      options.insert = _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");
    
options.domAPI = (_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());
options.insertStyleElement = (_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());

var update = _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_css_loader_dist_cjs_js_diagram_css__WEBPACK_IMPORTED_MODULE_6__["default"], options);




       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_css_loader_dist_cjs_js_diagram_css__WEBPACK_IMPORTED_MODULE_6__["default"] && _css_loader_dist_cjs_js_diagram_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals ? _css_loader_dist_cjs_js_diagram_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals : undefined);


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/css/command-palette.css":
/*!*******************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/css/command-palette.css ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/styleDomAPI.js */ "./node_modules/style-loader/dist/runtime/styleDomAPI.js");
/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/insertBySelector.js */ "./node_modules/style-loader/dist/runtime/insertBySelector.js");
/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/setAttributesWithoutAttributes.js */ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js");
/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/insertStyleElement.js */ "./node_modules/style-loader/dist/runtime/insertStyleElement.js");
/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/styleTagTransform.js */ "./node_modules/style-loader/dist/runtime/styleTagTransform.js");
/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _css_loader_dist_cjs_js_command_palette_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../css-loader/dist/cjs.js!./command-palette.css */ "./node_modules/css-loader/dist/cjs.js!./node_modules/@eclipse-glsp/client/css/command-palette.css");

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());
options.setAttributes = (_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());

      options.insert = _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");
    
options.domAPI = (_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());
options.insertStyleElement = (_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());

var update = _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_css_loader_dist_cjs_js_command_palette_css__WEBPACK_IMPORTED_MODULE_6__["default"], options);




       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_css_loader_dist_cjs_js_command_palette_css__WEBPACK_IMPORTED_MODULE_6__["default"] && _css_loader_dist_cjs_js_command_palette_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals ? _css_loader_dist_cjs_js_command_palette_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals : undefined);


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/css/decoration.css":
/*!**************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/css/decoration.css ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/styleDomAPI.js */ "./node_modules/style-loader/dist/runtime/styleDomAPI.js");
/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/insertBySelector.js */ "./node_modules/style-loader/dist/runtime/insertBySelector.js");
/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/setAttributesWithoutAttributes.js */ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js");
/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/insertStyleElement.js */ "./node_modules/style-loader/dist/runtime/insertStyleElement.js");
/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/styleTagTransform.js */ "./node_modules/style-loader/dist/runtime/styleTagTransform.js");
/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _css_loader_dist_cjs_js_decoration_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../css-loader/dist/cjs.js!./decoration.css */ "./node_modules/css-loader/dist/cjs.js!./node_modules/@eclipse-glsp/client/css/decoration.css");

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());
options.setAttributes = (_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());

      options.insert = _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");
    
options.domAPI = (_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());
options.insertStyleElement = (_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());

var update = _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_css_loader_dist_cjs_js_decoration_css__WEBPACK_IMPORTED_MODULE_6__["default"], options);




       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_css_loader_dist_cjs_js_decoration_css__WEBPACK_IMPORTED_MODULE_6__["default"] && _css_loader_dist_cjs_js_decoration_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals ? _css_loader_dist_cjs_js_decoration_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals : undefined);


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/css/glsp-sprotty.css":
/*!****************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/css/glsp-sprotty.css ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/styleDomAPI.js */ "./node_modules/style-loader/dist/runtime/styleDomAPI.js");
/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/insertBySelector.js */ "./node_modules/style-loader/dist/runtime/insertBySelector.js");
/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/setAttributesWithoutAttributes.js */ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js");
/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/insertStyleElement.js */ "./node_modules/style-loader/dist/runtime/insertStyleElement.js");
/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/styleTagTransform.js */ "./node_modules/style-loader/dist/runtime/styleTagTransform.js");
/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _css_loader_dist_cjs_js_glsp_sprotty_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../css-loader/dist/cjs.js!./glsp-sprotty.css */ "./node_modules/css-loader/dist/cjs.js!./node_modules/@eclipse-glsp/client/css/glsp-sprotty.css");

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());
options.setAttributes = (_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());

      options.insert = _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");
    
options.domAPI = (_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());
options.insertStyleElement = (_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());

var update = _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_css_loader_dist_cjs_js_glsp_sprotty_css__WEBPACK_IMPORTED_MODULE_6__["default"], options);




       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_css_loader_dist_cjs_js_glsp_sprotty_css__WEBPACK_IMPORTED_MODULE_6__["default"] && _css_loader_dist_cjs_js_glsp_sprotty_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals ? _css_loader_dist_cjs_js_glsp_sprotty_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals : undefined);


/***/ }),

/***/ "./node_modules/@eclipse-glsp/client/css/tool-palette.css":
/*!****************************************************************!*\
  !*** ./node_modules/@eclipse-glsp/client/css/tool-palette.css ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/styleDomAPI.js */ "./node_modules/style-loader/dist/runtime/styleDomAPI.js");
/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/insertBySelector.js */ "./node_modules/style-loader/dist/runtime/insertBySelector.js");
/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/setAttributesWithoutAttributes.js */ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js");
/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/insertStyleElement.js */ "./node_modules/style-loader/dist/runtime/insertStyleElement.js");
/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/styleTagTransform.js */ "./node_modules/style-loader/dist/runtime/styleTagTransform.js");
/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _css_loader_dist_cjs_js_tool_palette_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../css-loader/dist/cjs.js!./tool-palette.css */ "./node_modules/css-loader/dist/cjs.js!./node_modules/@eclipse-glsp/client/css/tool-palette.css");

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());
options.setAttributes = (_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());

      options.insert = _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");
    
options.domAPI = (_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());
options.insertStyleElement = (_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());

var update = _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_css_loader_dist_cjs_js_tool_palette_css__WEBPACK_IMPORTED_MODULE_6__["default"], options);




       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_css_loader_dist_cjs_js_tool_palette_css__WEBPACK_IMPORTED_MODULE_6__["default"] && _css_loader_dist_cjs_js_tool_palette_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals ? _css_loader_dist_cjs_js_tool_palette_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals : undefined);


/***/ }),

/***/ "./node_modules/@vscode/codicons/dist/codicon.css":
/*!********************************************************!*\
  !*** ./node_modules/@vscode/codicons/dist/codicon.css ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/styleDomAPI.js */ "./node_modules/style-loader/dist/runtime/styleDomAPI.js");
/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/insertBySelector.js */ "./node_modules/style-loader/dist/runtime/insertBySelector.js");
/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/setAttributesWithoutAttributes.js */ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js");
/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/insertStyleElement.js */ "./node_modules/style-loader/dist/runtime/insertStyleElement.js");
/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../../style-loader/dist/runtime/styleTagTransform.js */ "./node_modules/style-loader/dist/runtime/styleTagTransform.js");
/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _css_loader_dist_cjs_js_codicon_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../../css-loader/dist/cjs.js!./codicon.css */ "./node_modules/css-loader/dist/cjs.js!./node_modules/@vscode/codicons/dist/codicon.css");

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());
options.setAttributes = (_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());

      options.insert = _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");
    
options.domAPI = (_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());
options.insertStyleElement = (_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());

var update = _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_css_loader_dist_cjs_js_codicon_css__WEBPACK_IMPORTED_MODULE_6__["default"], options);




       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_css_loader_dist_cjs_js_codicon_css__WEBPACK_IMPORTED_MODULE_6__["default"] && _css_loader_dist_cjs_js_codicon_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals ? _css_loader_dist_cjs_js_codicon_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals : undefined);


/***/ }),

/***/ "./node_modules/balloon-css/balloon.min.css":
/*!**************************************************!*\
  !*** ./node_modules/balloon-css/balloon.min.css ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../style-loader/dist/runtime/styleDomAPI.js */ "./node_modules/style-loader/dist/runtime/styleDomAPI.js");
/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../style-loader/dist/runtime/insertBySelector.js */ "./node_modules/style-loader/dist/runtime/insertBySelector.js");
/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../style-loader/dist/runtime/setAttributesWithoutAttributes.js */ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js");
/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../style-loader/dist/runtime/insertStyleElement.js */ "./node_modules/style-loader/dist/runtime/insertStyleElement.js");
/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../style-loader/dist/runtime/styleTagTransform.js */ "./node_modules/style-loader/dist/runtime/styleTagTransform.js");
/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _css_loader_dist_cjs_js_balloon_min_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../css-loader/dist/cjs.js!./balloon.min.css */ "./node_modules/css-loader/dist/cjs.js!./node_modules/balloon-css/balloon.min.css");

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());
options.setAttributes = (_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());

      options.insert = _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");
    
options.domAPI = (_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());
options.insertStyleElement = (_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());

var update = _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_css_loader_dist_cjs_js_balloon_min_css__WEBPACK_IMPORTED_MODULE_6__["default"], options);




       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_css_loader_dist_cjs_js_balloon_min_css__WEBPACK_IMPORTED_MODULE_6__["default"] && _css_loader_dist_cjs_js_balloon_min_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals ? _css_loader_dist_cjs_js_balloon_min_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals : undefined);


/***/ }),

/***/ "./node_modules/sprotty/css/edit-label.css":
/*!*************************************************!*\
  !*** ./node_modules/sprotty/css/edit-label.css ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../../style-loader/dist/runtime/styleDomAPI.js */ "./node_modules/style-loader/dist/runtime/styleDomAPI.js");
/* harmony import */ var _style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../style-loader/dist/runtime/insertBySelector.js */ "./node_modules/style-loader/dist/runtime/insertBySelector.js");
/* harmony import */ var _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../style-loader/dist/runtime/setAttributesWithoutAttributes.js */ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js");
/* harmony import */ var _style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../../style-loader/dist/runtime/insertStyleElement.js */ "./node_modules/style-loader/dist/runtime/insertStyleElement.js");
/* harmony import */ var _style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../../style-loader/dist/runtime/styleTagTransform.js */ "./node_modules/style-loader/dist/runtime/styleTagTransform.js");
/* harmony import */ var _style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _css_loader_dist_cjs_js_edit_label_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../../css-loader/dist/cjs.js!./edit-label.css */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sprotty/css/edit-label.css");

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());
options.setAttributes = (_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());

      options.insert = _style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");
    
options.domAPI = (_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());
options.insertStyleElement = (_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());

var update = _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_css_loader_dist_cjs_js_edit_label_css__WEBPACK_IMPORTED_MODULE_6__["default"], options);




       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_css_loader_dist_cjs_js_edit_label_css__WEBPACK_IMPORTED_MODULE_6__["default"] && _css_loader_dist_cjs_js_edit_label_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals ? _css_loader_dist_cjs_js_edit_label_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals : undefined);


/***/ }),

/***/ "data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2212px%22%20height%3D%2236px%22%3E%3Cpath%20fill%3D%22rgba%2817,17,17,0.9%29%22%20transform%3D%22rotate%28-90 18 18%29%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E":
/*!**********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2212px%22%20height%3D%2236px%22%3E%3Cpath%20fill%3D%22rgba%2817,17,17,0.9%29%22%20transform%3D%22rotate%28-90 18 18%29%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E ***!
  \**********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2212px%22%20height%3D%2236px%22%3E%3Cpath%20fill%3D%22rgba%2817,17,17,0.9%29%22%20transform%3D%22rotate%28-90 18 18%29%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E";

/***/ }),

/***/ "data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2212px%22%20height%3D%2236px%22%3E%3Cpath%20fill%3D%22rgba%2817,17,17,0.9%29%22%20transform%3D%22rotate%2890 6 6%29%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E":
/*!*******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2212px%22%20height%3D%2236px%22%3E%3Cpath%20fill%3D%22rgba%2817,17,17,0.9%29%22%20transform%3D%22rotate%2890 6 6%29%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E ***!
  \*******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2212px%22%20height%3D%2236px%22%3E%3Cpath%20fill%3D%22rgba%2817,17,17,0.9%29%22%20transform%3D%22rotate%2890 6 6%29%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E";

/***/ }),

/***/ "data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2236px%22%20height%3D%2212px%22%3E%3Cpath%20fill%3D%22rgba%2817,17,17,0.9%29%22%20transform%3D%22rotate%280%29%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E":
/*!**************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2236px%22%20height%3D%2212px%22%3E%3Cpath%20fill%3D%22rgba%2817,17,17,0.9%29%22%20transform%3D%22rotate%280%29%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E ***!
  \**************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2236px%22%20height%3D%2212px%22%3E%3Cpath%20fill%3D%22rgba%2817,17,17,0.9%29%22%20transform%3D%22rotate%280%29%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E";

/***/ }),

/***/ "data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2236px%22%20height%3D%2212px%22%3E%3Cpath%20fill%3D%22rgba%2817,17,17,0.9%29%22%20transform%3D%22rotate%28180 18 6%29%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E":
/*!*********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2236px%22%20height%3D%2212px%22%3E%3Cpath%20fill%3D%22rgba%2817,17,17,0.9%29%22%20transform%3D%22rotate%28180 18 6%29%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E ***!
  \*********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = "data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http://www.w3.org/2000/svg%22%20width%3D%2236px%22%20height%3D%2212px%22%3E%3Cpath%20fill%3D%22rgba%2817,17,17,0.9%29%22%20transform%3D%22rotate%28180 18 6%29%22%20d%3D%22M2.658,0.000%20C-13.615,0.000%2050.938,0.000%2034.662,0.000%20C28.662,0.000%2023.035,12.002%2018.660,12.002%20C14.285,12.002%208.594,0.000%202.658,0.000%20Z%22/%3E%3C/svg%3E";

/***/ }),

/***/ "./node_modules/@vscode/codicons/dist/codicon.ttf?2ab61cbaefbdf4c7c5589068100bee0c":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@vscode/codicons/dist/codicon.ttf?2ab61cbaefbdf4c7c5589068100bee0c ***!
  \*****************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "fa2cc0ab9f0bec2b3365.ttf?2ab61cbaefbdf4c7c5589068100bee0c";

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get javascript chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference async chunks
/******/ 		__webpack_require__.u = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return "" + chunkId + ".bundle.js";
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript)
/******/ 				scriptUrl = document.currentScript.src;
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) {
/******/ 					var i = scripts.length - 1;
/******/ 					while (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		__webpack_require__.b = document.baseURI || self.location.href;
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"main": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		// no on chunks loaded
/******/ 		
/******/ 		// no jsonp function
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
var exports = __webpack_exports__;
/*!*********************!*\
  !*** ./lib/main.js ***!
  \*********************/

Object.defineProperty(exports, "__esModule", ({ value: true }));
/********************************************************************************
 * Copyright (c) 2023 EclipseSource and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
__webpack_require__(/*! reflect-metadata */ "./node_modules/reflect-metadata/Reflect.js");
__webpack_require__(/*! ../css/diagram.css */ "./css/diagram.css");
const workflow_glsp_1 = __webpack_require__(/*! @eclipse-glsp-examples/workflow-glsp */ "./node_modules/@eclipse-glsp-examples/workflow-glsp/lib/index.js");
const client_1 = __webpack_require__(/*! @eclipse-glsp/client */ "./node_modules/@eclipse-glsp/client/lib/index.js");
const browser_1 = __webpack_require__(/*! vscode-jsonrpc/browser */ "./node_modules/vscode-jsonrpc/browser.js");
const START_UP_COMPLETE_MSG = '[GLSP-Server]:Startup completed';
function createServerConnection() {
    const serverWorker = new Worker(new URL(/* worker import */ __webpack_require__.p + __webpack_require__.u("lib_server-worker_js"), __webpack_require__.b));
    return new Promise((resolve, reject) => {
        serverWorker.addEventListener('message', message => {
            if (message.data.includes(START_UP_COMPLETE_MSG)) {
                const reader = new browser_1.BrowserMessageReader(serverWorker);
                const writer = new browser_1.BrowserMessageWriter(serverWorker);
                resolve((0, browser_1.createMessageConnection)(reader, writer));
            }
            else {
                reject(`Unexpected message received: ${message.data}`);
            }
        }, { once: true });
    });
}
async function launch() {
    const clientId = 'livedemo';
    const diagramType = 'workflow-diagram';
    // Setup container
    const container = (0, workflow_glsp_1.createWorkflowDiagramContainer)('sprotty');
    (0, client_1.bindAsService)(container, client_1.TYPES.ModelSource, client_1.GLSPDiagramServer);
    (0, client_1.bindOrRebind)(container, client_1.TYPES.ModelSource).toService(client_1.GLSPDiagramServer);
    (0, client_1.bindOrRebind)(container, client_1.TYPES.ILogger).to(client_1.ConsoleLogger).inSingletonScope();
    (0, client_1.bindOrRebind)(container, client_1.TYPES.LogLevel).toConstantValue(client_1.LogLevel.warn);
    container.bind(client_1.TYPES.IMarqueeBehavior).toConstantValue({ entireEdge: true, entireElement: true });
    const diagramServer = container.get(client_1.TYPES.ModelSource);
    diagramServer.clientId = clientId;
    const connection = await createServerConnection();
    const client = new client_1.BaseJsonrpcGLSPClient({
        id: diagramType,
        connectionProvider: connection
    });
    await diagramServer.connect(client);
    const result = await client.initializeServer({
        applicationId: client_1.ApplicationIdProvider.get(),
        protocolVersion: client_1.GLSPClient.protocolVersion
    });
    await (0, client_1.configureServerActions)(result, diagramType, container);
    const actionDispatcher = container.get(client_1.GLSPActionDispatcher);
    await client.initializeClientSession({ clientSessionId: diagramServer.clientId, diagramType });
    actionDispatcher.dispatch(client_1.RequestModelAction.create({
        options: {
            sourceUri: 'mock://',
            diagramType
        }
    }));
    actionDispatcher.dispatch(client_1.RequestTypeHintsAction.create());
    await actionDispatcher.onceModelInitialized();
    actionDispatcher.dispatch(client_1.EnableToolPaletteAction.create());
}
launch().catch(err => console.error(err));

})();

/******/ })()
;
//# sourceMappingURL=bundle.js.map